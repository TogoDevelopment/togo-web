import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React from 'react';
import PropTypes from 'prop-types';
import { useContext, useEffect, useRef } from 'react';
import { mergeRefs, useClassNames } from '../utils';
import ListContext from './ListContext';
var defaultProps = {
  as: 'div',
  classPrefix: 'list-item',
  collection: 0
};
var ListItem = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var Component = props.as,
      children = props.children,
      className = props.className,
      classPrefix = props.classPrefix,
      collection = props.collection,
      disabled = props.disabled,
      index = props.index,
      rest = _objectWithoutPropertiesLoose(props, ["as", "children", "className", "classPrefix", "collection", "disabled", "index"]);

  var _useContext = useContext(ListContext),
      bordered = _useContext.bordered,
      register = _useContext.register,
      size = _useContext.size;

  var _useClassNames = useClassNames(classPrefix),
      withClassPrefix = _useClassNames.withClassPrefix,
      merge = _useClassNames.merge;

  var listItemRef = useRef(null);
  useEffect(function () {
    var _register = register({
      node: listItemRef.current,
      edgeOffset: null,
      info: {
        collection: collection,
        disabled: disabled,
        index: index
      }
    }),
        unregister = _register.unregister;

    return unregister;
  }, [collection, disabled, index, register]);
  var classes = merge(className, withClassPrefix(size, {
    disabled: disabled,
    bordered: bordered
  }));
  return /*#__PURE__*/React.createElement(Component, _extends({
    role: "listitem",
    "aria-disabled": disabled
  }, rest, {
    ref: mergeRefs(listItemRef, ref),
    className: classes
  }), children);
});
ListItem.displayName = 'ListItem';
ListItem.defaultProps = defaultProps;
ListItem.propTypes = {
  index: PropTypes.number,
  collection: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  disabled: PropTypes.bool,
  children: PropTypes.node
};
export default ListItem;