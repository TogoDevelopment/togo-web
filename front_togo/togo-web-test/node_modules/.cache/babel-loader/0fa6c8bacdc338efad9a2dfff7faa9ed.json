{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ArrowBackIcon}from\"@chakra-ui/icons\";import{Icon}from\"@chakra-ui/react\";import React,{useState,useRef}from\"react\";import{Button,Dropdown,Form,FormControl,InputGroup,Modal,SplitButton}from\"react-bootstrap\";import{useDispatch}from\"react-redux\";import{toastMessage}from\"../Actions/GeneralActions\";import translate from\"../i18n/translate\";import{TransferToMaster,TransferToMember}from\"./APIs/OrdersAPIs\";import\"./Receipt.css\";export default function Receipt(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var ModalBodyrRef=useRef();var ref=useRef();var dispatch=useDispatch();var handleShow=function handleShow(){setShow(true);};var handleClose=function handleClose(){setShow(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",{variant:\"primary\",onClick:handleShow},props.children),/*#__PURE__*/React.createElement(Modal,{show:show,onHide:handleClose},/*#__PURE__*/React.createElement(Modal.Body,{ref:ModalBodyrRef},/*#__PURE__*/React.createElement(\"h1\",{className:\"h5 text-center\"},translate(\"ADMIN.RECEIPT_FROM\")),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between mt-1\"},/*#__PURE__*/React.createElement(\"div\",null,translate(\"ADMIN.TRANSPORTER_NAME\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,translate(\"ADMIN.DATE\")),/*#__PURE__*/React.createElement(FormControl,{type:\"date\",defaultValue:new Date().toISOString().substring(0,10)}))),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-2\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formHorizontalEmail\",className:\"d-flex\"},/*#__PURE__*/React.createElement(Form.Label,{column:true,sm:2},translate(\"WORKING_TIME.FROM\")),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",className:\"w-50\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-1 d-flex\"},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGridEmail\",className:\"m-inline-e-2\"},/*#__PURE__*/React.createElement(Form.Label,null,translate(\"ORDERS.AMOUNT\")),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2\"},/*#__PURE__*/React.createElement(FormControl,{type:\"number\",placeholder:\"0.00\",ref:ref}),/*#__PURE__*/React.createElement(InputGroup.Text,{className:\"bg-white\"},\"\\u20AA\"))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGridPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,translate(\"ADMIN.DESC\")),/*#__PURE__*/React.createElement(Form.Control,{as:\"textarea\",rows:3}))),/*#__PURE__*/React.createElement(\"div\",null,translate(\"ADMIN.RECIPIENT_SIGH\"))),/*#__PURE__*/React.createElement(Modal.Footer,{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(Button,{variant:\"\",className:\"text-danger\",onClick:handleClose},translate(\"GENERAL.CLOSE\"),/*#__PURE__*/React.createElement(Icon,{as:ArrowBackIcon})),/*#__PURE__*/React.createElement(SplitButton,{variant:\"outline-light\",title:translate(\"ADMIN.SAVE\"),id:\"segmented-button-dropdown-1\",className:\"btn-grad rounded\",onClick:function onClick(){if(!props.toMaster){TransferToMember(props.TransporterId,ref.current.value).then(function(res){if(res.data===\"Error\"){}else{dispatch(toastMessage(\"Credited\",\"Successful\",\"success\"));}handleClose();//onSuccess();\n});}else{TransferToMaster(props.TransporterId,ref.current.value).then(function(res){console.log(res);if(res.data===\"Error\"){}else{dispatch(toastMessage(\"Debited\",\"Successful\",\"success\"));}handleClose();//onSuccess();32f9f1ab3c8c30fac1bd1eff8c46235992485fbd\n});}}},/*#__PURE__*/React.createElement(Dropdown.Item,{onClick:function onClick(){window.print();}},translate(\"ORDER_DETAILS.PRINT\"))))));}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Receipt.jsx"],"names":["ArrowBackIcon","Icon","React","useState","useRef","Button","Dropdown","Form","FormControl","InputGroup","Modal","SplitButton","useDispatch","toastMessage","translate","TransferToMaster","TransferToMember","Receipt","props","show","setShow","ModalBodyrRef","ref","dispatch","handleShow","handleClose","children","Date","toISOString","substring","toMaster","TransporterId","current","value","then","res","data","console","log","window","print"],"mappings":"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","sourcesContent":["import { ArrowBackIcon } from \"@chakra-ui/icons\";\r\nimport {Icon} from \"@chakra-ui/react\"\r\nimport React, { useState, useRef } from \"react\";\r\nimport { Button, Dropdown, Form, FormControl, InputGroup, Modal, SplitButton } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastMessage } from \"../Actions/GeneralActions\";\r\nimport translate from \"../i18n/translate\";\r\nimport { TransferToMaster, TransferToMember } from \"./APIs/OrdersAPIs\";\r\nimport \"./Receipt.css\";\r\n\r\nexport default function Receipt(props) {\r\n    const [show, setShow] = useState(false);\r\n    const ModalBodyrRef =  useRef();\r\n    const ref = useRef();\r\n    const dispatch = useDispatch();\r\n    const handleShow = () =>{\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n    return (\r\n        <>\r\n            <span variant=\"primary\" onClick={handleShow}>\r\n                {props.children}\r\n            </span>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Body ref={ModalBodyrRef}>\r\n                    <h1 className=\"h5 text-center\">{translate(\"ADMIN.RECEIPT_FROM\")}</h1>\r\n                    <div className=\"d-flex justify-content-between mt-1\">\r\n                        <div>\r\n                            {translate(\"ADMIN.TRANSPORTER_NAME\")}\r\n                        </div>\r\n                        <div>\r\n                            <p>{translate(\"ADMIN.DATE\")}</p>\r\n                            <FormControl type=\"date\" defaultValue={new Date().toISOString().substring(0, 10)} />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <Form.Group controlId=\"formHorizontalEmail\" className=\"d-flex\">\r\n                            <Form.Label column sm={2}>\r\n                                {translate(\"WORKING_TIME.FROM\")}\r\n                            </Form.Label>\r\n                            \r\n                            <Form.Control type=\"text\" className=\"w-50\"/>\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div className=\"mt-1 d-flex\">\r\n                        <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                            <Form.Label>{translate(\"ORDERS.AMOUNT\")}</Form.Label>\r\n                            <InputGroup className=\"mb-2\">\r\n                                \r\n                                <FormControl type=\"number\" placeholder=\"0.00\" ref={ref} />\r\n                                <InputGroup.Text className=\"bg-white\">&#8362;</InputGroup.Text>\r\n                            </InputGroup>\r\n                            {/* <Form.Control type=\"number\" placeholder=\"0.00\" /> */}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formGridPassword\">\r\n                            <Form.Label>{translate(\"ADMIN.DESC\")}</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} />\r\n                        </Form.Group>\r\n                    </div>\r\n                    <div>\r\n                        {translate(\"ADMIN.RECIPIENT_SIGH\")}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-between\">\r\n                    <Button variant=\"\" className=\"text-danger\" onClick={handleClose}>\r\n                        {translate(\"GENERAL.CLOSE\")}\r\n                        <Icon as={ArrowBackIcon} />\r\n                    </Button>\r\n                    <SplitButton\r\n                        variant=\"outline-light\"\r\n                        title={translate(\"ADMIN.SAVE\")}\r\n                        id=\"segmented-button-dropdown-1\"\r\n                        className=\"btn-grad rounded\"\r\n                        onClick={()=>{\r\n                            if(!props.toMaster){\r\n                                TransferToMember(props.TransporterId, ref.current.value).then((res)=>{\r\n                                    if(res.data === \"Error\"){\r\n                                        \r\n                                    } else {\r\n                                        dispatch(toastMessage(\"Credited\", \"Successful\", \"success\"));\r\n                                    }\r\n                                    \r\n                                    handleClose();\r\n                                    //onSuccess();\r\n                                });\r\n                            }else{\r\n                                TransferToMaster(props.TransporterId, ref.current.value).then((res)=>{\r\n                                    console.log(res);\r\n                                    if(res.data === \"Error\"){\r\n                                        \r\n                                    } else {\r\n                                        dispatch(toastMessage(\"Debited\", \"Successful\", \"success\"));\r\n                                    }\r\n                                    handleClose();\r\n                                    //onSuccess();32f9f1ab3c8c30fac1bd1eff8c46235992485fbd\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        <Dropdown.Item onClick={()=>{\r\n                            \r\n                            window.print();\r\n                        }}>{translate(\"ORDER_DETAILS.PRINT\")}</Dropdown.Item>\r\n                    </SplitButton>\r\n                    {/* <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button> */}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}