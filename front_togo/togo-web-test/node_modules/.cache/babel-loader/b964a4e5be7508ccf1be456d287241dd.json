{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, runIfFn, __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { useEditable } from \"./use-editable\";\nvar _createContext = createContext({\n    name: \"EditableContext\",\n    errorMessage: \"useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`\"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  EditableProvider = _createContext2[0],\n  useEditableContext = _createContext2[1];\n\n/**\n * Editable\n *\n * The wrapper that provides context and logic for all editable\n * components. It renders a `div`\n */\nexport var Editable = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Editable\", props);\n  var ownProps = omitThemingProps(props);\n  var _useEditable = useEditable(ownProps),\n    htmlProps = _useEditable.htmlProps,\n    context = _objectWithoutPropertiesLoose(_useEditable, [\"htmlProps\"]);\n  var isEditing = context.isEditing,\n    onSubmit = context.onSubmit,\n    onCancel = context.onCancel,\n    onEdit = context.onEdit;\n  var _className = cx(\"chakra-editable\", props.className);\n  var children = runIfFn(props.children, {\n    isEditing: isEditing,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    onEdit: onEdit\n  });\n  return /*#__PURE__*/React.createElement(EditableProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref\n  }, htmlProps, {\n    className: _className\n  }), children)));\n});\nif (__DEV__) {\n  Editable.displayName = \"Editable\";\n}\nvar commonStyles = {\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n  textAlign: \"inherit\",\n  bg: \"transparent\"\n};\n\n/**\n * EditablePreview\n *\n * The `span` used to display the final value, in the `preview` mode\n */\nexport var EditablePreview = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useEditableContext = useEditableContext(),\n    getPreviewProps = _useEditableContext.getPreviewProps;\n  var styles = useStyles();\n  var previewProps = getPreviewProps(props, ref);\n  var _className = cx(\"chakra-editable__preview\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, previewProps, {\n    __css: _extends({\n      cursor: \"text\",\n      display: \"inline-block\"\n    }, commonStyles, styles.preview),\n    className: _className\n  }));\n});\nif (__DEV__) {\n  EditablePreview.displayName = \"EditablePreview\";\n}\n\n/**\n * EditableInput\n *\n * The input used in the `edit` mode\n */\nexport var EditableInput = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useEditableContext2 = useEditableContext(),\n    getInputProps = _useEditableContext2.getInputProps;\n  var styles = useStyles();\n  var inputProps = getInputProps(props, ref);\n  var _className = cx(\"chakra-editable__input\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.input, _extends({}, inputProps, {\n    __css: _extends({\n      outline: 0\n    }, commonStyles, styles.input),\n    className: _className\n  }));\n});\nif (__DEV__) {\n  EditableInput.displayName = \"EditableInput\";\n}\n/**\n * React hook use to gain access to the editable state and actions.\n */\n\nexport function useEditableState() {\n  var _useEditableContext3 = useEditableContext(),\n    isEditing = _useEditableContext3.isEditing,\n    onSubmit = _useEditableContext3.onSubmit,\n    onCancel = _useEditableContext3.onCancel,\n    onEdit = _useEditableContext3.onEdit,\n    isDisabled = _useEditableContext3.isDisabled;\n  return {\n    isEditing: isEditing,\n    onSubmit: onSubmit,\n    onCancel: onCancel,\n    onEdit: onEdit,\n    isDisabled: isDisabled\n  };\n}\n/**\n * React hook use to create controls for the editable component\n */\n\nexport function useEditableControls() {\n  var _useEditableContext4 = useEditableContext(),\n    isEditing = _useEditableContext4.isEditing,\n    getEditButtonProps = _useEditableContext4.getEditButtonProps,\n    getCancelButtonProps = _useEditableContext4.getCancelButtonProps,\n    getSubmitButtonProps = _useEditableContext4.getSubmitButtonProps;\n  return {\n    isEditing: isEditing,\n    getEditButtonProps: getEditButtonProps,\n    getCancelButtonProps: getCancelButtonProps,\n    getSubmitButtonProps: getSubmitButtonProps\n  };\n}","map":{"version":3,"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","runIfFn","__DEV__","createContext","React","useEditable","_createContext","name","errorMessage","_createContext2","_slicedToArray","EditableProvider","useEditableContext","Editable","props","ref","styles","ownProps","_useEditable","htmlProps","context","_objectWithoutPropertiesLoose","isEditing","onSubmit","onCancel","onEdit","_className","className","children","createElement","value","div","_extends","displayName","commonStyles","fontSize","fontWeight","textAlign","bg","EditablePreview","_useEditableContext","getPreviewProps","previewProps","span","__css","cursor","display","preview","EditableInput","_useEditableContext2","getInputProps","inputProps","input","outline","useEditableState","_useEditableContext3","isDisabled","useEditableControls","_useEditableContext4","getEditButtonProps","getCancelButtonProps","getSubmitButtonProps"],"sources":["../../src/editable.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext, MaybeRenderProp } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport {\n  useEditable,\n  UseEditableProps,\n  UseEditableReturn,\n} from \"./use-editable\"\n\ntype EditableContext = Omit<UseEditableReturn, \"htmlProps\">\n\nconst [EditableProvider, useEditableContext] = createContext<EditableContext>({\n  name: \"EditableContext\",\n  errorMessage:\n    \"useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`\",\n})\n\ntype RenderProps = Pick<\n  UseEditableReturn,\n  \"isEditing\" | \"onSubmit\" | \"onCancel\" | \"onEdit\"\n>\n\ninterface BaseEditableProps\n  extends Omit<\n    HTMLChakraProps<\"div\">,\n    \"onChange\" | \"value\" | \"defaultValue\" | \"onSubmit\"\n  > {}\n\nexport interface EditableProps\n  extends UseEditableProps,\n    BaseEditableProps,\n    ThemingProps<\"Editable\"> {\n  children?: MaybeRenderProp<RenderProps>\n}\n\n/**\n * Editable\n *\n * The wrapper that provides context and logic for all editable\n * components. It renders a `div`\n */\nexport const Editable = forwardRef<EditableProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Editable\", props)\n\n  const ownProps = omitThemingProps(props)\n  const { htmlProps, ...context } = useEditable(ownProps)\n\n  const { isEditing, onSubmit, onCancel, onEdit } = context\n\n  const _className = cx(\"chakra-editable\", props.className)\n\n  const children = runIfFn(props.children, {\n    isEditing,\n    onSubmit,\n    onCancel,\n    onEdit,\n  })\n\n  return (\n    <EditableProvider value={context}>\n      <StylesProvider value={styles}>\n        <chakra.div\n          ref={ref}\n          {...(htmlProps as HTMLChakraProps<\"div\">)}\n          className={_className}\n        >\n          {children}\n        </chakra.div>\n      </StylesProvider>\n    </EditableProvider>\n  )\n})\n\nif (__DEV__) {\n  Editable.displayName = \"Editable\"\n}\n\nconst commonStyles: SystemStyleObject = {\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n  textAlign: \"inherit\",\n  bg: \"transparent\",\n}\n\nexport interface EditablePreviewProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * EditablePreview\n *\n * The `span` used to display the final value, in the `preview` mode\n */\nexport const EditablePreview = forwardRef<EditablePreviewProps, \"span\">(\n  (props, ref) => {\n    const { getPreviewProps } = useEditableContext()\n    const styles = useStyles()\n\n    const previewProps = getPreviewProps(props, ref) as HTMLChakraProps<\"span\">\n    const _className = cx(\"chakra-editable__preview\", props.className)\n\n    return (\n      <chakra.span\n        {...previewProps}\n        __css={{\n          cursor: \"text\",\n          display: \"inline-block\",\n          ...commonStyles,\n          ...styles.preview,\n        }}\n        className={_className}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  EditablePreview.displayName = \"EditablePreview\"\n}\n\nexport interface EditableInputProps extends HTMLChakraProps<\"input\"> {}\n\n/**\n * EditableInput\n *\n * The input used in the `edit` mode\n */\nexport const EditableInput = forwardRef<EditableInputProps, \"input\">(\n  (props, ref) => {\n    const { getInputProps } = useEditableContext()\n    const styles = useStyles()\n\n    const inputProps = getInputProps(props, ref) as HTMLChakraProps<\"input\">\n    const _className = cx(\"chakra-editable__input\", props.className)\n\n    return (\n      <chakra.input\n        {...inputProps}\n        __css={{\n          outline: 0,\n          ...commonStyles,\n          ...styles.input,\n        }}\n        className={_className}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  EditableInput.displayName = \"EditableInput\"\n}\n\n/**\n * React hook use to gain access to the editable state and actions.\n */\nexport function useEditableState() {\n  const {\n    isEditing,\n    onSubmit,\n    onCancel,\n    onEdit,\n    isDisabled,\n  } = useEditableContext()\n\n  return {\n    isEditing,\n    onSubmit,\n    onCancel,\n    onEdit,\n    isDisabled,\n  }\n}\n\n/**\n * React hook use to create controls for the editable component\n */\nexport function useEditableControls(): Pick<\n  EditableContext,\n  | \"isEditing\"\n  | \"getEditButtonProps\"\n  | \"getCancelButtonProps\"\n  | \"getSubmitButtonProps\"\n> {\n  const {\n    isEditing,\n    getEditButtonProps,\n    getCancelButtonProps,\n    getSubmitButtonProps,\n  } = useEditableContext()\n\n  return {\n    isEditing,\n    getEditButtonProps,\n    getCancelButtonProps,\n    getSubmitButtonProps,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}