{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from\"react\";import'./OrdersTabularView.css';import translate from\"../../i18n/translate\";import{Link}from\"react-router-dom\";import{CancelOrder}from\"../OrdersManager/CancelOrder\";import DynamicTable from\"../DynamicTable/DynamicTable\";import{isTransporter,isTransporterMaster}from\"../../Util\";export var PackageTypes={\"1\":\"FOOD\",\"2\":\"SMALL_PACKAGE_AND_ENVELOPS\",\"3\":\"MEDIUM_PACKAGE\",\"4\":\"LARGE_PACKAGE\"};export var DeliveryTypes={\"1\":\"DELIVERY\",\"2\":\"COD\",\"3\":\"PICKUP\",\"4\":\"PAP\"};export var deliverFormatter=function deliverFormatter(data){if(DeliveryTypes[parseInt(data.DeliveryWays)]){return translate(\"ORDERS.\"+DeliveryTypes[parseInt(data.DeliveryWays)]);}return\"\";};export var packageFormatter=function packageFormatter(data){if(PackageTypes[parseInt(data.PackageType)]){return translate(\"ORDERS.\"+PackageTypes[parseInt(data.PackageType)]);}return\"\";};export var OrdersTabularView=function OrdersTabularView(_ref){var orders=_ref.orders,currentPage=_ref.currentPage,update=_ref.update;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1];var showDetailsButton=useCallback(function(orderId){return/*#__PURE__*/React.createElement(Link,{to:{pathname:\"/account/Order/\".concat(orderId),state:{currentPage:currentPage}},style:{paddingRight:\"20%\",paddingLeft:\"20%\",border:\"none\",width:\"100%\",textAlign:\"center\"},className:\"btn btn-primary btn-rounded btn-grad\"},translate(\"ORDERS.SHOW\"));},[currentPage]);useEffect(function(){var newColumns=[{label:translate(\"ORDERS.ORDER_NUM\"),key:\"idOrder\"},{label:translate(\"ORDERS.DELIVERY_TYPE\"),key:\"DeliveryWays\",format:deliverFormatter},{label:translate(\"ORDERS.PACKAGE_TYPE\"),key:\"PackageType\",format:packageFormatter},{label:translate(\"ORDERS.ORDER_STATUS\"),key:\"OrderStatus\"},{label:translate(\"ORDERS.ORDER_DATE\"),key:\"DateOrder\"},{label:translate(\"ORDERS.ORDER_TIME\"),key:\"TimeOrder\"},{label:translate(\"ORDERS.FROM_CITY\"),key:\"FromAddress\"},{label:translate(\"ORDERS.TO_CITY\"),key:\"ToAddress\"},{label:translate(\"ORDERS.FULL_DETAILS\"),key:\"idOrder\",format:function format(_ref2){var idOrder=_ref2.idOrder;return showDetailsButton(idOrder);}}];if(!isTransporter()&&currentPage===\"all-orders\"){newColumns.push({label:\"\",key:\"\",format:function format(_ref3){var idOrder=_ref3.idOrder;return/*#__PURE__*/React.createElement(CancelOrder,{className:\"w-100\",orderId:idOrder,onSuccess:update});}});}if(currentPage===\"current-orders\"){//TODO:: key to be changed\nnewColumns.splice(3,0,{label:translate(\"ORDERS.PRICE\"),key:\"CostLoad\"});if(isTransporterMaster()){newColumns.splice(newColumns.length-1,0,{label:translate(\"ORDER_DETAILS.ASSIGNED\"),key:\"AssignedMemberName\"});}}/* else if (currentPage === \"previous-orders\") {\r\n            newColumns.push({\r\n                label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                key: \"idOrder\",\r\n                format: ({IsFinished, IsDeleted}) => IsFinished ? translate(\"ORDERS.COMPLETED\") : IsDeleted ? translate(\"ORDERS.CANCELED\") : null\r\n            })\r\n        } */setColumns(newColumns);},[currentPage,showDetailsButton]);return/*#__PURE__*/React.createElement(DynamicTable,{columns:columns,data:orders});};","map":null,"metadata":{},"sourceType":"module"}