{"ast":null,"code":"import { Button, Form } from \"react-bootstrap\";\nimport React, { useRef, useEffect } from \"react\";\nimport { testLogestechsArea\n/* , recordRechargeBalance */\n, getLogisticsVillagesTest } from \"../APIs/OrdersAPIs\";\nexport default function TestComponent() {\n  useEffect(function () {\n    getLogisticsVillagesTest().then(function (res) {\n      console.log(res.data.data);\n    });\n  }, []);\n  /* const strRef = useRef();\r\n    const getLogestechsAreaHandler = () => {\r\n        const str = strRef.current.value;\r\n        if (str) {\r\n          testLogestechsArea(str).then((res) => {\r\n              console.log(res.data);\r\n          })\r\n      }\r\n  } */\n\n  /* const recharge = () => {\r\n      recordRechargeBalance().then(res => console.log(res.data));\r\n  } */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/TestComponent.jsx"],"names":["Button","Form","React","useRef","useEffect","testLogestechsArea","getLogisticsVillagesTest","TestComponent","then","res","console","log","data"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC;AAAkB;AAA3B,EAA0DC,wBAA1D,QAA0F,oBAA1F;AAGA,eAAe,SAASC,aAAT,GAAyB;AAEpCH,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,wBAAwB,GAAGE,IAA3B,CAAgC,UAAAC,GAAG,EAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASA,IAArB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI;AACJ;AACA;;AAEI,sBACI,yCADJ;AAYH","sourcesContent":["import { Button, Form } from \"react-bootstrap\";\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport { testLogestechsArea/* , recordRechargeBalance */, getLogisticsVillagesTest } from \"../APIs/OrdersAPIs\";\r\n\r\n\r\nexport default function TestComponent() {\r\n\r\n    useEffect(() => {\r\n        getLogisticsVillagesTest().then(res => {\r\n            console.log(res.data.data);\r\n        })\r\n    }, [])\r\n\r\n    /* const strRef = useRef();\r\n\r\n    const getLogestechsAreaHandler = () => {\r\n\r\n        const str = strRef.current.value;\r\n\r\n        if (str) {\r\n            testLogestechsArea(str).then((res) => {\r\n                console.log(res.data);\r\n            })\r\n        }\r\n    } */\r\n\r\n    /* const recharge = () => {\r\n        recordRechargeBalance().then(res => console.log(res.data));\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            {/* <Form.Control ref={strRef} placeholder=\"Area name...\" />\r\n            <Button onClick={getLogestechsAreaHandler}>\r\n                Get Area\r\n            </Button>\r\n\r\n            <br /> */}\r\n\r\n            {/* <Button onClick={recharge}>Recharge Balance Test</Button> */}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}