{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/OrdersManager/ConfirmFinishedReturnedOrder.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport translate from \"../../i18n/translate\";\nimport { ClientFinishOrder } from \"../../APIs/OrdersAPIs\";\nimport { Button, Modal, Form, Spinner } from \"react-bootstrap\";\nexport default function ConfirmFinishedReturnedOrder(_ref) {\n  var orderId = _ref.orderId,\n      onSuccess = _ref.onSuccess;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadingSubmit = _useState4[0],\n      setLoadingSubmit = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    setShow(true);\n  };\n\n  var styles = {\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      right: \"20px\",\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1rem\",\n      height: \"40px\"\n    },\n    actionButtonLg: {\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      width: \"200px\"\n    }\n  };\n\n  function finishRetunedOrderHandler() {\n    setLoadingSubmit(true);\n    ClientFinishOrder(orderId).then(function (res) {\n      setLoadingSubmit(false);\n      onSuccess();\n      handleClose();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    style: styles.actionButtonLg,\n    onClick: function onClick() {\n      handleShow();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, translate(\"ORDER_DETAILS.CONFIRM_FINISH_RETRNED\")), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    style: styles.cardHeaderSm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, translate(\"ORDER_DETAILS.CONFIRM_FINISH_RETRNED\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, translate(\"TEMP.SURE_TO_FINISH_RETURNED\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"w-25 btn-grad\",\n    onClick: finishRetunedOrderHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 43\n    }\n  }), translate(\"TEMP.YES\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"w-25 btn-grad\",\n    onClick: function onClick() {\n      setShow(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, translate(\"TEMP.NO\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/OrdersManager/ConfirmFinishedReturnedOrder.jsx"],"names":["React","useState","useEffect","useRef","translate","ClientFinishOrder","Button","Modal","Form","Spinner","ConfirmFinishedReturnedOrder","orderId","onSuccess","show","setShow","loadingSubmit","setLoadingSubmit","handleClose","handleShow","styles","cardHeaderSm","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","height","actionButtonLg","marginRight","marginLeft","width","finishRetunedOrderHandler","then","res"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport translate from \"../../i18n/translate\";\r\nimport { ClientFinishOrder } from \"../../APIs/OrdersAPIs\";\r\nimport { Button, Modal, Form, Spinner } from \"react-bootstrap\";\r\n\r\nexport default function ConfirmFinishedReturnedOrder({ orderId, onSuccess }) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => { setShow(true) }\r\n\r\n    const styles = {\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: \"20px\",\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1rem\",\r\n            height: \"40px\"\r\n        },\r\n        actionButtonLg: {\r\n            marginRight: \"5px\",\r\n            marginLeft: \"5px\",\r\n            width: \"200px\"\r\n        }\r\n    }\r\n\r\n    function finishRetunedOrderHandler() {\r\n        setLoadingSubmit(true);\r\n        ClientFinishOrder(orderId).then((res) => {\r\n            setLoadingSubmit(false);\r\n            onSuccess();\r\n            handleClose();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"success\" style={styles.actionButtonLg} onClick={() => { handleShow(); }}>{translate(\"ORDER_DETAILS.CONFIRM_FINISH_RETRNED\")}</Button>\r\n\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Modal.Header closeButton style={styles.cardHeaderSm}>\r\n                    {translate(\"ORDER_DETAILS.CONFIRM_FINISH_RETRNED\")}\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className='mt-4'>\r\n                    {translate(\"TEMP.SURE_TO_FINISH_RETURNED\")}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"w-25 btn-grad\" onClick={finishRetunedOrderHandler}>\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                        {translate(\"TEMP.YES\")}\r\n                    </Button>\r\n                    <Button className=\"w-25 btn-grad\" onClick={() => { setShow(false) }}>\r\n                        {translate(\"TEMP.NO\")}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}