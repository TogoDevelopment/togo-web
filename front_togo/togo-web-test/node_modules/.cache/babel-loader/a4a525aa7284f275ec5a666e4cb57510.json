{"ast":null,"code":"import _defineProperty from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { useDisclosure, useFocusOnHide, useFocusOnPointerDown, useFocusOnShow, useIds } from \"@chakra-ui/hooks\";\nimport { popperCSSVars, usePopper } from \"@chakra-ui/popper\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport { callAllHandlers, contains, determineLazyBehavior, getRelatedTarget, px } from \"@chakra-ui/utils\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nvar TRIGGER = {\n  click: \"click\",\n  hover: \"hover\"\n};\n\n/**\n * @internal\n */\nexport function usePopover(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    _props$closeOnBlur = _props.closeOnBlur,\n    closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,\n    _props$closeOnEsc = _props.closeOnEsc,\n    closeOnEsc = _props$closeOnEsc === void 0 ? true : _props$closeOnEsc,\n    initialFocusRef = _props.initialFocusRef,\n    id = _props.id,\n    _props$returnFocusOnC = _props.returnFocusOnClose,\n    returnFocusOnClose = _props$returnFocusOnC === void 0 ? true : _props$returnFocusOnC,\n    _props$autoFocus = _props.autoFocus,\n    autoFocus = _props$autoFocus === void 0 ? true : _props$autoFocus,\n    arrowSize = _props.arrowSize,\n    arrowShadowColor = _props.arrowShadowColor,\n    _props$trigger = _props.trigger,\n    trigger = _props$trigger === void 0 ? TRIGGER.click : _props$trigger,\n    _props$openDelay = _props.openDelay,\n    openDelay = _props$openDelay === void 0 ? 200 : _props$openDelay,\n    _props$closeDelay = _props.closeDelay,\n    closeDelay = _props$closeDelay === void 0 ? 200 : _props$closeDelay,\n    isLazy = _props.isLazy,\n    _props$lazyBehavior = _props.lazyBehavior,\n    lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n    computePositionOnMount = _props.computePositionOnMount,\n    popperProps = _objectWithoutPropertiesLoose(props, [\"closeOnBlur\", \"closeOnEsc\", \"initialFocusRef\", \"id\", \"returnFocusOnClose\", \"autoFocus\", \"arrowSize\", \"arrowShadowColor\", \"trigger\", \"openDelay\", \"closeDelay\", \"isLazy\", \"lazyBehavior\", \"computePositionOnMount\"]);\n  var _useDisclosure = useDisclosure(props),\n    isOpen = _useDisclosure.isOpen,\n    onClose = _useDisclosure.onClose,\n    onOpen = _useDisclosure.onOpen,\n    onToggle = _useDisclosure.onToggle;\n  var triggerRef = useRef(null);\n  var popoverRef = useRef(null);\n  var isHoveringRef = useRef(false);\n  var hasBeenOpened = useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasHeader = _useState2[0],\n    setHasHeader = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    hasBody = _useState4[0],\n    setHasBody = _useState4[1];\n  var _useIds = useIds(id, \"popover-trigger\", \"popover-content\", \"popover-header\", \"popover-body\"),\n    _useIds2 = _slicedToArray(_useIds, 4),\n    triggerId = _useIds2[0],\n    popoverId = _useIds2[1],\n    headerId = _useIds2[2],\n    bodyId = _useIds2[3];\n  var _usePopper = usePopper(_extends({}, popperProps, {\n      enabled: isOpen || computePositionOnMount\n    })),\n    referenceRef = _usePopper.referenceRef,\n    getArrowProps = _usePopper.getArrowProps,\n    getPopperProps = _usePopper.getPopperProps,\n    getArrowInnerProps = _usePopper.getArrowInnerProps,\n    forceUpdate = _usePopper.forceUpdate;\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef\n  });\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click\n  });\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click\n  });\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    isSelected: isOpen\n  });\n  var getPopoverProps = useCallback(function (props, _ref) {\n    var _extends2;\n    if (props === void 0) {\n      props = {};\n    }\n    if (_ref === void 0) {\n      _ref = null;\n    }\n    var popoverProps = _extends({}, props, {\n      style: _extends({}, props.style, (_extends2 = {\n        transformOrigin: popperCSSVars.transformOrigin.varRef\n      }, _defineProperty(_extends2, popperCSSVars.arrowSize.var, arrowSize ? px(arrowSize) : undefined), _defineProperty(_extends2, popperCSSVars.arrowShadowColor.var, arrowShadowColor), _extends2)),\n      ref: mergeRefs(popoverRef, _ref),\n      children: shouldRenderChildren ? props.children : null,\n      id: popoverId,\n      tabIndex: -1,\n      role: \"dialog\",\n      onKeyDown: callAllHandlers(props.onKeyDown, function (event) {\n        if (closeOnEsc && event.key === \"Escape\") {\n          onClose();\n        }\n      }),\n      onBlur: callAllHandlers(props.onBlur, function (event) {\n        var relatedTarget = getRelatedTarget(event);\n        var targetIsPopover = contains(popoverRef.current, relatedTarget);\n        var targetIsTrigger = contains(triggerRef.current, relatedTarget);\n        var isValidBlur = !targetIsPopover && !targetIsTrigger;\n        if (isOpen && closeOnBlur && isValidBlur) {\n          onClose();\n        }\n      }),\n      \"aria-labelledby\": hasHeader ? headerId : undefined,\n      \"aria-describedby\": hasBody ? bodyId : undefined\n    });\n    if (trigger === TRIGGER.hover) {\n      popoverProps.role = \"tooltip\";\n      popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, function () {\n        isHoveringRef.current = true;\n      });\n      popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, function () {\n        isHoveringRef.current = false;\n        setTimeout(onClose, closeDelay);\n      });\n    }\n    return popoverProps;\n  }, [shouldRenderChildren, popoverId, hasHeader, headerId, hasBody, bodyId, trigger, closeOnEsc, onClose, isOpen, closeOnBlur, closeDelay, arrowShadowColor, arrowSize]);\n  var getPopoverPositionerProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n    return getPopperProps(_extends({}, props, {\n      style: _extends({\n        visibility: isOpen ? \"visible\" : \"hidden\"\n      }, props.style)\n    }), forwardedRef);\n  }, [isOpen, getPopperProps]);\n  var openTimeout = useRef();\n  var closeTimeout = useRef();\n  var getTriggerProps = useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (_ref === void 0) {\n      _ref = null;\n    }\n    var triggerProps = _extends({}, props, {\n      ref: mergeRefs(triggerRef, _ref, referenceRef),\n      id: triggerId,\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": popoverId\n    });\n    if (trigger === TRIGGER.click) {\n      triggerProps.onClick = callAllHandlers(props.onClick, onToggle);\n    }\n    if (trigger === TRIGGER.hover) {\n      /**\n       * Any content that shows on pointer hover should also show on keyboard focus.\n       * Consider focus and blur to be the `hover` for keyboard users.\n       *\n       * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n       */\n      triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen);\n      triggerProps.onBlur = callAllHandlers(props.onBlur, onClose);\n      /**\n       * Any content that shows on hover or focus must be dismissible.\n       * This case pressing `Escape` will dismiss the popover\n       */\n\n      triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, function (event) {\n        if (event.key === \"Escape\") {\n          onClose();\n        }\n      });\n      triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, function () {\n        isHoveringRef.current = true;\n        openTimeout.current = window.setTimeout(onOpen, openDelay);\n      });\n      triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, function () {\n        isHoveringRef.current = false;\n        if (openTimeout.current) {\n          clearTimeout(openTimeout.current);\n          openTimeout.current = undefined;\n        }\n        closeTimeout.current = window.setTimeout(function () {\n          if (isHoveringRef.current === false) {\n            onClose();\n          }\n        }, closeDelay);\n      });\n    }\n    return triggerProps;\n  }, [triggerId, isOpen, popoverId, trigger, referenceRef, onToggle, onOpen, onClose, openDelay, closeDelay]);\n  useEffect(function () {\n    return function () {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current);\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current);\n      }\n    };\n  }, []);\n  var getHeaderProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (ref === void 0) {\n      ref = null;\n    }\n    return _extends({}, props, {\n      id: headerId,\n      ref: mergeRefs(ref, function (node) {\n        setHasHeader(!!node);\n      })\n    });\n  }, [headerId]);\n  var getBodyProps = useCallback(function (props, ref) {\n    if (props === void 0) {\n      props = {};\n    }\n    if (ref === void 0) {\n      ref = null;\n    }\n    return _extends({}, props, {\n      id: bodyId,\n      ref: mergeRefs(ref, function (node) {\n        setHasBody(!!node);\n      })\n    });\n  }, [bodyId]);\n  return {\n    forceUpdate: forceUpdate,\n    isOpen: isOpen,\n    onClose: onClose,\n    getArrowProps: getArrowProps,\n    getArrowInnerProps: getArrowInnerProps,\n    getPopoverPositionerProps: getPopoverPositionerProps,\n    getPopoverProps: getPopoverProps,\n    getTriggerProps: getTriggerProps,\n    getHeaderProps: getHeaderProps,\n    getBodyProps: getBodyProps\n  };\n}","map":{"version":3,"names":["useDisclosure","useFocusOnHide","useFocusOnPointerDown","useFocusOnShow","useIds","popperCSSVars","usePopper","mergeRefs","callAllHandlers","contains","determineLazyBehavior","getRelatedTarget","px","useCallback","useEffect","useRef","useState","TRIGGER","click","hover","usePopover","props","_props","_props$closeOnBlur","closeOnBlur","_props$closeOnEsc","closeOnEsc","initialFocusRef","id","_props$returnFocusOnC","returnFocusOnClose","_props$autoFocus","autoFocus","arrowSize","arrowShadowColor","_props$trigger","trigger","_props$openDelay","openDelay","_props$closeDelay","closeDelay","isLazy","_props$lazyBehavior","lazyBehavior","computePositionOnMount","popperProps","_objectWithoutPropertiesLoose","_useDisclosure","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasBeenOpened","current","_useState","_useState2","_slicedToArray","hasHeader","setHasHeader","_useState3","_useState4","hasBody","setHasBody","_useIds","_useIds2","triggerId","popoverId","headerId","bodyId","_usePopper","_extends","enabled","referenceRef","getArrowProps","getPopperProps","getArrowInnerProps","forceUpdate","ref","focusRef","visible","shouldFocus","shouldRenderChildren","hasBeenSelected","isSelected","getPopoverProps","_ref","_extends2","popoverProps","style","transformOrigin","varRef","_defineProperty","var","undefined","children","tabIndex","role","onKeyDown","event","key","onBlur","relatedTarget","targetIsPopover","targetIsTrigger","isValidBlur","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","forwardedRef","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getHeaderProps","node","getBodyProps"],"sources":["../../src/use-popover.ts"],"sourcesContent":["import {\n  useDisclosure,\n  useFocusOnHide,\n  useFocusOnPointerDown,\n  useFocusOnShow,\n  useIds,\n} from \"@chakra-ui/hooks\"\nimport { popperCSSVars, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { HTMLProps, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  callAllHandlers,\n  contains,\n  determineLazyBehavior,\n  FocusableElement,\n  getRelatedTarget,\n  LazyBehavior,\n  px,\n} from \"@chakra-ui/utils\"\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps extends UsePopperProps {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-decribedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<FocusableElement>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   */\n  autoFocus?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   */\n  trigger?: keyof typeof TRIGGER\n  openDelay?: number\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of popover's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The popover's content is always unmounted when not open.\n   * - \"keepMounted\": The popover's content initially unmounted,\n   * but stays mounted when popover is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyBehavior\n  /**\n   * If `true`, the popover will be positioned when it mounts\n   * (even if it's not open)\n   *\n   * Note 🚨: We don't recommend using this in a popover/menu intensive UI or page\n   * as it might affect scrolling performance.\n   */\n  computePositionOnMount?: boolean\n}\n\n/**\n * @internal\n */\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    id,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowSize,\n    arrowShadowColor,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    computePositionOnMount,\n    ...popperProps\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const hasBeenOpened = useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const [hasHeader, setHasHeader] = useState(false)\n  const [hasBody, setHasBody] = useState(false)\n\n  const [triggerId, popoverId, headerId, bodyId] = useIds(\n    id,\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  )\n\n  const {\n    referenceRef,\n    getArrowProps,\n    getPopperProps,\n    getArrowInnerProps,\n    forceUpdate,\n  } = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n  })\n\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef,\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  const shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy,\n    lazyBehavior,\n    isSelected: isOpen,\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: HTMLProps = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n          [popperCSSVars.arrowSize.var]: arrowSize ? px(arrowSize) : undefined,\n          [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: shouldRenderChildren ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event)\n          const targetIsPopover = contains(popoverRef.current, relatedTarget)\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget)\n          const isValidBlur = !targetIsPopover && !targetIsTrigger\n\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      shouldRenderChildren,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      isOpen,\n      closeOnBlur,\n      closeDelay,\n      arrowShadowColor,\n      arrowSize,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) =>\n      getPopperProps(\n        {\n          ...props,\n          style: {\n            visibility: isOpen ? \"visible\" : \"hidden\",\n            ...props.style,\n          },\n        },\n        forwardedRef,\n      ),\n    [isOpen, getPopperProps],\n  )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: HTMLProps = {\n        ...props,\n        ref: mergeRefs(triggerRef, _ref, referenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen)\n        triggerProps.onBlur = callAllHandlers(props.onBlur, onClose)\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return triggerProps\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      referenceRef,\n      onToggle,\n      onOpen,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current)\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current)\n      }\n    }\n  }, [])\n\n  const getHeaderProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: headerId,\n      ref: mergeRefs(ref, (node: HTMLElement | null) => {\n        setHasHeader(!!node)\n      }),\n    }),\n    [headerId],\n  )\n\n  const getBodyProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: bodyId,\n      ref: mergeRefs(ref, (node) => {\n        setHasBody(!!node)\n      }),\n    }),\n    [bodyId],\n  )\n\n  return {\n    forceUpdate,\n    isOpen,\n    onClose,\n    getArrowProps,\n    getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}