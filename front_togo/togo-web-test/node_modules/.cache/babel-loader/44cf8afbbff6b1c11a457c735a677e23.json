{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrder.jsx\";\n\nimport { Button, Dropdown, Form, FormControl, Modal } from \"react-bootstrap\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport translate from \"../i18n/translate\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"./APIs/OrdersAPIs\";\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/attachment.svg\";\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\nvar PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nvar CustomMenu = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      className = _ref.className,\n      onSearch = _ref.onSearch,\n      labeledBy = _ref['aria-labelledby'];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: style,\n    className: className,\n    \"aria-labelledby\": labeledBy,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    className: \"mx-3 my-2 w-auto\",\n    placeholder: \"Type to Search...\",\n    onChange: function onChange(e) {\n      //setValue(e.target.value);\n      onSearch(e.target.value);\n    } //value={value}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.Children.toArray(children).filter(function (child) {\n    return !value || child.props.children.toLowerCase().startsWith(value);\n  })));\n});\nexport function CreateNewOrder(props) {\n  var _this2 = this;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"1\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      deliverAddresses = _useState12[0],\n      setDeliverAddresses = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedDeliveryAddress = _useState14[0],\n      setSelectedDeliveryAddress = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedPickUpAddress = _useState16[0],\n      setSelectedPickUpAddress = _useState16[1];\n\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      GetDefinedAddresses(inputValue).then(function (res) {\n        setDeliverAddresses(res.data);\n      });\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"togo-button\",\n    variant: \"\",\n    onClick: function onClick() {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      display: \"inline-block\",\n      width: \"25px\",\n      height: \"25px\",\n      marginRight: \"5px\",\n      fill: \"currentcolor\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), translate(\"ORDERS.CREATE_ORDER\")), /*#__PURE__*/React.createElement(Modal, {\n    show: open,\n    onHide: handleClose,\n    centered: true,\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"togo-dropdown\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-left d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"mr-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2])))), /*#__PURE__*/React.createElement(Form.Group, {\n    onChange: function onChange(event) {\n      if (event.target.name === \"DeliveryType\") {\n        setDeliveryType(event.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios1\",\n    value: \"1\",\n    defaultChecked: deliveryType === \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios2\",\n    value: \"2\",\n    defaultChecked: deliveryType === \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }), deliveryType === \"2\" && /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"ml-auto w-25\",\n    placeholder: \"amount\",\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[3]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios3\",\n    value: \"3\",\n    defaultChecked: deliveryType === \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[4]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios4\",\n    value: \"4\",\n    defaultChecked: deliveryType === \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }), deliveryType === \"4\" && /*#__PURE__*/React.createElement(Form.Control, {\n    ref: pickAmountRef,\n    type: \"number\",\n    className: \"ml-auto w-25\",\n    placeholder: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"togo-dropdown\",\n    onSelect: function onSelect(event) {\n      setSelectedPickUpAddress(deliverAddresses[event]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"transparent\",\n    className: \"w-100 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    w: \"97%\",\n    d: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, selectedPickUpAddress && selectedPickUpAddress.name || \"Select an address\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, selectedPickUpAddress && selectedPickUpAddress.details))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    renderOnMount: true,\n    as: CustomMenu,\n    onSearch: setInputValue,\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, deliverAddresses.map(function (address, idx) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: address.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: idx,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 45\n      }\n    }, address.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 45\n      }\n    }, address.details)), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 41\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"togo-dropdown\",\n    onSelect: function onSelect(event) {\n      setSelectedDeliveryAddress(deliverAddresses[event]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"transparent\",\n    className: \"w-100 text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    w: \"97%\",\n    d: \"inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }, selectedDeliveryAddress && selectedDeliveryAddress.name || \"Select an address\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, selectedDeliveryAddress && selectedDeliveryAddress.details))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    renderOnMount: true,\n    as: CustomMenu,\n    onSearch: setInputValue,\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, deliverAddresses.map(function (address, idx) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: address.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: idx,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 45\n      }\n    }, address.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 45\n      }\n    }, address.details)), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 41\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), packageType !== \"1\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.DIMENSIONS_LABEL\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"mr-2\",\n    placeholder: \"Height\",\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"mr-2\",\n    placeholder: \"Width\",\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"\",\n    placeholder: \"Length\",\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"mt-2\",\n    placeholder: \"Weight\",\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Notes\",\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"\",\n    className: \"togo-button w-100\" //disabled\n    ,\n    onClick: function onClick() {\n      var _lengthRef$current, _widthRef$current, _heightRef$current, _weightRef$current;\n\n      var DeliveryParams = {\n        deliveryWay: deliveryType,\n        TypeLoad: packageType,\n        CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n        // 2 or 4\n        DetailsLoad: notesRef.current.value,\n        LengthLoad: ((_lengthRef$current = lengthRef.current) === null || _lengthRef$current === void 0 ? void 0 : _lengthRef$current.value) || \"\",\n        WidthLoad: ((_widthRef$current = widthRef.current) === null || _widthRef$current === void 0 ? void 0 : _widthRef$current.value) || \"\",\n        HeightLoad: ((_heightRef$current = heightRef.current) === null || _heightRef$current === void 0 ? void 0 : _heightRef$current.value) || \"\",\n        WeightLoad: ((_weightRef$current = weightRef.current) === null || _weightRef$current === void 0 ? void 0 : _weightRef$current.value) || \"\",\n        qrCode: \"\"\n      };\n      var AddressClint = {\n        IdCity: selectedPickUpAddress.cityId,\n        // from selected pick up address\n        OtherDetails: selectedPickUpAddress.details,\n        // details from selected pickup address\n        LatSender: selectedPickUpAddress.latitude,\n        // from selected pick up address\n        LongSender: selectedPickUpAddress.longitude,\n        //  from selected pick up address\n        SenderAddressId: selectedPickUpAddress.id,\n        // from selected pick up address\n        IdCityDes: selectedDeliveryAddress.cityId,\n        // from selected delivery to address\n        OtherDetailsDes: selectedDeliveryAddress.details,\n        // details from selected delivery to address\n        LatReciver: selectedDeliveryAddress.latitude,\n        // from selected delivery to address\n        LongReciver: selectedDeliveryAddress.longitude,\n        // from selected delivery to address\n        ReciverAddressId: selectedDeliveryAddress.id,\n        // from selected delivery to address\n        ReceiverAddressNum: selectedDeliveryAddress.phone_number\n      };\n      CreateNewOrderReq(JSON.stringify(DeliveryParams), JSON.stringify(AddressClint)).then(function (res) {\n        console.log(res);\n        setOpen(false);\n        props.onSuccess();\n      });\n      /* - deliveryWay \r\n          This one from radio button for delivery type it contains four values \r\n              (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n      - CostLoad   \r\n          This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n      - TypeLoad   \r\n          This one from the list we pick Food or Small/Medium/Large package where \r\n              Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n      - qrCode\r\n          in case of submit with qrcode we will put the value else it will be empty */\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.SUBMIT\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrder.jsx"],"names":["Button","Dropdown","Form","FormControl","Modal","React","Fragment","useEffect","useRef","useState","translate","Box","CreateNewOrderReq","GetDefinedAddresses","DeliveryTypes","PackageTypes","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CustomMenu","forwardRef","ref","children","style","className","onSearch","labeledBy","value","setValue","e","target","Children","toArray","filter","child","props","toLowerCase","startsWith","CreateNewOrder","open","setOpen","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","deliverAddresses","setDeliverAddresses","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","timer","setTimeout","then","res","data","clearTimeout","display","width","height","marginRight","fill","eve","createElement","event","name","details","map","address","idx","id","DeliveryParams","deliveryWay","TypeLoad","CostLoad","current","DetailsLoad","LengthLoad","WidthLoad","HeightLoad","WeightLoad","qrCode","AddressClint","IdCity","cityId","OtherDetails","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","OtherDetailsDes","LatReciver","LongReciver","ReciverAddressId","ReceiverAddressNum","phone_number","JSON","stringify","console","log","onSuccess"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, FormControl, Modal } from \"react-bootstrap\";\r\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../i18n/translate\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport {ReactComponent as SendIcon } from \"../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"./APIs/OrdersAPIs\";\r\nimport {ReactComponent as FoodIcon} from \"../assets/images/food.svg\";\r\nimport {ReactComponent as SmBoxIcon} from \"../assets/images/smallBox.svg\";\r\nimport {ReactComponent as MedBoxIcon} from \"../assets/images/medbox.svg\";\r\nimport {ReactComponent as BigBoxIcon} from \"../assets/images/largebox.svg\";\r\nimport {ReactComponent as DeliveryTruckIcon} from \"../assets/images/deliveryTruck.svg\";\r\nimport {ReactComponent as LocationIcon} from \"../assets/images/location.svg\";\r\nimport {ReactComponent as AttachmentIcon} from \"../assets/images/attachment.svg\";\r\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\r\n\r\nconst PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\nconst CustomMenu = React.forwardRef(\r\n    ({ children, style, className, onSearch, 'aria-labelledby': labeledBy }, ref) => {\r\n        const [value, setValue] = useState('');\r\n  \r\n        return (\r\n            <div\r\n                ref={ref}\r\n                style={style}\r\n                className={className}\r\n                aria-labelledby={labeledBy}\r\n            >\r\n                <FormControl\r\n                    autoFocus\r\n                    className=\"mx-3 my-2 w-auto\"\r\n                    placeholder=\"Type to Search...\"\r\n                    onChange={(e) => {\r\n                        //setValue(e.target.value);\r\n                        onSearch(e.target.value);\r\n                    }}\r\n                    //value={value}\r\n                />\r\n                <ul className=\"list-unstyled\">\r\n                    {React.Children.toArray(children).filter(\r\n                    (child) =>\r\n                        !value || child.props.children.toLowerCase().startsWith(value),\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    },\r\n);\r\n\r\nexport function CreateNewOrder(props){\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const notesRef = useRef();\r\n\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            GetDefinedAddresses(inputValue).then((res)=>{\r\n                setDeliverAddresses(res.data);\r\n            })\r\n        }, 500)\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [inputValue]);\r\n\r\n    return(\r\n        <>\r\n            <Button className=\"togo-button\" variant=\"\" onClick={()=>{\r\n                setOpen(true);\r\n            }}>\r\n                <SendIcon style={{display: \"inline-block\", width: \"25px\", height: \"25px\", marginRight:\"5px\", fill:\"currentcolor\"}} />\r\n                {translate(\"ORDERS.CREATE_ORDER\")}\r\n            </Button>\r\n            <Modal show={open} onHide={handleClose} centered animation={false} backdrop=\"static\">\r\n                \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDERS.CREATE_ORDER\")}</Modal.Title>\r\n                </Modal.Header>\r\n                \r\n                <Modal.Body>\r\n\r\n                \r\n\r\n                    <div className=\"my-1\">\r\n                        {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                    </div>\r\n\r\n                    <Dropdown \r\n                        className=\"togo-dropdown\" \r\n                        onSelect={(eve)=>{\r\n                            setPackageType(eve);\r\n                        }}>\r\n                        <Dropdown.Toggle variant=\"\" className=\"w-100 text-left d-flex align-items-center\">\r\n                            {React.createElement(PackageTypesIcons[packageType], {style: {width: \"20px\", height: \"20px\"}, className: \"mr-1\"})}\r\n                            <div style={{width: \"97%\"}}>    \r\n                                {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"w-100\">\r\n                            <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"mr-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"mr-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"mr-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"mr-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    \r\n                    <Form.Group onChange={(event)=>{\r\n                        if(event.target.name === \"DeliveryType\"){\r\n                            setDeliveryType(event.target.value);\r\n                        }\r\n                    }}>\r\n                        \r\n                        <div className=\"d-flex align-items-center my-1\">\r\n                            <DeliveryTruckIcon style={{ width: \"15px\", height: \"15px\" }} className=\"mr-1\" />\r\n                            {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                        </div>\r\n                        \r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[1])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios1\"\r\n                                value=\"1\"\r\n                                defaultChecked={deliveryType === \"1\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[2])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios2\"\r\n                                value=\"2\"\r\n                                defaultChecked={deliveryType === \"2\"}\r\n                            />\r\n                            {deliveryType === \"2\" &&\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    className=\"ml-auto w-25\" \r\n                                    placeholder=\"amount\" \r\n                                    ref={codAmountRef}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[3])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios3\"\r\n                                value=\"3\"\r\n                                defaultChecked={deliveryType === \"3\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[4])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios4\"\r\n                                value=\"4\"\r\n                                defaultChecked={deliveryType === \"4\"}\r\n                            />\r\n                            {deliveryType === \"4\" && \r\n                                <Form.Control \r\n                                    ref={pickAmountRef}\r\n                                    type=\"number\"\r\n                                    className=\"ml-auto w-25\"\r\n                                    placeholder=\"amount\" \r\n                                />\r\n                            }\r\n                        </div>\r\n                    </Form.Group>\r\n                    \r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <LocationIcon style={{ width: \"15px\", height: \"15px\" }} className=\"mr-1\" />\r\n                        {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                    </div>\r\n\r\n                    <Dropdown \r\n                        className=\"togo-dropdown\"\r\n                        onSelect={(event) => {\r\n                            setSelectedPickUpAddress(deliverAddresses[event]);\r\n                        }}\r\n                    >\r\n                        <Dropdown.Toggle variant=\"transparent\" className=\"w-100 text-left\">\r\n                            <Box w=\"97%\" d=\"inline-block\">\r\n                                <div>{(selectedPickUpAddress && selectedPickUpAddress.name) || \"Select an address\"}</div>\r\n                                <div>{(selectedPickUpAddress && selectedPickUpAddress.details)}</div>\r\n                            </Box>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu renderOnMount={true} as={CustomMenu} onSearch={setInputValue} className=\"w-100\">\r\n                            {deliverAddresses.map((address, idx) => {\r\n                                return (\r\n                                    <Fragment key={address.id}>\r\n                                        <Dropdown.Item eventKey={idx}>\r\n                                            <div>{address.name}</div>\r\n                                            <div>{address.details}</div>\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Divider />\r\n                                    </Fragment>\r\n                                )\r\n                            })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    \r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <SendIcon style={{ width: \"15px\", height: \"15px\" }} className=\"mr-1\" />\r\n                        <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                    </div>\r\n                    \r\n                    <Dropdown \r\n                        className=\"togo-dropdown\"\r\n                        onSelect={(event) => {\r\n                            setSelectedDeliveryAddress(deliverAddresses[event]);\r\n                        }}\r\n                        >\r\n                        <Dropdown.Toggle variant=\"transparent\" className=\"w-100 text-left\">\r\n                            <Box w=\"97%\" d=\"inline-block\">\r\n                                <div>{(selectedDeliveryAddress && selectedDeliveryAddress.name) || \"Select an address\"}</div>\r\n                                <div>{(selectedDeliveryAddress && selectedDeliveryAddress.details)}</div>\r\n                            </Box>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu renderOnMount={true} as={CustomMenu} onSearch={setInputValue} className=\"w-100\">\r\n                            {deliverAddresses.map((address, idx) => {\r\n                                return (\r\n                                    <Fragment key={address.id}>\r\n                                        <Dropdown.Item eventKey={idx}>\r\n                                            <div>{address.name}</div>\r\n                                            <div>{address.details}</div>\r\n                                        </Dropdown.Item>\r\n                                        <Dropdown.Divider />\r\n                                    </Fragment>\r\n                                )\r\n                            })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <AttachmentIcon style={{ width: \"15px\", height: \"15px\" }} className=\"mr-1\" />\r\n                        {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                    </div>\r\n                    \r\n                    {packageType !== \"1\" &&\r\n                    <>\r\n                        <div className=\"my-1\">{translate(\"ORDERS.DIMENSIONS_LABEL\")}</div>\r\n                        <div className=\"d-flex\">\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"mr-2\"\r\n                                placeholder=\"Height\" \r\n                                ref={heightRef}\r\n                            />\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"mr-2\" \r\n                                placeholder=\"Width\" \r\n                                ref={widthRef}\r\n                            />\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"\" \r\n                                placeholder=\"Length\" \r\n                                ref={lengthRef}\r\n                            />\r\n                        </div>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            className=\"mt-2\"\r\n                            placeholder=\"Weight\" \r\n                            ref={weightRef}\r\n                        />\r\n                    </>\r\n                    }\r\n                    <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Notes\" ref={notesRef} />\r\n                \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"\" \r\n                        className=\"togo-button w-100\" \r\n                        //disabled\r\n                        onClick={()=>{\r\n                            const DeliveryParams = {\r\n                                deliveryWay: deliveryType,\r\n                                TypeLoad: packageType,\r\n                                CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\" , // 2 or 4\r\n                                DetailsLoad: notesRef.current.value,\r\n                                LengthLoad: lengthRef.current?.value || \"\",\r\n                                WidthLoad: widthRef.current?.value || \"\",\r\n                                HeightLoad: heightRef.current?.value || \"\",\r\n                                WeightLoad: weightRef.current?.value || \"\",\r\n                                qrCode: \"\"\r\n                            };\r\n                            const AddressClint = {\r\n                                IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                            };\r\n\r\n                            CreateNewOrderReq(JSON.stringify(DeliveryParams), JSON.stringify(AddressClint)).then((res)=>{\r\n                                console.log(res);\r\n                                setOpen(false);\r\n                                props.onSuccess();\r\n                            });\r\n\r\n    /* - deliveryWay \r\n        This one from radio button for delivery type it contains four values \r\n            (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n    - CostLoad   \r\n        This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n    - TypeLoad   \r\n        This one from the list we pick Food or Small/Medium/Large package where \r\n            Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n    - qrCode\r\n        in case of submit with qrcode we will put the value else it will be empty */\r\n                        }}\r\n                    >\r\n                        {translate(\"ORDERS.SUBMIT\")}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}