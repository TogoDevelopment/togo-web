{"ast":null,"code":"import _defineProperty from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/OrderDetails/OrderDetails.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Address from \"../Address/Address\";\nimport Map from \"../Address/Map\";\n/* edited (Map imported) */\n\nimport { Accordion, Card, Button, Badge, Dropdown, Form, Modal, Spinner, Col, Row, Container } from \"react-bootstrap\";\n/* edited (new importd) */\n\nimport { MdOutlineFastfood } from 'react-icons/md';\n/* edited (new import) */\n\nimport { FinalizeOrder } from \"../OrdersManager/FinalizeOrder\";\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\nimport { BidOrder } from \"../OrdersManager/AcceptOrder\";\nimport { DeleteTripCost } from \"../OrdersManager/DeleteTripCost\";\nimport { EditTripCost } from \"../OrdersManager/EditTripCost\";\nimport Loader from \"../Loader/Loader\";\nimport \"./OrderDetails.css\";\nimport { getOrderDetails, checkTripCost, AcceptOfferReq, GetTransporterLocation } from \"../../APIs/OrdersAPIs\";\nimport translate from \"../../i18n/translate\";\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { deliverFormatter, packageFormatter } from \"../Orders/OrdersTabularView\";\nimport { isTeamMember, isTransporter, isTransporterMaster } from \"../../Util\";\nimport AssignToTransporter from \"../AssigneToTransporter\";\nimport { useLocation, useParams, useHistory } from \"react-router\";\nimport AssignToMemberOnNetworkDialog from \"../AssginToMemberOnNetworkDialog\";\nimport { refreshPage } from \"../../Functions/CommonFunctions\";\nimport Timeline from \"../TimeLine/TimeLine\";\n/* edited (TimeLine imported) */\n\nimport Table from \"react-bootstrap/Table\";\n/* edited (Table imported) */\n\nimport Rating from '@material-ui/lab/Rating';\n/* edited (Rating imported) */\n// var Barcode = require('react-barcode');\n\nvar OrderDetails = function OrderDetails() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cost = _useState4[0],\n      setCost = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var _useParams = useParams(),\n      orderId = _useParams.id;\n\n  var location = useLocation();\n  var history = useHistory();\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      orderDetails = _useState6[0],\n      setOrderDetails = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      previousPage = _useState8[0],\n      setPreviousPage = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tripCost = _useState10[0],\n      setTripCost = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      costSet = _useState12[0],\n      setCostSet = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      receiverAddress = _useState14[0],\n      setReceiverAddress = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      startTracking = _useState16[0],\n      setStartTracking = _useState16[1];\n\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      backgroundColor: 'lightgreen',\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold'\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      backgroundColor: 'lightgreen',\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold'\n    },\n    orderNumber: {\n      color: 'green',\n      fontStyle: 'italic',\n      marginLeft: '10px',\n      marginRight: '10px'\n    },\n    orderStatus: {\n      float: 'right'\n    },\n    tableElement: {\n      textAlign: 'right'\n    }\n  };\n  useEffect(function () {\n    var live = false;\n\n    if (startTracking === false) {\n      return;\n    }\n\n    var intervalId = setInterval(function () {\n      if (!live) {\n        live = true;\n        GetTransporterLocation(orderId).then(function (resp) {\n          live = false;\n          var _resp$data$server_res = resp.data.server_response[0],\n              TransporterLatLocation = _resp$data$server_res.TransporterLatLocation,\n              TransporterLongLoc = _resp$data$server_res.TransporterLongLoc;\n\n          if (TransporterLatLocation === null || TransporterLongLoc === null) {\n            TransporterLatLocation = 0;\n            TransporterLongLoc = 0;\n          }\n\n          setReceiverAddress(_objectSpread(_objectSpread({}, receiverAddress), {}, {\n            long: TransporterLongLoc,\n            lat: TransporterLatLocation\n          }));\n        });\n      }\n    }, 4000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, [startTracking]);\n  useEffect(function () {\n    var _location$state;\n\n    checkTripCost(orderId, isTransporter()).then(function (tripCostRes) {\n      if (tripCostRes && tripCostRes !== \"CostNotSend\") {\n        setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\n        setCostSet(true);\n      } else {\n        setCostSet(false);\n      }\n    });\n    getOrderDetails(orderId).then(function (orderDetailsRes) {\n      // console.log(orderDetailsRes); // temp test\n      setOrderDetails(orderDetailsRes);\n      setReceiverAddress({\n        otherDetails: orderDetailsRes.OtherDetailsDes,\n        phoneCustomer: orderDetailsRes.ReceiverAddressNum,\n        long: orderDetailsRes.LongReciver,\n        lat: orderDetailsRes.LatReciver\n      });\n    });\n    setPreviousPage((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.currentPage);\n  }, []); // console.log(orderDetails); /* temp test */\n\n  if (typeof orderDetails === \"object\" && JSON.stringify(orderDetails) !== '{}') {\n    var timeFormat = function timeFormat(time) {\n      // Check correct time format and split into components\n      time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n      if (time.length > 1) {\n        // If time format correct\n        time = time.slice(1); // Remove full string match value\n\n        time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n\n        time[0] = +time[0] % 12 || 12; // Adjust hours\n      }\n\n      return time.join(''); // return adjusted time or original string\n    }; // console.log(\"------ previousPage: \" + previousPage); // temp test\n\n\n    var OrderStatus = orderDetails.OrderStatus,\n        DateLoad = orderDetails.DateLoad,\n        DeliveryPrice = orderDetails.DeliveryPrice,\n        CostLoad = orderDetails.CostLoad,\n        AssignToName = orderDetails.AssignToName,\n        AssignToNumber = orderDetails.AssignToNumber,\n        transporterImgURL = orderDetails.transporterImgURL,\n        customerImgURL = orderDetails.customerImgURL,\n        FullNameCustomer = orderDetails.FullNameCustomer,\n        LastNameCustomer = orderDetails.LastNameCustomer,\n        deliveryWay = orderDetails.deliveryWay,\n        HeightLoad = orderDetails.HeightLoad,\n        DetailsLoad = orderDetails.DetailsLoad,\n        LengthLoad = orderDetails.LengthLoad,\n        WeightLoad = orderDetails.WeightLoad,\n        WidthLoad = orderDetails.WidthLoad,\n        OtherDetails = orderDetails.OtherDetails,\n        TypeLoad = orderDetails.TypeLoad,\n        PhoneCustomer = orderDetails.PhoneCustomer,\n        LongSender = orderDetails.LongSender,\n        LatSender = orderDetails.LatSender,\n        AssignStatus = orderDetails.AssignStatus,\n        AssignedMemberName = orderDetails.AssignedMemberName,\n        isAcceptDelivery = orderDetails.isAcceptDelivery,\n        SenderName = orderDetails.SenderName,\n        ReceiverName = orderDetails.ReceiverName;\n    var senderAddress = {\n      name: SenderName,\n      otherDetails: OtherDetails,\n      phoneCustomer: PhoneCustomer,\n      long: LongSender,\n      lat: LatSender\n    };\n    /* edited (timeline data + dummy data to test the timeline) */\n\n    var tempTransportationParties = [];\n\n    if (AssignToName !== null) {\n      var _ref;\n\n      tempTransportationParties = [{\n        type: 1,\n        current: false,\n        address: senderAddress,\n        customerName: FullNameCustomer + \" \" + LastNameCustomer,\n        name: SenderName,\n        imageURL: customerImgURL\n      }, (_ref = {\n        type: 2,\n        current: false,\n        address: null,\n        name: AssignToName,\n        phone: AssignToNumber,\n        price: DeliveryPrice\n      }, _defineProperty(_ref, \"current\", true), _defineProperty(_ref, \"imageURL\", transporterImgURL), _ref),\n      /*{\r\n          type: 2,\r\n          current: false,\r\n          address: null\r\n      },\r\n      {\r\n          type: 2,\r\n          current: true,\r\n          address: null\r\n      },*/\n      {\n        type: 3,\n        current: false,\n        address: receiverAddress,\n        name: ReceiverName\n      }];\n    } else {\n      tempTransportationParties = [{\n        type: 1,\n        current: false,\n        address: senderAddress,\n        customerName: FullNameCustomer + \" \" + LastNameCustomer,\n        name: SenderName,\n        imageURL: customerImgURL\n      },\n      /*{\r\n          type: 2,\r\n          current: false,\r\n          address: null,\r\n          phone: \"059999999999\",\r\n          price: \"2020\",\r\n          name: \"test\"\r\n      },\r\n      {\r\n          type: 2,\r\n          current: false,\r\n          address: null,\r\n          phone: \"059999999999\",\r\n          price: \"2020\",\r\n          name: \"test\"\r\n      },\r\n      {\r\n          type: 2,\r\n          current: true,\r\n          address: null,\r\n          phone: \"059999999999\",\r\n          price: \"2020\",\r\n          name: \"test\"\r\n      },*/\n      {\n        type: 3,\n        current: false,\n        address: receiverAddress,\n        name: ReceiverName\n      }];\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, orderDetails && /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 26\n      }\n    }, \"test\"));\n  } else if (typeof orderDetails === \"string\") {\n    return /*#__PURE__*/React.createElement(Alert, {\n      status: \"error\",\n      w: \"80%\",\n      m: \"10px auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AlertTitle, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }\n    }, orderId), /*#__PURE__*/React.createElement(AlertDescription, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, orderDetails));\n  } else {\n    return /*#__PURE__*/React.createElement(Box, {\n      height: \"400px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 36\n      }\n    }));\n  }\n};\n\nexport default OrderDetails;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/OrderDetails/OrderDetails.jsx"],"names":["React","useEffect","useState","Address","Map","Accordion","Card","Button","Badge","Dropdown","Form","Modal","Spinner","Col","Row","Container","MdOutlineFastfood","FinalizeOrder","CancelOrder","BidOrder","DeleteTripCost","EditTripCost","Loader","getOrderDetails","checkTripCost","AcceptOfferReq","GetTransporterLocation","translate","Alert","AlertDescription","AlertIcon","AlertTitle","Box","deliverFormatter","packageFormatter","isTeamMember","isTransporter","isTransporterMaster","AssignToTransporter","useLocation","useParams","useHistory","AssignToMemberOnNetworkDialog","refreshPage","Timeline","Table","Rating","OrderDetails","show","setShow","cost","setCost","handleClose","handleShow","orderId","id","location","history","orderDetails","setOrderDetails","previousPage","setPreviousPage","tripCost","setTripCost","costSet","setCostSet","receiverAddress","setReceiverAddress","startTracking","setStartTracking","styles","cardHeaderLg","position","left","right","top","backgroundColor","color","borderRadius","fontWeight","cardHeaderSm","orderNumber","fontStyle","marginLeft","marginRight","orderStatus","float","tableElement","textAlign","live","intervalId","setInterval","then","resp","data","server_response","TransporterLatLocation","TransporterLongLoc","long","lat","clearInterval","tripCostRes","CostDetail","orderDetailsRes","otherDetails","OtherDetailsDes","phoneCustomer","ReceiverAddressNum","LongReciver","LatReciver","state","currentPage","JSON","stringify","timeFormat","time","toString","match","length","slice","join","OrderStatus","DateLoad","DeliveryPrice","CostLoad","AssignToName","AssignToNumber","transporterImgURL","customerImgURL","FullNameCustomer","LastNameCustomer","deliveryWay","HeightLoad","DetailsLoad","LengthLoad","WeightLoad","WidthLoad","OtherDetails","TypeLoad","PhoneCustomer","LongSender","LatSender","AssignStatus","AssignedMemberName","isAcceptDelivery","SenderName","ReceiverName","senderAddress","name","tempTransportationParties","type","current","address","customerName","imageURL","phone","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Address from \"../Address/Address\";\r\nimport Map from \"../Address/Map\"; /* edited (Map imported) */\r\nimport { Accordion, Card, Button, Badge, Dropdown, Form, Modal, Spinner, Col, Row, Container } from \"react-bootstrap\"; /* edited (new importd) */\r\nimport { MdOutlineFastfood } from 'react-icons/md'; /* edited (new import) */\r\n\r\nimport { FinalizeOrder } from \"../OrdersManager/FinalizeOrder\";\r\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\r\nimport { BidOrder } from \"../OrdersManager/AcceptOrder\";\r\nimport { DeleteTripCost } from \"../OrdersManager/DeleteTripCost\";\r\nimport { EditTripCost } from \"../OrdersManager/EditTripCost\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"./OrderDetails.css\";\r\nimport { getOrderDetails, checkTripCost, AcceptOfferReq, GetTransporterLocation } from \"../../APIs/OrdersAPIs\";\r\nimport translate from \"../../i18n/translate\";\r\n\r\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { deliverFormatter, packageFormatter } from \"../Orders/OrdersTabularView\";\r\nimport { isTeamMember, isTransporter, isTransporterMaster } from \"../../Util\";\r\nimport AssignToTransporter from \"../AssigneToTransporter\";\r\n\r\nimport { useLocation, useParams, useHistory } from \"react-router\";\r\n\r\nimport AssignToMemberOnNetworkDialog from \"../AssginToMemberOnNetworkDialog\";\r\nimport { refreshPage } from \"../../Functions/CommonFunctions\";\r\n\r\nimport Timeline from \"../TimeLine/TimeLine\"; /* edited (TimeLine imported) */\r\n\r\nimport Table from \"react-bootstrap/Table\"; /* edited (Table imported) */\r\n\r\nimport Rating from '@material-ui/lab/Rating'; /* edited (Rating imported) */\r\n\r\n// var Barcode = require('react-barcode');\r\n\r\nconst OrderDetails = () => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [cost, setCost] = useState(\"\");\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const { id: orderId } = useParams();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [orderDetails, setOrderDetails] = useState({});\r\n    const [previousPage, setPreviousPage] = useState(null);\r\n    const [tripCost, setTripCost] = useState(null);\r\n    const [costSet, setCostSet] = useState(null);\r\n    const [receiverAddress, setReceiverAddress] = useState({});\r\n    const [startTracking, setStartTracking] = useState(false);\r\n\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            backgroundColor: 'lightgreen',\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold'\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            backgroundColor: 'lightgreen',\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold'\r\n        },\r\n        orderNumber: {\r\n            color: 'green',\r\n            fontStyle: 'italic',\r\n            marginLeft: '10px',\r\n            marginRight: '10px'\r\n        },\r\n        orderStatus: {\r\n            float: 'right'\r\n        },\r\n        tableElement: {\r\n            textAlign: 'right'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        let live = false;\r\n        if (startTracking === false) {\r\n            return;\r\n        }\r\n        const intervalId = setInterval(() => {\r\n            if (!live) {\r\n                live = true;\r\n                GetTransporterLocation(orderId).then((resp) => {\r\n                    live = false;\r\n                    let { TransporterLatLocation, TransporterLongLoc } = resp.data.server_response[0];\r\n                    if (TransporterLatLocation === null || TransporterLongLoc === null) {\r\n                        TransporterLatLocation = 0;\r\n                        TransporterLongLoc = 0;\r\n                    }\r\n                    setReceiverAddress({\r\n                        ...receiverAddress,\r\n                        long: TransporterLongLoc,\r\n                        lat: TransporterLatLocation\r\n                    });\r\n                });\r\n            }\r\n        }, 4000);\r\n        return () => clearInterval(intervalId);\r\n    }, [startTracking])\r\n    useEffect(() => {\r\n        checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                setCostSet(true);\r\n            } else {\r\n                setCostSet(false);\r\n            }\r\n        });\r\n\r\n        getOrderDetails(orderId).then((orderDetailsRes) => {\r\n\r\n            // console.log(orderDetailsRes); // temp test\r\n\r\n            setOrderDetails(orderDetailsRes);\r\n\r\n            setReceiverAddress({\r\n                otherDetails: orderDetailsRes.OtherDetailsDes,\r\n                phoneCustomer: orderDetailsRes.ReceiverAddressNum,\r\n                long: orderDetailsRes.LongReciver,\r\n                lat: orderDetailsRes.LatReciver\r\n            });\r\n        });\r\n\r\n        setPreviousPage(location.state?.currentPage);\r\n    }, []);\r\n\r\n    // console.log(orderDetails); /* temp test */\r\n\r\n    \r\n\r\n    if (typeof orderDetails === \"object\" && JSON.stringify(orderDetails) !== '{}') {\r\n        let {\r\n            OrderStatus, /* edited (OrderStatus added) */\r\n            DateLoad, /* edited (DateLoad added) */\r\n            DeliveryPrice, /* edited (DeliveryPrice added) */\r\n            CostLoad, /* edited (CostLoad added) */\r\n            AssignToName, /* edited (AssignToName added) */\r\n            AssignToNumber, /* edited (AssignToNumber added) */\r\n            transporterImgURL, /* edited (transporterImgURL added) */\r\n            customerImgURL, /* edited (customerImgURL added) */\r\n            FullNameCustomer, /* edited (FullNameCustomer added) */\r\n            LastNameCustomer, /* edited (LastNameCustomer added) */\r\n            deliveryWay,\r\n            HeightLoad,\r\n            DetailsLoad,\r\n            LengthLoad,\r\n            WeightLoad,\r\n            WidthLoad,\r\n            OtherDetails,\r\n            TypeLoad,\r\n            PhoneCustomer,\r\n            LongSender, LatSender,\r\n            AssignStatus, AssignedMemberName,\r\n            isAcceptDelivery,\r\n            SenderName,\r\n            ReceiverName\r\n        } = orderDetails;\r\n\r\n        let senderAddress = {\r\n            name: SenderName,\r\n            otherDetails: OtherDetails,\r\n            phoneCustomer: PhoneCustomer,\r\n            long: LongSender,\r\n            lat: LatSender\r\n        };\r\n\r\n        /* edited (timeline data + dummy data to test the timeline) */\r\n\r\n         let tempTransportationParties = [];\r\n\r\n         if (AssignToName !== null) {\r\n            tempTransportationParties = [\r\n                {\r\n                    type: 1,\r\n                    current: false,\r\n                    address: senderAddress,\r\n                    customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                    name: SenderName,\r\n                    imageURL: customerImgURL\r\n                },\r\n                {\r\n                    type: 2,\r\n                    current: false,\r\n                    address: null,\r\n                    name: AssignToName,\r\n                    phone: AssignToNumber,\r\n                    price: DeliveryPrice,\r\n                    current: true,\r\n                    imageURL: transporterImgURL\r\n                },\r\n                /*{\r\n                    type: 2,\r\n                    current: false,\r\n                    address: null\r\n                },\r\n                {\r\n                    type: 2,\r\n                    current: true,\r\n                    address: null\r\n                },*/\r\n                {\r\n                    type: 3,\r\n                    current: false,\r\n                    address: receiverAddress,\r\n                    name: ReceiverName\r\n                }\r\n            ]\r\n         } else {\r\n            tempTransportationParties = [\r\n                {\r\n                    type: 1,\r\n                    current: false,\r\n                    address: senderAddress,\r\n                    customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                    name: SenderName,\r\n                    imageURL: customerImgURL\r\n                },\r\n                /*{\r\n                    type: 2,\r\n                    current: false,\r\n                    address: null,\r\n                    phone: \"059999999999\",\r\n                    price: \"2020\",\r\n                    name: \"test\"\r\n                },\r\n                {\r\n                    type: 2,\r\n                    current: false,\r\n                    address: null,\r\n                    phone: \"059999999999\",\r\n                    price: \"2020\",\r\n                    name: \"test\"\r\n                },\r\n                {\r\n                    type: 2,\r\n                    current: true,\r\n                    address: null,\r\n                    phone: \"059999999999\",\r\n                    price: \"2020\",\r\n                    name: \"test\"\r\n                },*/\r\n                {\r\n                    type: 3,\r\n                    current: false,\r\n                    address: receiverAddress,\r\n                    name: ReceiverName\r\n                }\r\n            ]\r\n         }\r\n\r\n        function timeFormat(time) {\r\n          // Check correct time format and split into components\r\n          time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n          if (time.length > 1) { // If time format correct\r\n            time = time.slice (1);  // Remove full string match value\r\n            time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n            time[0] = +time[0] % 12 || 12; // Adjust hours\r\n          }\r\n          return time.join (''); // return adjusted time or original string\r\n        }\r\n\r\n        // console.log(\"------ previousPage: \" + previousPage); // temp test\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n        {orderDetails && <Container fluid>\r\n            test\r\n        </Container>}\r\n    </React.Fragment>\r\n        );\r\n    } else if (typeof orderDetails === \"string\") {\r\n        return (\r\n            <Alert status=\"error\" w=\"80%\" m=\"10px auto\">\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>{orderId}</AlertTitle>\r\n                <AlertDescription>{orderDetails}</AlertDescription>\r\n            </Alert>\r\n        );\r\n    } else {\r\n        return <Box height=\"400px\"><Loader /></Box>\r\n    }\r\n}\r\n\r\nexport default OrderDetails;\r\n"]},"metadata":{},"sourceType":"module"}