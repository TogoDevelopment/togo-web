{"ast":null,"code":"var _jsxFileName = \"/home/system/togo-web-test/src/components/Pagination/Pagination.jsx\";\nimport ReactPaginate from 'react-paginate';\nimport React from 'react';\nimport \"./Pagination.css\";\nexport default function PaginateComp(_ref) {\n  var totalNumOfRecs = _ref.totalNumOfRecs,\n      activePage = _ref.activePage,\n      pageSize = _ref.pageSize,\n      setActive = _ref.setActive;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, totalNumOfRecs / pageSize !== 0 && /*#__PURE__*/React.createElement(ReactPaginate, {\n    previousLabel: '<',\n    nextLabel: '>',\n    breakLabel: '...',\n    breakClassName: 'dots-break',\n    pageCount: Math.ceil(totalNumOfRecs / pageSize),\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    onPageChange: function onPageChange(data) {\n      setActive(data.selected);\n    },\n    initialPage: activePage,\n    containerClassName: 'paginate',\n    activeClassName: 'active-page',\n    nextClassName: \"next-li\",\n    pageClassName: \"page-li\",\n    previousClassName: \"prev-li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 45\n    }\n  }));\n}\n/* import React, { useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nfunction CustomPagination({totalNumOfRecs, activePage, pageSize, setActive}){\r\n\r\n    const pagesArr = useMemo(() => {\r\n        const numOfPages = Math.ceil(totalNumOfRecs / pageSize);\r\n        return { \r\n            numOfPages,\r\n            items: Array.from({length: numOfPages}, (_, i) => i + 1)\r\n        };\r\n    }, [totalNumOfRecs, pageSize]);\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Pagination style={{display: \"inline-flex\"}}>\r\n                <Pagination.First \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(0);\r\n                    }}\r\n                />\r\n                <Pagination.Prev \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(activePage - 1 < 0 ? 0 : activePage -1 );\r\n                    }}\r\n                />\r\n                {\r\n                    pagesArr.items.map((_, i) => {\r\n                        return (\r\n                            <Pagination.Item \r\n                                onClick={()=>setActive(i)}\r\n                                active={i === activePage}\r\n                            >\r\n                                {i + 1}\r\n                            </Pagination.Item>\r\n                        )}\r\n                    )\r\n                }\r\n                <Pagination.Next \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        let numOfPages = pagesArr.numOfPages - 1;\r\n                        setActive(activePage + 1 > numOfPages ? numOfPages : activePage + 1);\r\n                    }}\r\n                />\r\n                <Pagination.Last \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        setActive(pagesArr.numOfPages - 1);\r\n                    }}\r\n                />\r\n            </Pagination>\r\n        </div>\r\n    );\r\n}\r\n */","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Pagination/Pagination.jsx"],"names":["ReactPaginate","React","PaginateComp","totalNumOfRecs","activePage","pageSize","setActive","textAlign","Math","ceil","data","selected"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAEA,eAAe,SAASC,YAAT,OAAwE;AAAA,MAAjDC,cAAiD,QAAjDA,cAAiD;AAAA,MAAjCC,UAAiC,QAAjCA,UAAiC;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,SAAW,QAAXA,SAAW;AACnF,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,cAAc,GAAGE,QAAjB,KAA8B,CAA9B,iBAAmC,oBAAC,aAAD;AAChC,IAAA,aAAa,EAAE,GADiB;AAEhC,IAAA,SAAS,EAAE,GAFqB;AAGhC,IAAA,UAAU,EAAE,KAHoB;AAIhC,IAAA,cAAc,EAAE,YAJgB;AAKhC,IAAA,SAAS,EAAEG,IAAI,CAACC,IAAL,CAAUN,cAAc,GAAGE,QAA3B,CALqB;AAMhC,IAAA,oBAAoB,EAAE,CANU;AAOhC,IAAA,kBAAkB,EAAE,CAPY;AAQhC,IAAA,YAAY,EAAE,sBAACK,IAAD,EAAQ;AAClBJ,MAAAA,SAAS,CAACI,IAAI,CAACC,QAAN,CAAT;AACH,KAV+B;AAWhC,IAAA,WAAW,EAAEP,UAXmB;AAYhC,IAAA,kBAAkB,EAAE,UAZY;AAahC,IAAA,eAAe,EAAE,aAbe;AAchC,IAAA,aAAa,EAAC,SAdkB;AAehC,IAAA,aAAa,EAAC,SAfkB;AAgBhC,IAAA,iBAAiB,EAAC,SAhBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpC,CADJ;AAsBH;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ReactPaginate from 'react-paginate';\r\nimport React from 'react';\r\nimport \"./Pagination.css\";\r\n\r\nexport default function PaginateComp({totalNumOfRecs, activePage, pageSize, setActive}){\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n        {totalNumOfRecs / pageSize !== 0 && <ReactPaginate\r\n            previousLabel={'<'}\r\n            nextLabel={'>'}\r\n            breakLabel={'...'}\r\n            breakClassName={'dots-break'}\r\n            pageCount={Math.ceil(totalNumOfRecs / pageSize)}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={(data)=>{\r\n                setActive(data.selected);\r\n            }}\r\n            initialPage={activePage}\r\n            containerClassName={'paginate'}\r\n            activeClassName={'active-page'}\r\n            nextClassName=\"next-li\"\r\n            pageClassName=\"page-li\"\r\n            previousClassName=\"prev-li\"\r\n        />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* import React, { useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nfunction CustomPagination({totalNumOfRecs, activePage, pageSize, setActive}){\r\n\r\n    const pagesArr = useMemo(() => {\r\n        const numOfPages = Math.ceil(totalNumOfRecs / pageSize);\r\n        return { \r\n            numOfPages,\r\n            items: Array.from({length: numOfPages}, (_, i) => i + 1)\r\n        };\r\n    }, [totalNumOfRecs, pageSize]);\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Pagination style={{display: \"inline-flex\"}}>\r\n                <Pagination.First \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(0);\r\n                    }}\r\n                />\r\n                <Pagination.Prev \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(activePage - 1 < 0 ? 0 : activePage -1 );\r\n                    }}\r\n                />\r\n                {\r\n                    pagesArr.items.map((_, i) => {\r\n                        return (\r\n                            <Pagination.Item \r\n                                onClick={()=>setActive(i)}\r\n                                active={i === activePage}\r\n                            >\r\n                                {i + 1}\r\n                            </Pagination.Item>\r\n                        )}\r\n                    )\r\n                }\r\n                <Pagination.Next \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        let numOfPages = pagesArr.numOfPages - 1;\r\n                        setActive(activePage + 1 > numOfPages ? numOfPages : activePage + 1);\r\n                    }}\r\n                />\r\n                <Pagination.Last \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        setActive(pagesArr.numOfPages - 1);\r\n                    }}\r\n                />\r\n            </Pagination>\r\n        </div>\r\n    );\r\n}\r\n */"]},"metadata":{},"sourceType":"module"}