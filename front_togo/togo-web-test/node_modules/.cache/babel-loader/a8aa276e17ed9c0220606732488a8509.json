{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MinuteNumbers = exports.HourNumbers = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactSpring = require(\"react-spring\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _math = require(\"../helpers/math\");\n\nvar _numbers = require(\"./styles/numbers\");\n/*\n\tcan memoize components since `anim` object doesn't actually change\n*/\n\n\nfunction hours(_ref) {\n  var anim = _ref.anim,\n      mode = _ref.mode,\n      hour24Mode = _ref.hour24Mode;\n  var opacity = anim.opacity,\n      translateOuter = anim.translate,\n      translateInner = anim.translateInner;\n  var _CLOCK_VALUES$mode = _constants.CLOCK_VALUES[mode],\n      numbersOuter = _CLOCK_VALUES$mode.numbers,\n      numbersInner = _CLOCK_VALUES$mode.numbersInner;\n  return (0, _core.jsx)(_reactSpring.animated.div, {\n    style: {\n      opacity: opacity\n    },\n    css: _numbers.numbersWrapperStyle,\n    className: \"react-timekeeper__clock-hours\"\n  }, numbersOuter.map(function (val, i) {\n    return (0, _core.jsx)(_reactSpring.animated.span, {\n      css: (0, _numbers.numbersStyle)({\n        hour24Mode: hour24Mode\n      }),\n      key: val,\n      style: {\n        transform: translateOuter.interpolate(function (v) {\n          return (0, _math.transform)(i + 1, v);\n        })\n      }\n    }, val);\n  }), hour24Mode && numbersInner.map(function (val, i) {\n    return (0, _core.jsx)(_reactSpring.animated.span, {\n      css: (0, _numbers.numbersStyle)({\n        hour24Mode: hour24Mode,\n        inner: true\n      }),\n      key: val,\n      style: {\n        transform: translateInner.interpolate(function (v) {\n          return (0, _math.transform)(i + 1, v);\n        })\n      }\n    }, val);\n  }));\n}\n\nvar HourNumbers = (0, _react.memo)(hours, function (prev, next) {\n  return prev.mode === next.mode && prev.hour24Mode === next.hour24Mode;\n});\nexports.HourNumbers = HourNumbers;\n\nfunction minutes(_ref2) {\n  var anim = _ref2.anim;\n  var opacity = anim.opacity,\n      translate = anim.translate;\n  return (0, _core.jsx)(_reactSpring.animated.div, {\n    style: {\n      opacity: opacity\n    },\n    css: _numbers.numbersWrapperStyle,\n    className: \"react-timekeeper__clock-minutes\"\n  }, _constants.MINUTES.map(function (val, i) {\n    return (0, _core.jsx)(_reactSpring.animated.span, {\n      css: (0, _numbers.numbersStyle)({}),\n      key: val,\n      style: {\n        transform: translate.interpolate(function (v) {\n          return (0, _math.transform)(i + 1, v);\n        })\n      }\n    }, val);\n  }));\n}\n\nvar MinuteNumbers = (0, _react.memo)(minutes, function () {\n  return true;\n});\nexports.MinuteNumbers = MinuteNumbers;","map":null,"metadata":{},"sourceType":"script"}