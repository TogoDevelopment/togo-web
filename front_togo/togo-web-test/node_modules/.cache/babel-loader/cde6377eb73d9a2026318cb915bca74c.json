{"ast":null,"code":"import { getOwnerDocument } from \"@chakra-ui/utils\";\nimport { useEffect, useRef } from \"react\";\nimport { useCallbackRef } from \"./use-callback-ref\";\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props) {\n  var ref = props.ref,\n    handler = props.handler,\n    _props$enabled = props.enabled,\n    enabled = _props$enabled === void 0 ? true : _props$enabled;\n  var savedHandler = useCallbackRef(handler);\n  var stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var state = stateRef.current;\n  useEffect(function () {\n    if (!enabled) return;\n    var onPointerDown = function onPointerDown(e) {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n    var onMouseUp = function onMouseUp(event) {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    var onTouchEnd = function onTouchEnd(event) {\n      state.ignoreEmulatedMouseEvents = true;\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    var doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return function () {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\nfunction isValidEvent(event, ref) {\n  var _ref$current;\n  var target = event.target;\n  if (event.button > 0) return false; // if the event target is no longer in the document\n\n  if (target) {\n    var doc = getOwnerDocument(target);\n    if (!doc.body.contains(target)) return false;\n  }\n  return !((_ref$current = ref.current) != null && _ref$current.contains(target));\n}","map":{"version":3,"names":["getOwnerDocument","useEffect","useRef","useCallbackRef","useOutsideClick","props","ref","handler","_props$enabled","enabled","savedHandler","stateRef","isPointerDown","ignoreEmulatedMouseEvents","state","current","onPointerDown","e","isValidEvent","onMouseUp","event","onTouchEnd","doc","addEventListener","removeEventListener","_ref$current","target","button","body","contains"],"sources":["../../src/use-outside-click.ts"],"sourcesContent":["import { getOwnerDocument } from \"@chakra-ui/utils\"\nimport { RefObject, useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: any, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n  if (event.button > 0) return false\n  // if the event target is no longer in the document\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.body.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}