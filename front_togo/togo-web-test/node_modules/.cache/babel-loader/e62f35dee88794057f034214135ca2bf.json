{"ast":null,"code":"var _jsxFileName = \"/home/system/togo-web-test/src/components/StuckOrder.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport translate from \"../i18n/translate\";\nimport { MarkReturnedOrder } from \"../APIs/OrdersAPIs\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nexport default function StuckOrder(_ref) {\n  var orderId = _ref.orderId,\n      onSuccess = _ref.onSuccess;\n  var commentRef = useRef();\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    setShow(true);\n  };\n\n  useEffect(function () {\n    if (localStorage.getItem(\"Language\") === 'en') {\n      setIsEn(true);\n    } else {\n      setIsEn(false);\n    }\n  });\n  var styles = {\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      right: \"20px\",\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1rem\",\n      height: \"40px\"\n    }\n  };\n\n  function orderStuckHandler() {\n    MarkReturnedOrder(orderId).then(function (res) {\n      console.log(res.data);\n      onSuccess();\n      handleClose();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"border togo-button\",\n    style: {\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      width: \"150px\"\n    },\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, translate(\"TEMP.STUCK\")), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    style: styles.cardHeaderSm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, translate(\"TEMP.DESC\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Description\",\n    ref: commentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"w-25 togo-button\",\n    onClick: orderStuckHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, translate(\"TEMP.SUBMIT\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/StuckOrder.jsx"],"names":["React","useState","useEffect","useRef","translate","MarkReturnedOrder","Button","Modal","Form","StuckOrder","orderId","onSuccess","commentRef","handleClose","setShow","handleShow","localStorage","getItem","setIsEn","styles","cardHeaderSm","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","height","orderStuckHandler","then","res","console","log","data","marginRight","marginLeft","width","show"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,iBAApC;AAEA,eAAe,SAASC,UAAT,OAA0C;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,SAAY,QAAZA,SAAY;AAErD,MAAMC,UAAU,GAAGT,MAAM,EAAzB;;AAEA,MAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAED,IAAAA,OAAO,CAAC,IAAD,CAAP;AAAe,GAA1C;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,IAAzC,EAA+C;AAC3CC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAEO;AACHA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GANQ,CAAT;AAQA,MAAMC,MAAM,GAAG;AACXC,IAAAA,YAAY,EAAE;AACVC,MAAAA,QAAQ,EAAE,UADA;AAEVC,MAAAA,IAAI,EAAE,MAFI;AAGVC,MAAAA,KAAK,EAAE,MAHG;AAIVC,MAAAA,GAAG,EAAE,OAJK;AAKVC,MAAAA,UAAU,EAAE,0CALF;AAMVC,MAAAA,KAAK,EAAE,OANG;AAOVC,MAAAA,YAAY,EAAE,MAPJ;AAQVC,MAAAA,UAAU,EAAE,MARF;AASVC,MAAAA,QAAQ,EAAE,MATA;AAUVC,MAAAA,MAAM,EAAE;AAVE;AADH,GAAf;;AAeA,WAASC,iBAAT,GAA6B;AACzB1B,IAAAA,iBAAiB,CAACK,OAAD,CAAjB,CAA2BsB,IAA3B,CAAgC,UAACC,GAAD,EAAS;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAzB,MAAAA,SAAS;AACTE,MAAAA,WAAW;AACd,KAJD;AAKH;;AAED,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,KAAK,EAAE;AACHwB,MAAAA,WAAW,EAAE,KADV;AAEHC,MAAAA,UAAU,EAAE,KAFT;AAGHC,MAAAA,KAAK,EAAE;AAHJ,KAFX;AAOI,IAAA,OAAO,EAAExB,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKX,SAAS,CAAC,YAAD,CARd,CADJ,eAWI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEoC,IAAb;AAAmB,IAAA,MAAM,EAAE3B,WAA3B;AAAwC,IAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAA0B,IAAA,KAAK,EAAEM,MAAM,CAACC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,SAAS,CAAC,WAAD,CADd,CADJ,eAKI,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAA2C,IAAA,WAAW,EAAC,aAAvD;AAAqE,IAAA,GAAG,EAAEQ,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eAUI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,OAAO,EAAEmB,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK3B,SAAS,CAAC,aAAD,CADd,CAJJ,CAVJ,CAXJ,CADJ;AAiCH","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport translate from \"../i18n/translate\";\r\nimport { MarkReturnedOrder } from \"../APIs/OrdersAPIs\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\n\r\nexport default function StuckOrder({orderId, onSuccess}) {\r\n\r\n    const commentRef = useRef();\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => { setShow(true) }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"Language\") === 'en') {\r\n            setIsEn(true);\r\n        } else {\r\n            setIsEn(false);\r\n        }\r\n    })\r\n\r\n    const styles = {\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: \"20px\",\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1rem\",\r\n            height: \"40px\"\r\n        },\r\n    }\r\n\r\n    function orderStuckHandler() {\r\n        MarkReturnedOrder(orderId).then((res) => {\r\n            console.log(res.data);\r\n            onSuccess();\r\n            handleClose();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                className=\"border togo-button\"\r\n                style={{\r\n                    marginRight: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                    width: \"150px\"\r\n                }}\r\n                onClick={handleShow}>\r\n                {translate(\"TEMP.STUCK\")}\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Modal.Header closeButton style={styles.cardHeaderSm}>\r\n                    {translate(\"TEMP.DESC\")}\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className='mt-4'>\r\n\r\n                    <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Description\" ref={commentRef} />\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {/* <Button className=\"w-100\" variant=\"outline-secondary\" onClick={handleClose}>\r\n                        {translate(\"GENERAL.CLOSE\")}\r\n                    </Button> */}\r\n                    <Button className=\"w-25 togo-button\" onClick={orderStuckHandler}>\r\n                        {translate(\"TEMP.SUBMIT\")}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}