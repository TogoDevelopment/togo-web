{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/UploadImage/UploadAndEditImage.jsx\";\nimport React, { useRef, useState } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport AvatarEditor from 'react-avatar-editor';\nimport { Modal, Button, Form } from 'react-bootstrap';\nexport default function UploadAndEditImage(_ref) {\n  var _this = this;\n\n  var currentImage = _ref.currentImage,\n      setImage = _ref.setImage;\n\n  // console.log(currentImage)\n  var _React$useState = React.useState([{\n    \"data_url\": currentImage\n  }]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      images = _React$useState2[0],\n      setImages = _React$useState2[1];\n\n  var maxNumber = 1;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rotate = _useState4[0],\n      setRotate = _useState4[1];\n\n  var _useState5 = useState(1.0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      size = _useState6[0],\n      setSize = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      borderRadius = _useState8[0],\n      setBorderRadius = _useState8[1];\n\n  var editor = useRef(null);\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var onChange = function onChange(image) {\n    setImages(image);\n  };\n\n  var handleRotate = function handleRotate(event) {\n    setRotate(parseInt(event.target.value));\n  };\n\n  var handleSize = function handleSize(event) {\n    setSize(parseFloat(event.target.value));\n  };\n\n  var handleBorderRadius = function handleBorderRadius(event) {\n    setBorderRadius(parseInt(event.target.value));\n  };\n\n  var getImageUrl = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var dataUrl, result, blob, string, arr, resultSp;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dataUrl = editor.current.getImage().toDataURL();\n              _context.next = 3;\n              return fetch(dataUrl);\n\n            case 3:\n              result = _context.sent;\n              _context.next = 6;\n              return result.blob();\n\n            case 6:\n              blob = _context.sent;\n              string = window.URL.createObjectURL(blob);\n              arr = string.split(':');\n              resultSp = arr.splice(0, 1);\n              resultSp.push(arr.join(':')); // console.log(resultSp[1])\n\n              return _context.abrupt(\"return\", window.URL.createObjectURL(resultSp[1]));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getImageUrl() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Edit Image\"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    style: {\n      backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Upload Image\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImageUploading, {\n    multiple: true,\n    value: images,\n    onChange: onChange,\n    maxNumber: maxNumber,\n    dataURLKey: \"data_url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, function (_ref3) {\n    var imageList = _ref3.imageList,\n        onImageUpload = _ref3.onImageUpload,\n        onImageUpdate = _ref3.onImageUpdate,\n        onImageRemove = _ref3.onImageRemove,\n        isDragging = _ref3.isDragging,\n        dragProps = _ref3.dragProps;\n    return (\n      /*#__PURE__*/\n      // write your building UI\n      React.createElement(\"div\", {\n        className: \"upload__image-wrapper\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, images.length == 0 && /*#__PURE__*/React.createElement(Button, Object.assign({\n        className: \"w-100\",\n        style: {\n          height: \"300px\"\n        },\n        variant: isDragging ? \"secondary\" : \"outline-secondary\",\n        onClick: onImageUpload\n      }, dragProps, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 56\n        }\n      }), \"Click or Drop here \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"bi bi-card-image ms-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 56\n        }\n      })), imageList.map(function (image, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"image-item\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"image-item__btn-wrapper w-100 d-flex justify-content-center mb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outline-primary\",\n          className: \"w-25 me-1 rounded-pill\",\n          onClick: function onClick() {\n            return onImageUpdate(index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 45\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"outline-danger\",\n          className: \"w-25 rounded-pill\",\n          onClick: function onClick() {\n            return onImageRemove(index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 45\n          }\n        }, \"Remove\")), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(AvatarEditor, {\n          ref: editor,\n          image: image['data_url'],\n          width: 250,\n          height: 250,\n          border: 50,\n          borderRadius: borderRadius,\n          scale: size,\n          rotate: rotate,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Form.Label, {\n          className: \"mt-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 45\n          }\n        }, \"Rotate: \", rotate, \"\\xB0\"), /*#__PURE__*/React.createElement(Form.Range, {\n          value: rotate,\n          min: \"-180\",\n          max: \"180\",\n          step: \"1\",\n          onChange: handleRotate,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Form.Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 45\n          }\n        }, \"Size: \", size), /*#__PURE__*/React.createElement(Form.Range, {\n          value: size,\n          min: \"1\",\n          max: \"10\",\n          step: \"0.1\",\n          onChange: handleSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Form.Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 45\n          }\n        }, \"Border Radius: \", borderRadius), /*#__PURE__*/React.createElement(Form.Range, {\n          value: borderRadius,\n          min: \"0\",\n          max: \"250\",\n          step: \"1\",\n          onChange: handleBorderRadius,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          onClick: function onClick() {\n            setRotate(0);\n            setSize(1);\n            setBorderRadius(0);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 45\n          }\n        }, \"Reset\")));\n      }))\n    );\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Cancel \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: function onClick() {\n      handleClose();\n\n      if (editor) {\n        // This returns a HTMLCanvasElement, it can be made into a data URL or a blob,\n        // drawn on another canvas, or added to the DOM.\n        // const canvas = editor.current.getImage()\n        // console.log(editor.current.state.image.resource.currentSrc)\n        // console.log(\"------------------------\")\n        // setImage(editor.current.state.image.resource.currentSrc);\n        setImage(getImageUrl()); // console.log(getImageUrl());\n        // If you want the image resized to the canvas size (also a HTMLCanvasElement)\n        // const canvasScaled = editor.current.getImageScaledToCanvas()\n        // console.log(canvasScaled)\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Save \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 30\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/UploadImage/UploadAndEditImage.jsx"],"names":["React","useRef","useState","ImageUploading","AvatarEditor","Modal","Button","Form","UploadAndEditImage","currentImage","setImage","images","setImages","maxNumber","show","setShow","rotate","setRotate","size","setSize","borderRadius","setBorderRadius","editor","handleClose","handleShow","onChange","image","handleRotate","event","parseInt","target","value","handleSize","parseFloat","handleBorderRadius","getImageUrl","dataUrl","current","getImage","toDataURL","fetch","result","blob","string","window","URL","createObjectURL","arr","split","resultSp","splice","push","join","backgroundColor","imageList","onImageUpload","onImageUpdate","onImageRemove","isDragging","dragProps","length","height","map","index"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\n\r\nexport default function UploadAndEditImage({ currentImage, setImage }) {\r\n\r\n    // console.log(currentImage)\r\n\r\n    const [images, setImages] = React.useState([{ \"data_url\": currentImage }]);\r\n    const maxNumber = 1;\r\n    const [show, setShow] = useState(false);\r\n    const [rotate, setRotate] = useState(0);\r\n    const [size, setSize] = useState(1.0);\r\n    const [borderRadius, setBorderRadius] = useState(0);\r\n    const editor = useRef(null);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const onChange = (image) => {\r\n        setImages(image);\r\n    };\r\n\r\n    const handleRotate = (event) => {\r\n        setRotate(parseInt(event.target.value));\r\n    };\r\n\r\n    const handleSize = (event) => {\r\n        setSize(parseFloat(event.target.value));\r\n    };\r\n\r\n    const handleBorderRadius = (event) => {\r\n        setBorderRadius(parseInt(event.target.value));\r\n    };\r\n\r\n    const getImageUrl = async () => {\r\n        const dataUrl = editor.current.getImage().toDataURL()\r\n        const result = await fetch(dataUrl);\r\n        const blob = await result.blob();\r\n\r\n        const string = window.URL.createObjectURL(blob);\r\n        const arr = string.split(':');\r\n        const resultSp = arr.splice(0, 1);\r\n        resultSp.push(arr.join(':'));\r\n\r\n        // console.log(resultSp[1])\r\n\r\n        return window.URL.createObjectURL(resultSp[1]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Edit Image\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose} style={{ backgroundColor: \"rgba(0, 0, 0, 0.7)\" }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Upload Image</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ImageUploading\r\n                        multiple\r\n                        value={images}\r\n                        onChange={onChange}\r\n                        maxNumber={maxNumber}\r\n                        dataURLKey=\"data_url\"\r\n                    >\r\n                        {({\r\n                            imageList,\r\n                            onImageUpload,\r\n                            // onImageRemoveAll,\r\n                            onImageUpdate,\r\n                            onImageRemove,\r\n                            isDragging,\r\n                            dragProps,\r\n                        }) => (\r\n                            // write your building UI\r\n                            <div className=\"upload__image-wrapper\">\r\n                                {images.length == 0 && <Button\r\n                                    className='w-100'\r\n                                    style={{ height: \"300px\" }}\r\n                                    variant={isDragging ? \"secondary\" : \"outline-secondary\"}\r\n                                    onClick={onImageUpload}\r\n                                    {...dragProps}\r\n                                >\r\n                                    Click or Drop here <i className=\"bi bi-card-image ms-2\"></i>\r\n                                </Button>}\r\n                                {imageList.map((image, index) => (\r\n                                    <div key={index} className=\"image-item\">\r\n                                        <div className=\"image-item__btn-wrapper w-100 d-flex justify-content-center mb-2\">\r\n                                            <Button variant=\"outline-primary\" className='w-25 me-1 rounded-pill' onClick={() => onImageUpdate(index)}>Update</Button>\r\n                                            <Button variant=\"outline-danger\" className='w-25 rounded-pill' onClick={() => onImageRemove(index)}>Remove</Button>\r\n                                        </div>\r\n                                        <div>\r\n                                            <AvatarEditor\r\n                                                ref={editor}\r\n                                                image={image['data_url']}\r\n                                                width={250}\r\n                                                height={250}\r\n                                                border={50}\r\n                                                borderRadius={borderRadius}\r\n                                                scale={size}\r\n                                                rotate={rotate}\r\n                                            />\r\n                                            <Form.Label className=\"mt-2\">Rotate: {rotate}°</Form.Label>\r\n                                            <Form.Range value={rotate} min=\"-180\" max=\"180\" step=\"1\" onChange={handleRotate} />\r\n                                            <Form.Label>Size: {size}</Form.Label>\r\n                                            <Form.Range value={size} min=\"1\" max=\"10\" step=\"0.1\" onChange={handleSize} />\r\n                                            <Form.Label>Border Radius: {borderRadius}</Form.Label>\r\n                                            <Form.Range value={borderRadius} min=\"0\" max=\"250\" step=\"1\" onChange={handleBorderRadius} />\r\n                                            <Button onClick={() => { setRotate(0); setSize(1); setBorderRadius(0) }}>Reset</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </ImageUploading>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                        Cancel <i className=\"bi bi-x\"></i>\r\n                    </Button>\r\n                    <Button variant=\"outline-success\" onClick={() => {\r\n                        handleClose();\r\n                        if (editor) {\r\n                            // This returns a HTMLCanvasElement, it can be made into a data URL or a blob,\r\n                            // drawn on another canvas, or added to the DOM.\r\n\r\n                            // const canvas = editor.current.getImage()\r\n                            // console.log(editor.current.state.image.resource.currentSrc)\r\n\r\n                            // console.log(\"------------------------\")\r\n\r\n                            // setImage(editor.current.state.image.resource.currentSrc);\r\n                            setImage(getImageUrl());\r\n\r\n                            // console.log(getImageUrl());\r\n\r\n                            // If you want the image resized to the canvas size (also a HTMLCanvasElement)\r\n\r\n                            // const canvasScaled = editor.current.getImageScaledToCanvas()\r\n                            // console.log(canvasScaled)\r\n                        }\r\n                    }}>\r\n                        Save <i className=\"bi bi-check-all\"></i>\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}