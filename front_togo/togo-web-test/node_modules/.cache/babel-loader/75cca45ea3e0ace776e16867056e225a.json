{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/AdminPanel/WithdrawRequests.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport translate from \"../../i18n/translate\";\nimport { getCustomersWithdrawRequestsForAdmin, completeWithdrawRequest, rejectWithdrawRequest } from '../../APIs/AdminPanelApis';\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport { Box } from \"@chakra-ui/layout\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport { Button, Badge, Modal, Form, FloatingLabel, Spinner } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nexport default function WithdrawRequests() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refresh = _useState2[0],\n      setRefresh = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadingDone = _useState4[0],\n      setLoadingDone = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingReject = _useState6[0],\n      setLoadingReject = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rowId = _useState8[0],\n      setRowId = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      requests = _useState10[0],\n      setRequests = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isEmpty = _useState12[0],\n      setIsEmpty = _useState12[1]; // isEmpty used for showing the loader when there are no data yet\n\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showDoneModal = _useState14[0],\n      setShowDoneModal = _useState14[1];\n\n  var handleCloseDoneModal = function handleCloseDoneModal() {\n    return setShowDoneModal(false);\n  };\n\n  var handleShowDoneModal = function handleShowDoneModal() {\n    return setShowDoneModal(true);\n  };\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showRejectModal = _useState16[0],\n      setShowRejectModal = _useState16[1];\n\n  var handleCloseRejectModal = function handleCloseRejectModal() {\n    return setShowRejectModal(false);\n  };\n\n  var handleShowRejectModal = function handleShowRejectModal() {\n    return setShowRejectModal(true);\n  };\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      doneValidated = _useState18[0],\n      setDoneValidated = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      rejectValidated = _useState20[0],\n      setRejectValidated = _useState20[1];\n\n  useEffect(function () {\n    var isMounted = true;\n    getCustomersWithdrawRequestsForAdmin().then(function (res) {\n      var tempArr = [];\n      var resArr = res.data.server_response;\n\n      for (var i = 0; i < resArr.length; i++) {\n        tempArr.push({\n          \"id\": resArr[i].id,\n          \"ref\": resArr[i].ref,\n          \"date\": resArr[i].requestTime.split(\" \")[0],\n          \"time\": resArr[i].requestTime.split(\" \")[1],\n          \"customerName\": resArr[i].customerName,\n          \"amount\": resArr[i].amount,\n          \"status\": resArr[i].isCanceled == 1 ? \"Canceled\" : resArr[i].isRejected == 1 ? \"Rejected\" : resArr[i].isApproved == 1 ? \"Finished\" : \"Waiting\",\n          \"isActive_id\": resArr[i].isCanceled == 1 || resArr[i].isRejected == 1 || resArr[i].isApproved == 1 ? \"0\" + \"-\" + resArr[i].id : \"1\" + \"-\" + resArr[i].id\n        });\n      }\n\n      if (isMounted) {\n        setRequests(tempArr);\n\n        if (tempArr.length > 0) {\n          setIsEmpty(false);\n        } else {\n          setIsEmpty(true);\n        }\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, [refresh]);\n  /* table columns */\n\n  var columns = [{\n    dataField: 'date',\n    text: \"Request Date\"\n  }, {\n    dataField: 'time',\n    text: \"Request Time\",\n    formatter: timeFormatter\n  }, {\n    dataField: 'customerName',\n    text: \"Customer Name\"\n  }, {\n    dataField: 'amount',\n    text: \"Withdrawal Amount\",\n    formatter: amountFormatter\n  }, {\n    dataField: 'status',\n    text: \"Status\",\n    formatter: statusFormatter\n  }, {\n    dataField: 'ref',\n    text: \"Reference\",\n    formatter: refFormatter\n  }, {\n    dataField: 'isActive_id',\n    text: \"\",\n    formatter: doneFormatter\n  }];\n\n  function doneFormatter(value) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, value.split(\"-\")[0] == \"1\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      style: {\n        fontSize: \"0.7rem\",\n        width: \"40%\",\n        marginLeft: \"5px\",\n        marginRight: \"5px\"\n      },\n      onClick: function onClick() {\n        setRowId(value.split(\"-\")[1]);\n        handleShowDoneModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Excecute\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      style: {\n        fontSize: \"0.7rem\",\n        width: \"40%\",\n        marginLeft: \"5px\",\n        marginRight: \"5px\"\n      },\n      onClick: function onClick() {\n        setRowId(value.split(\"-\")[1]);\n        handleShowRejectModal();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Reject\")));\n  }\n\n  function refFormatter(value) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, value != null ? /*#__PURE__*/React.createElement(React.Fragment, null, value) : /*#__PURE__*/React.createElement(React.Fragment, null, \"-\"));\n  }\n  /* format each request status */\n\n\n  function statusFormatter(value) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Badge, {\n      bg: value == \"Waiting\" ? \"warning\" : value == \"Finished\" ? \"success\" : \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, value));\n  }\n\n  function amountFormatter(value) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#26a69a\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 18\n      }\n    }, value), \" \", \" NIS\");\n  }\n  /* time formatter, to convert from 24 hrs system to 12 hrs system */\n\n\n  function timeFormatter(value) {\n    var tempStr = value.split(\":\");\n    var time = value;\n    if (tempStr[0].length === 1) time = \"0\".concat(value); // Check correct time format and split into components\n\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n    if (time.length > 1) {\n      // If time format correct\n      time = time.slice(1); // Remove full string match value\n\n      time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n\n      time[0] = +time[0] % 12 || 12; // Adjust hours\n    }\n\n    return time.join(''); // return adjusted time or original string\n  }\n  /* clear the borders for table headers */\n\n\n  for (var i = 0; i < columns.length; i++) {\n    columns[i].headerStyle = {\n      border: 'none'\n    };\n  }\n\n  if (requests.length > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pe-4 ps-4 pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my-2 w-100 d-flex justify-content-center h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, \"Withdraw Requests\"), /*#__PURE__*/React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: requests,\n      columns: columns,\n      pagination: paginationFactory(),\n      rowClasses: \"custom-row-class\",\n      columnClasses: \"custom-column-class\",\n      filter: filterFactory(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      className: \"togo-custom-modal-lg\",\n      centered: true,\n      show: showDoneModal,\n      onHide: handleCloseDoneModal,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \"Approve Withdrawal Rquest\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      id: \"amountForm\",\n      validated: doneValidated,\n      noValidate: true,\n      onSubmit: function onSubmit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var formData = new FormData(event.target),\n            formDataObj = Object.fromEntries(formData.entries());\n        var form = event.currentTarget;\n\n        if (form.checkValidity() === true) {\n          setLoadingDone(true);\n          completeWithdrawRequest(rowId, formDataObj.ref).then(function (res) {\n            if (res.data.includes('error')) {\n              dispatch(toastNotification(\"Error\", res.data, \"error\"));\n            } else {\n              handleCloseDoneModal();\n              setRefresh(!refresh);\n              setLoadingDone(false);\n            }\n          });\n        }\n\n        setDoneValidated(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, \"Please enter reference number:\", /*#__PURE__*/React.createElement(FloatingLabel, {\n      controlId: \"floatingAmount\",\n      label: \"Reference number...\",\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"...\",\n      name: \"ref\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        width: \"45%\"\n      },\n      variant: \"outline-secondary\",\n      onClick: handleCloseDoneModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      style: {\n        width: \"45%\"\n      },\n      disabled: loadingDone ? true : false,\n      className: \"btn-grad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 33\n      }\n    }, \"Done\", loadingDone && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 53\n      }\n    })))))), /*#__PURE__*/React.createElement(Modal, {\n      className: \"togo-custom-modal-lg\",\n      centered: true,\n      show: showRejectModal,\n      onHide: handleCloseDoneModal,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, \"Reject Request\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      id: \"rejectForm\",\n      validated: rejectValidated,\n      noValidate: true,\n      onSubmit: function onSubmit(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        var form = event.currentTarget;\n\n        if (form.checkValidity() === true) {\n          setLoadingReject(true);\n          rejectWithdrawRequest(rowId).then(function (res) {\n            if (res.data.includes('error')) {\n              dispatch(toastNotification(\"Error\", res.data, \"error\"));\n            } else {\n              handleCloseRejectModal();\n              setRefresh(!refresh);\n              setLoadingReject(false);\n            }\n          });\n        }\n\n        setRejectValidated(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 25\n      }\n    }, \"Are you sure you want to reject this request?\", /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        width: \"45%\"\n      },\n      variant: \"outline-secondary\",\n      onClick: handleCloseRejectModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 33\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      style: {\n        width: \"45%\"\n      },\n      disabled: loadingReject ? true : false,\n      className: \"btn-grad\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 33\n      }\n    }, \"Yes\", loadingReject && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 55\n      }\n    })))))));\n  } else if (!isEmpty) {\n    return /*#__PURE__*/React.createElement(Box, {\n      height: \"400px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 36\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 d-flex justify-content-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 12\n    }\n  }, \"There are no withdraw Requests\");\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/AdminPanel/WithdrawRequests.jsx"],"names":["React","useEffect","useRef","useState","translate","getCustomersWithdrawRequestsForAdmin","completeWithdrawRequest","rejectWithdrawRequest","Link","Loader","Box","BootstrapTable","paginationFactory","filterFactory","textFilter","Button","Badge","Modal","Form","FloatingLabel","Spinner","useDispatch","toastNotification","WithdrawRequests","dispatch","refresh","setRefresh","loadingDone","setLoadingDone","loadingReject","setLoadingReject","rowId","setRowId","requests","setRequests","isEmpty","setIsEmpty","showDoneModal","setShowDoneModal","handleCloseDoneModal","handleShowDoneModal","showRejectModal","setShowRejectModal","handleCloseRejectModal","handleShowRejectModal","doneValidated","setDoneValidated","rejectValidated","setRejectValidated","isMounted","then","res","tempArr","resArr","data","server_response","i","length","push","id","ref","requestTime","split","customerName","amount","isCanceled","isRejected","isApproved","columns","dataField","text","formatter","timeFormatter","amountFormatter","statusFormatter","refFormatter","doneFormatter","value","fontSize","width","marginLeft","marginRight","color","tempStr","time","concat","toString","match","slice","join","headerStyle","border","event","preventDefault","stopPropagation","formData","FormData","target","formDataObj","Object","fromEntries","entries","form","currentTarget","checkValidity","includes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport translate from \"../../i18n/translate\";\r\nimport { getCustomersWithdrawRequestsForAdmin, completeWithdrawRequest, rejectWithdrawRequest } from '../../APIs/AdminPanelApis';\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport { Button, Badge, Modal, Form, FloatingLabel, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\n\r\nexport default function WithdrawRequests() {\r\n\r\n    let dispatch = useDispatch();\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [loadingDone, setLoadingDone] = useState(false);\r\n    const [loadingReject, setLoadingReject] = useState(false);\r\n    const [rowId, setRowId] = useState(\"\");\r\n    const [requests, setRequests] = useState([]);\r\n    const [isEmpty, setIsEmpty] = useState(false); // isEmpty used for showing the loader when there are no data yet\r\n    const [showDoneModal, setShowDoneModal] = useState(false);\r\n    const handleCloseDoneModal = () => setShowDoneModal(false);\r\n    const handleShowDoneModal = () => setShowDoneModal(true);\r\n    const [showRejectModal, setShowRejectModal] = useState(false);\r\n    const handleCloseRejectModal = () => setShowRejectModal(false);\r\n    const handleShowRejectModal = () => setShowRejectModal(true);\r\n    const [doneValidated, setDoneValidated] = useState(false);\r\n    const [rejectValidated, setRejectValidated] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        let isMounted = true;\r\n        getCustomersWithdrawRequestsForAdmin().then(res => {\r\n\r\n            const tempArr = [];\r\n            const resArr = res.data.server_response;\r\n\r\n            for (let i = 0; i < resArr.length; i++) {\r\n                tempArr.push({\r\n                    \"id\": resArr[i].id,\r\n                    \"ref\": resArr[i].ref,\r\n                    \"date\": resArr[i].requestTime.split(\" \")[0],\r\n                    \"time\": resArr[i].requestTime.split(\" \")[1],\r\n                    \"customerName\": resArr[i].customerName,\r\n                    \"amount\": resArr[i].amount,\r\n                    \"status\": resArr[i].isCanceled == 1 ? \"Canceled\" : resArr[i].isRejected == 1 ? \"Rejected\" : resArr[i].isApproved == 1 ? \"Finished\" : \"Waiting\",\r\n                    \"isActive_id\": (resArr[i].isCanceled == 1 || resArr[i].isRejected == 1 || resArr[i].isApproved == 1) ? \"0\" + \"-\" + resArr[i].id : \"1\" + \"-\" + resArr[i].id\r\n                });\r\n            }\r\n\r\n            if (isMounted) {\r\n                setRequests(tempArr);\r\n\r\n\r\n                if (tempArr.length > 0) {\r\n                    setIsEmpty(false)\r\n                } else {\r\n                    setIsEmpty(true)\r\n                }\r\n            }\r\n        })\r\n        return () => { isMounted = false };\r\n    }, [refresh]);\r\n\r\n    /* table columns */\r\n    const columns = [\r\n        {\r\n            dataField: 'date',\r\n            text: \"Request Date\"\r\n        },\r\n        {\r\n            dataField: 'time',\r\n            text: \"Request Time\",\r\n            formatter: timeFormatter\r\n        },\r\n        {\r\n            dataField: 'customerName',\r\n            text: \"Customer Name\"\r\n        },\r\n        {\r\n            dataField: 'amount',\r\n            text: \"Withdrawal Amount\",\r\n            formatter: amountFormatter\r\n        },\r\n        {\r\n            dataField: 'status',\r\n            text: \"Status\",\r\n            formatter: statusFormatter\r\n        },\r\n        {\r\n            dataField: 'ref',\r\n            text: \"Reference\",\r\n            formatter: refFormatter\r\n        },\r\n        {\r\n            dataField: 'isActive_id',\r\n            text: \"\",\r\n            formatter: doneFormatter\r\n        }\r\n    ];\r\n\r\n    function doneFormatter(value) {\r\n        return <>\r\n            {value.split(\"-\")[0] == \"1\" && <>\r\n                <Button variant=\"primary\" style={{ fontSize: \"0.7rem\", width: \"40%\", marginLeft: \"5px\", marginRight: \"5px\" }} onClick={() => {\r\n                    setRowId(value.split(\"-\")[1]);\r\n                    handleShowDoneModal();\r\n                }}>\r\n                    Excecute\r\n                </Button>\r\n\r\n                <Button variant=\"danger\" style={{ fontSize: \"0.7rem\", width: \"40%\", marginLeft: \"5px\", marginRight: \"5px\" }} onClick={() => {\r\n                    setRowId(value.split(\"-\")[1]);\r\n                    handleShowRejectModal();\r\n                }}>\r\n                    Reject\r\n                </Button>\r\n            </>}\r\n        </>\r\n    }\r\n\r\n    function refFormatter(value) {\r\n        return <>\r\n            {value != null ? <>{value}</> : <>{\"-\"}</>}\r\n        </>\r\n    }\r\n\r\n    /* format each request status */\r\n    function statusFormatter(value) {\r\n        return <>\r\n            <Badge bg={value == \"Waiting\" ? \"warning\" : value == \"Finished\" ? \"success\" : \"danger\"}>\r\n                {value}\r\n            </Badge>\r\n        </>\r\n    }\r\n\r\n    function amountFormatter(value) {\r\n        return <><span style={{ color: \"#26a69a\" }}>{value}</span> {\" NIS\"}</>;\r\n    }\r\n\r\n    /* time formatter, to convert from 24 hrs system to 12 hrs system */\r\n    function timeFormatter(value) {\r\n        const tempStr = value.split(\":\");\r\n        let time = value;\r\n        if (tempStr[0].length === 1)\r\n            time = \"0\".concat(value);\r\n\r\n        // Check correct time format and split into components\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) { // If time format correct\r\n            time = time.slice(1);  // Remove full string match value\r\n            time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n            time[0] = +time[0] % 12 || 12; // Adjust hours\r\n        }\r\n        return time.join(''); // return adjusted time or original string\r\n    }\r\n\r\n    /* clear the borders for table headers */\r\n    for (let i = 0; i < columns.length; i++) {\r\n        columns[i].headerStyle = { border: 'none' }\r\n    }\r\n    if (requests.length > 0) {\r\n        return (\r\n            <div className=\"pe-4 ps-4 pt-2\">\r\n                <div className='my-2 w-100 d-flex justify-content-center h3'>Withdraw Requests</div>\r\n                <BootstrapTable\r\n                    keyField='id'\r\n                    data={requests}\r\n                    columns={columns}\r\n                    pagination={paginationFactory()}\r\n                    rowClasses={\"custom-row-class\"}\r\n                    columnClasses={\"custom-column-class\"}\r\n                    filter={filterFactory()}\r\n                />\r\n\r\n                <Modal\r\n                    className='togo-custom-modal-lg'\r\n                    centered\r\n                    show={showDoneModal}\r\n                    onHide={handleCloseDoneModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Approve Withdrawal Rquest</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form id=\"amountForm\" validated={doneValidated} noValidate onSubmit={(event) => {\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n                            const formData = new FormData(event.target), formDataObj = Object.fromEntries(formData.entries());\r\n\r\n                            const form = event.currentTarget;\r\n                            if (form.checkValidity() === true) {\r\n                                setLoadingDone(true);\r\n\r\n                                completeWithdrawRequest(rowId, formDataObj.ref).then((res) => {\r\n\r\n                                    if (res.data.includes('error')) {\r\n                                        dispatch(toastNotification(\"Error\", res.data, \"error\"));\r\n                                    } else {\r\n                                        handleCloseDoneModal();\r\n\r\n                                        setRefresh(!refresh);\r\n\r\n                                        setLoadingDone(false);\r\n                                    }\r\n\r\n                                })\r\n\r\n                            }\r\n\r\n                            setDoneValidated(true);\r\n\r\n                        }}>\r\n                            Please enter reference number:\r\n                            <FloatingLabel controlId=\"floatingAmount\" label=\"Reference number...\" className=\"mt-1\">\r\n                                <Form.Control required type=\"text\" placeholder=\"...\" name=\"ref\" />\r\n                            </FloatingLabel>\r\n\r\n                            <hr className='my-3' />\r\n\r\n                            <div className='d-flex justify-content-between'>\r\n                                <Button style={{ width: \"45%\" }} variant=\"outline-secondary\" onClick={handleCloseDoneModal}>\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button type='submit' style={{ width: \"45%\" }} disabled={loadingDone ? true : false} className='btn-grad'>\r\n                                    Done\r\n                                    {loadingDone && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    className='togo-custom-modal-lg'\r\n                    centered\r\n                    show={showRejectModal}\r\n                    onHide={handleCloseDoneModal}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Reject Request</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form id=\"rejectForm\" validated={rejectValidated} noValidate onSubmit={(event) => {\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n\r\n                            const form = event.currentTarget;\r\n                            if (form.checkValidity() === true) {\r\n                                setLoadingReject(true);\r\n\r\n                                rejectWithdrawRequest(rowId).then((res) => {\r\n\r\n                                    if (res.data.includes('error')) {\r\n                                        dispatch(toastNotification(\"Error\", res.data, \"error\"));\r\n                                    } else {\r\n                                        handleCloseRejectModal();\r\n\r\n                                        setRefresh(!refresh);\r\n    \r\n                                        setLoadingReject(false);\r\n                                    }\r\n                                   \r\n                                })\r\n\r\n                            }\r\n\r\n                            setRejectValidated(true);\r\n\r\n                        }}>\r\n                            Are you sure you want to reject this request?\r\n\r\n                            <hr className='my-3' />\r\n\r\n                            <div className='d-flex justify-content-between'>\r\n                                <Button style={{ width: \"45%\" }} variant=\"outline-secondary\" onClick={handleCloseRejectModal}>\r\n                                    No\r\n                                </Button>\r\n                                <Button type='submit' style={{ width: \"45%\" }} disabled={loadingReject ? true : false} className='btn-grad'>\r\n                                    Yes\r\n                                    {loadingReject && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    } else if (!isEmpty) {\r\n        return <Box height=\"400px\"><Loader /></Box>\r\n    }\r\n\r\n    return <div className=\"w-100 d-flex justify-content-center mt-5\">There are no withdraw Requests</div>\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}