{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/AdminBoard.jsx\";\nimport { FormControl, InputGroup } from \"react-bootstrap\";\nimport translate from \"../i18n/translate\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { AddTeamMember, CreateTeam, GetTeam, GetTransporterTeam } from \"./APIs/OrdersAPIs\";\nimport { useIntl } from \"react-intl\";\nimport { Box } from \"@chakra-ui/layout\";\nimport DynamicTable from \"./DynamicTable/DynamicTable\";\nexport default function AdminBoard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      teams = _useState2[0],\n      setTeams = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      members = _useState4[0],\n      setMembers = _useState4[1];\n\n  var _useState5 = useState(-1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var intl = useIntl();\n  var createRef = useRef();\n  var ref = useRef();\n  var columns = [{\n    label: translate(\"ADMIN.TEAM_NAME\"),\n    key: \"Name\"\n  }];\n  var membersColumns = [{\n    label: translate(\"ADMIN.MEMBER_NAME\"),\n    key: \"FullName\"\n  }, {\n    label: translate(\"ADMIN.MOBILE_NUMBER\"),\n    key: \"PhoneNumber\"\n  }, {\n    label: translate(\"ADMIN.STATUS\"),\n    key: \"TeamStatus\"\n  }];\n  useEffect(function () {\n    GetTransporterTeam().then(function (res) {\n      setTeams(res.data.server_response);\n      setSelected(res.data.server_response.length ? 0 : -1);\n    });\n  }, []);\n  useEffect(function () {\n    if (selected !== -1) {\n      GetTeam(teams[selected].id).then(function (res) {\n        setMembers(res.data.server_response);\n      });\n    }\n  }, [selected]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      width: \"85%\",\n      margin: \"0 auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    w: \"50%\",\n    d: \"inline-block\",\n    borderInlineEnd: \"1px solid #dee2e6\",\n    paddingInlineEnd: \"1%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    d: \"flex\",\n    borderBottom: \"1px solid #dee2e6\",\n    pb: \"10px\",\n    mb: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    ref: createRef,\n    defaultValue: \"\",\n    style: {\n      flex: \"1\",\n      marginInlineEnd: \"10px\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"ADMIN.ENTER_TEAM_NAME\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      if (createRef.current.value.trim() === \"\") {\n        return;\n      }\n\n      CreateTeam(createRef.current.value).then(function () {\n        GetTransporterTeam().then(function (res) {\n          setTeams(res.data.server_response);\n          createRef.current.value = \"\";\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, translate(\"ADMIN.CREATE_TEAM\"))), /*#__PURE__*/React.createElement(DynamicTable, {\n    columns: columns,\n    data: teams,\n    onRowSelect: function onRowSelect(info, selectedIdx) {\n      setSelected(selectedIdx);\n    },\n    selected: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    w: \"49%\",\n    d: \"inline-block\",\n    verticalAlign: \"top\",\n    marginInlineStart: \"1%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    d: \"flex\",\n    borderBottom: \"1px solid #dee2e6\",\n    pb: \"10px\",\n    mb: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    ref: ref,\n    defaultValue: \"\",\n    style: {\n      flex: \"1\",\n      marginInlineEnd: \"10px\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"ADMIN.ENTER_MEMBER_NAME\"\n    }),\n    disabled: selected === -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      if (ref.current.value.trim() === \"\") {\n        return;\n      }\n\n      AddTeamMember(teams[selected].id, ref.current.value).then(function () {\n        GetTeam(teams[selected].id).then(function (res) {\n          setMembers(res.data.server_response);\n        });\n      });\n      ref.current.value = \"\";\n    },\n    disabled: selected === -1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, translate(\"ADMIN.ADD_MEMBER\"))), /*#__PURE__*/React.createElement(DynamicTable, {\n    columns: membersColumns,\n    data: members,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/AdminBoard.jsx"],"names":["FormControl","InputGroup","translate","React","useEffect","useRef","useState","Button","AddTeamMember","CreateTeam","GetTeam","GetTransporterTeam","useIntl","Box","DynamicTable","AdminBoard","teams","setTeams","members","setMembers","selected","setSelected","intl","createRef","ref","columns","label","key","membersColumns","then","res","data","server_response","length","id","display","width","margin","flex","marginInlineEnd","formatMessage","current","value","trim","info","selectedIdx"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAwC,iBAAxC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6CC,kBAA7C,QAAuE,mBAAvE;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,eAAe,SAASC,UAAT,GAAqB;AAChC,kBAA0BT,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BX,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOY,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCb,QAAQ,CAAC,CAAC,CAAF,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,IAAI,GAAGV,OAAO,EAApB;AACA,MAAMW,SAAS,GAAGlB,MAAM,EAAxB;AACA,MAAMmB,GAAG,GAAGnB,MAAM,EAAlB;AACA,MAAMoB,OAAO,GAAG,CAAC;AAACC,IAAAA,KAAK,EAAExB,SAAS,CAAC,iBAAD,CAAjB;AAAsCyB,IAAAA,GAAG,EAAE;AAA3C,GAAD,CAAhB;AACA,MAAMC,cAAc,GAAG,CACnB;AAACF,IAAAA,KAAK,EAAExB,SAAS,CAAC,mBAAD,CAAjB;AAAwCyB,IAAAA,GAAG,EAAE;AAA7C,GADmB,EAEnB;AAACD,IAAAA,KAAK,EAAExB,SAAS,CAAC,qBAAD,CAAjB;AAA0CyB,IAAAA,GAAG,EAAE;AAA/C,GAFmB,EAGnB;AAACD,IAAAA,KAAK,EAAExB,SAAS,CAAC,cAAD,CAAjB;AAAmCyB,IAAAA,GAAG,EAAE;AAAxC,GAHmB,CAAvB;AAMAvB,EAAAA,SAAS,CAAC,YAAI;AACVO,IAAAA,kBAAkB,GAAGkB,IAArB,CAA0B,UAACC,GAAD,EAAO;AAC7Bb,MAAAA,QAAQ,CAACa,GAAG,CAACC,IAAJ,CAASC,eAAV,CAAR;AACAX,MAAAA,WAAW,CAACS,GAAG,CAACC,IAAJ,CAASC,eAAT,CAAyBC,MAAzB,GAAkC,CAAlC,GAAsC,CAAC,CAAxC,CAAX;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOA7B,EAAAA,SAAS,CAAC,YAAI;AACV,QAAGgB,QAAQ,KAAK,CAAC,CAAjB,EAAmB;AACfV,MAAAA,OAAO,CAACM,KAAK,CAACI,QAAD,CAAL,CAAgBc,EAAjB,CAAP,CAA4BL,IAA5B,CAAiC,UAACC,GAAD,EAAS;AACtCX,QAAAA,UAAU,CAACW,GAAG,CAACC,IAAJ,CAASC,eAAV,CAAV;AACH,OAFD;AAGH;AACJ,GANQ,EAMN,CAACZ,QAAD,CANM,CAAT;AAQA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,OAAO,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE,KAA1B;AAAiCC,MAAAA,MAAM,EAAE;AAAzC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAC,KAAP;AAAa,IAAA,CAAC,EAAC,cAAf;AAA8B,IAAA,eAAe,EAAC,mBAA9C;AAAkE,IAAA,gBAAgB,EAAC,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAc,IAAA,YAAY,EAAC,mBAA3B;AAA+C,IAAA,EAAE,EAAC,MAAlD;AAAyD,IAAA,EAAE,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,GAAG,EAAEd,SADT;AAEI,IAAA,YAAY,EAAC,EAFjB;AAGI,IAAA,KAAK,EAAE;AAACe,MAAAA,IAAI,EAAE,GAAP;AAAYC,MAAAA,eAAe,EAAE;AAA7B,KAHX;AAII,IAAA,WAAW,EAAEjB,IAAI,CAACkB,aAAL,CAAmB;AAACN,MAAAA,EAAE,EAAC;AAAJ,KAAnB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,SADZ;AAEI,IAAA,OAAO,EAAE,mBAAM;AACX,UAAGX,SAAS,CAACkB,OAAV,CAAkBC,KAAlB,CAAwBC,IAAxB,OAAmC,EAAtC,EAAyC;AACrC;AACH;;AACDlC,MAAAA,UAAU,CAACc,SAAS,CAACkB,OAAV,CAAkBC,KAAnB,CAAV,CAAoCb,IAApC,CAAyC,YAAI;AACzClB,QAAAA,kBAAkB,GAAGkB,IAArB,CAA0B,UAACC,GAAD,EAAO;AAC7Bb,UAAAA,QAAQ,CAACa,GAAG,CAACC,IAAJ,CAASC,eAAV,CAAR;AACAT,UAAAA,SAAS,CAACkB,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;AACH,SAHD;AAIH,OALD;AAMH,KAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKxC,SAAS,CAAC,mBAAD,CAdd,CARJ,CADJ,eA0BI,oBAAC,YAAD;AACI,IAAA,OAAO,EAAEuB,OADb;AAEI,IAAA,IAAI,EAAET,KAFV;AAGI,IAAA,WAAW,EAAE,qBAAC4B,IAAD,EAAOC,WAAP,EAAqB;AAC9BxB,MAAAA,WAAW,CAACwB,WAAD,CAAX;AACH,KALL;AAMI,IAAA,QAAQ,EAAEzB,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,CADJ,eAoCI,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAC,KAAP;AAAa,IAAA,CAAC,EAAC,cAAf;AAA8B,IAAA,aAAa,EAAC,KAA5C;AAAkD,IAAA,iBAAiB,EAAC,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAc,IAAA,YAAY,EAAC,mBAA3B;AAA+C,IAAA,EAAE,EAAC,MAAlD;AAAyD,IAAA,EAAE,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,GAAG,EAAEI,GADT;AAEI,IAAA,YAAY,EAAC,EAFjB;AAGI,IAAA,KAAK,EAAE;AAACc,MAAAA,IAAI,EAAE,GAAP;AAAYC,MAAAA,eAAe,EAAE;AAA7B,KAHX;AAII,IAAA,WAAW,EAAEjB,IAAI,CAACkB,aAAL,CAAmB;AAACN,MAAAA,EAAE,EAAC;AAAJ,KAAnB,CAJjB;AAKI,IAAA,QAAQ,EAAEd,QAAQ,KAAK,CAAC,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,SADZ;AAEI,IAAA,OAAO,EAAE,mBAAI;AACT,UAAGI,GAAG,CAACiB,OAAJ,CAAYC,KAAZ,CAAkBC,IAAlB,OAA6B,EAAhC,EAAmC;AAC/B;AACH;;AACDnC,MAAAA,aAAa,CAACQ,KAAK,CAACI,QAAD,CAAL,CAAgBc,EAAjB,EAAqBV,GAAG,CAACiB,OAAJ,CAAYC,KAAjC,CAAb,CAAqDb,IAArD,CAA0D,YAAM;AAC5DnB,QAAAA,OAAO,CAACM,KAAK,CAACI,QAAD,CAAL,CAAgBc,EAAjB,CAAP,CAA4BL,IAA5B,CAAiC,UAACC,GAAD,EAAS;AACtCX,UAAAA,UAAU,CAACW,GAAG,CAACC,IAAJ,CAASC,eAAV,CAAV;AACH,SAFD;AAGH,OAJD;AAKAR,MAAAA,GAAG,CAACiB,OAAJ,CAAYC,KAAZ,GAAoB,EAApB;AACH,KAZL;AAaI,IAAA,QAAQ,EAAEtB,QAAQ,KAAK,CAAC,CAb5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeKlB,SAAS,CAAC,kBAAD,CAfd,CATJ,CADJ,eA4BI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE0B,cAAvB;AAAuC,IAAA,IAAI,EAAEV,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,CApCJ,CADJ;AAqEH","sourcesContent":["import { FormControl, InputGroup } from \"react-bootstrap\";\r\nimport translate from \"../i18n/translate\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AddTeamMember, CreateTeam, GetTeam, GetTransporterTeam } from \"./APIs/OrdersAPIs\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport DynamicTable from \"./DynamicTable/DynamicTable\";\r\n\r\nexport default function AdminBoard(){\r\n    const [teams, setTeams] = useState([]);\r\n    const [members, setMembers] = useState([]);\r\n    const [selected, setSelected] = useState(-1);\r\n    const intl = useIntl();\r\n    const createRef = useRef();\r\n    const ref = useRef();\r\n    const columns = [{label: translate(\"ADMIN.TEAM_NAME\"), key: \"Name\"}];\r\n    const membersColumns = [\r\n        {label: translate(\"ADMIN.MEMBER_NAME\"), key: \"FullName\"},\r\n        {label: translate(\"ADMIN.MOBILE_NUMBER\"), key: \"PhoneNumber\"}, \r\n        {label: translate(\"ADMIN.STATUS\"), key: \"TeamStatus\"}\r\n    ];\r\n    \r\n    useEffect(()=>{\r\n        GetTransporterTeam().then((res)=>{\r\n            setTeams(res.data.server_response);\r\n            setSelected(res.data.server_response.length ? 0 : -1);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(selected !== -1){\r\n            GetTeam(teams[selected].id).then((res) => {\r\n                setMembers(res.data.server_response);\r\n            });\r\n        }\r\n    }, [selected]);\r\n\r\n    return (\r\n        <div style={{display: \"block\", width: \"85%\", margin: \"0 auto\"}}>\r\n            <Box w=\"50%\" d=\"inline-block\" borderInlineEnd=\"1px solid #dee2e6\" paddingInlineEnd=\"1%\">\r\n                <Box d=\"flex\" borderBottom=\"1px solid #dee2e6\" pb=\"10px\" mb=\"10px\">\r\n                    <FormControl\r\n                        ref={createRef}\r\n                        defaultValue=\"\"\r\n                        style={{flex: \"1\", marginInlineEnd: \"10px\"}}\r\n                        placeholder={intl.formatMessage({id:\"ADMIN.ENTER_TEAM_NAME\"})}\r\n                    />\r\n                    \r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            if(createRef.current.value.trim() === \"\"){\r\n                                return;\r\n                            }\r\n                            CreateTeam(createRef.current.value).then(()=>{\r\n                                GetTransporterTeam().then((res)=>{\r\n                                    setTeams(res.data.server_response);\r\n                                    createRef.current.value = \"\";\r\n                                });\r\n                            });\r\n                        }}\r\n                    >\r\n                        {translate(\"ADMIN.CREATE_TEAM\")}\r\n                    </Button>\r\n                </Box>\r\n                <DynamicTable \r\n                    columns={columns} \r\n                    data={teams} \r\n                    onRowSelect={(info, selectedIdx)=>{\r\n                        setSelected(selectedIdx);\r\n                    }}\r\n                    selected={selected}\r\n                />\r\n            </Box>\r\n            <Box w=\"49%\" d=\"inline-block\" verticalAlign=\"top\" marginInlineStart=\"1%\">\r\n                <Box d=\"flex\" borderBottom=\"1px solid #dee2e6\" pb=\"10px\" mb=\"10px\">\r\n                    <FormControl\r\n                        ref={ref}\r\n                        defaultValue=\"\"\r\n                        style={{flex: \"1\", marginInlineEnd: \"10px\"}}\r\n                        placeholder={intl.formatMessage({id:\"ADMIN.ENTER_MEMBER_NAME\"})}\r\n                        disabled={selected === -1}\r\n                    />\r\n                    \r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={()=>{\r\n                            if(ref.current.value.trim() === \"\"){\r\n                                return;\r\n                            }\r\n                            AddTeamMember(teams[selected].id, ref.current.value).then(() => {\r\n                                GetTeam(teams[selected].id).then((res) => {\r\n                                    setMembers(res.data.server_response);\r\n                                });\r\n                            });\r\n                            ref.current.value = \"\";\r\n                        }}\r\n                        disabled={selected === -1}\r\n                    >\r\n                        {translate(\"ADMIN.ADD_MEMBER\")}\r\n                    </Button>\r\n                </Box>\r\n                <DynamicTable columns={membersColumns} data={members} />\r\n            </Box>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}