{"ast":null,"code":"import _defineProperty from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/i18n/provider.js\";\n\nimport React, { Fragment } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { LOCALES } from './locales';\nimport messages from './messages/index';\nexport var flattenMessages = function flattenMessages(nestedMessages) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  if (nestedMessages === null) {\n    return {};\n  }\n\n  return Object.keys(nestedMessages).reduce(function (messages, key) {\n    var value = nestedMessages[key];\n    var prefixedKey = prefix ? \"\".concat(prefix, \".\").concat(key) : key;\n\n    if (typeof value === 'string') {\n      Object.assign(messages, _defineProperty({}, prefixedKey, value));\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n};\n\nvar Provider = function Provider(_ref) {\n  var children = _ref.children,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? LOCALES.en : _ref$locale;\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: locale,\n    textComponent: Fragment,\n    messages: flattenMessages(messages[locale]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default Provider;","map":{"version":3,"sources":["/home/system/togo-web-test/src/i18n/provider.js"],"names":["React","Fragment","IntlProvider","LOCALES","messages","flattenMessages","nestedMessages","prefix","Object","keys","reduce","key","value","prefixedKey","assign","Provider","children","locale","en"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,OAAO,IAAMC,eAAe,GAAI,SAAnBA,eAAmB,CAACC,cAAD,EAAiC;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;;AAC7D,MAAID,cAAc,KAAK,IAAvB,EAA6B;AACzB,WAAO,EAAP;AACH;;AACD,SAAOE,MAAM,CAACC,IAAP,CAAYH,cAAZ,EAA4BI,MAA5B,CAAmC,UAACN,QAAD,EAAWO,GAAX,EAAmB;AACzD,QAAMC,KAAK,GAASN,cAAc,CAACK,GAAD,CAAlC;AACA,QAAME,WAAW,GAAGN,MAAM,aAAMA,MAAN,cAAgBI,GAAhB,IAAwBA,GAAlD;;AAEA,QAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC3BJ,MAAAA,MAAM,CAACM,MAAP,CAAcV,QAAd,sBAA2BS,WAA3B,EAAyCD,KAAzC;AACH,KAFD,MAEO;AACHJ,MAAAA,MAAM,CAACM,MAAP,CAAcV,QAAd,EAAwBC,eAAe,CAACO,KAAD,EAAQC,WAAR,CAAvC;AACH;;AAED,WAAOT,QAAP;AACH,GAXM,EAWJ,EAXI,CAAP;AAYH,CAhBM;;AAmBP,IAAMW,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,yBAAYC,MAAZ;AAAA,MAAYA,MAAZ,4BAAqBd,OAAO,CAACe,EAA7B;AAAA,sBACb,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAED,MAAtB;AACc,IAAA,aAAa,EAAEhB,QAD7B;AAEc,IAAA,QAAQ,EAAEI,eAAe,CAACD,QAAQ,CAACa,MAAD,CAAT,CAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKD,QAJL,CADa;AAAA,CAAjB;;AASA,eAAeD,QAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {IntlProvider} from 'react-intl';\r\n\r\nimport {LOCALES} from './locales';\r\nimport messages from './messages/index';\r\n\r\nexport const flattenMessages = ((nestedMessages, prefix = '') => {\r\n    if (nestedMessages === null) {\r\n        return {}\r\n    }\r\n    return Object.keys(nestedMessages).reduce((messages, key) => {\r\n        const value       = nestedMessages[key]\r\n        const prefixedKey = prefix ? `${prefix}.${key}` : key\r\n\r\n        if (typeof value === 'string') {\r\n            Object.assign(messages, { [prefixedKey]: value })\r\n        } else {\r\n            Object.assign(messages, flattenMessages(value, prefixedKey))\r\n        }\r\n\r\n        return messages\r\n    }, {})\r\n});\r\n\r\n\r\nconst Provider = ({children, locale = LOCALES.en}) => (\r\n    <IntlProvider locale={locale}\r\n                  textComponent={Fragment}\r\n                  messages={flattenMessages(messages[locale])}\r\n    >\r\n        {children}\r\n    </IntlProvider>\r\n);\r\n\r\nexport default Provider;\r\n"]},"metadata":{},"sourceType":"module"}