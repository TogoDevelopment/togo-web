{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\n  authDomain: \"togo-7f889.firebaseapp.com\",\n  projectId: \"togo-7f889\",\n  storageBucket: \"togo-7f889.appspot.com\",\n  messagingSenderId: \"861859089841\",\n  appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\n  measurementId: \"G-4DSC9GYT3S\"\n}; // Initialize Firebase\n\nvar firebaseApp = initializeApp(firebaseConfig);\nvar messaging = getMessaging(firebaseApp);\nvar REACT_APP_VAPID_KEY = process.env.REACT_APP_VAPID_KEY;\nvar publicKey = \"BHI-fuuzYLUn8CVGYxDxW9AvYstaE5j3PnuaDL1UNGNApjFm_sGTDmyuI6p3T8DpOsv2vtkWuzGa7Xbe-YdYp_U\"; // console.log(publicKey);\n\nexport var getUserToken = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var currentToken;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currentToken = ''; // console.log(messaging)\n\n            _context.prev = 1;\n            _context.next = 4;\n            return getToken(messaging, {\n              vapidKey: publicKey\n            });\n\n          case 4:\n            currentToken = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            console.log('An error occurred while retrieving token.', _context.t0);\n\n          case 10:\n            return _context.abrupt(\"return\", currentToken);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function getUserToken() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var onMessageListener = function onMessageListener() {\n  return new Promise(function (resolve) {\n    onMessage(messaging, function (payload) {\n      console.log(payload);\n      resolve(payload);\n    });\n  });\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/firebase.js"],"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","messaging","REACT_APP_VAPID_KEY","process","env","publicKey","getUserToken","currentToken","vapidKey","console","log","onMessageListener","Promise","resolve","payload"],"mappings":";;AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAkD,oBAAlD,C,CACA;AACA;AAEA;AACA;;AACA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,4BAFO;AAGnBC,EAAAA,SAAS,EAAE,YAHQ;AAInBC,EAAAA,aAAa,EAAE,wBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB,C,CAUA;;AACA,IAAMC,WAAW,GAAGZ,aAAa,CAACI,cAAD,CAAjC;AACA,IAAMS,SAAS,GAAGZ,YAAY,CAACW,WAAD,CAA9B;AACA,IAAQE,mBAAR,GAAgCC,OAAO,CAACC,GAAxC,CAAQF,mBAAR;AACA,IAAMG,SAAS,GAAG,yFAAlB,C,CAEA;;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,YADoB,GACL,EADK,EAExB;;AAFwB;AAAA;AAAA,mBAICjB,QAAQ,CAACW,SAAD,EAAY;AAAEO,cAAAA,QAAQ,EAAEH;AAAZ,aAAZ,CAJT;;AAAA;AAIpBE,YAAAA,YAJoB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWpBE,YAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;;AAXoB;AAAA,6CAajBH,YAbiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZD,YAAY;AAAA;AAAA;AAAA,GAAlB;AAgBP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAC7B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACrBtB,IAAAA,SAAS,CAACU,SAAD,EAAY,UAACa,OAAD,EAAa;AAC9BL,MAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACAD,MAAAA,OAAO,CAACC,OAAD,CAAP;AACH,KAHQ,CAAT;AAIH,GALD,CAD6B;AAAA,CAA1B","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\r\n    authDomain: \"togo-7f889.firebaseapp.com\",\r\n    projectId: \"togo-7f889\",\r\n    storageBucket: \"togo-7f889.appspot.com\",\r\n    messagingSenderId: \"861859089841\",\r\n    appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\r\n    measurementId: \"G-4DSC9GYT3S\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(firebaseApp);\r\nconst { REACT_APP_VAPID_KEY } = process.env;\r\nconst publicKey = \"BHI-fuuzYLUn8CVGYxDxW9AvYstaE5j3PnuaDL1UNGNApjFm_sGTDmyuI6p3T8DpOsv2vtkWuzGa7Xbe-YdYp_U\";\r\n\r\n// console.log(publicKey);\r\n\r\nexport const getUserToken = async (/* setTokenFound */) => {\r\n    let currentToken = '';\r\n    // console.log(messaging)\r\n    try {\r\n        currentToken = await getToken(messaging, { vapidKey: publicKey });\r\n        /* if (currentToken) {\r\n            setTokenFound(true);\r\n        } else {\r\n            setTokenFound(false);\r\n        } */\r\n    } catch (error) {\r\n        console.log('An error occurred while retrieving token.', error);\r\n    }\r\n    return currentToken;\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n    new Promise((resolve) => {\r\n        onMessage(messaging, (payload) => {\r\n            console.log(payload);\r\n            resolve(payload);\r\n        });\r\n    });"]},"metadata":{},"sourceType":"module"}