{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/TestComponent.jsx\";\nimport { Button, Form, Table, Card, Container, Row, Col } from \"react-bootstrap\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { testLogestechsArea\n/* , recordRechargeBalance */\n, getLogisticsVillagesTest, getAllCitiesTest, tempUpdateNewTransporterPrices, getLogestechsAreas } from \"../APIs/OrdersAPIs\";\nexport default function TestComponent() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      citiesAr = _useState2[0],\n      setCitiesAr = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      citiesEn = _useState4[0],\n      setCitiesEn = _useState4[1];\n\n  useEffect(function () {\n    getAllCitiesTest(1).then(function (res) {\n      // console.log(res.data)\n      setCitiesEn(res.data);\n    });\n    /* getAllCitiesTest(2).then(res => {\r\n        setCitiesAr(res.data);\r\n    }) */\n  });\n\n  var searchCity = function searchCity(cityName) {\n    getLogisticsVillagesTest(cityName).then(function (res) {\n      console.log(res.data);\n    });\n  };\n\n  var temp = function temp() {\n    tempUpdateNewTransporterPrices().then(function (res) {\n      console.log(res.data);\n    });\n  };\n\n  var temp2 = function temp2() {\n    getLogestechsAreas(\"ram\").then(function (res) {\n      console.log(res.data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return temp2();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"temp\")));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/TestComponent.jsx"],"names":["Button","Form","Table","Card","Container","Row","Col","React","useRef","useEffect","useState","testLogestechsArea","getLogisticsVillagesTest","getAllCitiesTest","tempUpdateNewTransporterPrices","getLogestechsAreas","TestComponent","citiesAr","setCitiesAr","citiesEn","setCitiesEn","then","res","data","searchCity","cityName","console","log","temp","temp2"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,GAA/C,EAAoDC,GAApD,QAA+D,iBAA/D;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC;AAAkB;AAA3B,EAA0DC,wBAA1D,EAAoFC,gBAApF,EAAsGC,8BAAtG,EAAsIC,kBAAtI,QAAgK,oBAAhK;AAGA,eAAe,SAASC,aAAT,GAAyB;AAEpC,kBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBQ,IAApB,CAAyB,UAAAC,GAAG,EAAI;AAC5B;AACAF,MAAAA,WAAW,CAACE,GAAG,CAACC,IAAL,CAAX;AACH,KAHD;AAKA;AACR;AACA;AACK,GATQ,CAAT;;AAWA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC7Bb,IAAAA,wBAAwB,CAACa,QAAD,CAAxB,CAAmCJ,IAAnC,CAAwC,UAAAC,GAAG,EAAI;AAC3CI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACH,KAFD;AAGH,GAJD;;AAMA,MAAMK,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfd,IAAAA,8BAA8B,GAAGO,IAAjC,CAAsC,UAAAC,GAAG,EAAI;AACzCI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACH,KAFD;AAGH,GAJD;;AAMA,MAAMM,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChBd,IAAAA,kBAAkB,CAAC,KAAD,CAAlB,CAA0BM,IAA1B,CAA+B,UAAAC,GAAG,EAAI;AAClCI,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACH,KAFD;AAGH,GAJD;;AAMA,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMM,KAAK,EAAX;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CADJ;AA6EH","sourcesContent":["import { Button, Form, Table, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { testLogestechsArea/* , recordRechargeBalance */, getLogisticsVillagesTest, getAllCitiesTest, tempUpdateNewTransporterPrices, getLogestechsAreas } from \"../APIs/OrdersAPIs\";\r\n\r\n\r\nexport default function TestComponent() {\r\n\r\n    const [citiesAr, setCitiesAr] = useState([]);\r\n    const [citiesEn, setCitiesEn] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllCitiesTest(1).then(res => {\r\n            // console.log(res.data)\r\n            setCitiesEn(res.data);\r\n        })\r\n\r\n        /* getAllCitiesTest(2).then(res => {\r\n            setCitiesAr(res.data);\r\n        }) */\r\n    })\r\n\r\n    const searchCity = (cityName) => {\r\n        getLogisticsVillagesTest(cityName).then(res => {\r\n            console.log(res.data);\r\n        })\r\n    }\r\n\r\n    const temp = () => {\r\n        tempUpdateNewTransporterPrices().then(res => {\r\n            console.log(res.data);\r\n        })\r\n    }\r\n\r\n    const temp2 = () => {\r\n        getLogestechsAreas(\"ram\").then(res => {\r\n            console.log(res.data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-5\">\r\n            <Row>\r\n                <Button onClick={() => temp2()}>\r\n                    temp\r\n                </Button>\r\n            </Row>\r\n\r\n            {/* <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            English\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Table striped bordered hover className=\"w-100\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>City ID</th>\r\n                                        <th>City Name</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        citiesEn.map((city, index) => {\r\n                                            return <tr key={index}>\r\n                                                <td>{city.cityId}</td>\r\n                                                <td>{city.name}</td>\r\n                                                <td>\r\n                                                    <Button onClick={() => {searchCity(city.name)}}>\r\n                                                        Search\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row> */}\r\n\r\n            {/* <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            Arabic\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Table striped bordered hover className=\"w-100\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>City ID</th>\r\n                                        <th>City Name</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        citiesAr.map((city, index) => {\r\n                                            return <tr key={index}>\r\n                                                <td>{city.cityId}</td>\r\n                                                <td>{city.name}</td>\r\n                                                <td></td>\r\n                                            </tr>\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row> */}\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}