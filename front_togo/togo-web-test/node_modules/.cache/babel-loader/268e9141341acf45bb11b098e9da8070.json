{"ast":null,"code":"import React from'react';import{Box,Popover,PopoverArrow,PopoverBody,PopoverCloseButton,PopoverContent,PopoverHeader,PopoverTrigger,Text,useDisclosure}from\"@chakra-ui/react\";import{LOCALES}from\"../../i18n\";import translate from\"../../i18n/translate\";import{changeLanguage}from\"../../Actions/GeneralActions\";import{useDispatch,useSelector}from\"react-redux\";var styles={languageItem:{p:\"0.2rem\",cursor:\"pointer\",_hover:{bg:\"#ebf1f9\"}}};export default function LanguageSelector(){var language=useSelector(function(state){return state.general.language;});var dispatch=useDispatch();var _useDisclosure=useDisclosure(),onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose,isOpen=_useDisclosure.isOpen;var handleClick=function handleClick(language){dispatch(changeLanguage(language));onClose();};return/*#__PURE__*/React.createElement(Popover,{isOpen:isOpen,onOpen:onOpen,onClose:onClose},/*#__PURE__*/React.createElement(PopoverTrigger,null,/*#__PURE__*/React.createElement(Box,{mx:7,cursor:\"pointer\"},LOCALES[language].text)),/*#__PURE__*/React.createElement(PopoverContent,{className:\"popover-content\",w:200,color:\"black\"},/*#__PURE__*/React.createElement(PopoverArrow,null),/*#__PURE__*/React.createElement(PopoverCloseButton,null),/*#__PURE__*/React.createElement(PopoverHeader,{textColor:\"left\",fontSize:\"15px\"},translate(\"HEADER.CHOOSE_LANGUAGE\")),/*#__PURE__*/React.createElement(PopoverBody,{fontSize:\"md\",fontWeight:100},Object.keys(LOCALES).map(function(key){var locale=LOCALES[key];return/*#__PURE__*/React.createElement(Text,Object.assign({key:key},styles.languageItem,{onClick:function onClick(){return handleClick(key);}}),locale.text);}))));};","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/LanguageSelector/LanguageSelector.js"],"names":["React","Box","Popover","PopoverArrow","PopoverBody","PopoverCloseButton","PopoverContent","PopoverHeader","PopoverTrigger","Text","useDisclosure","LOCALES","translate","changeLanguage","useDispatch","useSelector","styles","languageItem","p","cursor","_hover","bg","LanguageSelector","language","state","general","dispatch","onOpen","onClose","isOpen","handleClick","text","Object","keys","map","key","locale"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,GADJ,CACSC,OADT,CAEIC,YAFJ,CAGIC,WAHJ,CAIIC,kBAJJ,CAKIC,cALJ,CAMIC,aANJ,CAOIC,cAPJ,CAOoBC,IAPpB,CAQIC,aARJ,KASO,kBATP,CAUA,OAAQC,OAAR,KAAsB,YAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,OAAQC,cAAR,KAA6B,8BAA7B,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACXC,YAAY,CAAE,CACVC,CAAC,CAAE,QADO,CAEVC,MAAM,CAAE,SAFE,CAGVC,MAAM,CAAE,CACJC,EAAE,CAAE,SADA,CAHE,CADH,CAAf,CAUA,cAAe,SAASC,CAAAA,gBAAT,EAA4B,CACvC,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,OAAN,CAAcF,QAAlB,EAAN,CAA5B,CACA,GAAMG,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,mBAAoCJ,aAAa,EAAjD,CAAQiB,MAAR,gBAAQA,MAAR,CAAgBC,OAAhB,gBAAgBA,OAAhB,CAAyBC,MAAzB,gBAAyBA,MAAzB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACP,QAAD,CAAc,CAC9BG,QAAQ,CAACb,cAAc,CAACU,QAAD,CAAf,CAAR,CACAK,OAAO,GACV,CAHD,CAKA,mBACI,oBAAC,OAAD,EACI,MAAM,CAAEC,MADZ,CAEI,MAAM,CAAEF,MAFZ,CAGI,OAAO,CAAEC,OAHb,eAKI,oBAAC,cAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,MAAM,CAAC,SAAnB,EAA8BjB,OAAO,CAACY,QAAD,CAAP,CAAkBQ,IAAhD,CADJ,CALJ,cAQI,oBAAC,cAAD,EAAgB,SAAS,CAAC,iBAA1B,CAA4C,CAAC,CAAE,GAA/C,CAAoD,KAAK,CAAC,OAA1D,eACI,oBAAC,YAAD,MADJ,cAEI,oBAAC,kBAAD,MAFJ,cAGI,oBAAC,aAAD,EAAe,SAAS,CAAC,MAAzB,CACe,QAAQ,CAAC,MADxB,EACgCnB,SAAS,CAAC,wBAAD,CADzC,CAHJ,cAKI,oBAAC,WAAD,EAAa,QAAQ,CAAC,IAAtB,CAA2B,UAAU,CAAE,GAAvC,EACKoB,MAAM,CAACC,IAAP,CAAYtB,OAAZ,EAAqBuB,GAArB,CAAyB,SAAAC,GAAG,CAAI,CAC7B,GAAMC,CAAAA,MAAM,CAAGzB,OAAO,CAACwB,GAAD,CAAtB,CACA,mBAAO,oBAAC,IAAD,gBAAM,GAAG,CAAEA,GAAX,EAAoBnB,MAAM,CAACC,YAA3B,EACM,OAAO,CAAE,yBAAMa,CAAAA,WAAW,CAACK,GAAD,CAAjB,EADf,GACwCC,MAAM,CAACL,IAD/C,CAAP,CAEH,CAJA,CADL,CALJ,CARJ,CADJ,CAwBH","sourcesContent":["import React from 'react';\r\nimport {\r\n    Box, Popover,\r\n    PopoverArrow,\r\n    PopoverBody,\r\n    PopoverCloseButton,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverTrigger, Text,\r\n    useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport {LOCALES} from \"../../i18n\";\r\nimport translate from \"../../i18n/translate\";\r\nimport {changeLanguage} from \"../../Actions/GeneralActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst styles = {\r\n    languageItem: {\r\n        p: \"0.2rem\",\r\n        cursor: \"pointer\",\r\n        _hover: {\r\n            bg: \"#ebf1f9\"\r\n        }\r\n    },\r\n};\r\n\r\nexport default function LanguageSelector() {\r\n    const language = useSelector(state => state.general.language);\r\n    const dispatch = useDispatch();\r\n    const { onOpen, onClose, isOpen } = useDisclosure();\r\n\r\n    const handleClick = (language) => {\r\n        dispatch(changeLanguage(language));\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Popover\r\n            isOpen={isOpen}\r\n            onOpen={onOpen}\r\n            onClose={onClose}\r\n        >\r\n            <PopoverTrigger>\r\n                <Box mx={7} cursor=\"pointer\">{LOCALES[language].text}</Box>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"popover-content\" w={200} color=\"black\">\r\n                <PopoverArrow/>\r\n                <PopoverCloseButton/>\r\n                <PopoverHeader textColor=\"left\"\r\n                               fontSize=\"15px\">{translate(\"HEADER.CHOOSE_LANGUAGE\")}</PopoverHeader>\r\n                <PopoverBody fontSize=\"md\" fontWeight={100}>\r\n                    {Object.keys(LOCALES).map(key => {\r\n                        const locale = LOCALES[key];\r\n                        return <Text key={key} {...styles.languageItem}\r\n                                     onClick={() => handleClick(key)}>{locale.text}</Text>\r\n                    })}\r\n                </PopoverBody>\r\n            </PopoverContent>\r\n        </Popover>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}