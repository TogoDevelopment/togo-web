{"ast":null,"code":"import _toConsumableArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{convert24TimeTo12}from\"../../Util\";import{Box,Flex,Grid}from\"@chakra-ui/layout\";import styles from\"./Styles\";import Loader from\"../../components/Loader/Loader\";import{Input,InputGroup,InputLeftElement}from\"@chakra-ui/input\";import{Button}from\"@chakra-ui/button\";import{useDisclosure}from\"@chakra-ui/hooks\";import{Popover,PopoverArrow,PopoverCloseButton,PopoverContent,PopoverTrigger}from\"@chakra-ui/popover\";import TimeKeeper from\"react-timekeeper\";import{getWorkingTime,updateWorkingTime}from\"../../Actions/ProfileActions\";import{useDispatch,useSelector}from'react-redux';import{IoIosTime}from'react-icons/io';import translate from\"../../i18n/translate\";import'./WorkingTime.css';export default function WorkingTime(){var dispatch=useDispatch();var workingTime=useSelector(function(state){return state.profile.workingTime;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),workingTimeList=_useState2[0],setWorkingTimeList=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var onUpdateTime=function onUpdateTime(){dispatch(updateWorkingTime(workingTimeList));};useEffect(function(){dispatch(getWorkingTime());},[dispatch]);useEffect(function(){var SatTimeStart=workingTime.SatTimeStart,SatTimeFinish=workingTime.SatTimeFinish,SunTimeStart=workingTime.SunTimeStart,SunTimeFinish=workingTime.SunTimeFinish,MonTimeStart=workingTime.MonTimeStart,MonTimeFinish=workingTime.MonTimeFinish,TueTimeStart=workingTime.TueTimeStart,TueTimeFinish=workingTime.TueTimeFinish,WenTimeStart=workingTime.WenTimeStart,WenTimeFinish=workingTime.WenTimeFinish,ThuTimeStart=workingTime.ThuTimeStart,ThuTimeFinish=workingTime.ThuTimeFinish,FriTimeStart=workingTime.FriTimeStart,FriTimeFinish=workingTime.FriTimeFinish;var workingTimeList=[{title:translate(\"WORKING_TIME.SATURDAY\"),id:\"Sat\",from:formatTime(SatTimeStart),to:formatTime(SatTimeFinish)},{title:translate(\"WORKING_TIME.SUNDAY\"),id:\"Sun\",from:formatTime(SunTimeStart),to:formatTime(SunTimeFinish)},{title:translate(\"WORKING_TIME.MONDAY\"),id:\"Mon\",from:formatTime(MonTimeStart),to:formatTime(MonTimeFinish)},{title:translate(\"WORKING_TIME.TUESDAY\"),id:\"Tue\",from:formatTime(TueTimeStart),to:formatTime(TueTimeFinish)},{title:translate(\"WORKING_TIME.WEDNESDAY\"),id:\"Wen\",from:formatTime(WenTimeStart),to:formatTime(WenTimeFinish)},{title:translate(\"WORKING_TIME.THURSDAY\"),id:\"Thu\",from:formatTime(ThuTimeStart),to:formatTime(ThuTimeFinish)},{title:translate(\"WORKING_TIME.FRIDAY\"),id:\"Fri\",from:formatTime(FriTimeStart),to:formatTime(FriTimeFinish)}];setWorkingTimeList(workingTimeList);if(Object.keys(workingTime).length){setLoading(false);}},[workingTime]);var formatTime=function formatTime(value){if(!value)return null;var time=value.split(\" \")[1].slice(0,-3);return convert24TimeTo12(time);};var onTimeChange=function onTimeChange(dayId,type,value){var workingTimeListClone=_toConsumableArray(workingTimeList);var workingTimeClone=workingTimeListClone.find(function(workingTime){return workingTime.id===dayId;});workingTimeClone[type]=value;setWorkingTimeList(workingTimeListClone);};return/*#__PURE__*/React.createElement(Box,styles.content,loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(Grid,styles.workTimeContainer,/*#__PURE__*/React.createElement(Grid,Object.assign({gridColumn:\"1 / span 3\"},styles.workTimeItems,styles.subTitle),/*#__PURE__*/React.createElement(Box,{justifySelf:\"start\"},translate(\"WORKING_TIME.DAY\")),/*#__PURE__*/React.createElement(Box,null,translate(\"WORKING_TIME.FROM\")),/*#__PURE__*/React.createElement(Box,null,translate(\"WORKING_TIME.TO\"))),workingTimeList===null||workingTimeList===void 0?void 0:workingTimeList.map(function(workTime,index){return/*#__PURE__*/React.createElement(React.Fragment,{key:index},/*#__PURE__*/React.createElement(Box,styles.title,workTime.title),[{type:\"from\",popupPlacement:\"bottom-start\"},{type:\"to\",popupPlacement:\"left\"}].map(function(item){return/*#__PURE__*/React.createElement(Flex,{justifyContent:\"center\",key:\"\".concat(workTime.title,\"-\").concat(item.type)},/*#__PURE__*/React.createElement(InputGroup,{w:\"100%\"},/*#__PURE__*/React.createElement(InputLeftElement,Object.assign({value:2},styles.timerIcon,{pointerEvents:\"none\",children:/*#__PURE__*/React.createElement(IoIosTime,{color:\"gray.300\"})})),workTime[item.type]&&/*#__PURE__*/React.createElement(TimePickerPopover,{placement:item.popupPlacement,value:workTime[item.type],onChange:function onChange(value){return onTimeChange(workTime.id,item.type,value);}})));}));}),/*#__PURE__*/React.createElement(Button,Object.assign({onClick:onUpdateTime},styles.workTimeSubmitButton),translate(\"WORKING_TIME.UPDATE\"))));};var TimePickerPopover=function TimePickerPopover(_ref){var placement=_ref.placement,value=_ref.value,onChange=_ref.onChange;var _useDisclosure=useDisclosure(),onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose,isOpen=_useDisclosure.isOpen;var _useState5=useState(value),_useState6=_slicedToArray(_useState5,2),time=_useState6[0],setTime=_useState6[1];var onTimeChange=function onTimeChange(value){setTime(value);onChange&&onChange(value);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Popover,{isOpen:isOpen,onOpen:onOpen,onClose:onClose,placement:placement},/*#__PURE__*/React.createElement(PopoverTrigger,null,/*#__PURE__*/React.createElement(Input,{type:\"phone\",onChange:function onChange(_ref2){var value=_ref2.target.value;return onTimeChange(value);},value:time,textAlign:\"center\",pl:\"2rem\"})),/*#__PURE__*/React.createElement(PopoverContent,null,/*#__PURE__*/React.createElement(PopoverArrow,null),/*#__PURE__*/React.createElement(PopoverCloseButton,null),/*#__PURE__*/React.createElement(Box,{zIndex:5},/*#__PURE__*/React.createElement(TimeKeeper,{time:time,onChange:function onChange(data){return onTimeChange(data.formatted12);}})))));};","map":{"version":3,"sources":["/home/system/togo-web-test/src/Container/AccountDetails/WorkingTime.js"],"names":["React","useEffect","useState","convert24TimeTo12","Box","Flex","Grid","styles","Loader","Input","InputGroup","InputLeftElement","Button","useDisclosure","Popover","PopoverArrow","PopoverCloseButton","PopoverContent","PopoverTrigger","TimeKeeper","getWorkingTime","updateWorkingTime","useDispatch","useSelector","IoIosTime","translate","WorkingTime","dispatch","workingTime","state","profile","workingTimeList","setWorkingTimeList","loading","setLoading","onUpdateTime","SatTimeStart","SatTimeFinish","SunTimeStart","SunTimeFinish","MonTimeStart","MonTimeFinish","TueTimeStart","TueTimeFinish","WenTimeStart","WenTimeFinish","ThuTimeStart","ThuTimeFinish","FriTimeStart","FriTimeFinish","title","id","from","formatTime","to","Object","keys","length","value","time","split","slice","onTimeChange","dayId","type","workingTimeListClone","workingTimeClone","find","content","workTimeContainer","workTimeItems","subTitle","map","workTime","index","popupPlacement","item","timerIcon","workTimeSubmitButton","TimePickerPopover","placement","onChange","onOpen","onClose","isOpen","setTime","target","data","formatted12"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {convert24TimeTo12} from \"../../Util\";\r\nimport {Box, Flex, Grid} from \"@chakra-ui/layout\";\r\nimport styles from \"./Styles\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {Input, InputGroup, InputLeftElement} from \"@chakra-ui/input\";\r\nimport {Button} from \"@chakra-ui/button\";\r\nimport {useDisclosure} from \"@chakra-ui/hooks\";\r\nimport {Popover, PopoverArrow, PopoverCloseButton, PopoverContent, PopoverTrigger} from \"@chakra-ui/popover\";\r\nimport TimeKeeper from \"react-timekeeper\";\r\nimport {getWorkingTime, updateWorkingTime} from \"../../Actions/ProfileActions\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {IoIosTime} from 'react-icons/io';\r\nimport translate from \"../../i18n/translate\";\r\nimport './WorkingTime.css';\r\n\r\n\r\nexport default function WorkingTime() {\r\n    const dispatch = useDispatch();\r\n    const workingTime = useSelector(state => state.profile.workingTime);\r\n    const [workingTimeList, setWorkingTimeList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const onUpdateTime = () => {\r\n        dispatch(updateWorkingTime(workingTimeList));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getWorkingTime());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const {\r\n            SatTimeStart, SatTimeFinish, SunTimeStart, SunTimeFinish, MonTimeStart,\r\n            MonTimeFinish, TueTimeStart, TueTimeFinish, WenTimeStart, WenTimeFinish,\r\n            ThuTimeStart, ThuTimeFinish, FriTimeStart, FriTimeFinish\r\n        } = workingTime;\r\n\r\n        let workingTimeList = [\r\n            {\r\n                title: translate(\"WORKING_TIME.SATURDAY\"),\r\n                id: \"Sat\",\r\n                from: formatTime(SatTimeStart),\r\n                to: formatTime(SatTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.SUNDAY\"),\r\n                id: \"Sun\",\r\n                from: formatTime(SunTimeStart),\r\n                to: formatTime(SunTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.MONDAY\"),\r\n                id: \"Mon\",\r\n                from: formatTime(MonTimeStart),\r\n                to: formatTime(MonTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.TUESDAY\"),\r\n                id: \"Tue\",\r\n                from: formatTime(TueTimeStart),\r\n                to: formatTime(TueTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.WEDNESDAY\"),\r\n                id: \"Wen\",\r\n                from: formatTime(WenTimeStart),\r\n                to: formatTime(WenTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.THURSDAY\"),\r\n                id: \"Thu\",\r\n                from: formatTime(ThuTimeStart),\r\n                to: formatTime(ThuTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.FRIDAY\"),\r\n                id: \"Fri\",\r\n                from: formatTime(FriTimeStart),\r\n                to: formatTime(FriTimeFinish)\r\n            }\r\n        ];\r\n        setWorkingTimeList(workingTimeList);\r\n        if (Object.keys(workingTime).length) {\r\n            setLoading(false)\r\n        }\r\n    }, [workingTime]);\r\n\r\n    const formatTime = (value) => {\r\n        if (!value) return null;\r\n        let time = value.split(\" \")[1].slice(0, -3);\r\n        return convert24TimeTo12(time);\r\n    };\r\n\r\n    const onTimeChange = (dayId, type, value) => {\r\n        let workingTimeListClone = [...workingTimeList];\r\n        let workingTimeClone = workingTimeListClone.find(workingTime => workingTime.id === dayId);\r\n        workingTimeClone[type] = value;\r\n        setWorkingTimeList(workingTimeListClone)\r\n    };\r\n\r\n    return (\r\n        <Box {...styles.content}>\r\n            {loading ? <Loader/> :\r\n                <Grid {...styles.workTimeContainer}>\r\n                    <Grid gridColumn=\"1 / span 3\" {...styles.workTimeItems} {...styles.subTitle}>\r\n                        <Box justifySelf=\"start\">{translate(\"WORKING_TIME.DAY\")}</Box>\r\n                        <Box>{translate(\"WORKING_TIME.FROM\")}</Box>\r\n                        <Box>{translate(\"WORKING_TIME.TO\")}</Box>\r\n                    </Grid>\r\n                    {workingTimeList?.map((workTime, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <Box {...styles.title}>\r\n                                    {workTime.title}\r\n                                </Box>\r\n                                {\r\n                                    [\r\n                                        {\r\n                                            type: \"from\",\r\n                                            popupPlacement: \"bottom-start\"\r\n                                        },\r\n                                        {\r\n                                            type: \"to\",\r\n                                            popupPlacement: \"left\"\r\n                                        }\r\n                                    ].map(item =>\r\n                                        <Flex justifyContent=\"center\" key={`${workTime.title}-${item.type}`}>\r\n                                            <InputGroup w=\"100%\">\r\n                                                <InputLeftElement\r\n                                                    value={2}\r\n                                                    {...styles.timerIcon}\r\n                                                    pointerEvents=\"none\"\r\n                                                    children={<IoIosTime color=\"gray.300\"/>}\r\n                                                />\r\n                                                {workTime[item.type] &&\r\n                                                <TimePickerPopover placement={item.popupPlacement}\r\n                                                                   value={workTime[item.type]}\r\n                                                                   onChange={(value) => onTimeChange(workTime.id, item.type, value)}/>}\r\n                                            </InputGroup>\r\n                                        </Flex>\r\n                                    )\r\n                                }\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                    <Button onClick={onUpdateTime} {...styles.workTimeSubmitButton}>\r\n                        {translate(\"WORKING_TIME.UPDATE\")}\r\n                    </Button>\r\n                </Grid>\r\n            }\r\n        </Box>\r\n    )\r\n};\r\nconst TimePickerPopover = ({placement, value, onChange}) => {\r\n    const {onOpen, onClose, isOpen} = useDisclosure();\r\n    const [time, setTime] = useState(value);\r\n\r\n    const onTimeChange = (value) => {\r\n        setTime(value);\r\n        onChange && onChange(value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Popover\r\n                isOpen={isOpen}\r\n                onOpen={onOpen}\r\n                onClose={onClose}\r\n                placement={placement}\r\n            >\r\n                <PopoverTrigger>\r\n                    <Input type=\"phone\" onChange={({target: {value}}) => onTimeChange(value)} value={time}\r\n                           textAlign=\"center\"\r\n                           pl=\"2rem\"/>\r\n                </PopoverTrigger>\r\n                <PopoverContent>\r\n                    <PopoverArrow/>\r\n                    <PopoverCloseButton/>\r\n                    <Box zIndex={5}>\r\n                        <TimeKeeper\r\n                            time={time}\r\n                            onChange={(data) => onTimeChange(data.formatted12)}\r\n                        />\r\n                    </Box>\r\n                </PopoverContent>\r\n            </Popover>\r\n        </>\r\n    )\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}