{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { dataAttr, isRightClick } from \"@chakra-ui/utils\";\nimport { mergeRefs } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { useEventListeners } from \"./use-event-listeners\";\nfunction isValidElement(event) {\n  var element = event.target;\n  var tagName = element.tagName,\n    isContentEditable = element.isContentEditable;\n  return tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true;\n}\n/**\n * useClickable implements all the interactions of a native `button`\n * component with support for making it focusable even if it is disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\n\nexport function useClickable(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    htmlRef = _props.ref,\n    isDisabled = _props.isDisabled,\n    isFocusable = _props.isFocusable,\n    _props$clickOnEnter = _props.clickOnEnter,\n    clickOnEnter = _props$clickOnEnter === void 0 ? true : _props$clickOnEnter,\n    _props$clickOnSpace = _props.clickOnSpace,\n    clickOnSpace = _props$clickOnSpace === void 0 ? true : _props$clickOnSpace,\n    onMouseDown = _props.onMouseDown,\n    onMouseUp = _props.onMouseUp,\n    onClick = _props.onClick,\n    onKeyDown = _props.onKeyDown,\n    onKeyUp = _props.onKeyUp,\n    tabIndexProp = _props.tabIndex,\n    onMouseOver = _props.onMouseOver,\n    onMouseLeave = _props.onMouseLeave,\n    htmlProps = _objectWithoutPropertiesLoose(props, [\"ref\", \"isDisabled\", \"isFocusable\", \"clickOnEnter\", \"clickOnSpace\", \"onMouseDown\", \"onMouseUp\", \"onClick\", \"onKeyDown\", \"onKeyUp\", \"tabIndex\", \"onMouseOver\", \"onMouseLeave\"]);\n  /**\n   * We'll use this to track if the element is a button element\n   */\n\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isButton = _React$useState2[0],\n    setIsButton = _React$useState2[1];\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style its \":active\" style\n   */\n\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isPressed = _React$useState4[0],\n    setIsPressed = _React$useState4[1];\n  var listeners = useEventListeners();\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n\n  var refCallback = function refCallback(node) {\n    if (!node) return;\n    if (node.tagName !== \"BUTTON\") {\n      setIsButton(false);\n    }\n  };\n  var tabIndex = isButton ? tabIndexProp : tabIndexProp || 0;\n  var trulyDisabled = isDisabled && !isFocusable;\n  var handleClick = React.useCallback(function (event) {\n    if (isDisabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    var self = event.currentTarget;\n    self.focus();\n    onClick == null ? void 0 : onClick(event);\n  }, [isDisabled, onClick]);\n  var onDocumentKeyUp = React.useCallback(function (e) {\n    if (isPressed && isValidElement(e)) {\n      e.preventDefault();\n      e.stopPropagation();\n      setIsPressed(false); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n      listeners.remove(document, \"keyup\", onDocumentKeyUp, false);\n    }\n  }, [isPressed, listeners]);\n  var handleKeyDown = React.useCallback(function (event) {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (isDisabled || event.defaultPrevented || event.metaKey) {\n      return;\n    }\n    if (!isValidElement(event.nativeEvent) || isButton) return;\n    var shouldClickOnEnter = clickOnEnter && event.key === \"Enter\";\n    var shouldClickOnSpace = clickOnSpace && event.key === \" \";\n    if (shouldClickOnSpace) {\n      event.preventDefault();\n      setIsPressed(true);\n    }\n    if (shouldClickOnEnter) {\n      event.preventDefault();\n      var self = event.currentTarget;\n      self.click();\n    }\n    listeners.add(document, \"keyup\", onDocumentKeyUp, false);\n  }, [isDisabled, isButton, onKeyDown, clickOnEnter, clickOnSpace, listeners, onDocumentKeyUp]);\n  var handleKeyUp = React.useCallback(function (event) {\n    onKeyUp == null ? void 0 : onKeyUp(event);\n    if (isDisabled || event.defaultPrevented || event.metaKey) return;\n    if (!isValidElement(event.nativeEvent) || isButton) return;\n    var shouldClickOnSpace = clickOnSpace && event.key === \" \";\n    if (shouldClickOnSpace) {\n      event.preventDefault();\n      setIsPressed(false);\n      var self = event.currentTarget;\n      self.click();\n    }\n  }, [clickOnSpace, isButton, isDisabled, onKeyUp]);\n  var onDocumentMouseUp = React.useCallback(function (event) {\n    if (event.button !== 0) return;\n    setIsPressed(false);\n    listeners.remove(document, \"mouseup\", onDocumentMouseUp, false);\n  }, [listeners]);\n  var handleMouseDown = React.useCallback(function (event) {\n    if (isRightClick(event)) return;\n    if (isDisabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      return;\n    }\n    if (!isButton) {\n      setIsPressed(true);\n    }\n    var target = event.currentTarget;\n    target.focus({\n      preventScroll: true\n    });\n    listeners.add(document, \"mouseup\", onDocumentMouseUp, false);\n    onMouseDown == null ? void 0 : onMouseDown(event);\n  }, [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp]);\n  var handleMouseUp = React.useCallback(function (event) {\n    if (isRightClick(event)) return;\n    if (!isButton) {\n      setIsPressed(false);\n    }\n    onMouseUp == null ? void 0 : onMouseUp(event);\n  }, [onMouseUp, isButton]);\n  var handleMouseOver = React.useCallback(function (event) {\n    if (isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [isDisabled, onMouseOver]);\n  var handleMouseLeave = React.useCallback(function (event) {\n    if (isPressed) {\n      event.preventDefault();\n      setIsPressed(false);\n    }\n    onMouseLeave == null ? void 0 : onMouseLeave(event);\n  }, [isPressed, onMouseLeave]);\n  var ref = mergeRefs(htmlRef, refCallback);\n  if (isButton) {\n    return _extends({}, htmlProps, {\n      ref: ref,\n      type: \"button\",\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp,\n      onKeyUp: onKeyUp,\n      onKeyDown: onKeyDown,\n      onMouseOver: onMouseOver,\n      onMouseLeave: onMouseLeave\n    });\n  }\n  return _extends({}, htmlProps, {\n    ref: ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isPressed),\n    \"aria-disabled\": isDisabled ? \"true\" : undefined,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave\n  });\n}","map":{"version":3,"names":["dataAttr","isRightClick","mergeRefs","React","useEventListeners","isValidElement","event","element","target","tagName","isContentEditable","useClickable","props","_props","htmlRef","ref","isDisabled","isFocusable","_props$clickOnEnter","clickOnEnter","_props$clickOnSpace","clickOnSpace","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","tabIndexProp","tabIndex","onMouseOver","onMouseLeave","htmlProps","_objectWithoutPropertiesLoose","_React$useState","useState","_React$useState2","_slicedToArray","isButton","setIsButton","_React$useState3","_React$useState4","isPressed","setIsPressed","listeners","refCallback","node","trulyDisabled","handleClick","useCallback","stopPropagation","preventDefault","self","currentTarget","focus","onDocumentKeyUp","e","remove","document","handleKeyDown","defaultPrevented","metaKey","nativeEvent","shouldClickOnEnter","key","shouldClickOnSpace","click","add","handleKeyUp","onDocumentMouseUp","button","handleMouseDown","preventScroll","handleMouseUp","handleMouseOver","handleMouseLeave","_extends","type","undefined","disabled","role"],"sources":["../../src/use-clickable.ts"],"sourcesContent":["import { dataAttr, isRightClick } from \"@chakra-ui/utils\"\nimport { mergeRefs } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { useEventListeners } from \"./use-event-listeners\"\n\nexport interface UseClickableProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * If `true`, the element will be disabled.\n   * It will set the `disabled` HTML attribute\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will\n   * have only `aria-disabled` set to `true`\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   */\n  clickOnSpace?: boolean\n  /**\n   * The ref for the element\n   */\n  ref?: React.Ref<HTMLElement>\n}\n\nfunction isValidElement(event: KeyboardEvent): boolean {\n  const element = event.target as HTMLElement\n  const { tagName, isContentEditable } = element\n  return (\n    tagName !== \"INPUT\" && tagName !== \"TEXTAREA\" && isContentEditable !== true\n  )\n}\n\n/**\n * useClickable implements all the interactions of a native `button`\n * component with support for making it focusable even if it is disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\nexport function useClickable(props: UseClickableProps = {}) {\n  const {\n    ref: htmlRef,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: tabIndexProp,\n    onMouseOver,\n    onMouseLeave,\n    ...htmlProps\n  } = props\n  /**\n   * We'll use this to track if the element is a button element\n   */\n  const [isButton, setIsButton] = React.useState(true)\n\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style its \":active\" style\n   */\n  const [isPressed, setIsPressed] = React.useState(false)\n\n  const listeners = useEventListeners()\n\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n  const refCallback = (node: any) => {\n    if (!node) return\n    if (node.tagName !== \"BUTTON\") {\n      setIsButton(false)\n    }\n  }\n\n  const tabIndex = isButton ? tabIndexProp : tabIndexProp || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      const self = event.currentTarget as HTMLElement\n      self.focus()\n      onClick?.(event)\n    },\n    [isDisabled, onClick],\n  )\n\n  const onDocumentKeyUp = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (isPressed && isValidElement(e)) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        setIsPressed(false)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        listeners.remove(document, \"keyup\", onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyDown?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) {\n        return\n      }\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnEnter = clickOnEnter && event.key === \"Enter\"\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (shouldClickOnEnter) {\n        event.preventDefault()\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n\n      listeners.add(document, \"keyup\", onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = React.useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      onKeyUp?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) return\n\n      if (!isValidElement(event.nativeEvent) || isButton) return\n\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (shouldClickOnSpace) {\n        event.preventDefault()\n        setIsPressed(false)\n\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = React.useCallback(\n    (event: MouseEvent) => {\n      if (event.button !== 0) return\n      setIsPressed(false)\n      listeners.remove(document, \"mouseup\", onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isRightClick(event)) return\n\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      if (!isButton) {\n        setIsPressed(true)\n      }\n\n      const target = event.currentTarget as HTMLElement\n      target.focus({ preventScroll: true })\n\n      listeners.add(document, \"mouseup\", onDocumentMouseUp, false)\n\n      onMouseDown?.(event)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isRightClick(event)) return\n\n      if (!isButton) {\n        setIsPressed(false)\n      }\n\n      onMouseUp?.(event)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      onMouseOver?.(event)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = React.useCallback(\n    (event: React.MouseEvent<HTMLElement>) => {\n      if (isPressed) {\n        event.preventDefault()\n        setIsPressed(false)\n      }\n      onMouseLeave?.(event)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  const ref = mergeRefs(htmlRef, refCallback)\n\n  if (isButton) {\n    return {\n      ...htmlProps,\n      ref,\n      type: \"button\" as React.ButtonHTMLAttributes<any>[\"type\"],\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  }\n\n  return {\n    ...htmlProps,\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isPressed),\n    \"aria-disabled\": isDisabled ? (\"true\" as const) : undefined,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseLeave: handleMouseLeave,\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}