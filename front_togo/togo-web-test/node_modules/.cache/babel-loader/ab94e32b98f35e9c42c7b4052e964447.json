{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ClockHand;\nvar _core = require(\"@emotion/core\");\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactSpring = require(\"react-spring\");\nvar _utils = require(\"../helpers/utils\");\nvar _constants = require(\"../helpers/constants\");\nvar _clockHand = require(\"./styles/clock-hand\");\nvar _math = require(\"../helpers/math\");\nfunction rotate(r) {\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\n}\nfunction getAngle(mode, time) {\n  var increments = _constants.CLOCK_VALUES[mode].increments;\n  var value = (0, _utils.getTimeValue)(mode, time);\n  return value * (360 / increments);\n}\nfunction ClockHand(_ref) {\n  var mode = _ref.mode,\n    time = _ref.time;\n  var prevState = (0, _react.useRef)({\n    time: time,\n    mode: mode\n  });\n  var dragCount = (0, _react.useRef)(0); // clockhand positioning\n\n  var inner = time.hour > 0 && time.hour <= 12;\n  var handLength = (0, _constants.getClockHandLength)(mode, inner);\n  var circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\n  var circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner); // @ts-ignore\n\n  var _useSpring = (0, _reactSpring.useSpring)(function () {\n      return {\n        immediate: true,\n        rotation: getAngle(mode, time),\n        length: handLength,\n        position: circlePosition\n      };\n    }),\n    _useSpring2 = (0, _slicedToArray2.default)(_useSpring, 2),\n    anim = _useSpring2[0],\n    setAnim = _useSpring2[1];\n  var rotation = anim.rotation,\n    length = anim.length,\n    position = anim.position;\n  (0, _react.useEffect)(function () {\n    var current = rotation.value;\n    var next = getAngle(mode, time);\n    if (prevState.current.mode !== mode) {\n      dragCount.current = 0;\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\n\n      var finalAngle = (0, _math.calcAnimationAngle)(current, next);\n      setAnim({\n        immediate: false,\n        rotation: finalAngle,\n        length: handLength,\n        position: circlePosition\n      });\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\n      // time changed, no animation necessary - just update clockhand\n      prevState.current.time = time;\n      dragCount.current++;\n      /*\n      TODO - consider making this a config option?\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\n      change in time, just wait for mode to change\n      */\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\n      // \treturn\n      // }\n\n      setAnim({\n        immediate: true,\n        rotation: next,\n        length: handLength,\n        position: circlePosition\n      });\n    }\n  }, [circlePosition, handLength, mode, rotation, setAnim, time]); // mini circle on clockhand between increments on minutes\n\n  var value = (0, _utils.getTimeValue)(mode, time);\n  var showIntermediateValueDisplay;\n  if (mode === _constants.MODE.MINUTES && value % 5) {\n    showIntermediateValueDisplay = (0, _core.jsx)(\"circle\", {\n      className: \"react-timekeeper__hand-intermediate-circle\",\n      css: _clockHand.intermediateMinuteCircle,\n      cx: _constants.CLOCK_RADIUS,\n      cy: _constants.NUMBER_OUTER_POSITION,\n      r: 4\n    });\n  }\n  return (0, _core.jsx)(\"svg\", {\n    width: _constants.CLOCK_SIZE,\n    height: _constants.CLOCK_SIZE,\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"react-timekeeper__clock-hand\"\n  }, (0, _core.jsx)(_reactSpring.animated.g, {\n    transform: rotation.interpolate(function (a) {\n      return rotate(a);\n    })\n  }, (0, _core.jsx)(_reactSpring.animated.line, {\n    className: \"react-timekeeper__clock-hand\",\n    css: _clockHand.line,\n    x1: _constants.CLOCK_RADIUS,\n    y1: _constants.CLOCK_RADIUS,\n    x2: _constants.CLOCK_RADIUS,\n    y2: length,\n    strokeWidth: \"1\"\n  }), (0, _core.jsx)(\"circle\", {\n    className: \"react-timekeeper__hand-circle-center\",\n    css: _clockHand.centerCircle,\n    cx: _constants.CLOCK_RADIUS,\n    cy: _constants.CLOCK_RADIUS,\n    r: 1.5\n  }), (0, _core.jsx)(_reactSpring.animated.circle, {\n    className: \"react-timekeeper__hand-circle-outer\",\n    css: _clockHand.outerCircle,\n    cx: _constants.CLOCK_RADIUS,\n    cy: position,\n    r: circleRadius\n  }), showIntermediateValueDisplay));\n}","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","ClockHand","_core","_slicedToArray2","_react","_reactSpring","_utils","_constants","_clockHand","_math","rotate","r","concat","CLOCK_RADIUS","getAngle","mode","time","increments","CLOCK_VALUES","getTimeValue","_ref","prevState","useRef","dragCount","inner","hour","handLength","getClockHandLength","circlePosition","getClockHandCirclePosition","circleRadius","getClockHandCircleRadius","_useSpring","useSpring","immediate","rotation","length","position","_useSpring2","anim","setAnim","useEffect","current","next","finalAngle","calcAnimationAngle","isSameTime","showIntermediateValueDisplay","MODE","MINUTES","jsx","className","css","intermediateMinuteCircle","cx","cy","NUMBER_OUTER_POSITION","width","CLOCK_SIZE","height","viewBox","xmlns","animated","g","transform","interpolate","a","line","x1","y1","x2","y2","strokeWidth","centerCircle","circle","outerCircle"],"sources":["/home/system/togo-web-test/node_modules/react-timekeeper/lib/components/ClockHand.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ClockHand;\n\nvar _core = require(\"@emotion/core\");\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactSpring = require(\"react-spring\");\n\nvar _utils = require(\"../helpers/utils\");\n\nvar _constants = require(\"../helpers/constants\");\n\nvar _clockHand = require(\"./styles/clock-hand\");\n\nvar _math = require(\"../helpers/math\");\n\nfunction rotate(r) {\n  return \"rotate(\".concat(r, \" \").concat(_constants.CLOCK_RADIUS, \" \").concat(_constants.CLOCK_RADIUS, \")\");\n}\n\nfunction getAngle(mode, time) {\n  const increments = _constants.CLOCK_VALUES[mode].increments;\n  const value = (0, _utils.getTimeValue)(mode, time);\n  return value * (360 / increments);\n}\n\nfunction ClockHand({\n  mode,\n  time\n}) {\n  const prevState = (0, _react.useRef)({\n    time,\n    mode\n  });\n  const dragCount = (0, _react.useRef)(0); // clockhand positioning\n\n  const inner = time.hour > 0 && time.hour <= 12;\n  const handLength = (0, _constants.getClockHandLength)(mode, inner);\n  const circlePosition = (0, _constants.getClockHandCirclePosition)(mode, inner);\n  const circleRadius = (0, _constants.getClockHandCircleRadius)(mode, inner); // @ts-ignore\n\n  const _useSpring = (0, _reactSpring.useSpring)(() => {\n    return {\n      immediate: true,\n      rotation: getAngle(mode, time),\n      length: handLength,\n      position: circlePosition\n    };\n  }),\n        _useSpring2 = (0, _slicedToArray2.default)(_useSpring, 2),\n        anim = _useSpring2[0],\n        setAnim = _useSpring2[1];\n\n  const rotation = anim.rotation,\n        length = anim.length,\n        position = anim.position;\n  (0, _react.useEffect)(() => {\n    const current = rotation.value;\n    const next = getAngle(mode, time);\n\n    if (prevState.current.mode !== mode) {\n      dragCount.current = 0;\n      prevState.current.mode = mode; // mode changed, animate clockhand to next mode angle\n\n      const finalAngle = (0, _math.calcAnimationAngle)(current, next);\n      setAnim({\n        immediate: false,\n        rotation: finalAngle,\n        length: handLength,\n        position: circlePosition\n      });\n    } else if (!(0, _utils.isSameTime)(prevState.current.time, time)) {\n      // time changed, no animation necessary - just update clockhand\n      prevState.current.time = time;\n      dragCount.current++;\n      /*\n      TODO - consider making this a config option?\n      if on hour mode and `switchToMinuteOnHourSelect` is enabled, don't display\n      change in time, just wait for mode to change\n      */\n      // if (isHourMode(mode) && config.switchToMinuteOnHourSelect && dragCount.current < 2) {\n      // \treturn\n      // }\n\n      setAnim({\n        immediate: true,\n        rotation: next,\n        length: handLength,\n        position: circlePosition\n      });\n    }\n  }, [circlePosition, handLength, mode, rotation, setAnim, time]); // mini circle on clockhand between increments on minutes\n\n  const value = (0, _utils.getTimeValue)(mode, time);\n  let showIntermediateValueDisplay;\n\n  if (mode === _constants.MODE.MINUTES && value % 5) {\n    showIntermediateValueDisplay = (0, _core.jsx)(\"circle\", {\n      className: \"react-timekeeper__hand-intermediate-circle\",\n      css: _clockHand.intermediateMinuteCircle,\n      cx: _constants.CLOCK_RADIUS,\n      cy: _constants.NUMBER_OUTER_POSITION,\n      r: 4\n    });\n  }\n\n  return (0, _core.jsx)(\"svg\", {\n    width: _constants.CLOCK_SIZE,\n    height: _constants.CLOCK_SIZE,\n    viewBox: \"0 0 \".concat(_constants.CLOCK_SIZE, \" \").concat(_constants.CLOCK_SIZE),\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"react-timekeeper__clock-hand\"\n  }, (0, _core.jsx)(_reactSpring.animated.g, {\n    transform: rotation.interpolate(a => rotate(a))\n  }, (0, _core.jsx)(_reactSpring.animated.line, {\n    className: \"react-timekeeper__clock-hand\",\n    css: _clockHand.line,\n    x1: _constants.CLOCK_RADIUS,\n    y1: _constants.CLOCK_RADIUS,\n    x2: _constants.CLOCK_RADIUS,\n    y2: length,\n    strokeWidth: \"1\"\n  }), (0, _core.jsx)(\"circle\", {\n    className: \"react-timekeeper__hand-circle-center\",\n    css: _clockHand.centerCircle,\n    cx: _constants.CLOCK_RADIUS,\n    cy: _constants.CLOCK_RADIUS,\n    r: 1.5\n  }), (0, _core.jsx)(_reactSpring.animated.circle, {\n    className: \"react-timekeeper__hand-circle-outer\",\n    css: _clockHand.outerCircle,\n    cx: _constants.CLOCK_RADIUS,\n    cy: position,\n    r: circleRadius\n  }), showIntermediateValueDisplay));\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}