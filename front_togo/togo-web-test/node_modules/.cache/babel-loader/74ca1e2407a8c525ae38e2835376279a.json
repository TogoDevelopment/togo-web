{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers, ClientAssignOrder, checkTripCost } from \"../../APIs/OrdersAPIs\";\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\";\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/attachment.svg\";\nimport { IoIosGitNetwork } from 'react-icons/io';\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\nimport AddressDropdown from \"../AddressDropdown\";\nimport ClientDropdown from \"../ClientDropdown\";\nimport CreateAddress from \"../CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nimport { isTransporter } from \"../../Util\";\nimport SubmitAndAssignDialog from \"../SubmitAndAssignDialog\";\nimport \"../CreateNewOrder.css\";\nimport { useHistory } from \"react-router\";\nimport { imgBaseUrl } from \"../../Constants/GeneralCont\";\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport default function CreateNewOrder(props) {\n  var _this = this;\n\n  var history = useHistory();\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.5rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.2rem\"\n    }\n  };\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openConf = _useState4[0],\n      setOpenConf = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"1\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientInputValue = _useState12[0],\n      setClientInputValue = _useState12[1];\n  /* edited (clientInputValue added) */\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deliverAddresses = _useState14[0],\n      setDeliverAddresses = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allClients = _useState16[0],\n      setAllClients = _useState16[1];\n  /* edited (setAllClients added) Note: not all clients */\n\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedDeliveryAddress = _useState18[0],\n      setSelectedDeliveryAddress = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedPickUpAddress = _useState20[0],\n      setSelectedPickUpAddress = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedClient = _useState22[0],\n      setSelectedClient = _useState22[1];\n  /* edited (setSelectedClient added) */\n\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loading = _useState24[0],\n      setLoading = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      loadingSubmit = _useState26[0],\n      setLoadingSubmit = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      openAssignDialog = _useState28[0],\n      setOpenAssignDialog = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      assignAddressClint = _useState30[0],\n      setAssignAddressClint = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      assignDeliveryParams = _useState32[0],\n      setAssignDeliveryParams = _useState32[1];\n  /* edited (validation variables) */\n\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      beginValidation = _useState34[0],\n      setBeginValidation = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedClientCheck = _useState36[0],\n      setSelectedClientCheckShow = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      deliveryCostCheck = _useState38[0],\n      setDeliveryCostCheckShow = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      selectedPickUpAddressCheck = _useState40[0],\n      setSelectedPickUpAddressCheckShow = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      amountCheck = _useState42[0],\n      setAmountCheck = _useState42[1];\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      selectedDeliveryAddressCheck = _useState44[0],\n      setSelectedDeliveryAddressCheckShow = _useState44[1];\n\n  var _useState45 = useState([{\n    name: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    type: \"1\",\n    active: \"active\"\n  }, {\n    name: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    type: \"2\",\n    active: \"\"\n  }]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      deliverTypeArr = _useState46[0],\n      setDeliverTypeArr = _useState46[1];\n\n  var _useState47 = useState([]),\n      _useState48 = _slicedToArray(_useState47, 2),\n      myNetwork = _useState48[0],\n      setMyNetwork = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      networkInputValue = _useState50[0],\n      setNetworkInputValue = _useState50[1];\n\n  var _useState51 = useState(false),\n      _useState52 = _slicedToArray(_useState51, 2),\n      orderSubmitted = _useState52[0],\n      setOrderSubmitted = _useState52[1];\n\n  var _useState53 = useState(\"\"),\n      _useState54 = _slicedToArray(_useState53, 2),\n      createdOrderId = _useState54[0],\n      setCreatedOrderId = _useState54[1];\n\n  var _useState55 = useState(false),\n      _useState56 = _slicedToArray(_useState55, 2),\n      assignLoading = _useState56[0],\n      setAssignLoading = _useState56[1];\n\n  var _useState57 = useState([]),\n      _useState58 = _slicedToArray(_useState57, 2),\n      offers = _useState58[0],\n      setOffers = _useState58[1];\n\n  var _useState59 = useState([]),\n      _useState60 = _slicedToArray(_useState59, 2),\n      availableTransporters = _useState60[0],\n      aetAvailableTransporters = _useState60[1];\n\n  var deliveryCostRef = useRef();\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  /* useEffect(() => {\r\n        setNetworkLoading(true);\r\n        // console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n            setNetworkLoading(false);\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n      });\r\n    }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]); */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setLoading(true);\n      GetDefinedAddresses(inputValue).then(function (res) {\n        // console.log(res.data)\n        setLoading(false);\n        setDeliverAddresses(res.data);\n      });\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  /* edited (get all clients) */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setLoading(true);\n      GetTransporterClients().then(function (res) {\n        setLoading(false);\n        setAllClients(res.data.membersData.filter(function (client) {\n          return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n        }));\n      });\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, open]);\n  /* edited (show and hide validation error messages handles) */\n\n  function showValidation() {\n    var _codAmountRef$current, _codAmountRef$current2;\n\n    // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\n    if (isTransporter()) {\n      if (selectedClient) {\n        setSelectedClientCheckShow(false);\n      } else {\n        setSelectedClientCheckShow(true);\n      }\n\n      if (deliveryCostRef && deliveryCostRef.current.value > 0) {\n        setDeliveryCostCheckShow(false);\n      } else {\n        setDeliveryCostCheckShow(true);\n      }\n    }\n\n    if (selectedPickUpAddress) {\n      setSelectedPickUpAddressCheckShow(false);\n    } else {\n      setSelectedPickUpAddressCheckShow(true);\n    }\n\n    if (selectedDeliveryAddress) {\n      setSelectedDeliveryAddressCheckShow(false);\n    } else {\n      setSelectedDeliveryAddressCheckShow(true);\n    }\n\n    if (((_codAmountRef$current = codAmountRef.current) === null || _codAmountRef$current === void 0 ? void 0 : _codAmountRef$current.value) && ((_codAmountRef$current2 = codAmountRef.current) === null || _codAmountRef$current2 === void 0 ? void 0 : _codAmountRef$current2.value) >= 3) {\n      setAmountCheck(false);\n    } else {\n      setAmountCheck(true);\n    } // console.log(\"show validation\");\n\n  }\n\n  function hideValidation() {\n    setBeginValidation(false);\n    setSelectedClientCheckShow(false);\n    setDeliveryCostCheckShow(false);\n    setSelectedPickUpAddressCheckShow(false);\n    setSelectedDeliveryAddressCheckShow(false);\n    setAmountCheck(false); // console.log(\"hide validation\");\n  }\n\n  function setCloseAssignDialog() {\n    setOpenAssignDialog(false);\n  }\n\n  function setCloseMainDialog() {\n    setOpen(false);\n  }\n\n  var handleDeliveryTypeClick = function handleDeliveryTypeClick(index, type) {\n    setDeliveryType(type);\n\n    var tempArr = _toConsumableArray(deliverTypeArr);\n\n    for (var i = 0; i < tempArr.length; i++) {\n      tempArr[i].active = \"\";\n    }\n\n    tempArr[index].active = \"active\";\n    setDeliverTypeArr(tempArr);\n  };\n\n  var createOrderHandler = function createOrderHandler(DeliveryParams, CreatedBy, AddressClint) {\n    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy, JSON.stringify(AddressClint)).then(function (res) {\n      /* edited (test data) */\n      // console.log(res.data); // {\"server_response\":[{\"OrderId\":\"936\"}]}\n\n      /* to be edited (to print order by returned id) */\n      // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;   // <--------------------------------------------------------------------------- to test\n      //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n\n      /*  if (res.data == \"Blocked\") {\r\n           dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n       } */\n      var orderId = res.data.split('OrderId\":\"')[1].split('\"')[0]; // console.log(orderId);\n\n      setCreatedOrderId(orderId); // setOpenConf(true);\n\n      setOrderSubmitted(true);\n\n      if (!isTransporter()) {\n        getClientNetwork();\n        location.href = \"#availableOffers\";\n      }\n\n      setLoadingSubmit(false);\n\n      if (isTransporter()) {\n        history.push(\"/account/Order/\" + orderId);\n      }\n    });\n  };\n\n  var getClientNetwork = function getClientNetwork() {\n    GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then(function (res) {\n      setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\n    });\n  };\n\n  var getoOffers = function getoOffers() {\n    checkTripCost(orderId, isTransporter()).then(function (tripCostRes) {\n      // console.log(tripCostRes); // temp test\n      if (tripCostRes && tripCostRes !== \"CostNotSend\") {\n        setOffers(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\n        setCostSet(true);\n      } else {\n        setCostSet(false);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upperBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    style: {\n      height: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"h2 d-flex justify-content-center\",\n    style: {\n      marginTop: \"150px\",\n      marginBottom: \"120px\",\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\")), isTransporter() && /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  }, translate(\"TEMP.MY_CLIENTS\"))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"mb-3 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown, {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 45\n    }\n  }), beginValidation && selectedClientCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 88\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    style: {\n      marginTop: \"9px\"\n    },\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.DELIVERY_COST\"\n    }),\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 45\n    }\n  }), beginValidation && deliveryCostCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 86\n    }\n  }, \"required!\"))))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 37\n    }\n  }, translate(\"TEMP.ORDER_INFO\"))), /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 49\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"togo-dropdown shadow\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 57\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 61\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2]))))), packageType !== \"1\" && packageType !== \"2\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    style: {\n      marginTop: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 96\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    step: 5,\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.HEIGHT\"\n    }),\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 65\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WIDTH\"\n    }),\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.LENGTH\"\n    }),\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WEIGHT\"\n    }),\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 61\n    }\n  }))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 49\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggleButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 53\n    }\n  }, deliverTypeArr.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\"),\n      onClick: function onClick() {\n        handleDeliveryTypeClick(index, item.type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"innerRadio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 92\n      }\n    })), \" \", item.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 49\n    }\n  }, deliveryType === \"2\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    style: {\n      width: \"100%\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 57\n    }\n  }), beginValidation && amountCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 92\n    }\n  }, \"required! (minimum 3 NIS)\")))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 57\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedPickUpAddress,\n    selectedAddress: selectedPickUpAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 53\n    }\n  }), beginValidation && selectedPickUpAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 103\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 57\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedDeliveryAddress,\n    selectedAddress: selectedDeliveryAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 53\n    }\n  }), beginValidation && selectedDeliveryAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 105\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\",\n      marginTop: \"30px\"\n    },\n    className: \"btn-grad-circle p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 57\n    }\n  })))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 49\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2 rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.NOTES\"\n    }),\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 33\n    }\n  }, !orderSubmitted ? /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"30%\",\n      float: \"right\"\n    },\n    disabled: loadingSubmit,\n    onClick: function onClick() {\n      var _lengthRef$current, _widthRef$current, _heightRef$current, _weightRef$current;\n\n      setBeginValidation(true);\n      var CreatedBy = \"\";\n      var DeliveryParams = {\n        deliveryWay: deliveryType,\n        TypeLoad: packageType,\n        CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n        // 2 or 4\n        DetailsLoad: notesRef.current.value,\n        LengthLoad: ((_lengthRef$current = lengthRef.current) === null || _lengthRef$current === void 0 ? void 0 : _lengthRef$current.value) || \"\",\n        WidthLoad: ((_widthRef$current = widthRef.current) === null || _widthRef$current === void 0 ? void 0 : _widthRef$current.value) || \"\",\n        HeightLoad: ((_heightRef$current = heightRef.current) === null || _heightRef$current === void 0 ? void 0 : _heightRef$current.value) || \"\",\n        WeightLoad: ((_weightRef$current = weightRef.current) === null || _weightRef$current === void 0 ? void 0 : _weightRef$current.value) || \"\",\n        qrCode: \"\"\n      };\n      var AddressClint = {\n        IdCity: selectedPickUpAddress.cityId,\n        // from selected pick up address\n        IdArea: selectedPickUpAddress.areaId,\n        // from selected pick up address\n        OtherDetails: selectedPickUpAddress.details,\n        // details from selected pickup address\n        LatSender: selectedPickUpAddress.latitude,\n        // from selected pick up address\n        LongSender: selectedPickUpAddress.longitude,\n        //  from selected pick up address\n        SenderAddressId: selectedPickUpAddress.id,\n        // from selected pick up address\n        IdCityDes: selectedDeliveryAddress.cityId,\n        // from selected delivery to address\n        IdAreaDes: selectedDeliveryAddress.areaId,\n        // from selected delivery to address\n        OtherDetailsDes: selectedDeliveryAddress.details,\n        // details from selected delivery to address\n        LatReciver: selectedDeliveryAddress.latitude,\n        // from selected delivery to address\n        LongReciver: selectedDeliveryAddress.longitude,\n        // from selected delivery to address\n        ReciverAddressId: selectedDeliveryAddress.id,\n        // from selected delivery to address\n        ReceiverAddressNum: selectedDeliveryAddress.phone_number\n      };\n\n      if (isTransporter()) {\n        if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\n          setLoadingSubmit(true);\n          hideValidation();\n          CreatedBy = \"Transporter\";\n          DeliveryParams.ClientMobileNumber = selectedClient.PhoneNumber;\n          DeliveryParams.DeliveryPrice = deliveryCostRef.current.value;\n          createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\n        } else {\n          showValidation();\n        }\n      } else {\n        if (selectedPickUpAddress && selectedDeliveryAddress) {\n          setLoadingSubmit(true);\n          hideValidation();\n          CreatedBy = \"Client\";\n          createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\n        } else {\n          showValidation();\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 56\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 59\n    }\n  }), isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h6\",\n    style: {\n      color: \"#26a69a\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 49\n    }\n  }, isTransporter() ? translate(\"TEMP.SUCCISSFULLY_PUBLISHED\") : translate(\"TEMP.SUCCISSFULLY_PUBLISHED_CLIENT\")))))), orderSubmitted && !isTransporter() && /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 60\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 37\n    }\n  }, translate(\"TEMP.NETWORK_OFFERS\"))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"mt-5\",\n    id: \"availableOffers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 49\n    }\n  }, translate(\"TEMP.NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 49\n    }\n  }, translate(\"TEMP.PHONE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 49\n    }\n  }, translate(\"TEMP.PRICE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 41\n    }\n  }, myNetwork.map(function (member, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 60\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      // image\n      style: {\n        background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n        width: \"70px\",\n        height: \"70px\",\n        borderRadius: \"45%\"\n      },\n      className: \"align-self-center d-flex justify-content-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"60px\",\n        height: \"60px\",\n        objectFit: \"cover\"\n      },\n      className: \"rounded-circle align-self-center\",\n      src: \"\".concat(imgBaseUrl).concat(member.Image),\n      alt: member.PhoneNumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 65\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 57\n      }\n    }, member.FullName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 57\n      }\n    }, member.PhoneNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 57\n      }\n    }, member.deliveryPrice + \" NIS\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: assignLoading ? true : false,\n      className: \"btn-grad\",\n      onClick: function onClick() {\n        setAssignLoading(true);\n        ClientAssignOrder(createdOrderId, member.CustomerId, member.deliveryPrice).then(function (res) {\n          // console.log(res.data);\n          setAssignLoading(false);\n          history.push(\"/account/Order/\" + createdOrderId);\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 61\n      }\n    }, assignLoading && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 83\n      }\n    }), translate(\"TEMP.ASSIGN\"))));\n  }))))))), openAssignDialog && /*#__PURE__*/React.createElement(SubmitAndAssignDialog, {\n    onSuccess: function onSuccess() {\n      return props.onSuccess();\n    },\n    setCloseAssignDialog: setCloseAssignDialog,\n    setCloseMainDialog: setCloseMainDialog,\n    loadingSubmit: loadingSubmit,\n    assignDeliveryParams: assignDeliveryParams,\n    assignAddressClint: assignAddressClint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 29\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 29\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 29\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 29\n    }\n  }, \"Yes\"))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","Table","Card","Container","Row","Col","ListGroup","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","testBarq","GetAllClientNetworkMembers","ClientAssignOrder","checkTripCost","GetTransporterClients","IoIosGitNetwork","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","useDispatch","toastNotification","isTransporter","SubmitAndAssignDialog","useHistory","imgBaseUrl","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","history","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","dispatch","open","setOpen","openConf","setOpenConf","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","clientInputValue","setClientInputValue","deliverAddresses","setDeliverAddresses","allClients","setAllClients","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","openAssignDialog","setOpenAssignDialog","assignAddressClint","setAssignAddressClint","assignDeliveryParams","setAssignDeliveryParams","beginValidation","setBeginValidation","selectedClientCheck","setSelectedClientCheckShow","deliveryCostCheck","setDeliveryCostCheckShow","selectedPickUpAddressCheck","setSelectedPickUpAddressCheckShow","amountCheck","setAmountCheck","selectedDeliveryAddressCheck","setSelectedDeliveryAddressCheckShow","name","type","active","deliverTypeArr","setDeliverTypeArr","myNetwork","setMyNetwork","networkInputValue","setNetworkInputValue","orderSubmitted","setOrderSubmitted","createdOrderId","setCreatedOrderId","assignLoading","setAssignLoading","offers","setOffers","availableTransporters","aetAvailableTransporters","deliveryCostRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","timer","setTimeout","then","res","data","clearTimeout","membersData","filter","client","FullName","toLowerCase","replaceAll","includes","showValidation","current","value","hideValidation","setCloseAssignDialog","setCloseMainDialog","handleDeliveryTypeClick","index","tempArr","i","length","createOrderHandler","DeliveryParams","CreatedBy","AddressClint","JSON","stringify","orderId","split","getClientNetwork","location","href","push","cityId","getoOffers","tripCostRes","server_response","CostDetail","setCostSet","height","marginTop","marginBottom","formatMessage","id","width","eve","createElement","style","className","backgroundColor","map","item","localStorage","getItem","cursor","float","deliveryWay","TypeLoad","CostLoad","DetailsLoad","LengthLoad","WidthLoad","HeightLoad","WeightLoad","qrCode","IdCity","IdArea","areaId","OtherDetails","details","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","IdAreaDes","OtherDetailsDes","LatReciver","LongReciver","ReciverAddressId","ReceiverAddressNum","phone_number","ClientMobileNumber","PhoneNumber","DeliveryPrice","member","objectFit","Image","deliveryPrice","CustomerId","onSuccess","window"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { ReactComponent as SendIcon } from \"../../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers, ClientAssignOrder, checkTripCost } from \"../../APIs/OrdersAPIs\";\r\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\"\r\nimport { ReactComponent as FoodIcon } from \"../../assets/images/food.svg\";\r\nimport { ReactComponent as SmBoxIcon } from \"../../assets/images/smallBox.svg\";\r\nimport { ReactComponent as MedBoxIcon } from \"../../assets/images/medbox.svg\";\r\nimport { ReactComponent as BigBoxIcon } from \"../../assets/images/largebox.svg\";\r\nimport { ReactComponent as DeliveryTruckIcon } from \"../../assets/images/deliveryTruck.svg\";\r\nimport { ReactComponent as LocationIcon } from \"../../assets/images/location.svg\";\r\nimport { ReactComponent as AttachmentIcon } from \"../../assets/images/attachment.svg\";\r\nimport { IoIosGitNetwork } from 'react-icons/io';\r\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"../AddressDropdown\";\r\nimport ClientDropdown from \"../ClientDropdown\";\r\nimport CreateAddress from \"../CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\nimport { isTransporter } from \"../../Util\";\r\nimport SubmitAndAssignDialog from \"../SubmitAndAssignDialog\";\r\nimport \"../CreateNewOrder.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { imgBaseUrl } from \"../../Constants/GeneralCont\";\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport default function CreateNewOrder(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.2rem\"\r\n        },\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState(''); /* edited (clientInputValue added) */\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) Note: not all clients */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const [openAssignDialog, setOpenAssignDialog] = useState(false);\r\n    const [assignAddressClint, setAssignAddressClint] = useState(false);\r\n    const [assignDeliveryParams, setAssignDeliveryParams] = useState(false);\r\n\r\n    /* edited (validation variables) */\r\n\r\n    const [beginValidation, setBeginValidation] = useState(false);\r\n    const [selectedClientCheck, setSelectedClientCheckShow] = useState(false);\r\n    const [deliveryCostCheck, setDeliveryCostCheckShow] = useState(false);\r\n    const [selectedPickUpAddressCheck, setSelectedPickUpAddressCheckShow] = useState(false);\r\n    const [amountCheck, setAmountCheck] = useState(false);\r\n    const [selectedDeliveryAddressCheck, setSelectedDeliveryAddressCheckShow] = useState(false);\r\n\r\n    const [deliverTypeArr, setDeliverTypeArr] = useState([{ name: translate(\"ORDERS.\" + DeliveryTypes[1]), type: \"1\", active: \"active\" }, { name: translate(\"ORDERS.\" + DeliveryTypes[2]), type: \"2\", active: \"\" }]);\r\n\r\n    const [myNetwork, setMyNetwork] = useState([]);\r\n    const [networkInputValue, setNetworkInputValue] = useState('');\r\n\r\n    const [orderSubmitted, setOrderSubmitted] = useState(false);\r\n    const [createdOrderId, setCreatedOrderId] = useState(\"\");\r\n    const [assignLoading, setAssignLoading] = useState(false);\r\n    const [offers, setOffers] = useState([]);\r\n    const [availableTransporters, aetAvailableTransporters] = useState([]);\r\n\r\n    const deliveryCostRef = useRef();\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    /* useEffect(() => {\r\n\r\n        setNetworkLoading(true);\r\n\r\n        // console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\r\n\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n\r\n            setNetworkLoading(false);\r\n\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n        });\r\n\r\n    }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]); */\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setLoading(true);\r\n\r\n            GetDefinedAddresses(inputValue).then((res) => {\r\n                // console.log(res.data)\r\n                setLoading(false);\r\n                setDeliverAddresses(res.data);\r\n            });\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setLoading(true);\r\n\r\n            GetTransporterClients().then((res) => {\r\n                setLoading(false);\r\n\r\n                setAllClients(res.data.membersData.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n            });\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, open]);\r\n\r\n    /* edited (show and hide validation error messages handles) */\r\n\r\n    function showValidation() {\r\n        // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\r\n\r\n        if (isTransporter()) {\r\n            if (selectedClient) {\r\n                setSelectedClientCheckShow(false)\r\n            } else {\r\n                setSelectedClientCheckShow(true)\r\n            }\r\n\r\n            if (deliveryCostRef && deliveryCostRef.current.value > 0) {\r\n                setDeliveryCostCheckShow(false)\r\n            } else {\r\n                setDeliveryCostCheckShow(true)\r\n            }\r\n        }\r\n\r\n        if (selectedPickUpAddress) {\r\n            setSelectedPickUpAddressCheckShow(false)\r\n        } else {\r\n            setSelectedPickUpAddressCheckShow(true)\r\n        }\r\n\r\n        if (selectedDeliveryAddress) {\r\n            setSelectedDeliveryAddressCheckShow(false)\r\n        } else {\r\n            setSelectedDeliveryAddressCheckShow(true)\r\n        }\r\n\r\n        if (codAmountRef.current?.value && codAmountRef.current?.value >= 3) {\r\n            setAmountCheck(false)\r\n        } else {\r\n            setAmountCheck(true)\r\n        }\r\n\r\n        // console.log(\"show validation\");\r\n    }\r\n\r\n    function hideValidation() {\r\n        setBeginValidation(false);\r\n        setSelectedClientCheckShow(false);\r\n        setDeliveryCostCheckShow(false);\r\n        setSelectedPickUpAddressCheckShow(false);\r\n        setSelectedDeliveryAddressCheckShow(false);\r\n        setAmountCheck(false);\r\n\r\n        // console.log(\"hide validation\");\r\n    }\r\n\r\n    function setCloseAssignDialog() {\r\n        setOpenAssignDialog(false);\r\n    }\r\n\r\n    function setCloseMainDialog() {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDeliveryTypeClick = (index, type) => {\r\n        setDeliveryType(type);\r\n\r\n        let tempArr = [...deliverTypeArr];\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            tempArr[i].active = \"\";\r\n        }\r\n\r\n        tempArr[index].active = \"active\";\r\n\r\n        setDeliverTypeArr(tempArr);\r\n    }\r\n\r\n    const createOrderHandler = (DeliveryParams, CreatedBy, AddressClint) => {\r\n        CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy, JSON.stringify(AddressClint)).then((res) => {\r\n            /* edited (test data) */\r\n            // console.log(res.data); // {\"server_response\":[{\"OrderId\":\"936\"}]}\r\n\r\n            /* to be edited (to print order by returned id) */\r\n\r\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;   // <--------------------------------------------------------------------------- to test\r\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n            /*  if (res.data == \"Blocked\") {\r\n                 dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n             } */\r\n\r\n            let orderId = res.data.split('OrderId\":\"')[1].split('\"')[0];\r\n            // console.log(orderId);\r\n            setCreatedOrderId(orderId);\r\n\r\n            // setOpenConf(true);\r\n\r\n            setOrderSubmitted(true);\r\n\r\n            if (!isTransporter()) {\r\n                getClientNetwork();\r\n                location.href = \"#availableOffers\";\r\n            }\r\n\r\n            setLoadingSubmit(false);\r\n\r\n            if (isTransporter()) {\r\n                history.push(\"/account/Order/\" + orderId);\r\n            }\r\n        });\r\n    }\r\n\r\n    const getClientNetwork = () => {\r\n\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n        });\r\n    }\r\n\r\n    const getoOffers = () => {\r\n        checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n\r\n            // console.log(tripCostRes); // temp test\r\n\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                setOffers(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                setCostSet(true);\r\n            } else {\r\n                setCostSet(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* upper background */}\r\n            <div className=\"upperBackground\">\r\n            </div>\r\n\r\n            <div className=\"mainContainer\" style={{ height: \"80%\" }}>\r\n                <Container fluid className=\"pb-5\">\r\n                    <Row className=\"h2 d-flex justify-content-center\" style={{ marginTop: \"150px\", marginBottom: \"120px\", color: \"#26a69a\" }}>\r\n                    {translate(\"ORDERS.CREATE_ORDER\")}\r\n                    </Row>\r\n\r\n                    {/* ------------------( transporter clients )------------------ */}\r\n                    {isTransporter() && <Row className=\"mb-5\">\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"TEMP.MY_CLIENTS\")}</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className=\"mb-3 mt-5\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-9\">\r\n\r\n                                            <ClientDropdown\r\n                                                loading={loading}\r\n                                                clients={allClients}\r\n                                                onSearch={setClientInputValue}\r\n                                                onSelect={setSelectedClient}\r\n                                                selectedClient={selectedClient}\r\n                                            />\r\n\r\n                                            {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                                        </div>\r\n                                        <div className=\"col-lg-3\">\r\n                                            <Form.Control type=\"number\" style={{ marginTop: \"9px\" }} className=\"rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.DELIVERY_COST\" })} ref={deliveryCostRef} />\r\n\r\n                                            {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>}\r\n\r\n                    {/* ------------------( order info )------------------ */}\r\n                    <Row className=\"mb-5\">\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"TEMP.ORDER_INFO\")}</Card.Title>\r\n                                </Card.Header>\r\n\r\n                                <ListGroup variant=\"flush\" className=\"mt-5\">\r\n\r\n                                    {/* ------------------( package types )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                    {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                                                </div>\r\n\r\n                                                <div className=\"col-lg-4\">\r\n                                                    <Dropdown\r\n                                                        style={{ width: \"100%\" }}\r\n                                                        className=\"togo-dropdown shadow\"\r\n                                                        onSelect={(eve) => {\r\n                                                            setPackageType(eve);\r\n                                                        }}>\r\n                                                        <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                                                            {React.createElement(PackageTypesIcons[packageType], { style: { width: \"20px\", height: \"20px\" }, className: \"me-1\" })}\r\n                                                            <div style={{ width: \"97%\" }}>\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                                                            </div>\r\n                                                        </Dropdown.Toggle>\r\n\r\n                                                        <Dropdown.Menu className=\"w-100\">\r\n                                                            <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                                                <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                                                <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                                                <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                                                <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                                                            </Dropdown.Item>\r\n                                                        </Dropdown.Menu>\r\n                                                    </Dropdown>\r\n                                                </div>\r\n\r\n                                                {packageType !== \"1\" && packageType !== \"2\" && <div className=\"col-lg-8\" style={{ marginTop: \"2px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Group>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    step={5}\r\n                                                                    className=\"rounded-22 shadow\"\r\n                                                                    placeholder={intl.formatMessage({ id: \"TEMP.HEIGHT\" })}\r\n                                                                    ref={heightRef}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.WIDTH\" })}\r\n                                                                ref={widthRef}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.LENGTH\" })}\r\n                                                                ref={lengthRef}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.WEIGHT\" })}\r\n                                                                ref={weightRef}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( delivery type )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                                            </div>\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-10\">\r\n                                                    <div className={\"toggleButtonsContainer\"}>\r\n                                                        {\r\n                                                            deliverTypeArr.map((item, index) => {\r\n                                                                return <div key={index} className={\"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\")} onClick={() => { handleDeliveryTypeClick(index, item.type) }}>\r\n                                                                    <div className=\"radio\"><div className=\"innerRadio\"></div></div> {item.name}\r\n                                                                </div>\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-2\">\r\n                                                    {deliveryType === \"2\" && <>\r\n                                                        <Form.Control\r\n                                                            type=\"number\"\r\n                                                            className=\"rounded-22 shadow\" style={{ width: \"100%\" }}\r\n                                                            placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                                            ref={codAmountRef}\r\n                                                        />\r\n\r\n                                                        {beginValidation && amountCheck && <span style={{ color: \"red\" }}>required! (minimum 3 NIS)</span>}\r\n                                                    </>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( addresses )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div className=\"w-50 m-inline-e-2\">\r\n                                                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        <LocationIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                        {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                                                    </div>\r\n\r\n                                                    <AddressDropdown\r\n                                                        loading={loading}\r\n                                                        addresses={deliverAddresses}\r\n                                                        onSearch={setInputValue}\r\n                                                        onSelect={setSelectedPickUpAddress}\r\n                                                        selectedAddress={selectedPickUpAddress}\r\n                                                    />\r\n\r\n                                                    {beginValidation && selectedPickUpAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"w-50 m-inline-e-2\">\r\n                                                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        <SendIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                        <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                                                    </div>\r\n\r\n                                                    <AddressDropdown\r\n                                                        loading={loading}\r\n                                                        addresses={deliverAddresses}\r\n                                                        onSearch={setInputValue}\r\n                                                        onSelect={setSelectedDeliveryAddress}\r\n                                                        selectedAddress={selectedDeliveryAddress}\r\n                                                    />\r\n\r\n                                                    {beginValidation && selectedDeliveryAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                                                </div>\r\n                                                <CreateAddress>\r\n                                                    <div style={{ cursor: \"pointer\", marginTop: \"30px\" }} className=\"btn-grad-circle p-2\">\r\n                                                        <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                                                    </div>\r\n                                                </CreateAddress>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( order notes )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                <AttachmentIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                                            </div>\r\n\r\n                                            <Form.Control type=\"text\" className=\"mt-2 rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.NOTES\" })} ref={notesRef} />\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                <Card.Footer>\r\n                                    {!orderSubmitted ? <Button\r\n                                        className=\"btn-grad\"\r\n                                        style={{ width: \"30%\", float: \"right\" }}\r\n                                        disabled={loadingSubmit}\r\n                                        onClick={() => {\r\n\r\n                                            setBeginValidation(true);\r\n\r\n                                            let CreatedBy = \"\";\r\n\r\n                                            let DeliveryParams = {\r\n                                                deliveryWay: deliveryType,\r\n                                                TypeLoad: packageType,\r\n                                                CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                                DetailsLoad: notesRef.current.value,\r\n                                                LengthLoad: lengthRef.current?.value || \"\",\r\n                                                WidthLoad: widthRef.current?.value || \"\",\r\n                                                HeightLoad: heightRef.current?.value || \"\",\r\n                                                WeightLoad: weightRef.current?.value || \"\",\r\n                                                qrCode: \"\"\r\n                                            };\r\n\r\n                                            const AddressClint = {\r\n                                                IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                                IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                                OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                                LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                                LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                                SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                                IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                                IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                                OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                                LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                                LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                                ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                                ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                            };\r\n\r\n                                            if (isTransporter()) {\r\n                                                if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\r\n\r\n                                                    setLoadingSubmit(true);\r\n\r\n                                                    hideValidation();\r\n\r\n                                                    CreatedBy = \"Transporter\";\r\n\r\n                                                    DeliveryParams.ClientMobileNumber = selectedClient.PhoneNumber;\r\n                                                    DeliveryParams.DeliveryPrice = deliveryCostRef.current.value;\r\n\r\n                                                    createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\r\n\r\n                                                } else {\r\n                                                    showValidation();\r\n                                                }\r\n                                            } else {\r\n                                                if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n\r\n                                                    setLoadingSubmit(true);\r\n\r\n                                                    hideValidation();\r\n\r\n                                                    CreatedBy = \"Client\";\r\n\r\n                                                    createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\r\n                                                } else {\r\n                                                    showValidation();\r\n                                                }\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                        {isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")}\r\n                                    </Button> : <span className=\"h6\" style={{ color: \"#26a69a\", float: \"right\" }}>{isTransporter() ? translate(\"TEMP.SUCCISSFULLY_PUBLISHED\") : translate(\"TEMP.SUCCISSFULLY_PUBLISHED_CLIENT\")}</span>}\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* ------------------( network & offers )------------------ */}\r\n                    {orderSubmitted && !isTransporter() && <Row>\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"TEMP.NETWORK_OFFERS\")}</Card.Title>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body className=\"mt-5\" id=\"availableOffers\">\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\"></th>\r\n                                                <th scope=\"col\">{translate(\"TEMP.NAME\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TEMP.PHONE\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TEMP.PRICE\")}</th>\r\n                                                <th scope=\"col\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                myNetwork.map((member, index) => {\r\n                                                    return <tr key={index}>\r\n                                                        <td>\r\n                                                            <div // image\r\n                                                                style={{\r\n                                                                    background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n                                                                    width: \"70px\",\r\n                                                                    height: \"70px\",\r\n                                                                    borderRadius: \"45%\",\r\n                                                                }}\r\n\r\n                                                                className=\"align-self-center d-flex justify-content-center\"\r\n                                                            >\r\n                                                                <img\r\n                                                                    style={{\r\n                                                                        width: \"60px\",\r\n                                                                        height: \"60px\",\r\n                                                                        objectFit: \"cover\"\r\n                                                                    }}\r\n                                                                    className=\"rounded-circle align-self-center\"\r\n                                                                    src={`${imgBaseUrl}${member.Image}`}\r\n                                                                    alt={member.PhoneNumber}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{member.FullName}</td>\r\n                                                        <td>{member.PhoneNumber}</td>\r\n                                                        <td>{member.deliveryPrice + \" NIS\"}</td>\r\n                                                        <td>\r\n                                                            <Button disabled={assignLoading ? true : false} className=\"btn-grad\" onClick={() => {\r\n                                                                setAssignLoading(true);\r\n\r\n                                                                ClientAssignOrder(createdOrderId, member.CustomerId, member.deliveryPrice).then((res) => {\r\n                                                                    // console.log(res.data);\r\n\r\n                                                                    setAssignLoading(false);\r\n                                                                    history.push(\"/account/Order/\" + createdOrderId);\r\n                                                                })\r\n                                                            }}>\r\n                                                                {assignLoading && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                                                {translate(\"TEMP.ASSIGN\")}\r\n                                                            </Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>}\r\n\r\n                    {openAssignDialog && <SubmitAndAssignDialog\r\n                        onSuccess={() => props.onSuccess()}\r\n                        setCloseAssignDialog={setCloseAssignDialog}\r\n                        setCloseMainDialog={setCloseMainDialog}\r\n                        loadingSubmit={loadingSubmit}\r\n                        assignDeliveryParams={assignDeliveryParams}\r\n                        assignAddressClint={assignAddressClint} />}\r\n\r\n                    <Modal\r\n                        show={openConf}\r\n                        onHide={() => {\r\n\r\n                            setOpenConf(false);\r\n                        }}\r\n                        animation={false}\r\n                        backdrop=\"static\"\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Confirmation</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <p>Would you like to print a waybill ?</p>\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                }}\r\n                            >\r\n                                No\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                    window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                                }}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}