{"ast":null,"code":"var _jsxFileName = \"/home/system/togo-web-test/src/components/LanguageSelector/LanguageSelector.js\";\nimport React from 'react';\nimport { Box, Popover, PopoverArrow, PopoverBody, PopoverCloseButton, PopoverContent, PopoverHeader, PopoverTrigger, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { LOCALES } from \"../../i18n\";\nimport translate from \"../../i18n/translate\";\nimport { changeLanguage } from \"../../Actions/GeneralActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nvar styles = {\n  languageItem: {\n    p: \"0.2rem\",\n    cursor: \"pointer\",\n    _hover: {\n      bg: \"#ebf1f9\"\n    }\n  }\n};\nexport default function LanguageSelector() {\n  var _this = this;\n\n  var language = useSelector(function (state) {\n    return state.general.language;\n  });\n  var dispatch = useDispatch();\n\n  var _useDisclosure = useDisclosure(),\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose,\n      isOpen = _useDisclosure.isOpen;\n\n  var handleClick = function handleClick(language) {\n    dispatch(changeLanguage(language));\n    onClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Popover, {\n    isOpen: isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PopoverTrigger, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mx: 7,\n    cursor: \"pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, LOCALES[language].text)), /*#__PURE__*/React.createElement(PopoverContent, {\n    className: \"popover-content\",\n    w: 200,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PopoverArrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PopoverCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(PopoverHeader, {\n    textColor: \"left\",\n    fontSize: \"15px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, translate(\"HEADER.CHOOSE_LANGUAGE\")), /*#__PURE__*/React.createElement(PopoverBody, {\n    fontSize: \"md\",\n    fontWeight: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, Object.keys(LOCALES).map(function (key) {\n    var locale = LOCALES[key];\n    return /*#__PURE__*/React.createElement(Text, Object.assign({\n      key: key\n    }, styles.languageItem, {\n      onClick: function onClick() {\n        handleClick(key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 32\n      }\n    }), locale.text);\n  }))));\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/LanguageSelector/LanguageSelector.js"],"names":["React","Box","Popover","PopoverArrow","PopoverBody","PopoverCloseButton","PopoverContent","PopoverHeader","PopoverTrigger","Text","useDisclosure","LOCALES","translate","changeLanguage","useDispatch","useSelector","styles","languageItem","p","cursor","_hover","bg","LanguageSelector","language","state","general","dispatch","onOpen","onClose","isOpen","handleClick","text","Object","keys","map","key","locale"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Box, Popover,\r\n    PopoverArrow,\r\n    PopoverBody,\r\n    PopoverCloseButton,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverTrigger, Text,\r\n    useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport {LOCALES} from \"../../i18n\";\r\nimport translate from \"../../i18n/translate\";\r\nimport {changeLanguage} from \"../../Actions/GeneralActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst styles = {\r\n    languageItem: {\r\n        p: \"0.2rem\",\r\n        cursor: \"pointer\",\r\n        _hover: {\r\n            bg: \"#ebf1f9\"\r\n        }\r\n    },\r\n};\r\n\r\nexport default function LanguageSelector() {\r\n    const language = useSelector(state => state.general.language);\r\n    const dispatch = useDispatch();\r\n    const { onOpen, onClose, isOpen } = useDisclosure();\r\n\r\n    const handleClick = (language) => {\r\n        dispatch(changeLanguage(language));\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Popover\r\n            isOpen={isOpen}\r\n            onOpen={onOpen}\r\n            onClose={onClose}\r\n        >\r\n            <PopoverTrigger>\r\n                <Box mx={7} cursor=\"pointer\">{LOCALES[language].text}</Box>\r\n            </PopoverTrigger>\r\n            <PopoverContent className=\"popover-content\" w={200} color=\"black\">\r\n                <PopoverArrow/>\r\n                <PopoverCloseButton/>\r\n                <PopoverHeader textColor=\"left\"\r\n                               fontSize=\"15px\">{translate(\"HEADER.CHOOSE_LANGUAGE\")}</PopoverHeader>\r\n                <PopoverBody fontSize=\"md\" fontWeight={100}>\r\n                    {Object.keys(LOCALES).map(key => {\r\n                        const locale = LOCALES[key];\r\n                        return <Text key={key} {...styles.languageItem}\r\n                                     onClick={() => {handleClick(key); }}>{locale.text}</Text>\r\n                    })}\r\n                </PopoverBody>\r\n            </PopoverContent>\r\n        </Popover>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}