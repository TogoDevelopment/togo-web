{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props) {\n  var loading = props.loading,\n    src = props.src,\n    srcSet = props.srcSet,\n    onLoad = props.onLoad,\n    onError = props.onError,\n    crossOrigin = props.crossOrigin,\n    sizes = props.sizes,\n    ignoreFallback = props.ignoreFallback;\n  var _useState = useState(\"pending\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n    if (status === \"loading\") {\n      load();\n    }\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}","map":{"version":3,"names":["useSafeLayoutEffect","useCallback","useEffect","useRef","useState","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","_useState","_useState2","_slicedToArray","status","setStatus","imageRef","load","flush","img","Image","srcset","onload","event","onerror","error","current","undefined"],"sources":["../../src/use-image.ts"],"sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport {\n  ImgHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\ntype NativeImageProps = ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.((event as unknown) as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}