{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { apiUrl } from \"../Constants/GeneralCont\";\nimport { ACCOUNT_DETAILS_CLEAN_UP, SET_BUSINESS_LOCATIONS, SET_PERSONAL_INFO, SET_VEHICLE_INFO, SET_WORKING_TIME } from \"./ActionsTypes\";\nimport { convert12TimeTo24, isTransporter } from \"../Util\";\nimport { toastMessage } from \"./GeneralActions\";\nimport { updateTransporterBusniessLocationAPI } from \"../APIs/ProfileAPIs\";\nimport { getUserCreditialParams } from \"../APIs/AuthenticationAPIs\";\n\nvar axios = require(\"axios\");\n\nexport var getPersonalInfo = function getPersonalInfo(callback) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              params = getUserCreditialParams();\n              params.append(\"CheckTypeFunction\", isTransporter() ? \"TransporterProfileViewPersonalinfo\" : \"ClientProfileViewPersonalInfo\");\n              params.append(\"lang\", (localStorage.getItem(\"Language\") || \"en\") === \"en\" ? 1 : 2);\n              return _context.abrupt(\"return\", axios.post(apiUrl, params).then(function (_ref2) {\n                var data = _ref2.data;\n                // console.log(\"****************************\");\n                console.log(data); // temp test\n\n                var resp = isTransporter() ? data.PersonalInfo[0] : data.server_response[0];\n                callback && callback(resp); // console.log(resp);\n\n                dispatch({\n                  type: SET_PERSONAL_INFO,\n                  personalInfo: resp\n                });\n              }).catch(function (err) {// console.log(err);\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getVehicleInfo = function getVehicleInfo(callback) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              params = getUserCreditialParams();\n              params.append(\"CheckTypeFunction\", \"GetCarInfo\");\n              return _context2.abrupt(\"return\", axios.post(apiUrl, params).then(function (_ref4) {\n                var server_response = _ref4.data.server_response;\n                callback && callback(server_response);\n                dispatch({\n                  type: SET_VEHICLE_INFO,\n                  vehicleInfo: server_response[0]\n                });\n              }).catch(function (err) {// console.log(err);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getBusinessLocation = function getBusinessLocation(callback, errCallBack) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              params = getUserCreditialParams();\n              params.append(\"CheckTypeFunction\", isTransporter() ? \"TransporterProfileViewCityinfo\" : \"ClientProfileGetDataTypeWork\");\n              return _context3.abrupt(\"return\", axios.post(apiUrl, params).then(function (_ref6) {\n                var data = _ref6.data;\n                var resp = isTransporter() ? data.CityResponse : data.server_response[0];\n                callback && callback(resp);\n                dispatch({\n                  type: SET_BUSINESS_LOCATIONS,\n                  businessLocations: resp\n                });\n              }).catch(function (err) {\n                errCallBack && errCallBack(err);\n                dispatch(toastMessage(err)); // console.log(err);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var getWorkingTime = function getWorkingTime(callback) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              params = getUserCreditialParams();\n              params.append(\"CheckTypeFunction\", \"TransporterProfileViewTimeinfo\");\n              return _context4.abrupt(\"return\", axios.post(apiUrl, params).then(function (_ref8) {\n                var TimeResponse = _ref8.data.TimeResponse;\n                callback && callback(TimeResponse);\n                dispatch({\n                  type: SET_WORKING_TIME,\n                  workingTime: TimeResponse[0]\n                });\n              }).catch(function (err) {// console.log(err);\n              }));\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var updateWorkingTime = function updateWorkingTime(workingTime) {\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var params, workingTimeObj;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              params = getUserCreditialParams();\n              params.append(\"CheckTypeFunction\", \"UpdateWorkTranspoterParameter\");\n              workingTimeObj = [{}]; //add 2018-10-23 to each time\n\n              workingTime.forEach(function (_ref10) {\n                var id = _ref10.id,\n                    from = _ref10.from,\n                    to = _ref10.to;\n                workingTimeObj[0][\"\".concat(id, \"TimeStart\")] = \"2018-10-23 \".concat(convert12TimeTo24(from));\n                workingTimeObj[0][\"\".concat(id, \"TimeFinish\")] = \"2018-10-23 \".concat(convert12TimeTo24(to));\n              });\n              params.append(\"TimeWork\", JSON.stringify({\n                TransportrTime: workingTimeObj\n              }));\n              return _context5.abrupt(\"return\", axios.post(apiUrl, params).then(function (_ref11) {\n                var data = _ref11.data;\n\n                if (data === \"WorkTimeUpdated\") {\n                  dispatch(toastMessage(\"Working time is successfully updated\", \"Successfully Updated\", \"success\"));\n                  dispatch(getWorkingTime());\n                } else {\n                  dispatch(toastMessage(\"Error while updating working time\")); // console.log(data);\n                }\n              }).catch(function (err) {// console.log(err);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n};\nexport var accountDetailsCleanUp = function accountDetailsCleanUp() {\n  return /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              dispatch({\n                type: ACCOUNT_DETAILS_CLEAN_UP\n              });\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x6) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n};\nexport var updateTransporterBusniessLocation = function updateTransporterBusniessLocation(id, action) {\n  return /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              updateTransporterBusniessLocationAPI(id, action).then(function (_ref14) {\n                var data = _ref14.data;\n\n                if (data === \"AddeddSucessfully\" || data === \"UpdatedAddSucessfully\" || data === \"UpdatedRemoveSucessfully\") {\n                  dispatch(getBusinessLocation());\n                  dispatch(toastMessage(\"Business Location Updated Successfully\", \"Updated Successfully\", \"success\"));\n                } else {\n                  dispatch(toastMessage(\"Error Update Business Location\"));\n                }\n              }).catch(function (err) {\n                dispatch(toastMessage(err, \"Error Update Business Location\"));\n              });\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x7) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/Actions/ProfileActions.js"],"names":["apiUrl","ACCOUNT_DETAILS_CLEAN_UP","SET_BUSINESS_LOCATIONS","SET_PERSONAL_INFO","SET_VEHICLE_INFO","SET_WORKING_TIME","convert12TimeTo24","isTransporter","toastMessage","updateTransporterBusniessLocationAPI","getUserCreditialParams","axios","require","getPersonalInfo","callback","dispatch","params","append","localStorage","getItem","post","then","data","console","log","resp","PersonalInfo","server_response","type","personalInfo","catch","err","getVehicleInfo","vehicleInfo","getBusinessLocation","errCallBack","CityResponse","businessLocations","getWorkingTime","TimeResponse","workingTime","updateWorkingTime","workingTimeObj","forEach","id","from","to","JSON","stringify","TransportrTime","accountDetailsCleanUp","updateTransporterBusniessLocation","action"],"mappings":"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","sourcesContent":["\r\nimport {apiUrl} from \"../Constants/GeneralCont\";\r\nimport {\r\n    ACCOUNT_DETAILS_CLEAN_UP,\r\n    SET_BUSINESS_LOCATIONS,\r\n    SET_PERSONAL_INFO,\r\n    SET_VEHICLE_INFO,\r\n    SET_WORKING_TIME\r\n} from \"./ActionsTypes\";\r\nimport {convert12TimeTo24, isTransporter} from \"../Util\";\r\nimport {toastMessage} from \"./GeneralActions\";\r\nimport {updateTransporterBusniessLocationAPI} from \"../APIs/ProfileAPIs\";\r\nimport { getUserCreditialParams } from \"../APIs/AuthenticationAPIs\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport const getPersonalInfo = (callback) => async dispatch => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", isTransporter() ? \"TransporterProfileViewPersonalinfo\" : \"ClientProfileViewPersonalInfo\");\r\n    params.append(\"lang\", (localStorage.getItem(\"Language\") || \"en\") === \"en\" ? 1 : 2);\r\n\r\n    return axios.post(apiUrl, params).then(({data}) => {\r\n        // console.log(\"****************************\");\r\n        console.log(data); // temp test\r\n        let resp = isTransporter() ? data.PersonalInfo[0] : data.server_response[0];\r\n        callback && callback(resp);\r\n        // console.log(resp);\r\n        dispatch({\r\n            type: SET_PERSONAL_INFO,\r\n            personalInfo: resp\r\n        })\r\n    }).catch(err => {\r\n        // console.log(err);\r\n    })\r\n\r\n};\r\n\r\nexport const getVehicleInfo = (callback) => async dispatch => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"GetCarInfo\");\r\n\r\n    return axios.post(apiUrl, params).then(({data: {server_response}}) => {\r\n        callback && callback(server_response);\r\n        dispatch({\r\n            type: SET_VEHICLE_INFO,\r\n            vehicleInfo: server_response[0]\r\n        })\r\n    }).catch(err => {\r\n        // console.log(err);\r\n    })\r\n\r\n};\r\n\r\nexport const getBusinessLocation = (callback, errCallBack) => async dispatch => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", isTransporter() ? \"TransporterProfileViewCityinfo\" : \"ClientProfileGetDataTypeWork\");\r\n\r\n    return axios.post(apiUrl, params).then(({data}) => {\r\n        let resp = isTransporter() ? data.CityResponse : data.server_response[0];\r\n        callback && callback(resp);\r\n        dispatch({\r\n            type: SET_BUSINESS_LOCATIONS,\r\n            businessLocations: resp\r\n        })\r\n    }).catch(err => {\r\n        errCallBack && errCallBack(err);\r\n        dispatch(toastMessage(err));\r\n        // console.log(err);\r\n    })\r\n\r\n};\r\n\r\nexport const getWorkingTime = (callback) => async dispatch => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"TransporterProfileViewTimeinfo\");\r\n\r\n    return axios.post(apiUrl, params).then(({data: {TimeResponse}}) => {\r\n        callback && callback(TimeResponse);\r\n        dispatch({\r\n            type: SET_WORKING_TIME,\r\n            workingTime: TimeResponse[0]\r\n        })\r\n    }).catch(err => {\r\n        // console.log(err);\r\n    })\r\n\r\n};\r\n\r\nexport const updateWorkingTime = (workingTime) => async dispatch => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"UpdateWorkTranspoterParameter\");\r\n\r\n    let workingTimeObj = [{}];\r\n\r\n    //add 2018-10-23 to each time\r\n    workingTime.forEach(({id, from, to}) => {\r\n        workingTimeObj[0][`${id}TimeStart`] = `2018-10-23 ${convert12TimeTo24(from)}`;\r\n        workingTimeObj[0][`${id}TimeFinish`] = `2018-10-23 ${convert12TimeTo24(to)}`;\r\n    });\r\n\r\n    params.append(\"TimeWork\", JSON.stringify({TransportrTime: workingTimeObj}));\r\n\r\n    return axios.post(apiUrl, params).then(({data}) => {\r\n        if (data === \"WorkTimeUpdated\") {\r\n            dispatch(toastMessage(\"Working time is successfully updated\", \"Successfully Updated\", \"success\"));\r\n            dispatch(getWorkingTime())\r\n        } else {\r\n            dispatch(toastMessage(\"Error while updating working time\"));\r\n            // console.log(data);\r\n        }\r\n    }).catch(err => {\r\n        // console.log(err);\r\n    })\r\n\r\n};\r\n\r\nexport const accountDetailsCleanUp = () => async dispatch => {\r\n    dispatch({\r\n        type: ACCOUNT_DETAILS_CLEAN_UP\r\n    })\r\n};\r\n\r\nexport const updateTransporterBusniessLocation = (id, action) => async dispatch => {\r\n    updateTransporterBusniessLocationAPI(id, action).then(({data}) => {\r\n        if (data === \"AddeddSucessfully\" || data === \"UpdatedAddSucessfully\" || data === \"UpdatedRemoveSucessfully\") {\r\n            dispatch(getBusinessLocation());\r\n            dispatch(toastMessage(\"Business Location Updated Successfully\", \"Updated Successfully\", \"success\"));\r\n        } else {\r\n            dispatch(toastMessage(\"Error Update Business Location\"));\r\n        }\r\n    }).catch(err => {\r\n        dispatch(toastMessage(err, \"Error Update Business Location\"));\r\n    })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}