{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from \"react\";\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\n\nfunction isPrintableCharacter(event) {\n  var key = event.key;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    _props$timeout = _props.timeout,\n    timeout = _props$timeout === void 0 ? 300 : _props$timeout,\n    _props$preventDefault = _props.preventDefault,\n    preventDefault = _props$preventDefault === void 0 ? function () {\n      return true;\n    } : _props$preventDefault;\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    keys = _React$useState2[0],\n    setKeys = _React$useState2[1];\n  var timeoutRef = React.useRef();\n  var flush = function flush() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  var clearKeysAfterDelay = function clearKeysAfterDelay() {\n    flush();\n    timeoutRef.current = setTimeout(function () {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n  React.useEffect(function () {\n    return flush;\n  }, []);\n  function onKeyDown(fn) {\n    return function (event) {\n      if (event.key === \"Backspace\") {\n        var keysCopy = _toConsumableArray(keys);\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n      if (isPrintableCharacter(event)) {\n        var _keysCopy = keys.concat(event.key);\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        setKeys(_keysCopy);\n        fn(_keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n  return onKeyDown;\n}","map":{"version":3,"names":["React","isPrintableCharacter","event","key","length","test","useShortcut","props","_props","_props$timeout","timeout","_props$preventDefault","preventDefault","_React$useState","useState","_React$useState2","_slicedToArray","keys","setKeys","timeoutRef","useRef","flush","current","clearTimeout","clearKeysAfterDelay","setTimeout","useEffect","onKeyDown","fn","keysCopy","_toConsumableArray","pop","_keysCopy","concat","stopPropagation","join"],"sources":["../../src/use-shortcut.ts"],"sourcesContent":["import * as React from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = React.useState<string[]>([])\n  const timeoutRef = React.useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  React.useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA;AACA;AACA;AACA;;AACA,SAASC,oBAATA,CAA8BC,KAA9B,EAA0D;EACxD,IAAQC,GAAA,GAAQD,KAAhB,CAAQC,GAAA;EACR,OAAOA,GAAG,CAACC,MAAJ,KAAe,CAAf,IAAqBD,GAAG,CAACC,MAAJ,GAAa,CAAb,IAAkB,eAAeC,IAAf,CAAoBF,GAApB,CAA9C;AACD;;AAOD;AACA;AACA;AACA;AACA,OAAO,SAASG,WAATA,CAAqBC,KAArB,EAAmD;EAAA,IAA9BA,KAA8B;IAA9BA,KAA8B,GAAJ,EAAI;EAAA;EACxD,IAAAC,MAAA,GAAuDD,KAAvD;IAAAE,cAAA,GAAAD,MAAA,CAAQE,OAAO;IAAPA,OAAO,GAAAD,cAAA,cAAG,GAAZ,GAAAA,cAAA;IAAAE,qBAAA,GAAAH,MAAA,CAAiBI,cAAc;IAAdA,cAAc,GAAAD,qBAAA,cAAG;MAAA,OAAM;IAAA,IAAAA,qBAAA;EAE9C,IAAAE,eAAA,GAAwBb,KAAK,CAACc,QAAN,CAAyB,EAAzB,CAAxB;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,IAAD,GAAAF,gBAAA;IAAOG,OAAP,GAAAH,gBAAA;EACN,IAAMI,UAAU,GAAGnB,KAAK,CAACoB,MAAN,EAAnB;EAEA,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;IAClB,IAAIF,UAAU,CAACG,OAAf,EAAwB;MACtBC,YAAY,CAACJ,UAAU,CAACG,OAAZ,CAAZ;MACAH,UAAU,CAACG,OAAX,GAAqB,IAArB;IACD;EACF,CALD;EAOA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChCH,KAAK;IACLF,UAAU,CAACG,OAAX,GAAqBG,UAAU,CAAC,YAAM;MACpCP,OAAO,CAAC,EAAD,CAAP;MACAC,UAAU,CAACG,OAAX,GAAqB,IAArB;IACD,CAH8B,EAG5BZ,OAH4B,CAA/B;EAID,CAND;EAQAV,KAAK,CAAC0B,SAAN,CAAgB;IAAA,OAAML,KAAtB;EAAA,GAA6B,EAA7B;EAIA,SAASM,SAATA,CAAmBC,EAAnB,EAAiC;IAC/B,OAAQ,UAAA1B,KAAD,EAAgC;MACrC,IAAIA,KAAK,CAACC,GAAN,KAAc,WAAlB,EAA+B;QAC7B,IAAM0B,QAAQ,GAAAC,kBAAA,CAAOb,IAAJ,CAAjB;QACAY,QAAQ,CAACE,GAAT;QACAb,OAAO,CAACW,QAAD,CAAP;QACA;MACD;MAED,IAAI5B,oBAAoB,CAACC,KAAD,CAAxB,EAAiC;QAC/B,IAAM8B,SAAQ,GAAGf,IAAI,CAACgB,MAAL,CAAY/B,KAAK,CAACC,GAAlB,CAAjB;QAEA,IAAIS,cAAc,CAACV,KAAD,CAAlB,EAA2B;UACzBA,KAAK,CAACU,cAAN;UACAV,KAAK,CAACgC,eAAN;QACD;QAEDhB,OAAO,CAACc,SAAD,CAAP;QACAJ,EAAE,CAACI,SAAQ,CAACG,IAAT,CAAc,EAAd,CAAD,CAAF;QAEAX,mBAAmB;MACpB;IACF,CArBD;EAsBD;EAED,OAAOG,SAAP;AACD"},"metadata":{},"sourceType":"module"}