{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/Container/AccountDetails/PersonalDetails.js\";\nimport { Box, Grid } from \"@chakra-ui/layout\";\nimport styles from \"./Styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPersonalInfo } from \"../../Actions/ProfileActions\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { isTransporter } from \"../../Util\";\nimport translate from '../../i18n/translate';\n/*export function PersonalDetailsOut() {\r\n    const dispatch = useDispatch();\r\n    const {FullName, NamePlace, IDNumber, LicenceNumber, Email, AccountName, LogoUrl} = useSelector(state => state.profile.personalInfo);\r\n    const [loading, setLoading] = useState(true);\r\n    const isTransporterVal = isTransporter();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPersonalInfo(() => {\r\n            setLoading(false);\r\n        }));\r\n    }, [dispatch]);\r\n\r\n    let personalDetails = [\r\n        {\r\n            title: translate(\"PERSONAL_DETAILS.FULL_NAME\"),\r\n            value: FullName\r\n        },\r\n        {\r\n            title: translate(\"PERSONAL_DETAILS.EMAIL\"),\r\n            value: Email\r\n        }\r\n    ];\r\n\r\n    if (isTransporterVal) {\r\n        personalDetails.push(\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ISSUING_IDENTITY\"),\r\n                value: NamePlace\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ID_NUMBER\"),\r\n                value: IDNumber\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.DRIVER_NUM\"),\r\n                value: LicenceNumber\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ACCOUNT_NAME\"),\r\n                value: AccountName\r\n            }\r\n        )\r\n    }\r\n\r\n    return personalDetails\r\n}*/\n\nexport default function PersonalDetails() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.profile.personalInfo;\n  }),\n      FullName = _useSelector.FullName,\n      NamePlace = _useSelector.NamePlace,\n      IDNumber = _useSelector.IDNumber,\n      LicenceNumber = _useSelector.LicenceNumber,\n      Email = _useSelector.Email,\n      AccountName = _useSelector.AccountName,\n      LogoUrl = _useSelector.LogoUrl;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var isTransporterVal = isTransporter();\n  useEffect(function () {\n    dispatch(getPersonalInfo(function () {\n      setLoading(false);\n    }));\n  }, [dispatch]);\n  var personalDetails = [{\n    title: translate(\"PERSONAL_DETAILS.FULL_NAME\"),\n    value: FullName\n  }, {\n    title: translate(\"PERSONAL_DETAILS.EMAIL\"),\n    value: Email\n  }];\n\n  if (isTransporterVal) {\n    personalDetails.push({\n      title: translate(\"PERSONAL_DETAILS.ISSUING_IDENTITY\"),\n      value: NamePlace\n    }, {\n      title: translate(\"PERSONAL_DETAILS.ID_NUMBER\"),\n      value: IDNumber\n    }, {\n      title: translate(\"PERSONAL_DETAILS.DRIVER_NUM\"),\n      value: LicenceNumber\n    }, {\n      title: translate(\"PERSONAL_DETAILS.ACCOUNT_NAME\"),\n      value: AccountName\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Box, Object.assign({}, styles.content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, Object.assign({}, styles.personalInfoContainer, {\n    gridTemplateColumns: \"repeat(\".concat(isTransporterVal ? 3 : 2, \", 1fr)\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), personalDetails.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Box, Object.assign({}, styles.title, styles.greyTitle, {\n      textAlign: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }), item.title), /*#__PURE__*/React.createElement(Box, Object.assign({}, styles.subTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }), item.value));\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://46.253.93.4/togo/MobileAPi/\".concat(LogoUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })));\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/Container/AccountDetails/PersonalDetails.js"],"names":["Box","Grid","styles","React","useEffect","useState","useDispatch","useSelector","getPersonalInfo","Loader","isTransporter","translate","PersonalDetails","dispatch","state","profile","personalInfo","FullName","NamePlace","IDNumber","LicenceNumber","Email","AccountName","LogoUrl","loading","setLoading","isTransporterVal","personalDetails","title","value","push","content","personalInfoContainer","map","item","index","greyTitle","subTitle"],"mappings":"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","sourcesContent":["import {Box, Grid} from \"@chakra-ui/layout\";\r\nimport styles from \"./Styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getPersonalInfo} from \"../../Actions/ProfileActions\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {isTransporter} from \"../../Util\";\r\nimport translate from '../../i18n/translate';\r\n\r\n/*export function PersonalDetailsOut() {\r\n    const dispatch = useDispatch();\r\n    const {FullName, NamePlace, IDNumber, LicenceNumber, Email, AccountName, LogoUrl} = useSelector(state => state.profile.personalInfo);\r\n    const [loading, setLoading] = useState(true);\r\n    const isTransporterVal = isTransporter();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPersonalInfo(() => {\r\n            setLoading(false);\r\n        }));\r\n    }, [dispatch]);\r\n\r\n    let personalDetails = [\r\n        {\r\n            title: translate(\"PERSONAL_DETAILS.FULL_NAME\"),\r\n            value: FullName\r\n        },\r\n        {\r\n            title: translate(\"PERSONAL_DETAILS.EMAIL\"),\r\n            value: Email\r\n        }\r\n    ];\r\n\r\n    if (isTransporterVal) {\r\n        personalDetails.push(\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ISSUING_IDENTITY\"),\r\n                value: NamePlace\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ID_NUMBER\"),\r\n                value: IDNumber\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.DRIVER_NUM\"),\r\n                value: LicenceNumber\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ACCOUNT_NAME\"),\r\n                value: AccountName\r\n            }\r\n        )\r\n    }\r\n\r\n    return personalDetails\r\n}*/\r\n\r\nexport default function PersonalDetails() {\r\n    const dispatch = useDispatch();\r\n    const {FullName, NamePlace, IDNumber, LicenceNumber, Email, AccountName, LogoUrl} = useSelector(state => state.profile.personalInfo);\r\n    const [loading, setLoading] = useState(true);\r\n    const isTransporterVal = isTransporter();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPersonalInfo(() => {\r\n            setLoading(false);\r\n        }));\r\n    }, [dispatch]);\r\n\r\n    let personalDetails = [\r\n        {\r\n            title: translate(\"PERSONAL_DETAILS.FULL_NAME\"),\r\n            value: FullName\r\n        },\r\n        {\r\n            title: translate(\"PERSONAL_DETAILS.EMAIL\"),\r\n            value: Email\r\n        }\r\n    ];\r\n\r\n    if (isTransporterVal) {\r\n        personalDetails.push(\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ISSUING_IDENTITY\"),\r\n                value: NamePlace\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ID_NUMBER\"),\r\n                value: IDNumber\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.DRIVER_NUM\"),\r\n                value: LicenceNumber\r\n            },\r\n            {\r\n                title: translate(\"PERSONAL_DETAILS.ACCOUNT_NAME\"),\r\n                value: AccountName\r\n            }\r\n        )\r\n    }\r\n\r\n    return <Box {...styles.content}>\r\n        {loading ? <Loader/> :\r\n            <Grid {...styles.personalInfoContainer} gridTemplateColumns={`repeat(${isTransporterVal ? 3 : 2}, 1fr)`}>\r\n                {personalDetails.map((item, index) => (\r\n                    <Box key={index}>\r\n                        <Box {...styles.title} {...styles.greyTitle} textAlign=\"center\">\r\n                            {item.title}\r\n                        </Box>\r\n                        <Box {...styles.subTitle}>\r\n                            {item.value}\r\n                        </Box>\r\n                    </Box>\r\n                ))}\r\n                <img src={`http://46.253.93.4/togo/MobileAPi/${LogoUrl}`} />\r\n            </Grid>\r\n        }\r\n    </Box>\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}