{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrder.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner, Table } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers } from \"../APIs/OrdersAPIs\";\n// import { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import GetAllClients) */\nimport { GetTransporterClients } from \"../APIs/OrdersAPIs\"; /* edited (import GetTransporterClients) */\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/attachment.svg\";\nimport { IoIosGitNetwork } from 'react-icons/io';\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\nimport AddressDropdown from \"./AddressDropdown\";\nimport ClientDropdown from \"./ClientDropdown\"; /* edited (import ClientDropdown) */\nimport CreateAddress from \"./CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../Actions/GeneralActions\";\nimport { isTransporter } from \"../Util\"; /* edited (new import) */\n\nimport SubmitAndAssignDialog from \"./SubmitAndAssignDialog\"; /* edited (new import) */\n\nimport \"./CreateNewOrder.css\";\nimport { useHistory } from \"react-router\";\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport function CreateNewOrder(props) {\n  var _this = this;\n  var history = useHistory();\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.5rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.2rem\"\n    }\n  };\n  var dispatch = useDispatch();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    open = _useState2[0],\n    setOpen = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    openConf = _useState4[0],\n    setOpenConf = _useState4[1];\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n  var _useState5 = useState(\"1\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    packageType = _useState6[0],\n    setPackageType = _useState6[1];\n  var _useState7 = useState(\"1\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    deliveryType = _useState8[0],\n    setDeliveryType = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    inputValue = _useState10[0],\n    setInputValue = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    clientInputValue = _useState12[0],\n    setClientInputValue = _useState12[1]; /* edited (clientInputValue added) */\n  var _useState13 = useState([]),\n    _useState14 = _slicedToArray(_useState13, 2),\n    deliverAddresses = _useState14[0],\n    setDeliverAddresses = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    allClients = _useState16[0],\n    setAllClients = _useState16[1]; /* edited (setAllClients added) Note: not all clients */\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    selectedDeliveryAddress = _useState18[0],\n    setSelectedDeliveryAddress = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    selectedPickUpAddress = _useState20[0],\n    setSelectedPickUpAddress = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    selectedClient = _useState22[0],\n    setSelectedClient = _useState22[1]; /* edited (setSelectedClient added) */\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    loading = _useState24[0],\n    setLoading = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    loadingSubmit = _useState26[0],\n    setLoadingSubmit = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    openAssignDialog = _useState28[0],\n    setOpenAssignDialog = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    assignAddressClint = _useState30[0],\n    setAssignAddressClint = _useState30[1];\n  var _useState31 = useState(false),\n    _useState32 = _slicedToArray(_useState31, 2),\n    assignDeliveryParams = _useState32[0],\n    setAssignDeliveryParams = _useState32[1];\n\n  /* edited (validation variables) */\n\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    beginValidation = _useState34[0],\n    setBeginValidation = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    selectedClientCheck = _useState36[0],\n    setSelectedClientCheckShow = _useState36[1];\n  var _useState37 = useState(false),\n    _useState38 = _slicedToArray(_useState37, 2),\n    deliveryCostCheck = _useState38[0],\n    setDeliveryCostCheckShow = _useState38[1];\n  var _useState39 = useState(false),\n    _useState40 = _slicedToArray(_useState39, 2),\n    selectedPickUpAddressCheck = _useState40[0],\n    setSelectedPickUpAddressCheckShow = _useState40[1];\n  var _useState41 = useState(false),\n    _useState42 = _slicedToArray(_useState41, 2),\n    selectedDeliveryAddressCheck = _useState42[0],\n    setSelectedDeliveryAddressCheckShow = _useState42[1];\n  var _useState43 = useState([{\n      name: translate(\"ORDERS.\" + DeliveryTypes[1]),\n      type: \"1\",\n      active: \"active\"\n    }, {\n      name: translate(\"ORDERS.\" + DeliveryTypes[2]),\n      type: \"2\",\n      active: \"\"\n    }]),\n    _useState44 = _slicedToArray(_useState43, 2),\n    deliverTypeArr = _useState44[0],\n    setDeliverTypeArr = _useState44[1];\n  var _useState45 = useState([]),\n    _useState46 = _slicedToArray(_useState45, 2),\n    myNetwork = _useState46[0],\n    setMyNetwork = _useState46[1];\n  var _useState47 = useState(''),\n    _useState48 = _slicedToArray(_useState47, 2),\n    networkInputValue = _useState48[0],\n    setNetworkInputValue = _useState48[1];\n  var _useState49 = useState(''),\n    _useState50 = _slicedToArray(_useState49, 2),\n    networkLoading = _useState50[0],\n    setNetworkLoading = _useState50[1];\n  var deliveryCostRef = useRef(); /* edited (deliveryCostRef added) */\n  // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  useEffect(function () {\n    setNetworkLoading(true);\n    console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\n    GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then(function (res) {\n      setNetworkLoading(false);\n      setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\n    });\n  }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]);\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetDefinedAddresses(inputValue).then(function (res) {\n          setLoading(false);\n          setDeliverAddresses(res.data);\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n\n  /* edited (get all clients) */\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetTransporterClients().then(function (res) {\n          setLoading(false);\n          setAllClients(res.data.membersData.filter(function (client) {\n            return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n          }));\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, open]);\n\n  /* edited (show and hide validation error messages handles) */\n\n  function showValidation() {\n    // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\n\n    if (isTransporter()) {\n      if (selectedClient) {\n        setSelectedClientCheckShow(false);\n      } else {\n        setSelectedClientCheckShow(true);\n      }\n      if (deliveryCostRef && deliveryCostRef.current.value > 0) {\n        setDeliveryCostCheckShow(false);\n      } else {\n        setDeliveryCostCheckShow(true);\n      }\n    }\n    if (selectedPickUpAddress) {\n      setSelectedPickUpAddressCheckShow(false);\n    } else {\n      setSelectedPickUpAddressCheckShow(true);\n    }\n    if (selectedDeliveryAddress) {\n      setSelectedDeliveryAddressCheckShow(false);\n    } else {\n      setSelectedDeliveryAddressCheckShow(true);\n    }\n\n    // console.log(\"show validation\");\n  }\n\n  function hideValidation() {\n    setBeginValidation(false);\n    setSelectedClientCheckShow(false);\n    setDeliveryCostCheckShow(false);\n    setSelectedPickUpAddressCheckShow(false);\n    setSelectedDeliveryAddressCheckShow(false);\n\n    // console.log(\"hide validation\");\n  }\n\n  function setCloseAssignDialog() {\n    setOpenAssignDialog(false);\n  }\n  function setCloseMainDialog() {\n    setOpen(false);\n  }\n  var handleDeliveryTypeClick = function handleDeliveryTypeClick(index, type) {\n    setDeliveryType(type);\n    var tempArr = _toConsumableArray(deliverTypeArr);\n    for (var i = 0; i < tempArr.length; i++) {\n      tempArr[i].active = \"\";\n    }\n    tempArr[index].active = \"active\";\n    setDeliverTypeArr(tempArr);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isTransporter() && /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad text-white\",\n    onClick: function onClick() {\n      history.push(\"/account/create-order\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      display: \"inline-block\",\n      width: \"22px\",\n      height: \"22px\",\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      fill: \"currentcolor\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }), translate(\"ORDERS.CREATE_NEW_ORDER\")), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: open,\n    onHide: handleClose,\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, isTransporter() && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown /* fofo */, {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }), beginValidation && selectedClientCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 76\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    style: {\n      marginTop: \"9px\"\n    },\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.DELIVERY_COST\"\n    }),\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 33\n    }\n  }), beginValidation && deliveryCostCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 74\n    }\n  }, \"required!\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"togo-dropdown shadow\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 33\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 37\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2]))))), packageType !== \"1\" && packageType !== \"2\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    style: {\n      marginTop: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 72\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.HEIGHT\"\n    }),\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WIDTH\"\n    }),\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.LENGTH\"\n    }),\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WEIGHT\"\n    }),\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggleButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }, deliverTypeArr.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"toggleButton \" + item.active,\n      onClick: function onClick() {\n        handleDeliveryTypeClick(index, item.type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"innerRadio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 68\n      }\n    })), \" \", item.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 25\n    }\n  }, deliveryType === \"2\" && /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    style: {\n      width: \"35%\",\n      marginTop: \"5px\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedPickUpAddress,\n    selectedAddress: selectedPickUpAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedPickUpAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 79\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 33\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedDeliveryAddress,\n    selectedAddress: selectedDeliveryAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedDeliveryAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 81\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\",\n      marginTop: \"30px\"\n    },\n    className: \"btn-grad-circle p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2 rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.NOTES\"\n    }),\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 21\n    }\n  }), false && selectedPickUpAddress !== \"\" && selectedDeliveryAddress !== \"\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IoIosGitNetwork, {\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      color: \"black\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 29\n    }\n  }), translate(\"TEMP.CHOOSE_FROM_NETWORK\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      height: \"200px\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.PHONE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.PRICE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.ASSIGN\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 37\n    }\n  }, myNetwork.map(function (member, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 56\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 53\n      }\n    }, member.FullName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 53\n      }\n    }, member.PhoneNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 53\n      }\n    }, member.deliveryPrice + \" NIS\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 57\n      }\n    }, translate(\"TEMP.ASSIGN\"))));\n  }))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"45%\"\n    },\n    disabled: loadingSubmit,\n    onClick: function onClick() {\n      setBeginValidation(true);\n      var CreatedBy = \"\"; /* edited (CreatedBy variable added) */\n      var DeliveryParams = {}; /* edited (DeliveryParams as empty object) */\n\n      if (isTransporter()) {\n        if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\n          var _lengthRef$current, _widthRef$current, _heightRef$current, _weightRef$current;\n          // console.log(\"true\");\n\n          setLoadingSubmit(true);\n          hideValidation();\n          CreatedBy = \"Transporter\";\n          DeliveryParams = {\n            deliveryWay: deliveryType,\n            TypeLoad: packageType,\n            // ClientMobileNumber: clientMobileNumberRef.current.value, /* edited (add ClientMobileNumber) */\n            ClientMobileNumber: selectedClient.PhoneNumber,\n            /* edited (add ClientMobileNumber from dropdown) */\n            DeliveryPrice: deliveryCostRef.current.value,\n            /* edited (add DeliveryPrice) */\n            CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n            // 2 or 4\n            DetailsLoad: notesRef.current.value,\n            LengthLoad: ((_lengthRef$current = lengthRef.current) === null || _lengthRef$current === void 0 ? void 0 : _lengthRef$current.value) || \"\",\n            WidthLoad: ((_widthRef$current = widthRef.current) === null || _widthRef$current === void 0 ? void 0 : _widthRef$current.value) || \"\",\n            HeightLoad: ((_heightRef$current = heightRef.current) === null || _heightRef$current === void 0 ? void 0 : _heightRef$current.value) || \"\",\n            WeightLoad: ((_weightRef$current = weightRef.current) === null || _weightRef$current === void 0 ? void 0 : _weightRef$current.value) || \"\",\n            qrCode: \"\"\n          };\n\n          /* edited (fix client mobile number intro) */\n          if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\n            var firstZero = DeliveryParams.ClientMobileNumber[0];\n            var replaced = DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');\n            DeliveryParams.ClientMobileNumber = replaced;\n          }\n          var AddressClint = {\n            IdCity: selectedPickUpAddress.cityId,\n            // from selected pick up address\n            IdArea: selectedPickUpAddress.areaId,\n            // from selected pick up address\n            OtherDetails: selectedPickUpAddress.details,\n            // details from selected pickup address\n            LatSender: selectedPickUpAddress.latitude,\n            // from selected pick up address\n            LongSender: selectedPickUpAddress.longitude,\n            //  from selected pick up address\n            SenderAddressId: selectedPickUpAddress.id,\n            // from selected pick up address\n\n            IdCityDes: selectedDeliveryAddress.cityId,\n            // from selected delivery to address\n            IdAreaDes: selectedDeliveryAddress.areaId,\n            // from selected delivery to address\n            OtherDetailsDes: selectedDeliveryAddress.details,\n            // details from selected delivery to address\n            LatReciver: selectedDeliveryAddress.latitude,\n            // from selected delivery to address\n            LongReciver: selectedDeliveryAddress.longitude,\n            // from selected delivery to address\n            ReciverAddressId: selectedDeliveryAddress.id,\n            // from selected delivery to address\n            ReceiverAddressNum: selectedDeliveryAddress.phone_number\n          };\n          CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then(function (res) {\n            /* edited (test data) */\n            // console.log(\"---------------\\nres : \" + res.data);\n\n            /* to be edited (to print order by returned id) */\n\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n\n            // setOpenConf(true);\n\n            /* if (res.data == \"Blocked\") {\r\n                dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n            } */\n\n            setOpen(false);\n            setLoadingSubmit(false);\n            props.onSuccess();\n          });\n        } else {\n          // console.log(\"false\");\n          showValidation();\n        }\n      } else {\n        if (selectedPickUpAddress && selectedDeliveryAddress) {\n          var _lengthRef$current2, _widthRef$current2, _heightRef$current2, _weightRef$current2;\n          setLoadingSubmit(true);\n\n          // console.log(\"true\");\n\n          hideValidation();\n          CreatedBy = \"Client\";\n          DeliveryParams = {\n            deliveryWay: deliveryType,\n            TypeLoad: packageType,\n            CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n            // 2 or 4\n            DetailsLoad: notesRef.current.value,\n            LengthLoad: ((_lengthRef$current2 = lengthRef.current) === null || _lengthRef$current2 === void 0 ? void 0 : _lengthRef$current2.value) || \"\",\n            WidthLoad: ((_widthRef$current2 = widthRef.current) === null || _widthRef$current2 === void 0 ? void 0 : _widthRef$current2.value) || \"\",\n            HeightLoad: ((_heightRef$current2 = heightRef.current) === null || _heightRef$current2 === void 0 ? void 0 : _heightRef$current2.value) || \"\",\n            WeightLoad: ((_weightRef$current2 = weightRef.current) === null || _weightRef$current2 === void 0 ? void 0 : _weightRef$current2.value) || \"\",\n            qrCode: \"\"\n          };\n          var _AddressClint = {\n            IdCity: selectedPickUpAddress.cityId,\n            // from selected pick up address\n            IdArea: selectedPickUpAddress.areaId,\n            // from selected pick up address\n            OtherDetails: selectedPickUpAddress.details,\n            // details from selected pickup address\n            LatSender: selectedPickUpAddress.latitude,\n            // from selected pick up address\n            LongSender: selectedPickUpAddress.longitude,\n            //  from selected pick up address\n            SenderAddressId: selectedPickUpAddress.id,\n            // from selected pick up address\n\n            IdCityDes: selectedDeliveryAddress.cityId,\n            // from selected delivery to address\n            IdAreaDes: selectedDeliveryAddress.areaId,\n            // from selected delivery to address\n            OtherDetailsDes: selectedDeliveryAddress.details,\n            // details from selected delivery to address\n            LatReciver: selectedDeliveryAddress.latitude,\n            // from selected delivery to address\n            LongReciver: selectedDeliveryAddress.longitude,\n            // from selected delivery to address\n            ReciverAddressId: selectedDeliveryAddress.id,\n            // from selected delivery to address\n            ReceiverAddressNum: selectedDeliveryAddress.phone_number\n          };\n          CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(_AddressClint)).then(function (res) {\n            /* edited (test data) */\n            // console.log(\"---------------\\nres : \" + res.data);\n\n            /* to be edited (to print order by returned id) */\n\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n\n            // setOpenConf(true);\n\n            /*  if (res.data == \"Blocked\") {\r\n                 dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n             } */\n\n            // console.log(res.data)\n\n            setOpen(false);\n            setLoadingSubmit(false);\n            props.onSuccess();\n          });\n        } else {\n          // console.log(\"false\");\n          showValidation();\n        }\n\n        /* - deliveryWay \r\n        This one from radio button for delivery type it contains four values \r\n            (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n        - CostLoad   \r\n            This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n        - TypeLoad   \r\n            This one from the list we pick Food or Small/Medium/Large package where \r\n                Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n        - qrCode\r\n            in case of submit with qrcode we will put the value else it will be empty */\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 21\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 43\n    }\n  }), isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")), !isTransporter() && /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"45%\"\n    },\n    onClick: function onClick() {\n      setBeginValidation(true);\n      if (selectedPickUpAddress && selectedDeliveryAddress) {\n        var _lengthRef$current3, _widthRef$current3, _heightRef$current3, _weightRef$current3;\n        hideValidation();\n        var tempDeliveryParams = {\n          deliveryWay: deliveryType,\n          TypeLoad: packageType,\n          CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n          // 2 or 4\n          DetailsLoad: notesRef.current.value,\n          LengthLoad: ((_lengthRef$current3 = lengthRef.current) === null || _lengthRef$current3 === void 0 ? void 0 : _lengthRef$current3.value) || \"\",\n          WidthLoad: ((_widthRef$current3 = widthRef.current) === null || _widthRef$current3 === void 0 ? void 0 : _widthRef$current3.value) || \"\",\n          HeightLoad: ((_heightRef$current3 = heightRef.current) === null || _heightRef$current3 === void 0 ? void 0 : _heightRef$current3.value) || \"\",\n          WeightLoad: ((_weightRef$current3 = weightRef.current) === null || _weightRef$current3 === void 0 ? void 0 : _weightRef$current3.value) || \"\",\n          qrCode: \"\"\n        };\n\n        // console.log(selectedDeliveryAddress);\n\n        var tempAddressClint = {\n          IdCity: selectedPickUpAddress.cityId,\n          // from selected pick up address\n          IdArea: selectedPickUpAddress.areaId,\n          // from selected pick up address\n          IdGov: selectedPickUpAddress.governoratId,\n          // from selected pick up address\n          IdProv: selectedPickUpAddress.provinceId,\n          // from selected pick up address\n          OtherDetails: selectedPickUpAddress.details,\n          // details from selected pickup address\n          LatSender: selectedPickUpAddress.latitude,\n          // from selected pick up address\n          LongSender: selectedPickUpAddress.longitude,\n          //  from selected pick up address\n          SenderAddressId: selectedPickUpAddress.id,\n          // from selected pick up address\n\n          IdCityDes: selectedDeliveryAddress.cityId,\n          // from selected delivery to address\n          IdAreaDes: selectedDeliveryAddress.areaId,\n          // from selected delivery to address\n          IdProvDes: selectedDeliveryAddress.provinceId,\n          // from selected delivery to address\n          IdGovDes: selectedDeliveryAddress.governoratId,\n          // from selected delivery to address\n          OtherDetailsDes: selectedDeliveryAddress.details,\n          // details from selected delivery to address\n          LatReciver: selectedDeliveryAddress.latitude,\n          // from selected delivery to address\n          LongReciver: selectedDeliveryAddress.longitude,\n          // from selected delivery to address\n          ReciverAddressId: selectedDeliveryAddress.id,\n          // from selected delivery to address\n          ReceiverAddressNum: selectedDeliveryAddress.phone_number,\n          ReceiverAddressName: selectedDeliveryAddress.name\n        };\n\n        // console.log(selectedPickUpAddress.areaId + \" -> \" + selectedDeliveryAddress.areaId);\n\n        setAssignDeliveryParams(tempDeliveryParams);\n        setAssignAddressClint(tempAddressClint);\n        setOpenAssignDialog(true);\n      } else {\n        showValidation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 42\n    }\n  }, translate(\"TEMP.SUBMIT_AND_ASSIGN\")))), openAssignDialog && /*#__PURE__*/React.createElement(SubmitAndAssignDialog, {\n    onSuccess: function onSuccess() {\n      return props.onSuccess();\n    },\n    setCloseAssignDialog: setCloseAssignDialog,\n    setCloseMainDialog: setCloseMainDialog,\n    loadingSubmit: loadingSubmit,\n    assignDeliveryParams: assignDeliveryParams,\n    assignAddressClint: assignAddressClint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 21\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 21\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 21\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 21\n    }\n  }, \"Yes\"))));\n}","map":{"version":3,"names":["Button","Dropdown","Form","Modal","Spinner","Table","React","useEffect","useRef","useState","translate","ReactComponent","SendIcon","CreateNewOrderReq","GetDefinedAddresses","testBarq","GetAllClientNetworkMembers","GetTransporterClients","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","DeliveryTruckIcon","LocationIcon","AttachmentIcon","IoIosGitNetwork","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","useDispatch","toastNotification","isTransporter","SubmitAndAssignDialog","useHistory","PackageTypesIcons","CreateNewOrder","props","_this","history","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","dispatch","_useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","openConf","setOpenConf","handleClose","_useState5","_useState6","packageType","setPackageType","_useState7","_useState8","deliveryType","setDeliveryType","_useState9","_useState10","inputValue","setInputValue","_useState11","_useState12","clientInputValue","setClientInputValue","_useState13","_useState14","deliverAddresses","setDeliverAddresses","_useState15","_useState16","allClients","setAllClients","_useState17","_useState18","selectedDeliveryAddress","setSelectedDeliveryAddress","_useState19","_useState20","selectedPickUpAddress","setSelectedPickUpAddress","_useState21","_useState22","selectedClient","setSelectedClient","_useState23","_useState24","loading","setLoading","_useState25","_useState26","loadingSubmit","setLoadingSubmit","_useState27","_useState28","openAssignDialog","setOpenAssignDialog","_useState29","_useState30","assignAddressClint","setAssignAddressClint","_useState31","_useState32","assignDeliveryParams","setAssignDeliveryParams","_useState33","_useState34","beginValidation","setBeginValidation","_useState35","_useState36","selectedClientCheck","setSelectedClientCheckShow","_useState37","_useState38","deliveryCostCheck","setDeliveryCostCheckShow","_useState39","_useState40","selectedPickUpAddressCheck","setSelectedPickUpAddressCheckShow","_useState41","_useState42","selectedDeliveryAddressCheck","setSelectedDeliveryAddressCheckShow","_useState43","name","type","active","_useState44","deliverTypeArr","setDeliverTypeArr","_useState45","_useState46","myNetwork","setMyNetwork","_useState47","_useState48","networkInputValue","setNetworkInputValue","_useState49","_useState50","networkLoading","setNetworkLoading","deliveryCostRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","console","log","cityId","then","res","data","membersData","timer","setTimeout","clearTimeout","filter","client","FullName","toLowerCase","replaceAll","includes","showValidation","current","value","hideValidation","setCloseAssignDialog","setCloseMainDialog","handleDeliveryTypeClick","index","tempArr","_toConsumableArray","i","length","createElement","Fragment","className","onClick","push","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","width","height","marginRight","marginLeft","fill","size","show","onHide","centered","animation","backdrop","Header","closeButton","Title","Body","clients","onSearch","onSelect","Control","marginTop","placeholder","formatMessage","id","ref","eve","Toggle","variant","Menu","Item","eventKey","Group","map","item","key","addresses","selectedAddress","cursor","w","h","overflowY","scope","member","PhoneNumber","deliveryPrice","Footer","disabled","CreatedBy","DeliveryParams","_lengthRef$current","_widthRef$current","_heightRef$current","_weightRef$current","deliveryWay","TypeLoad","ClientMobileNumber","DeliveryPrice","CostLoad","DetailsLoad","LengthLoad","WidthLoad","HeightLoad","WeightLoad","qrCode","charAt","firstZero","replaced","replace","AddressClint","IdCity","IdArea","areaId","OtherDetails","details","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","IdAreaDes","OtherDetailsDes","LatReciver","LongReciver","ReciverAddressId","ReceiverAddressNum","phone_number","JSON","stringify","onSuccess","_lengthRef$current2","_widthRef$current2","_heightRef$current2","_weightRef$current2","_lengthRef$current3","_widthRef$current3","_heightRef$current3","_weightRef$current3","tempDeliveryParams","tempAddressClint","IdGov","governoratId","IdProv","provinceId","IdProvDes","IdGovDes","ReceiverAddressName","window"],"sources":["/home/system/togo-web-test/src/components/CreateNewOrder.jsx"],"sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../i18n/translate\";\r\nimport { ReactComponent as SendIcon } from \"../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers } from \"../APIs/OrdersAPIs\";\r\n// import { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import GetAllClients) */\r\nimport { GetTransporterClients } from \"../APIs/OrdersAPIs\"; /* edited (import GetTransporterClients) */\r\nimport { ReactComponent as FoodIcon } from \"../assets/images/food.svg\";\r\nimport { ReactComponent as SmBoxIcon } from \"../assets/images/smallBox.svg\";\r\nimport { ReactComponent as MedBoxIcon } from \"../assets/images/medbox.svg\";\r\nimport { ReactComponent as BigBoxIcon } from \"../assets/images/largebox.svg\";\r\nimport { ReactComponent as DeliveryTruckIcon } from \"../assets/images/deliveryTruck.svg\";\r\nimport { ReactComponent as LocationIcon } from \"../assets/images/location.svg\";\r\nimport { ReactComponent as AttachmentIcon } from \"../assets/images/attachment.svg\";\r\nimport { IoIosGitNetwork } from 'react-icons/io';\r\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"./AddressDropdown\";\r\nimport ClientDropdown from \"./ClientDropdown\"; /* edited (import ClientDropdown) */\r\nimport CreateAddress from \"./CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../Actions/GeneralActions\";\r\n\r\nimport { isTransporter } from \"../Util\"; /* edited (new import) */\r\n\r\nimport SubmitAndAssignDialog from \"./SubmitAndAssignDialog\"; /* edited (new import) */\r\n\r\nimport \"./CreateNewOrder.css\";\r\n\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport function CreateNewOrder(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.2rem\"\r\n        },\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState(''); /* edited (clientInputValue added) */\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) Note: not all clients */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const [openAssignDialog, setOpenAssignDialog] = useState(false);\r\n    const [assignAddressClint, setAssignAddressClint] = useState(false);\r\n    const [assignDeliveryParams, setAssignDeliveryParams] = useState(false);\r\n\r\n    /* edited (validation variables) */\r\n\r\n    const [beginValidation, setBeginValidation] = useState(false);\r\n    const [selectedClientCheck, setSelectedClientCheckShow] = useState(false);\r\n    const [deliveryCostCheck, setDeliveryCostCheckShow] = useState(false);\r\n    const [selectedPickUpAddressCheck, setSelectedPickUpAddressCheckShow] = useState(false);\r\n    const [selectedDeliveryAddressCheck, setSelectedDeliveryAddressCheckShow] = useState(false);\r\n\r\n    const [deliverTypeArr, setDeliverTypeArr] = useState([{ name: translate(\"ORDERS.\" + DeliveryTypes[1]), type: \"1\", active: \"active\" }, { name: translate(\"ORDERS.\" + DeliveryTypes[2]), type: \"2\", active: \"\" }]);\r\n\r\n    const [myNetwork, setMyNetwork] = useState([]);\r\n    const [networkInputValue, setNetworkInputValue] = useState('');\r\n    const [networkLoading, setNetworkLoading] = useState('');\r\n\r\n    const deliveryCostRef = useRef(); /* edited (deliveryCostRef added) */\r\n    // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n\r\n        setNetworkLoading(true);\r\n\r\n        console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\r\n\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n\r\n            setNetworkLoading(false);\r\n\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n        });\r\n\r\n    }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetDefinedAddresses(inputValue).then((res) => {\r\n                    setLoading(false);\r\n                    setDeliverAddresses(res.data);\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetTransporterClients().then((res) => {\r\n                    setLoading(false);\r\n\r\n                    setAllClients(res.data.membersData.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, open]);\r\n\r\n    /* edited (show and hide validation error messages handles) */\r\n\r\n    function showValidation() {\r\n        // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\r\n\r\n        if (isTransporter()) {\r\n            if (selectedClient) {\r\n                setSelectedClientCheckShow(false)\r\n            } else {\r\n                setSelectedClientCheckShow(true)\r\n            }\r\n\r\n            if (deliveryCostRef && deliveryCostRef.current.value > 0) {\r\n                setDeliveryCostCheckShow(false)\r\n            } else {\r\n                setDeliveryCostCheckShow(true)\r\n            }\r\n        }\r\n\r\n        if (selectedPickUpAddress) {\r\n            setSelectedPickUpAddressCheckShow(false)\r\n        } else {\r\n            setSelectedPickUpAddressCheckShow(true)\r\n        }\r\n\r\n        if (selectedDeliveryAddress) {\r\n            setSelectedDeliveryAddressCheckShow(false)\r\n        } else {\r\n            setSelectedDeliveryAddressCheckShow(true)\r\n        }\r\n\r\n        // console.log(\"show validation\");\r\n    }\r\n\r\n    function hideValidation() {\r\n        setBeginValidation(false);\r\n        setSelectedClientCheckShow(false);\r\n        setDeliveryCostCheckShow(false);\r\n        setSelectedPickUpAddressCheckShow(false);\r\n        setSelectedDeliveryAddressCheckShow(false);\r\n\r\n        // console.log(\"hide validation\");\r\n    }\r\n\r\n    function setCloseAssignDialog() {\r\n        setOpenAssignDialog(false);\r\n    }\r\n\r\n    function setCloseMainDialog() {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDeliveryTypeClick = (index, type) => {\r\n        setDeliveryType(type);\r\n\r\n        let tempArr = [...deliverTypeArr];\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            tempArr[i].active = \"\";\r\n        }\r\n\r\n        tempArr[index].active = \"active\";\r\n\r\n        setDeliverTypeArr(tempArr);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* edited (change button style if the user is transporter) */}\r\n\r\n            {/* edited (on-header button commented) */}\r\n            {/*<Button className={`${props.children ? \"\" : !isTransporter() && \"btn-grad text-white\"}`} variant={isTransporter() && \"outline-light\"} onClick={()=>{\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight:\"5px\", fill:\"currentcolor\"}} />\r\n                        {translate(\"ORDERS.NEW_CUSTOMER_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>*/}\r\n            {/* {isTransporter() && <Button className={\"btn-grad text-white\"} onClick={() => {\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{ display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight: \"5px\", marginLeft: \"5px\", fill: \"currentcolor\" }} />\r\n                        {isTransporter() ? translate(\"ORDERS.NEW_CUSTOMER_ORDER\") : translate(\"ORDERS.CREATE_NEW_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>} */}\r\n\r\n            {/* create new order for client */}\r\n            {!isTransporter() && <Button className={\"btn-grad text-white\"} onClick={() => {\r\n                history.push(\"/account/create-order\");\r\n            }}>\r\n                <SendIcon style={{ display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight: \"5px\", marginLeft: \"5px\", fill: \"currentcolor\" }} />\r\n                {translate(\"ORDERS.CREATE_NEW_ORDER\")}\r\n            </Button>}\r\n\r\n            {/* <span style={{ color: \"white\", position: \"absolute\", left: \"0\", cursor: \"pointer\" }} onClick={() => {\r\n                 history.push(\"/account/create-order\");\r\n            }}>\r\n                dont't click\r\n            </span> */}\r\n\r\n            <Modal size=\"lg\" show={open} onHide={handleClose} centered animation={true} backdrop=\"static\">\r\n\r\n                <Modal.Header closeButton style={styles.cardHeaderLg}>\r\n                    <Modal.Title>{translate(\"ORDERS.CREATE_ORDER\")}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"mt-5\">\r\n\r\n                    {/* edited (Client Mobile Number & Delivery Cost Fields added) */}\r\n                    {isTransporter() && <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9\">\r\n                                {/*<Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Client Mobile Number\" ref={clientMobileNumberRef} />*/}\r\n\r\n                                {/* edited (add clients dropdown) */}\r\n\r\n                                <ClientDropdown /* fofo */\r\n                                    loading={loading}\r\n                                    clients={allClients}\r\n                                    onSearch={setClientInputValue}\r\n                                    onSelect={setSelectedClient}\r\n                                    selectedClient={selectedClient}\r\n                                />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <Form.Control type=\"number\" style={{ marginTop: \"9px\" }} className=\"rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.DELIVERY_COST\" })} ref={deliveryCostRef} />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr className=\"mt-4 mb-3\" />\r\n                    </>}\r\n\r\n                    {/* <div className=\"row mt-3 mb-4\">\r\n                        <div className=\"col-lg-3\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { paddinRight: 0 } : { paddingLeft: 0 }}>\r\n                            <hr className=\"mt-3\" />\r\n                        </div>\r\n                        <div className=\"col-lg-6 d-flex justify-content-center\" style={{borderRight: \"1px solid lightgray\", borderLeft: \"1px solid lightgray\"}}>\r\n                            <div className=\"h5\" style={{ color: \"#26a69a\" }}>\r\n                                {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { paddingLeft: 0 } : { paddinRight: 0 }}>\r\n                            <hr className=\"mt-3\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                            {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <Dropdown\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"togo-dropdown shadow\"\r\n                                onSelect={(eve) => {\r\n                                    setPackageType(eve);\r\n                                }}>\r\n                                <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                                    {React.createElement(PackageTypesIcons[packageType], { style: { width: \"20px\", height: \"20px\" }, className: \"me-1\" })}\r\n                                    <div style={{ width: \"97%\" }}>\r\n                                        {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                                    </div>\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu className=\"w-100\">\r\n                                    <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                        <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                        <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                        <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                        <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n\r\n                        {packageType !== \"1\" && packageType !== \"2\" && <div className=\"col-lg-8\" style={{ marginTop: \"2px\" }}>\r\n                            {/* <div className=\"row\">\r\n                                <div className=\"my-1\">{translate(\"ORDERS.DIMENSIONS_LABEL\")}</div>\r\n                            </div> */}\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Group>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            className=\"rounded-22 shadow\"\r\n                                            placeholder={intl.formatMessage({ id: \"TEMP.HEIGHT\" })}\r\n                                            ref={heightRef}\r\n                                        />\r\n                                        {/* <Form.Text muted>\r\n                                            optional\r\n                                        </Form.Text> */}\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        className=\"rounded-22 shadow\"\r\n                                        placeholder={intl.formatMessage({ id: \"TEMP.WIDTH\" })}\r\n                                        ref={widthRef}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        className=\"rounded-22 shadow\"\r\n                                        placeholder={intl.formatMessage({ id: \"TEMP.LENGTH\" })}\r\n                                        ref={lengthRef}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        className=\"rounded-22 shadow\"\r\n                                        placeholder={intl.formatMessage({ id: \"TEMP.WEIGHT\" })}\r\n                                        ref={weightRef}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <hr className=\"mt-4 mb-3\" />\r\n\r\n                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                        <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                        {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                    </div>\r\n\r\n                    {/* <div className=\"row mt-3 mb-3\">\r\n                        <div className=\"col-lg-3\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { borderRight: \"1px solid lightgray\" } : { borderLeft: \"1px solid lightgray\" }}>\r\n                            <div className=\"d-flex align-items-center my-1 h5\" style={{ color: \"#26a69a\" }}>\r\n                                <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-9\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { paddingLeft: 0 } : { paddinRight: 0 }}>\r\n                            <hr className=\"mt-3\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"toggleButtonsContainer\">\r\n                                {\r\n                                    deliverTypeArr.map((item, index) => {\r\n                                        return <div key={index} className={\"toggleButton \" + item.active} onClick={() => { handleDeliveryTypeClick(index, item.type) }}>\r\n                                            <div className=\"radio\"><div className=\"innerRadio\"></div></div> {item.name}\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            {deliveryType === \"2\" &&\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    className=\"rounded-22 shadow\" style={{ width: \"35%\", marginTop: \"5px\" }}\r\n                                    placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                    ref={codAmountRef}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr className=\"mt-4 mb-3\" />\r\n\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                <LocationIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                            </div>\r\n\r\n                            <AddressDropdown\r\n                                loading={loading}\r\n                                addresses={deliverAddresses}\r\n                                onSearch={setInputValue}\r\n                                onSelect={setSelectedPickUpAddress}\r\n                                selectedAddress={selectedPickUpAddress}\r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedPickUpAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n\r\n                        {/* <div className=\"mt-5\">\r\n                            <i className=\"bi bi-arrow-right h3\"></i>\r\n                        </div> */}\r\n\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                <SendIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                            </div>\r\n\r\n                            <AddressDropdown\r\n                                loading={loading}\r\n                                addresses={deliverAddresses}\r\n                                onSearch={setInputValue}\r\n                                onSelect={setSelectedDeliveryAddress}\r\n                                selectedAddress={selectedDeliveryAddress}\r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedDeliveryAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n                        <CreateAddress>\r\n                            <div style={{ cursor: \"pointer\", marginTop: \"30px\" }} className=\"btn-grad-circle p-2\">\r\n                                <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                            </div>\r\n                        </CreateAddress>\r\n                    </div>\r\n\r\n                    <hr className=\"mt-4 mb-3\" />\r\n\r\n                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                        <AttachmentIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                        {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                    </div>\r\n\r\n                    <Form.Control type=\"text\" className=\"mt-2 rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.NOTES\" })} ref={notesRef} />\r\n\r\n                    {false && selectedPickUpAddress !== \"\" && selectedDeliveryAddress !== \"\" && <>\r\n                        <hr className=\"mt-4 mb-3\" />\r\n\r\n                        <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                            <IoIosGitNetwork style={{ width: \"20px\", height: \"20px\", color: \"black\" }} className=\"me-1\" />\r\n                            {translate(\"TEMP.CHOOSE_FROM_NETWORK\")}\r\n                        </div>\r\n\r\n                        {/* <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">{translate(\"TEMP.NAME\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PHONE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PRICE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.ASSIGN\")}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                </Table>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"row\" style={{ height: \"200px\", overflowY: \"scroll\" }}>\r\n                            <div className=\"col-lg-12\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">{translate(\"TEMP.NAME\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PHONE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PRICE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.ASSIGN\")}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            myNetwork.map((member, index) => {\r\n                                                return <tr key={index}>\r\n                                                    <td>{member.FullName}</td>\r\n                                                    <td>{member.PhoneNumber}</td>\r\n                                                    <td>{member.deliveryPrice + \" NIS\"}</td>\r\n                                                    <td>\r\n                                                        <Button>\r\n                                                            {translate(\"TEMP.ASSIGN\")}\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </>}\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-center\">\r\n\r\n                    {/*<Form.Check type=\"checkbox\" label=\"Only for my network\" />*/}\r\n\r\n                    <Button\r\n                        className=\"btn-grad\"\r\n                        style={{ width: \"45%\" }}\r\n                        disabled={loadingSubmit}\r\n                        onClick={() => {\r\n\r\n                            setBeginValidation(true);\r\n\r\n                            let CreatedBy = \"\"; /* edited (CreatedBy variable added) */\r\n                            let DeliveryParams = {}; /* edited (DeliveryParams as empty object) */\r\n\r\n                            if (isTransporter()) {\r\n                                if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\r\n                                    // console.log(\"true\");\r\n\r\n                                    setLoadingSubmit(true);\r\n\r\n                                    hideValidation();\r\n\r\n                                    CreatedBy = \"Transporter\";\r\n\r\n                                    DeliveryParams = {\r\n                                        deliveryWay: deliveryType,\r\n                                        TypeLoad: packageType,\r\n                                        // ClientMobileNumber: clientMobileNumberRef.current.value, /* edited (add ClientMobileNumber) */\r\n                                        ClientMobileNumber: selectedClient.PhoneNumber, /* edited (add ClientMobileNumber from dropdown) */\r\n                                        DeliveryPrice: deliveryCostRef.current.value, /* edited (add DeliveryPrice) */\r\n                                        CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                        DetailsLoad: notesRef.current.value,\r\n                                        LengthLoad: lengthRef.current?.value || \"\",\r\n                                        WidthLoad: widthRef.current?.value || \"\",\r\n                                        HeightLoad: heightRef.current?.value || \"\",\r\n                                        WeightLoad: weightRef.current?.value || \"\",\r\n                                        qrCode: \"\"\r\n                                    };\r\n\r\n                                    /* edited (fix client mobile number intro) */\r\n                                    if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\r\n                                        const firstZero = DeliveryParams.ClientMobileNumber[0];\r\n                                        const replaced = DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');\r\n                                        DeliveryParams.ClientMobileNumber = replaced;\r\n                                    }\r\n\r\n                                    const AddressClint = {\r\n                                        IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                        IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                        OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                        LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                        LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                        SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                        IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                        IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                        OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                        LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                        LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                        ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                        ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                    };\r\n\r\n                                    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then((res) => {\r\n                                        /* edited (test data) */\r\n                                        // console.log(\"---------------\\nres : \" + res.data);\r\n\r\n                                        /* to be edited (to print order by returned id) */\r\n\r\n                                        // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\r\n                                        //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n                                        // setOpenConf(true);\r\n\r\n                                        /* if (res.data == \"Blocked\") {\r\n                                            dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n                                        } */\r\n\r\n                                        setOpen(false);\r\n                                        setLoadingSubmit(false);\r\n                                        props.onSuccess();\r\n                                    });\r\n\r\n                                } else {\r\n                                    // console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n                            } else {\r\n                                if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n\r\n                                    setLoadingSubmit(true);\r\n\r\n                                    // console.log(\"true\");\r\n\r\n                                    hideValidation();\r\n\r\n                                    CreatedBy = \"Client\";\r\n\r\n                                    DeliveryParams = {\r\n                                        deliveryWay: deliveryType,\r\n                                        TypeLoad: packageType,\r\n                                        CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                        DetailsLoad: notesRef.current.value,\r\n                                        LengthLoad: lengthRef.current?.value || \"\",\r\n                                        WidthLoad: widthRef.current?.value || \"\",\r\n                                        HeightLoad: heightRef.current?.value || \"\",\r\n                                        WeightLoad: weightRef.current?.value || \"\",\r\n                                        qrCode: \"\"\r\n                                    };\r\n\r\n                                    const AddressClint = {\r\n                                        IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                        IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                        OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                        LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                        LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                        SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                        IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                        IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                        OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                        LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                        LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                        ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                        ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                    };\r\n\r\n                                    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then((res) => {\r\n                                        /* edited (test data) */\r\n                                        // console.log(\"---------------\\nres : \" + res.data);\r\n\r\n                                        /* to be edited (to print order by returned id) */\r\n\r\n                                        // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\r\n                                        //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n                                        // setOpenConf(true);\r\n\r\n                                        /*  if (res.data == \"Blocked\") {\r\n                                             dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n                                         } */\r\n\r\n                                        // console.log(res.data)\r\n\r\n                                        setOpen(false);\r\n                                        setLoadingSubmit(false);\r\n                                        props.onSuccess();\r\n                                    });\r\n                                } else {\r\n                                    // console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n\r\n                                /* - deliveryWay \r\n                                This one from radio button for delivery type it contains four values \r\n                                    (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n                                - CostLoad   \r\n                                    This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n                                - TypeLoad   \r\n                                    This one from the list we pick Food or Small/Medium/Large package where \r\n                                        Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n                                - qrCode\r\n                                    in case of submit with qrcode we will put the value else it will be empty */\r\n                            }\r\n                        }}\r\n                    >\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                        {isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")}\r\n                    </Button>\r\n\r\n                    {!isTransporter() && <Button\r\n                        className=\"btn-grad\"\r\n                        style={{ width: \"45%\" }}\r\n                        onClick={() => {\r\n                            setBeginValidation(true);\r\n\r\n                            if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n\r\n                                hideValidation();\r\n\r\n                                const tempDeliveryParams = {\r\n                                    deliveryWay: deliveryType,\r\n                                    TypeLoad: packageType,\r\n                                    CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                    DetailsLoad: notesRef.current.value,\r\n                                    LengthLoad: lengthRef.current?.value || \"\",\r\n                                    WidthLoad: widthRef.current?.value || \"\",\r\n                                    HeightLoad: heightRef.current?.value || \"\",\r\n                                    WeightLoad: weightRef.current?.value || \"\",\r\n                                    qrCode: \"\"\r\n                                };\r\n\r\n                                // console.log(selectedDeliveryAddress);\r\n\r\n                                const tempAddressClint = {\r\n                                    IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                    IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                    IdGov: selectedPickUpAddress.governoratId,  // from selected pick up address\r\n                                    IdProv: selectedPickUpAddress.provinceId,  // from selected pick up address\r\n                                    OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                    LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                    LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                    SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                    IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                    IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                    IdProvDes: selectedDeliveryAddress.provinceId, // from selected delivery to address\r\n                                    IdGovDes: selectedDeliveryAddress.governoratId, // from selected delivery to address\r\n                                    OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                    LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                    LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                    ReciverAddressId: selectedDeliveryAddress.id, // from selected delivery to address\r\n                                    ReceiverAddressNum: selectedDeliveryAddress.phone_number,\r\n                                    ReceiverAddressName: selectedDeliveryAddress.name\r\n                                };\r\n\r\n                                // console.log(selectedPickUpAddress.areaId + \" -> \" + selectedDeliveryAddress.areaId);\r\n\r\n                                setAssignDeliveryParams(tempDeliveryParams);\r\n                                setAssignAddressClint(tempAddressClint);\r\n\r\n                                setOpenAssignDialog(true);\r\n                            } else {\r\n                                showValidation();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {translate(\"TEMP.SUBMIT_AND_ASSIGN\")}\r\n                    </Button>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {openAssignDialog && <SubmitAndAssignDialog\r\n                onSuccess={() => props.onSuccess()}\r\n                setCloseAssignDialog={setCloseAssignDialog}\r\n                setCloseMainDialog={setCloseMainDialog}\r\n                loadingSubmit={loadingSubmit}\r\n                assignDeliveryParams={assignDeliveryParams}\r\n                assignAddressClint={assignAddressClint} />}\r\n\r\n            <Modal\r\n                show={openConf}\r\n                onHide={() => {\r\n\r\n                    setOpenConf(false);\r\n                }}\r\n                animation={false}\r\n                backdrop=\"static\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>Would you like to print a waybill ?</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={() => {\r\n                            setOpenConf(false);\r\n                        }}\r\n                    >\r\n                        No\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            setOpenConf(false);\r\n                            window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}