{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup, FloatingLabel, Badge } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers, ClientAssignOrder, checkTripCost, GetCitiesArea, getClientDefaultAddress } from \"../../APIs/OrdersAPIs\";\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\";\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/attachment.svg\";\nimport { IoIosGitNetwork } from 'react-icons/io';\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\nimport AddressDropdown from \"../AddressDropdown\";\nimport ClientDropdown from \"../ClientDropdown\";\nimport CreateAddress from \"../CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nimport { isTransporter } from \"../../Util\";\nimport SubmitAndAssignDialog from \"../SubmitAndAssignDialog\";\nimport \"../CreateNewOrder.css\";\nimport { useHistory } from \"react-router\";\nimport { imgBaseUrl } from \"../../Constants/GeneralCont\";\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport default function CreateNewOrder(props) {\n  var _this = this;\n\n  var history = useHistory();\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.5rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.2rem\"\n    }\n  };\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openConf = _useState4[0],\n      setOpenConf = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"2\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientInputValue = _useState12[0],\n      setClientInputValue = _useState12[1];\n  /* edited (clientInputValue added) */\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deliverAddresses = _useState14[0],\n      setDeliverAddresses = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allClients = _useState16[0],\n      setAllClients = _useState16[1];\n  /* edited (setAllClients added) Note: not all clients */\n\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedDeliveryAddress = _useState18[0],\n      setSelectedDeliveryAddress = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedPickUpAddress = _useState20[0],\n      setSelectedPickUpAddress = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedClient = _useState22[0],\n      setSelectedClient = _useState22[1];\n  /* edited (setSelectedClient added) */\n\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loading = _useState24[0],\n      setLoading = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      loadingSubmit = _useState26[0],\n      setLoadingSubmit = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      openAssignDialog = _useState28[0],\n      setOpenAssignDialog = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      assignAddressClint = _useState30[0],\n      setAssignAddressClint = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      assignDeliveryParams = _useState32[0],\n      setAssignDeliveryParams = _useState32[1];\n  /* edited (validation variables) */\n\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      beginValidation = _useState34[0],\n      setBeginValidation = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedClientCheck = _useState36[0],\n      setSelectedClientCheckShow = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      deliveryCostCheck = _useState38[0],\n      setDeliveryCostCheckShow = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      selectedPickUpAddressCheck = _useState40[0],\n      setSelectedPickUpAddressCheckShow = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      amountCheck = _useState42[0],\n      setAmountCheck = _useState42[1];\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      selectedDeliveryAddressCheck = _useState44[0],\n      setSelectedDeliveryAddressCheckShow = _useState44[1];\n\n  var _useState45 = useState([{\n    name: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    type: \"1\",\n    active: \"active\"\n  }, {\n    name: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    type: \"2\",\n    active: \"\"\n  }]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      deliverTypeArr = _useState46[0],\n      setDeliverTypeArr = _useState46[1];\n\n  var _useState47 = useState([]),\n      _useState48 = _slicedToArray(_useState47, 2),\n      myNetwork = _useState48[0],\n      setMyNetwork = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      networkInputValue = _useState50[0],\n      setNetworkInputValue = _useState50[1];\n\n  var _useState51 = useState(false),\n      _useState52 = _slicedToArray(_useState51, 2),\n      orderSubmitted = _useState52[0],\n      setOrderSubmitted = _useState52[1];\n\n  var _useState53 = useState(\"\"),\n      _useState54 = _slicedToArray(_useState53, 2),\n      createdOrderId = _useState54[0],\n      setCreatedOrderId = _useState54[1];\n\n  var _useState55 = useState(false),\n      _useState56 = _slicedToArray(_useState55, 2),\n      assignLoading = _useState56[0],\n      setAssignLoading = _useState56[1];\n\n  var _useState57 = useState([]),\n      _useState58 = _slicedToArray(_useState57, 2),\n      offers = _useState58[0],\n      setOffers = _useState58[1];\n\n  var _useState59 = useState([]),\n      _useState60 = _slicedToArray(_useState59, 2),\n      availableTransporters = _useState60[0],\n      setAvailableTransporters = _useState60[1]; // client default address\n\n\n  var _useState61 = useState(\"\"),\n      _useState62 = _slicedToArray(_useState61, 2),\n      defaultAddressId = _useState62[0],\n      setDefaultAddressId = _useState62[1];\n\n  var _useState63 = useState(\"\"),\n      _useState64 = _slicedToArray(_useState63, 2),\n      defaultName = _useState64[0],\n      setDefaultName = _useState64[1];\n\n  var _useState65 = useState(\"\"),\n      _useState66 = _slicedToArray(_useState65, 2),\n      defaultAddressName = _useState66[0],\n      setDefaultAddressName = _useState66[1];\n\n  var _useState67 = useState(\"\"),\n      _useState68 = _slicedToArray(_useState67, 2),\n      defaultAddressMobile = _useState68[0],\n      setDefaultAddressMobile = _useState68[1];\n\n  var deliveryCostRef = useRef();\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  /* useEffect(() => {\r\n        setNetworkLoading(true);\r\n        // console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n            setNetworkLoading(false);\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n      });\r\n    }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]); */\n\n  useEffect(function () {\n    if (!isTransporter()) {\n      getClientDefaultAddress().then(function (res) {\n        // console.log(res.data);\n        if (res.data != null) {\n          setDefaultAddressId(res.data.addressId);\n          setDefaultName(res.data.name);\n          setDefaultAddressName(res.data.addressName + \", \" + res.data.areaName);\n          setDefaultAddressMobile(res.data.phone);\n        }\n      });\n    }\n  }, []);\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setLoading(true);\n      GetDefinedAddresses(inputValue).then(function (res) {\n        // console.log(res.data)\n        setLoading(false);\n        setDeliverAddresses(res.data);\n      });\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  /* edited (get all clients) */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setLoading(true);\n      GetTransporterClients().then(function (res) {\n        setLoading(false);\n        setAllClients(res.data.membersData.filter(function (client) {\n          return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n        }));\n      });\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, open]);\n  /* edited (show and hide validation error messages handles) */\n\n  function showValidation() {\n    var _codAmountRef$current, _codAmountRef$current2;\n\n    // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\n    if (isTransporter()) {\n      if (selectedClient) {\n        setSelectedClientCheckShow(false);\n      } else {\n        setSelectedClientCheckShow(true);\n      }\n\n      if (deliveryCostRef && deliveryCostRef.current.value > 0) {\n        setDeliveryCostCheckShow(false);\n      } else {\n        setDeliveryCostCheckShow(true);\n      }\n    }\n\n    if (selectedPickUpAddress) {\n      setSelectedPickUpAddressCheckShow(false);\n    } else {\n      setSelectedPickUpAddressCheckShow(true);\n    }\n\n    if (selectedDeliveryAddress) {\n      setSelectedDeliveryAddressCheckShow(false);\n    } else {\n      setSelectedDeliveryAddressCheckShow(true);\n    }\n\n    if (((_codAmountRef$current = codAmountRef.current) === null || _codAmountRef$current === void 0 ? void 0 : _codAmountRef$current.value) && ((_codAmountRef$current2 = codAmountRef.current) === null || _codAmountRef$current2 === void 0 ? void 0 : _codAmountRef$current2.value) >= 3) {\n      setAmountCheck(false);\n    } else {\n      setAmountCheck(true);\n    } // console.log(\"show validation\");\n\n  }\n\n  function hideValidation() {\n    setBeginValidation(false);\n    setSelectedClientCheckShow(false);\n    setDeliveryCostCheckShow(false);\n    setSelectedPickUpAddressCheckShow(false);\n    setSelectedDeliveryAddressCheckShow(false);\n    setAmountCheck(false); // console.log(\"hide validation\");\n  }\n\n  function setCloseAssignDialog() {\n    setOpenAssignDialog(false);\n  }\n\n  function setCloseMainDialog() {\n    setOpen(false);\n  }\n\n  var handleDeliveryTypeClick = function handleDeliveryTypeClick(index, type) {\n    setDeliveryType(type);\n\n    var tempArr = _toConsumableArray(deliverTypeArr);\n\n    for (var i = 0; i < tempArr.length; i++) {\n      tempArr[i].active = \"\";\n    }\n\n    tempArr[index].active = \"active\";\n    setDeliverTypeArr(tempArr);\n  };\n\n  var createOrderHandler = function createOrderHandler(DeliveryParams, CreatedBy, AddressClint) {\n    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy, JSON.stringify(AddressClint)).then(function (res) {\n      /* edited (test data) */\n      // console.log(res.data); // {\"server_response\":[{\"OrderId\":\"936\"}]}\n\n      /* to be edited (to print order by returned id) */\n      // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;   // <--------------------------------------------------------------------------- to test\n      //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n\n      /*  if (res.data == \"Blocked\") {\r\n           dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n       } */\n      var orderId = res.data.split('OrderId\":\"')[1].split('\"')[0]; // console.log(orderId);\n\n      setCreatedOrderId(orderId); // setOpenConf(true);\n\n      setOrderSubmitted(true);\n\n      if (!isTransporter()) {\n        // getClientNetwork();\n        // location.href = \"#availableOffers\";\n        history.push(\"/account/Order/\" + orderId);\n      }\n\n      setLoadingSubmit(false);\n\n      if (isTransporter()) {\n        history.push(\"/account/Order/\" + orderId);\n      }\n    });\n  };\n\n  var getClientNetwork = function getClientNetwork() {\n    GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then(function (res) {\n      setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\n      // merge with previous \n    });\n  };\n\n  var getoOffers = function getoOffers() {\n    checkTripCost(orderId, isTransporter()).then(function (tripCostRes) {\n      // console.log(tripCostRes); // temp test\n      if (tripCostRes && tripCostRes !== \"CostNotSend\") {\n        setOffers(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\n        setCostSet(true);\n      } else {\n        setCostSet(false);\n      }\n    });\n  };\n\n  var _useState69 = useState(false),\n      _useState70 = _slicedToArray(_useState69, 2),\n      validated = _useState70[0],\n      setValidated = _useState70[1];\n\n  var _useState71 = useState([]),\n      _useState72 = _slicedToArray(_useState71, 2),\n      provinces = _useState72[0],\n      setProvinces = _useState72[1];\n\n  var _useState73 = useState([]),\n      _useState74 = _slicedToArray(_useState73, 2),\n      governorates = _useState74[0],\n      setGovernorates = _useState74[1];\n\n  var _useState75 = useState([]),\n      _useState76 = _slicedToArray(_useState75, 2),\n      cities = _useState76[0],\n      setCities = _useState76[1];\n\n  var _useState77 = useState([]),\n      _useState78 = _slicedToArray(_useState77, 2),\n      areas = _useState78[0],\n      setAreas = _useState78[1];\n  /* useEffect(() => {\r\n      // provinces, governorates, cities, areas\r\n      GetCitiesArea(\"provinces\", -1).then((res) => {\r\n          // console.log(res.data.server_response);\r\n          setProvinces(res.data.server_response);\r\n      })\r\n  }, []) */\n\n\n  var getProvences = function getProvences() {\n    GetCitiesArea(\"provinces\", -1).then(function (res) {\n      // console.log(res.data.server_response);\n      setProvinces(res.data.server_response);\n    });\n  };\n\n  var updateSubLevel = function updateSubLevel(type, superId) {\n    GetCitiesArea(type, superId, 1).then(function (res) {\n      // console.log(res.data.server_response)\n      if (type === \"governorates\") {\n        setGovernorates([]);\n        setCities([]);\n        setAreas([]);\n        setGovernorates(res.data.server_response);\n      } else if (type === \"cities\") {\n        setCities([]);\n        setAreas([]);\n        setCities(res.data.server_response);\n      } else {\n        setAreas([]);\n        setAreas(res.data.server_response);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upperBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    style: {\n      height: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"h2 d-flex justify-content-center\",\n    style: {\n      marginTop: \"150px\",\n      marginBottom: \"120px\",\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\")), isTransporter() && /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 37\n    }\n  }, translate(\"TEMP.MY_CLIENTS\"))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"mb-3 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown, {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    style: {\n      marginTop: \"9px\"\n    },\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.DELIVERY_COST\"\n    }),\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 45\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 37\n    }\n  }, translate(\"TEMP.ORDER_INFO\"))), /*#__PURE__*/React.createElement(Form, {\n    id: \"orderForm\",\n    validated: validated,\n    noValidate: true,\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var formData = new FormData(event.target),\n          formDataObj = Object.fromEntries(formData.entries()); // console.log(formDataObj);\n\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === true) {\n        var _lengthRef$current, _widthRef$current, _heightRef$current, _weightRef$current;\n\n        // if all set, create order here: (get data from formDataObj)\n        var CreatedBy = \"\";\n        var DeliveryParams = {\n          deliveryWay: deliveryType,\n          TypeLoad: packageType,\n          CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n          // 2 or 4\n          DetailsLoad: notesRef.current.value,\n          LengthLoad: ((_lengthRef$current = lengthRef.current) === null || _lengthRef$current === void 0 ? void 0 : _lengthRef$current.value) || \"\",\n          WidthLoad: ((_widthRef$current = widthRef.current) === null || _widthRef$current === void 0 ? void 0 : _widthRef$current.value) || \"\",\n          HeightLoad: ((_heightRef$current = heightRef.current) === null || _heightRef$current === void 0 ? void 0 : _heightRef$current.value) || \"\",\n          WeightLoad: ((_weightRef$current = weightRef.current) === null || _weightRef$current === void 0 ? void 0 : _weightRef$current.value) || \"\",\n          qrCode: \"\"\n        };\n        var AddressClint = {\n          IdCity: selectedPickUpAddress.cityId,\n          // from selected pick up address\n          IdArea: selectedPickUpAddress.areaId,\n          // from selected pick up address\n          OtherDetails: selectedPickUpAddress.details,\n          // details from selected pickup address\n          LatSender: selectedPickUpAddress.latitude,\n          // from selected pick up address\n          LongSender: selectedPickUpAddress.longitude,\n          //  from selected pick up address\n          SenderAddressId: selectedPickUpAddress.id,\n          // from selected pick up address\n          IdCityDes: selectedDeliveryAddress.cityId,\n          // from selected delivery to address\n          IdAreaDes: selectedDeliveryAddress.areaId,\n          // from selected delivery to address\n          OtherDetailsDes: selectedDeliveryAddress.details,\n          // details from selected delivery to address\n          LatReciver: selectedDeliveryAddress.latitude,\n          // from selected delivery to address\n          LongReciver: selectedDeliveryAddress.longitude,\n          // from selected delivery to address\n          ReciverAddressId: selectedDeliveryAddress.id,\n          // from selected delivery to address\n          ReceiverAddressNum: selectedDeliveryAddress.phone_number\n        };\n\n        if (isTransporter()) {\n          setLoadingSubmit(true);\n          CreatedBy = \"Transporter\";\n          DeliveryParams.ClientMobileNumber = selectedClient.PhoneNumber;\n          DeliveryParams.DeliveryPrice = deliveryCostRef.current.value; // createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\n        } else {\n          setLoadingSubmit(true);\n          CreatedBy = \"Client\"; // createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\n        }\n      }\n\n      setValidated(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 53\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"togo-dropdown shadow\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 61\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 65\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 69\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 69\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 69\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 69\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1]))))), packageType !== \"1\" && packageType !== \"2\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    style: {\n      marginTop: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 100\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"height\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.HEIGHT\"\n    }),\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 69\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"width\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WIDTH\"\n    }),\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"length\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.LENGTH\"\n    }),\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"weight\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WEIGHT\"\n    }),\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 65\n    }\n  }))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 53\n    }\n  }), translate(\"TEMP.SELECT_DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggleButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 57\n    }\n  }, deliverTypeArr.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\"),\n      onClick: function onClick() {\n        handleDeliveryTypeClick(index, item.type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 76\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"innerRadio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 96\n      }\n    })), \" \", item.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 53\n    }\n  }, deliveryType === \"2\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    name: \"codAmount\",\n    min: \"3\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    style: {\n      width: \"100%\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 61\n    }\n  })))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 57\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 69\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 69\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 69\n    }\n  }, \"Mobile Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 69\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: true,\n    value: defaultName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 73\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: true,\n    value: defaultAddressName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 73\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: true,\n    value: defaultAddressMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 73\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-arrow-repeat h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 109\n    }\n  })))))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9 d-flex align-items-center h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 57\n    }\n  }), \" \", \"Set Receiver Address \\xA0 \", /*#__PURE__*/React.createElement(Badge, {\n    className: \"custome-link rounded-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 85\n    }\n  }, \"Or Choose From my List \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-arrow-repeat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 153\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"placeName\",\n    label: translate(\"ORDERS.ADDRESS_NAME\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"placename\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 65\n    }\n  }, \"Please add place name\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"userPhone\",\n    label: translate(\"ORDERS.ADDRESS_PHONE\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"tel\",\n    placeholder: \"...\",\n    name: \"phone\",\n    pattern: \"^05[0-9]{8}?$\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 65\n    }\n  }, \"Please enter a valid phone number example 0568000000\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 57\n    }\n  }, translate(\"TEMP.PROVINCE\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"province\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    onClick: function onClick() {\n      getProvences();\n    },\n    onChange: function onChange(e) {\n      updateSubLevel(\"governorates\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 61\n    }\n  }, \"Select Provice\"), provinces.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 76\n      }\n    },\n    /* item.id + \" - \" +  */\n    item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 57\n    }\n  }, translate(\"TEMP.GOVERNORATE\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"governorate\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    onChange: function onChange(e) {\n      updateSubLevel(\"cities\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 61\n    }\n  }, \"Select Governorate\"), governorates.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 76\n      }\n    },\n    /* item.id + \" - \" +  */\n    item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 57\n    }\n  }, translate(\"TEMP.CITY\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"city\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    onChange: function onChange(e) {\n      updateSubLevel(\"areas\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 61\n    }\n  }, \"Select City\"), cities.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 76\n      }\n    },\n    /* item.id + \" - \" +  */\n    item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 57\n    }\n  }, translate(\"TEMP.AREA\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"area\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 61\n    }\n  }, \"Select Area\"), areas.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 76\n      }\n    },\n    /* item.id + \" - \" +  */\n    item.name);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"userAddress\",\n    label: translate(\"ORDERS.ADDRESS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 65\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"addressInfo\",\n    label: translate(\"ORDERS.ADDRESS_INFO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"addressinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 65\n    }\n  }))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 53\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"notes\",\n    type: \"text\",\n    className: \"mt-2 rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.NOTES\"\n    }),\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 49\n    }\n  })))), true ? /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"30%\",\n      float: \"right\"\n    },\n    disabled: loadingSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 45\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 59\n    }\n  }), isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h6\",\n    style: {\n      color: \"#26a69a\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 49\n    }\n  }, isTransporter() ? translate(\"TEMP.SUCCISSFULLY_PUBLISHED\") : translate(\"TEMP.SUCCISSFULLY_PUBLISHED_CLIENT\"))), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 33\n    }\n  })))), openAssignDialog && /*#__PURE__*/React.createElement(SubmitAndAssignDialog, {\n    onSuccess: function onSuccess() {\n      return props.onSuccess();\n    },\n    setCloseAssignDialog: setCloseAssignDialog,\n    setCloseMainDialog: setCloseMainDialog,\n    loadingSubmit: loadingSubmit,\n    assignDeliveryParams: assignDeliveryParams,\n    assignAddressClint: assignAddressClint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 29\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 29\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 29\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 29\n    }\n  }, \"Yes\"))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","Table","Card","Container","Row","Col","ListGroup","FloatingLabel","Badge","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","testBarq","GetAllClientNetworkMembers","ClientAssignOrder","checkTripCost","GetCitiesArea","getClientDefaultAddress","GetTransporterClients","IoIosGitNetwork","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","useDispatch","toastNotification","isTransporter","SubmitAndAssignDialog","useHistory","imgBaseUrl","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","history","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","dispatch","open","setOpen","openConf","setOpenConf","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","clientInputValue","setClientInputValue","deliverAddresses","setDeliverAddresses","allClients","setAllClients","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","openAssignDialog","setOpenAssignDialog","assignAddressClint","setAssignAddressClint","assignDeliveryParams","setAssignDeliveryParams","beginValidation","setBeginValidation","selectedClientCheck","setSelectedClientCheckShow","deliveryCostCheck","setDeliveryCostCheckShow","selectedPickUpAddressCheck","setSelectedPickUpAddressCheckShow","amountCheck","setAmountCheck","selectedDeliveryAddressCheck","setSelectedDeliveryAddressCheckShow","name","type","active","deliverTypeArr","setDeliverTypeArr","myNetwork","setMyNetwork","networkInputValue","setNetworkInputValue","orderSubmitted","setOrderSubmitted","createdOrderId","setCreatedOrderId","assignLoading","setAssignLoading","offers","setOffers","availableTransporters","setAvailableTransporters","defaultAddressId","setDefaultAddressId","defaultName","setDefaultName","defaultAddressName","setDefaultAddressName","defaultAddressMobile","setDefaultAddressMobile","deliveryCostRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","then","res","data","addressId","addressName","areaName","phone","timer","setTimeout","clearTimeout","membersData","filter","client","FullName","toLowerCase","replaceAll","includes","showValidation","current","value","hideValidation","setCloseAssignDialog","setCloseMainDialog","handleDeliveryTypeClick","index","tempArr","i","length","createOrderHandler","DeliveryParams","CreatedBy","AddressClint","JSON","stringify","orderId","split","push","getClientNetwork","cityId","getoOffers","tripCostRes","server_response","CostDetail","setCostSet","validated","setValidated","provinces","setProvinces","governorates","setGovernorates","cities","setCities","areas","setAreas","getProvences","updateSubLevel","superId","height","marginTop","marginBottom","formatMessage","id","event","preventDefault","stopPropagation","formData","FormData","target","formDataObj","Object","fromEntries","entries","form","currentTarget","checkValidity","deliveryWay","TypeLoad","CostLoad","DetailsLoad","LengthLoad","WidthLoad","HeightLoad","WeightLoad","qrCode","IdCity","IdArea","areaId","OtherDetails","details","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","IdAreaDes","OtherDetailsDes","LatReciver","LongReciver","ReciverAddressId","ReceiverAddressNum","phone_number","ClientMobileNumber","PhoneNumber","DeliveryPrice","width","eve","createElement","style","className","backgroundColor","map","item","localStorage","getItem","cursor","e","float","onSuccess","window"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup, FloatingLabel, Badge } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { ReactComponent as SendIcon } from \"../../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers, ClientAssignOrder, checkTripCost, GetCitiesArea, getClientDefaultAddress } from \"../../APIs/OrdersAPIs\";\r\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\"\r\nimport { ReactComponent as FoodIcon } from \"../../assets/images/food.svg\";\r\nimport { ReactComponent as SmBoxIcon } from \"../../assets/images/smallBox.svg\";\r\nimport { ReactComponent as MedBoxIcon } from \"../../assets/images/medbox.svg\";\r\nimport { ReactComponent as BigBoxIcon } from \"../../assets/images/largebox.svg\";\r\nimport { ReactComponent as DeliveryTruckIcon } from \"../../assets/images/deliveryTruck.svg\";\r\nimport { ReactComponent as LocationIcon } from \"../../assets/images/location.svg\";\r\nimport { ReactComponent as AttachmentIcon } from \"../../assets/images/attachment.svg\";\r\nimport { IoIosGitNetwork } from 'react-icons/io';\r\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"../AddressDropdown\";\r\nimport ClientDropdown from \"../ClientDropdown\";\r\nimport CreateAddress from \"../CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\nimport { isTransporter } from \"../../Util\";\r\nimport SubmitAndAssignDialog from \"../SubmitAndAssignDialog\";\r\nimport \"../CreateNewOrder.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { imgBaseUrl } from \"../../Constants/GeneralCont\";\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport default function CreateNewOrder(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.2rem\"\r\n        },\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"2\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState(''); /* edited (clientInputValue added) */\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) Note: not all clients */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const [openAssignDialog, setOpenAssignDialog] = useState(false);\r\n    const [assignAddressClint, setAssignAddressClint] = useState(false);\r\n    const [assignDeliveryParams, setAssignDeliveryParams] = useState(false);\r\n\r\n    /* edited (validation variables) */\r\n\r\n    const [beginValidation, setBeginValidation] = useState(false);\r\n    const [selectedClientCheck, setSelectedClientCheckShow] = useState(false);\r\n    const [deliveryCostCheck, setDeliveryCostCheckShow] = useState(false);\r\n    const [selectedPickUpAddressCheck, setSelectedPickUpAddressCheckShow] = useState(false);\r\n    const [amountCheck, setAmountCheck] = useState(false);\r\n    const [selectedDeliveryAddressCheck, setSelectedDeliveryAddressCheckShow] = useState(false);\r\n\r\n    const [deliverTypeArr, setDeliverTypeArr] = useState([{ name: translate(\"ORDERS.\" + DeliveryTypes[1]), type: \"1\", active: \"active\" }, { name: translate(\"ORDERS.\" + DeliveryTypes[2]), type: \"2\", active: \"\" }]);\r\n\r\n    const [myNetwork, setMyNetwork] = useState([]);\r\n    const [networkInputValue, setNetworkInputValue] = useState('');\r\n\r\n    const [orderSubmitted, setOrderSubmitted] = useState(false);\r\n    const [createdOrderId, setCreatedOrderId] = useState(\"\");\r\n    const [assignLoading, setAssignLoading] = useState(false);\r\n    const [offers, setOffers] = useState([]);\r\n    const [availableTransporters, setAvailableTransporters] = useState([]);\r\n\r\n    // client default address\r\n    const [defaultAddressId, setDefaultAddressId] = useState(\"\");\r\n    const [defaultName, setDefaultName] = useState(\"\");\r\n    const [defaultAddressName, setDefaultAddressName] = useState(\"\");\r\n    const [defaultAddressMobile, setDefaultAddressMobile] = useState(\"\");\r\n\r\n    const deliveryCostRef = useRef();\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    /* useEffect(() => {\r\n\r\n        setNetworkLoading(true);\r\n\r\n        // console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\r\n\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n\r\n            setNetworkLoading(false);\r\n\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n        });\r\n\r\n    }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]); */\r\n\r\n    useEffect(() => {\r\n        if (!isTransporter()) {\r\n            getClientDefaultAddress().then((res) => {\r\n                // console.log(res.data);\r\n                if (res.data != null) {\r\n                    setDefaultAddressId(res.data.addressId);\r\n                    setDefaultName(res.data.name);\r\n                    setDefaultAddressName(res.data.addressName + \", \" + res.data.areaName);\r\n                    setDefaultAddressMobile(res.data.phone);\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setLoading(true);\r\n\r\n            GetDefinedAddresses(inputValue).then((res) => {\r\n                // console.log(res.data)\r\n                setLoading(false);\r\n                setDeliverAddresses(res.data);\r\n            });\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setLoading(true);\r\n\r\n            GetTransporterClients().then((res) => {\r\n                setLoading(false);\r\n\r\n                setAllClients(res.data.membersData.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n            });\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, open]);\r\n\r\n    /* edited (show and hide validation error messages handles) */\r\n\r\n    function showValidation() {\r\n        // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\r\n\r\n        if (isTransporter()) {\r\n            if (selectedClient) {\r\n                setSelectedClientCheckShow(false)\r\n            } else {\r\n                setSelectedClientCheckShow(true)\r\n            }\r\n\r\n            if (deliveryCostRef && deliveryCostRef.current.value > 0) {\r\n                setDeliveryCostCheckShow(false)\r\n            } else {\r\n                setDeliveryCostCheckShow(true)\r\n            }\r\n        }\r\n\r\n        if (selectedPickUpAddress) {\r\n            setSelectedPickUpAddressCheckShow(false)\r\n        } else {\r\n            setSelectedPickUpAddressCheckShow(true)\r\n        }\r\n\r\n        if (selectedDeliveryAddress) {\r\n            setSelectedDeliveryAddressCheckShow(false)\r\n        } else {\r\n            setSelectedDeliveryAddressCheckShow(true)\r\n        }\r\n\r\n        if (codAmountRef.current?.value && codAmountRef.current?.value >= 3) {\r\n            setAmountCheck(false)\r\n        } else {\r\n            setAmountCheck(true)\r\n        }\r\n\r\n        // console.log(\"show validation\");\r\n    }\r\n\r\n    function hideValidation() {\r\n        setBeginValidation(false);\r\n        setSelectedClientCheckShow(false);\r\n        setDeliveryCostCheckShow(false);\r\n        setSelectedPickUpAddressCheckShow(false);\r\n        setSelectedDeliveryAddressCheckShow(false);\r\n        setAmountCheck(false);\r\n\r\n        // console.log(\"hide validation\");\r\n    }\r\n\r\n    function setCloseAssignDialog() {\r\n        setOpenAssignDialog(false);\r\n    }\r\n\r\n    function setCloseMainDialog() {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDeliveryTypeClick = (index, type) => {\r\n        setDeliveryType(type);\r\n\r\n        let tempArr = [...deliverTypeArr];\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            tempArr[i].active = \"\";\r\n        }\r\n\r\n        tempArr[index].active = \"active\";\r\n\r\n        setDeliverTypeArr(tempArr);\r\n    }\r\n\r\n    const createOrderHandler = (DeliveryParams, CreatedBy, AddressClint) => {\r\n        CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy, JSON.stringify(AddressClint)).then((res) => {\r\n            /* edited (test data) */\r\n            // console.log(res.data); // {\"server_response\":[{\"OrderId\":\"936\"}]}\r\n\r\n            /* to be edited (to print order by returned id) */\r\n\r\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;   // <--------------------------------------------------------------------------- to test\r\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n            /*  if (res.data == \"Blocked\") {\r\n                 dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n             } */\r\n\r\n            let orderId = res.data.split('OrderId\":\"')[1].split('\"')[0];\r\n            // console.log(orderId);\r\n            setCreatedOrderId(orderId);\r\n\r\n            // setOpenConf(true);\r\n\r\n            setOrderSubmitted(true);\r\n\r\n            if (!isTransporter()) {\r\n                // getClientNetwork();\r\n                // location.href = \"#availableOffers\";\r\n\r\n                history.push(\"/account/Order/\" + orderId);\r\n            }\r\n\r\n            setLoadingSubmit(false);\r\n\r\n            if (isTransporter()) {\r\n                history.push(\"/account/Order/\" + orderId);\r\n            }\r\n        });\r\n    }\r\n\r\n    const getClientNetwork = () => {\r\n\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n\r\n            // merge with previous \r\n        });\r\n    }\r\n\r\n    const getoOffers = () => {\r\n        checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n\r\n            // console.log(tripCostRes); // temp test\r\n\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                setOffers(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                setCostSet(true);\r\n            } else {\r\n                setCostSet(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [governorates, setGovernorates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [areas, setAreas] = useState([]);\r\n\r\n    /* useEffect(() => {\r\n        // provinces, governorates, cities, areas\r\n        GetCitiesArea(\"provinces\", -1).then((res) => {\r\n            // console.log(res.data.server_response);\r\n            setProvinces(res.data.server_response);\r\n        })\r\n    }, []) */\r\n\r\n    const getProvences = () => {\r\n        GetCitiesArea(\"provinces\", -1).then((res) => {\r\n            // console.log(res.data.server_response);\r\n            setProvinces(res.data.server_response);\r\n        })\r\n    }\r\n\r\n    const updateSubLevel = (type, superId) => {\r\n        GetCitiesArea(type, superId, 1).then((res) => {\r\n            // console.log(res.data.server_response)\r\n\r\n            if (type === \"governorates\") {\r\n                setGovernorates([]);\r\n                setCities([]);\r\n                setAreas([]);\r\n                setGovernorates(res.data.server_response);\r\n            } else if (type === \"cities\") {\r\n                setCities([]);\r\n                setAreas([]);\r\n                setCities(res.data.server_response);\r\n            } else {\r\n                setAreas([]);\r\n                setAreas(res.data.server_response);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* upper background */}\r\n            <div className=\"upperBackground\">\r\n            </div>\r\n\r\n            <div className=\"mainContainer\" style={{ height: \"80%\" }}>\r\n                <Container fluid className=\"pb-5\">\r\n                    <Row className=\"h2 d-flex justify-content-center\" style={{ marginTop: \"150px\", marginBottom: \"120px\", color: \"#26a69a\" }}>\r\n                        {translate(\"ORDERS.CREATE_ORDER\")}\r\n                    </Row>\r\n\r\n                    {/* ------------------( transporter clients )------------------ */}\r\n                    {isTransporter() && <Row className=\"mb-5\">\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"TEMP.MY_CLIENTS\")}</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className=\"mb-3 mt-5\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-9\">\r\n\r\n                                            <ClientDropdown\r\n                                                loading={loading}\r\n                                                clients={allClients}\r\n                                                onSearch={setClientInputValue}\r\n                                                onSelect={setSelectedClient}\r\n                                                selectedClient={selectedClient}\r\n                                            />\r\n\r\n                                            {/*  {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>} */}\r\n\r\n                                        </div>\r\n                                        <div className=\"col-lg-3\">\r\n                                            <Form.Control type=\"number\" style={{ marginTop: \"9px\" }} className=\"rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.DELIVERY_COST\" })} ref={deliveryCostRef} />\r\n\r\n                                            {/* {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>} */}\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>}\r\n\r\n                    {/* ------------------( order info )------------------ */}\r\n                    <Row className=\"mb-5\">\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"TEMP.ORDER_INFO\")}</Card.Title>\r\n                                </Card.Header>\r\n\r\n                                <Form id=\"orderForm\" validated={validated} noValidate onSubmit={(event) => {\r\n                                    event.preventDefault();\r\n                                    event.stopPropagation();\r\n\r\n                                    const formData = new FormData(event.target), formDataObj = Object.fromEntries(formData.entries());\r\n\r\n                                    // console.log(formDataObj);\r\n\r\n                                    const form = event.currentTarget;\r\n                                    if (form.checkValidity() === true) {\r\n                                        // if all set, create order here: (get data from formDataObj)\r\n\r\n                                        let CreatedBy = \"\";\r\n\r\n                                        let DeliveryParams = {\r\n                                            deliveryWay: deliveryType,\r\n                                            TypeLoad: packageType,\r\n                                            CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                            DetailsLoad: notesRef.current.value,\r\n                                            LengthLoad: lengthRef.current?.value || \"\",\r\n                                            WidthLoad: widthRef.current?.value || \"\",\r\n                                            HeightLoad: heightRef.current?.value || \"\",\r\n                                            WeightLoad: weightRef.current?.value || \"\",\r\n                                            qrCode: \"\"\r\n                                        };\r\n\r\n                                        const AddressClint = {\r\n                                            IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                            IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                            OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                            LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                            LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                            SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                            IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                            IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                            OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                            LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                            LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                            ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                            ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                        };\r\n\r\n                                        if (isTransporter()) {\r\n                                            setLoadingSubmit(true);\r\n\r\n                                            CreatedBy = \"Transporter\";\r\n\r\n                                            DeliveryParams.ClientMobileNumber = selectedClient.PhoneNumber;\r\n                                            DeliveryParams.DeliveryPrice = deliveryCostRef.current.value;\r\n\r\n                                            // createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\r\n                                        } else {\r\n                                            setLoadingSubmit(true);\r\n\r\n                                            CreatedBy = \"Client\";\r\n\r\n                                            // createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\r\n                                        }\r\n                                    }\r\n\r\n                                    setValidated(true);\r\n                                }}>\r\n                                    <ListGroup variant=\"flush\" className=\"mt-5\">\r\n\r\n                                        {/* ------------------( package types )------------------ */}\r\n                                        <ListGroup.Item className=\"py-4\">\r\n                                            <div className=\"container-fluid\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                                                    </div>\r\n\r\n                                                    <div className=\"col-lg-4\">\r\n                                                        <Dropdown\r\n                                                            style={{ width: \"100%\" }}\r\n                                                            className=\"togo-dropdown shadow\"\r\n                                                            onSelect={(eve) => {\r\n                                                                setPackageType(eve);\r\n                                                            }}>\r\n                                                            <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                                                                {React.createElement(PackageTypesIcons[packageType], { style: { width: \"20px\", height: \"20px\" }, className: \"me-1\" })}\r\n                                                                <div style={{ width: \"97%\" }}>\r\n                                                                    {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                                                                </div>\r\n                                                            </Dropdown.Toggle>\r\n\r\n                                                            <Dropdown.Menu className=\"w-100\">\r\n                                                                <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                                                    <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                    {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                                                    <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                    {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                                                    <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                    {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                                                                </Dropdown.Item>\r\n                                                                <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                                                    <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                    {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                                                                </Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                    </div>\r\n\r\n                                                    {packageType !== \"1\" && packageType !== \"2\" && <div className=\"col-lg-8\" style={{ marginTop: \"2px\" }}>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-3\">\r\n                                                                <Form.Group>\r\n                                                                    <Form.Control\r\n                                                                        name=\"height\"\r\n                                                                        type=\"number\"\r\n                                                                        className=\"rounded-22 input-inner-shadow\"\r\n                                                                        placeholder={intl.formatMessage({ id: \"TEMP.HEIGHT\" })}\r\n                                                                        ref={heightRef}\r\n                                                                    />\r\n                                                                </Form.Group>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-3\">\r\n                                                                <Form.Control\r\n                                                                    name=\"width\"\r\n                                                                    type=\"number\"\r\n                                                                    className=\"rounded-22 input-inner-shadow\"\r\n                                                                    placeholder={intl.formatMessage({ id: \"TEMP.WIDTH\" })}\r\n                                                                    ref={widthRef}\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-3\">\r\n                                                                <Form.Control\r\n                                                                    name=\"length\"\r\n                                                                    type=\"number\"\r\n                                                                    className=\"rounded-22 input-inner-shadow\"\r\n                                                                    placeholder={intl.formatMessage({ id: \"TEMP.LENGTH\" })}\r\n                                                                    ref={lengthRef}\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div className=\"col-md-3\">\r\n                                                                <Form.Control\r\n                                                                    name=\"weight\"\r\n                                                                    type=\"number\"\r\n                                                                    className=\"rounded-22 input-inner-shadow\"\r\n                                                                    placeholder={intl.formatMessage({ id: \"TEMP.WEIGHT\" })}\r\n                                                                    ref={weightRef}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* ------------------( delivery type )------------------ */}\r\n                                        <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                            <div className=\"container-fluid\">\r\n                                                <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                    <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                    {translate(\"TEMP.SELECT_DELIVERY_TYPE\")}\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-10\">\r\n                                                        <div className={\"toggleButtonsContainer\"}>\r\n                                                            {\r\n                                                                deliverTypeArr.map((item, index) => {\r\n                                                                    return <div key={index} className={\"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\")} onClick={() => { handleDeliveryTypeClick(index, item.type) }}>\r\n                                                                        <div className=\"radio\"><div className=\"innerRadio\"></div></div> {item.name}\r\n                                                                    </div>\r\n                                                                })\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-2\">\r\n                                                        {deliveryType === \"2\" && <>\r\n                                                            <Form.Control\r\n                                                                required={true}\r\n                                                                name=\"codAmount\"\r\n                                                                min=\"3\"\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 input-inner-shadow\" style={{ width: \"100%\" }}\r\n                                                                placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                                                ref={codAmountRef}\r\n                                                            />\r\n\r\n                                                            {/* {beginValidation && amountCheck && <span style={{ color: \"red\" }}>required! (minimum 3 NIS)</span>} */}\r\n                                                        </>}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* ------------------( addresses )------------------ */}\r\n                                        <ListGroup.Item className=\"py-4\">\r\n                                            <div className=\"container-fluid\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        <LocationIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                        {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-12\">\r\n\r\n                                                        {/* <AddressDropdown\r\n                                                            loading={loading}\r\n                                                            addresses={deliverAddresses}\r\n                                                            onSearch={setInputValue}\r\n                                                            onSelect={setSelectedPickUpAddress}\r\n                                                            selectedAddress={selectedPickUpAddress}\r\n                                                        /> */}\r\n\r\n                                                        {/* receiver-full-name, address-name, receiver-phone-number */}\r\n\r\n                                                        <Table>\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th>Name</th>\r\n                                                                    <th>Address</th>\r\n                                                                    <th>Mobile Number</th>\r\n                                                                    <th></th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td><Form.Control readOnly value={defaultName} /></td>\r\n                                                                    <td><Form.Control readOnly value={defaultAddressName} /></td>\r\n                                                                    <td><Form.Control readOnly value={defaultAddressMobile} /></td>\r\n                                                                    <td>\r\n                                                                        <Button className=\"btn-grad-circle\"><i className=\"bi bi-arrow-repeat h3\"></i></Button>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </Table>\r\n\r\n                                                        {/* {beginValidation && selectedPickUpAddressCheck && <span style={{ color: \"red\" }}>required!</span>} */}\r\n\r\n                                                    </div>\r\n\r\n                                                    {/* <div className=\"col-lg-1 d-flex justify-content-center\">\r\n                                                        <Button className=\"btn-grad-circle\" style={{ height: \"50px\", margin: \"auto\" }}><i className=\"bi bi-arrow-repeat h3\"></i></Button>\r\n                                                    </div> */}\r\n\r\n                                                    {/* <div className=\"w-50 m-inline-e-2\">\r\n                                                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        <SendIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                        <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                                                    </div>\r\n\r\n                                                    <AddressDropdown\r\n                                                        loading={loading}\r\n                                                        addresses={deliverAddresses}\r\n                                                        onSearch={setInputValue}\r\n                                                        onSelect={setSelectedDeliveryAddress}\r\n                                                        selectedAddress={selectedDeliveryAddress}\r\n                                                    />\r\n\r\n                                                    {beginValidation && selectedDeliveryAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                                                </div>\r\n                                                <CreateAddress>\r\n                                                    <div style={{ cursor: \"pointer\", marginTop: \"30px\" }} className=\"btn-grad-circle p-2\">\r\n                                                        <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                                                    </div>\r\n                                                </CreateAddress> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* ------------------(  )------------------ */}\r\n                                        <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                            <div className=\"container-fluid\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-9 d-flex align-items-center h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        <AttachmentIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                        {/* {translate(\"ORDERS.DELIVER_TO\")} */} {/* Set receiver address &nbsp;<span className=\"custome-link\">or choose from my list</span>  */}\r\n                                                        Set Receiver Address &nbsp; <Badge className=\"custome-link rounded-pill\">Or Choose From my List <i className=\"bi bi-arrow-repeat\"></i></Badge>\r\n                                                    </div>\r\n                                                    {/*  <div className=\"col-lg-3\">\r\n                                                        <Button>\r\n                                                            Or Choose From my Addresses\r\n                                                        </Button>\r\n                                                    </div> */}\r\n                                                </div>\r\n\r\n                                                <div className=\"row mt-1\">\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"mb-3\" controlId=\"placeName\" label={translate(\"ORDERS.ADDRESS_NAME\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder=\"...\" name=\"placename\" required />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    Please add place name\r\n                                                                </Form.Control.Feedback>\r\n                                                            </FloatingLabel>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"mb-3\" controlId=\"userPhone\" label={translate(\"ORDERS.ADDRESS_PHONE\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"tel\" placeholder=\"...\" name=\"phone\" pattern=\"^05[0-9]{8}?$\" required />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    Please enter a valid phone number example 0568000000\r\n                                                                </Form.Control.Feedback>\r\n                                                            </FloatingLabel>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"TEMP.PROVINCE\")}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"province\" required aria-label=\"Default select example\"\r\n                                                            onClick={() => {\r\n                                                                getProvences();\r\n                                                            }}\r\n                                                            onChange={(e) => {\r\n                                                                updateSubLevel(\"governorates\", e.target.value)\r\n                                                            }}>\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>Select Provice</option>\r\n                                                            {\r\n                                                                provinces.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{/* item.id + \" - \" +  */item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"TEMP.GOVERNORATE\")}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"governorate\" required aria-label=\"Default select example\" onChange={(e) => {\r\n                                                            updateSubLevel(\"cities\", e.target.value)\r\n                                                        }}>\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>Select Governorate</option>\r\n                                                            {\r\n                                                                governorates.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{/* item.id + \" - \" +  */item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"TEMP.CITY\")}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"city\" required aria-label=\"Default select example\" onChange={(e) => {\r\n                                                            updateSubLevel(\"areas\", e.target.value)\r\n                                                        }}>\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>Select City</option>\r\n                                                            {\r\n                                                                cities.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{/* item.id + \" - \" +  */item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"\">\r\n                                                        <Form.Label>{translate(\"TEMP.AREA\")}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"area\" required aria-label=\"Default select example\">\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>Select Area</option>\r\n                                                            {\r\n                                                                areas.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{/* item.id + \" - \" +  */item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"mb-3\" controlId=\"userAddress\" label={translate(\"ORDERS.ADDRESS\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder=\"...\" name=\"address\" />\r\n                                                            </FloatingLabel>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"mb-3\" controlId=\"addressInfo\" label={translate(\"ORDERS.ADDRESS_INFO\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder=\"...\" name=\"addressinfo\" />\r\n                                                            </FloatingLabel>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {/* ------------------( order notes )------------------ */}\r\n                                        <ListGroup.Item className=\"py-4\">\r\n                                            <div className=\"container-fluid\">\r\n                                                <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                    <AttachmentIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                    {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                                                </div>\r\n\r\n                                                <Form.Control name=\"notes\" type=\"text\" className=\"mt-2 rounded-22 input-inner-shadow\" placeholder={intl.formatMessage({ id: \"TEMP.NOTES\" })} ref={notesRef} />\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n\r\n                                    {true ? <Button\r\n                                        className=\"btn-grad\"\r\n                                        style={{ width: \"30%\", float: \"right\" }}\r\n                                        disabled={loadingSubmit}\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                        {isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")}\r\n                                    </Button> : <span className=\"h6\" style={{ color: \"#26a69a\", float: \"right\" }}>{isTransporter() ? translate(\"TEMP.SUCCISSFULLY_PUBLISHED\") : translate(\"TEMP.SUCCISSFULLY_PUBLISHED_CLIENT\")}</span>}\r\n                                </Form>\r\n                                <Card.Footer>\r\n\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* ------------------( network & offers )------------------ */}\r\n                    {/* {orderSubmitted && !isTransporter() && <Row>\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"TEMP.NETWORK_OFFERS\")}</Card.Title>\r\n                                </Card.Header>\r\n\r\n                                <Card.Body className=\"mt-5\" id=\"availableOffers\">\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\"></th>\r\n                                                <th scope=\"col\">{translate(\"TEMP.NAME\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TEMP.PHONE\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TEMP.PRICE\")}</th>\r\n                                                <th scope=\"col\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                myNetwork.map((member, index) => {\r\n                                                    return <tr key={index}>\r\n                                                        <td>\r\n                                                            <div // image\r\n                                                                style={{\r\n                                                                    background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n                                                                    width: \"70px\",\r\n                                                                    height: \"70px\",\r\n                                                                    borderRadius: \"45%\",\r\n                                                                }}\r\n\r\n                                                                className=\"align-self-center d-flex justify-content-center\"\r\n                                                            >\r\n                                                                <img\r\n                                                                    style={{\r\n                                                                        width: \"60px\",\r\n                                                                        height: \"60px\",\r\n                                                                        objectFit: \"cover\"\r\n                                                                    }}\r\n                                                                    className=\"rounded-circle align-self-center\"\r\n                                                                    src={`${imgBaseUrl}${member.Image}`}\r\n                                                                    alt={member.PhoneNumber}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td>{member.FullName}</td>\r\n                                                        <td>{member.PhoneNumber}</td>\r\n                                                        <td>{member.deliveryPrice + \" NIS\"}</td>\r\n                                                        <td>\r\n                                                            <Button disabled={assignLoading ? true : false} className=\"btn-grad\" onClick={() => {\r\n                                                                setAssignLoading(true);\r\n\r\n                                                                ClientAssignOrder(createdOrderId, member.CustomerId, member.deliveryPrice).then((res) => {\r\n                                                                    // console.log(res.data);\r\n\r\n                                                                    setAssignLoading(false);\r\n                                                                    history.push(\"/account/Order/\" + createdOrderId);\r\n                                                                })\r\n                                                            }}>\r\n                                                                {assignLoading && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                                                {translate(\"TEMP.ASSIGN\")}\r\n                                                            </Button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>} */}\r\n\r\n                    {openAssignDialog && <SubmitAndAssignDialog\r\n                        onSuccess={() => props.onSuccess()}\r\n                        setCloseAssignDialog={setCloseAssignDialog}\r\n                        setCloseMainDialog={setCloseMainDialog}\r\n                        loadingSubmit={loadingSubmit}\r\n                        assignDeliveryParams={assignDeliveryParams}\r\n                        assignAddressClint={assignAddressClint} />}\r\n\r\n                    <Modal\r\n                        show={openConf}\r\n                        onHide={() => {\r\n\r\n                            setOpenConf(false);\r\n                        }}\r\n                        animation={false}\r\n                        backdrop=\"static\"\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Confirmation</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <p>Would you like to print a waybill ?</p>\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                }}\r\n                            >\r\n                                No\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                    window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                                }}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}