{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/FinancialTransactions/FinancialTransactions.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport translate from \"../../i18n/translate\";\nimport './FinancialTransactions.css';\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport { isTransporter } from '../../Util';\nimport { Button } from \"react-bootstrap\";\nimport { transactionTest, invoicesTest } from '../../APIs/OrdersAPIs';\nimport Table from \"react-bootstrap/Table\";\n\nvar calculateRange = function calculateRange(data, rowsPerPage) {\n  var range = [];\n  var num = Math.ceil(data.length / rowsPerPage);\n  var i = 1;\n\n  for (var _i = 1; _i <= num; _i++) {\n    range.push(_i);\n  }\n\n  return range;\n};\n\nvar sliceData = function sliceData(data, page, rowsPerPage) {\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\n};\n\nvar useTable = function useTable(data, page, rowsPerPage) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableRange = _useState2[0],\n      setTableRange = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      slice = _useState4[0],\n      setSlice = _useState4[1];\n\n  useEffect(function () {\n    var range = calculateRange(data, rowsPerPage);\n    setTableRange(_toConsumableArray(range));\n    var slice = sliceData(data, page, rowsPerPage);\n    setSlice(_toConsumableArray(slice));\n  }, [data, setTableRange, page, setSlice]);\n  return {\n    slice: slice,\n    range: tableRange\n  };\n};\n\nvar TableFooter = function TableFooter(_ref) {\n  var range = _ref.range,\n      setPage = _ref.setPage,\n      page = _ref.page,\n      slice = _ref.slice;\n  useEffect(function () {\n    if (slice.length < 1 && page !== 1) {\n      setPage(page - 1);\n    }\n  }, [slice, page, setPage]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tableFooter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, range.map(function (el, index) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: \"\".concat(styles.button, \" \").concat(page === el ? styles.activeButton : styles.inactiveButton),\n      onClick: function onClick() {\n        return setPage(el);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, el);\n  }));\n};\n\nvar CustomTable = function CustomTable(_ref2) {\n  var data = _ref2.data,\n      rowsPerPage = _ref2.rowsPerPage;\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useTable = useTable(data, page, rowsPerPage),\n      slice = _useTable.slice,\n      range = _useTable.range;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Order ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"date\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Journal Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, slice.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, item.ref), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, item.move_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, item.date), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, item.Journal), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, item.amount));\n  }), !transactions.length && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: columns.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 46\n    }\n  }, \"Transactions not found!\")))), /*#__PURE__*/React.createElement(TableFooter, {\n    range: range,\n    slice: slice,\n    setPage: setPage,\n    page: page,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function Transactions() {\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      transactions = _useState8[0],\n      setTransactions = _useState8[1]; // const [invoices, setInvoices] = useState([]);\n\n  /*const columns = [\r\n      {\r\n          label: \"Name\",\r\n          key: \"move_name\",\r\n      },\r\n      {\r\n          label: \"date\",\r\n          key: \"date\"\r\n      },\r\n      {\r\n          label: \"Order ID\",\r\n          key: \"ref\",\r\n      },\r\n      {\r\n          label: \"Journal\",\r\n          key: \"journal\",\r\n      },\r\n      {\r\n          label: \"amount\",\r\n          key: \"amount\"\r\n      }\r\n  ];*/\n\n\n  useEffect(function () {\n    var isMounted = true;\n    transactionTest(localStorage.getItem(\"userId\")).then(function (res) {\n      if (isMounted) {\n        var tempArr = res.data.server_response.data.result.response;\n        tempArr.sort(function (a, b) {\n          return b.ref - a.ref;\n        });\n        setTransactions(tempArr);\n      }\n    });\n    return function () {\n      isMounted = false;\n    }; // console.log(localStorage.getItem(\"userId\"));\n\n    /*transactionTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n        console.log(res.data.server_response);\r\n        setTransactions(res.data.server_response.data.result.response);\r\n    });*/\n\n    /*invoicesTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n        // console.log(res.data.server_response.data.result.response);\r\n        // setInvoices(res.data.server_response.data.result.response);\r\n    });*/\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    data: transactions,\n    rowsPerPage: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }));\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/FinancialTransactions/FinancialTransactions.js"],"names":["React","useEffect","useState","translate","DynamicTable","isTransporter","Button","transactionTest","invoicesTest","Table","calculateRange","data","rowsPerPage","range","num","Math","ceil","length","i","push","sliceData","page","slice","useTable","tableRange","setTableRange","setSlice","TableFooter","setPage","styles","tableFooter","map","el","index","button","activeButton","inactiveButton","CustomTable","item","ref","move_name","date","Journal","amount","transactions","columns","Transactions","setTransactions","isMounted","localStorage","getItem","then","res","tempArr","server_response","result","response","sort","a","b"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport translate from \"../../i18n/translate\";\r\nimport './FinancialTransactions.css';\r\nimport DynamicTable from '../DynamicTable/DynamicTable';\r\nimport { isTransporter } from '../../Util';\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { transactionTest, invoicesTest } from '../../APIs/OrdersAPIs';\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n  const range = [];\r\n  const num = Math.ceil(data.length / rowsPerPage);\r\n  let i = 1;\r\n  for (let i = 1; i <= num; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst useTable = (data, page, rowsPerPage) => {\r\n  const [tableRange, setTableRange] = useState([]);\r\n  const [slice, setSlice] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const range = calculateRange(data, rowsPerPage);\r\n    setTableRange([...range]);\r\n\r\n    const slice = sliceData(data, page, rowsPerPage);\r\n    setSlice([...slice]);\r\n  }, [data, setTableRange, page, setSlice]);\r\n\r\n  return { slice, range: tableRange };\r\n};\r\n\r\nconst TableFooter = ({ range, setPage, page, slice }) => {\r\n  useEffect(() => {\r\n    if (slice.length < 1 && page !== 1) {\r\n      setPage(page - 1);\r\n    }\r\n  }, [slice, page, setPage]);\r\n  return (\r\n    <div className={styles.tableFooter}>\r\n      {range.map((el, index) => (\r\n        <button\r\n          key={index}\r\n          className={`${styles.button} ${\r\n            page === el ? styles.activeButton : styles.inactiveButton\r\n          }`}\r\n          onClick={() => setPage(el)}\r\n        >\r\n          {el}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CustomTable = ({ data, rowsPerPage }) => {\r\n  const [page, setPage] = useState(1);\r\n  const { slice, range } = useTable(data, page, rowsPerPage);\r\n  return (\r\n    <>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Order ID</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">date</th>\r\n            <th scope=\"col\">Journal Name</th>\r\n            <th scope=\"col\">amount</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {slice.map((item, index) =>\r\n                    <tr \r\n                        key={index} \r\n                        >\r\n                        \r\n                            <td>\r\n                                {item.ref}\r\n                            </td>\r\n                            <td>\r\n                                {item.move_name}\r\n                            </td>\r\n                            <td>\r\n                                {item.date}\r\n                            </td>\r\n                            <td>\r\n                                {item.Journal}\r\n                            </td>\r\n                            <td>\r\n                                {item.amount}\r\n                            </td>\r\n                        \r\n                    </tr>\r\n                )}\r\n                {!transactions.length && <tr><td colSpan={columns.length}>Transactions not found!</td></tr>}\r\n        </tbody>\r\n      </table>\r\n      <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function Transactions() {\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    // const [invoices, setInvoices] = useState([]);\r\n\r\n    /*const columns = [\r\n        {\r\n            label: \"Name\",\r\n            key: \"move_name\",\r\n        },\r\n        {\r\n            label: \"date\",\r\n            key: \"date\"\r\n        },\r\n        {\r\n            label: \"Order ID\",\r\n            key: \"ref\",\r\n        },\r\n        {\r\n            label: \"Journal\",\r\n            key: \"journal\",\r\n        },\r\n        {\r\n            label: \"amount\",\r\n            key: \"amount\"\r\n        }\r\n    ];*/\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        let isMounted = true;  \r\n          transactionTest(localStorage.getItem(\"userId\")).then(res => {\r\n            if (isMounted) {\r\n                let tempArr = res.data.server_response.data.result.response;\r\n\r\n                tempArr.sort((a, b) => {\r\n                    return b.ref - a.ref;\r\n                });\r\n\r\n                setTransactions(tempArr); \r\n            }\r\n          })\r\n        return () => { isMounted = false };\r\n\r\n\r\n        // console.log(localStorage.getItem(\"userId\"));\r\n\r\n        /*transactionTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n            console.log(res.data.server_response);\r\n            setTransactions(res.data.server_response.data.result.response);\r\n        });*/\r\n\r\n        /*invoicesTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n            // console.log(res.data.server_response.data.result.response);\r\n            // setInvoices(res.data.server_response.data.result.response);\r\n        });*/\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/*<DynamicTable columns={columns} data={transactions}/>*/}\r\n\r\n            {/*<Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Order ID</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">date</th>\r\n                        <th scope=\"col\">Journal Name</th>\r\n                        <th scope=\"col\">amount</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {transactions.map((item, index) =>\r\n                    <tr \r\n                        key={index} \r\n                        >\r\n                        \r\n                            <td>\r\n                                {item.ref}\r\n                            </td>\r\n                            <td>\r\n                                {item.move_name}\r\n                            </td>\r\n                            <td>\r\n                                {item.date}\r\n                            </td>\r\n                            <td>\r\n                                {item.Journal}\r\n                            </td>\r\n                            <td>\r\n                                {item.amount}\r\n                            </td>\r\n                        \r\n                    </tr>\r\n                )}\r\n                {!transactions.length && <tr><td colSpan={columns.length}>Transactions not found!</td></tr>}\r\n                </tbody>\r\n            </Table>*/}\r\n\r\n            <CustomTable data={transactions} rowsPerPage={4} />\r\n\r\n        </div>\r\n    );\r\n   \r\n};\r\n"]},"metadata":{},"sourceType":"module"}