{"ast":null,"code":"import { keyframes } from \"@chakra-ui/system\";\nimport { getColor, mode } from \"@chakra-ui/theme-tools\";\nvar fade = function fade(startColor, endColor) {\n  return keyframes({\n    from: {\n      borderColor: startColor,\n      background: startColor\n    },\n    to: {\n      borderColor: endColor,\n      background: endColor\n    }\n  });\n};\nvar baseStyle = function baseStyle(props) {\n  var defaultStartColor = mode(\"gray.100\", \"gray.800\")(props);\n  var defaultEndColor = mode(\"gray.400\", \"gray.600\")(props);\n  var _props$startColor = props.startColor,\n    startColor = _props$startColor === void 0 ? defaultStartColor : _props$startColor,\n    _props$endColor = props.endColor,\n    endColor = _props$endColor === void 0 ? defaultEndColor : _props$endColor,\n    speed = props.speed,\n    theme = props.theme;\n  var start = getColor(theme, startColor);\n  var end = getColor(theme, endColor);\n  return {\n    opacity: 0.7,\n    borderRadius: \"2px\",\n    borderColor: start,\n    background: end,\n    animation: speed + \"s linear infinite alternate \" + fade(start, end)\n  };\n};\nexport default {\n  baseStyle: baseStyle\n};","map":{"version":3,"names":["keyframes","getColor","mode","fade","startColor","endColor","from","borderColor","background","to","baseStyle","props","defaultStartColor","defaultEndColor","_props$startColor","_props$endColor","speed","theme","start","end","opacity","borderRadius","animation"],"sources":["../../../src/components/skeleton.ts"],"sourcesContent":["import { keyframes } from \"@chakra-ui/system\"\nimport type { SystemStyleFunction } from \"@chakra-ui/theme-tools\"\nimport { getColor, mode } from \"@chakra-ui/theme-tools\"\n\nconst fade = (startColor: string, endColor: string) =>\n  keyframes({\n    from: { borderColor: startColor, background: startColor },\n    to: { borderColor: endColor, background: endColor },\n  })\n\nconst baseStyle: SystemStyleFunction = (props) => {\n  const defaultStartColor = mode(\"gray.100\", \"gray.800\")(props)\n  const defaultEndColor = mode(\"gray.400\", \"gray.600\")(props)\n\n  const {\n    startColor = defaultStartColor,\n    endColor = defaultEndColor,\n    speed,\n    theme,\n  } = props\n\n  const start = getColor(theme, startColor)\n  const end = getColor(theme, endColor)\n\n  return {\n    opacity: 0.7,\n    borderRadius: \"2px\",\n    borderColor: start,\n    background: end,\n    animation: `${speed}s linear infinite alternate ${fade(start, end)}`,\n  }\n}\n\nexport default {\n  baseStyle,\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,mBAA1B;AAEA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,wBAA/B;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAIC,UAAD,EAAqBC,QAArB;EAAA,OACXL,SAAS,CAAC;IACRM,IAAI,EAAE;MAAEC,WAAW,EAAEH,UAAf;MAA2BI,UAAU,EAAEJ;IAAvC,CADE;IAERK,EAAE,EAAE;MAAEF,WAAW,EAAEF,QAAf;MAAyBG,UAAU,EAAEH;IAArC;EAFI,CAAD,CADX;AAAA;AAMA,IAAMK,SAA8B,GAAI,SAAlCA,SAA8BA,CAAIC,KAAD,EAAW;EAChD,IAAMC,iBAAiB,GAAGV,IAAI,CAAC,UAAD,EAAa,UAAb,CAAJ,CAA6BS,KAA7B,CAA1B;EACA,IAAME,eAAe,GAAGX,IAAI,CAAC,UAAD,EAAa,UAAb,CAAJ,CAA6BS,KAA7B,CAAxB;EAEA,IAAAG,iBAAA,GAKIH,KALJ,CACEP,UAAU;IAAVA,UAAU,GAAAU,iBAAA,cAAGF,iBADT,GAAAE,iBAAA;IAAAC,eAAA,GAKFJ,KALJ,CAEEN,QAAQ;IAARA,QAAQ,GAAAU,eAAA,cAAGF,eAFP,GAAAE,eAAA;IAGJC,KAHI,GAKFL,KALJ,CAGEK,KAHI;IAIJC,KAAA,GACEN,KALJ,CAIEM,KAAA;EAGF,IAAMC,KAAK,GAAGjB,QAAQ,CAACgB,KAAD,EAAQb,UAAR,CAAtB;EACA,IAAMe,GAAG,GAAGlB,QAAQ,CAACgB,KAAD,EAAQZ,QAAR,CAApB;EAEA,OAAO;IACLe,OAAO,EAAE,GADJ;IAELC,YAAY,EAAE,KAFT;IAGLd,WAAW,EAAEW,KAHR;IAILV,UAAU,EAAEW,GAJP;IAKLG,SAAS,EAAKN,KAAL,oCAAyCb,IAAI,CAACe,KAAD,EAAQC,GAAR;EALjD,CAAP;AAOD,CArBD;AAuBA,eAAe;EACbT,SAAA,EAAAA;AADa,CAAf"},"metadata":{},"sourceType":"module"}