{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/Container/WalletContainer/WalletContainer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Flex, Image, Text, Box } from \"@chakra-ui/react\";\nimport { getWallet } from \"../../APIs/ProfileAPIs\";\nimport { setWallet, toastMessage } from \"../../Actions/GeneralActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from './Styles';\nimport walletImage from '../../assets/wallet.png';\nimport Loader from \"../../components/Loader/Loader\";\nimport translate from \"../../i18n/translate\";\nexport default function WalletContainer() {\n  var wallet = useSelector(function (state) {\n    return state.general.wallet;\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 1),\n      loading = _useState2[0];\n\n  useEffect(function () {\n    var interval = null;\n    var currentWallet = 0;\n    getWallet().then(function (_ref) {\n      var server_response = _ref.data.server_response;\n      var wallet = server_response[0].TransporterBalance;\n      interval = setInterval(function () {\n        if (!(currentWallet >= wallet)) {\n          currentWallet += wallet / 7;\n          dispatch(setWallet(currentWallet.toFixed(2)));\n        } else {\n          dispatch(setWallet(wallet));\n          clearInterval(interval);\n        }\n      }, 100);\n    }).catch(function (err) {\n      dispatch(toastMessage(err));\n    }).finally(function () {//setLoading(false);\n    });\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(Flex, Object.assign({}, styles.container, {\n    style: {\n      direction: \"ltr\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    alignItems: \"center\",\n    position: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: walletImage,\n    w: 300,\n    position: \"fixed\",\n    zIndex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Box, Object.assign({}, styles.balanceContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, Object.assign({}, styles.title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }), translate(\"WALLET.BALANCE\")), /*#__PURE__*/React.createElement(Text, Object.assign({}, styles.balance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }), wallet)))));\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/Container/WalletContainer/WalletContainer.js"],"names":["React","useEffect","useState","Flex","Image","Text","Box","getWallet","setWallet","toastMessage","useDispatch","useSelector","styles","walletImage","Loader","translate","WalletContainer","wallet","state","general","dispatch","loading","interval","currentWallet","then","server_response","data","TransporterBalance","setInterval","toFixed","clearInterval","catch","err","finally","container","direction","balanceContainer","title","balance"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Flex, Image, Text, Box} from \"@chakra-ui/react\";\r\nimport {getWallet} from \"../../APIs/ProfileAPIs\";\r\nimport {setWallet, toastMessage} from \"../../Actions/GeneralActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styles from './Styles';\r\nimport walletImage from '../../assets/wallet.png';\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport translate from \"../../i18n/translate\";\r\n\r\nexport default function WalletContainer() {\r\n    const wallet = useSelector(state => state.general.wallet);\r\n    const dispatch = useDispatch();\r\n    const [loading, ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        let currentWallet = 0;\r\n\r\n        getWallet().then(({data: {server_response}}) => {\r\n            let wallet = server_response[0].TransporterBalance;\r\n            interval = setInterval(() => {\r\n                if (!(currentWallet >= wallet)) {\r\n                    currentWallet += (wallet / 7);\r\n                    dispatch(setWallet(currentWallet.toFixed(2)));\r\n                } else {\r\n                    dispatch(setWallet(wallet));\r\n                    clearInterval(interval);\r\n                }\r\n            }, 100);\r\n        }).catch(err => {\r\n            dispatch(toastMessage(err));\r\n        }).finally(() => {\r\n            //setLoading(false);\r\n        });\r\n\r\n        return () => clearInterval(interval);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Flex {...styles.container} style={{direction: \"ltr\"}}>\r\n            <Flex alignItems=\"center\" position=\"relative\">\r\n                <Image\r\n                    src={walletImage}\r\n                    w={300}\r\n                    position=\"fixed\"\r\n                    zIndex={1}\r\n                />\r\n                <Box {...styles.balanceContainer}>\r\n                    {loading ? <Loader/> : (\r\n                        <>\r\n                            <Text {...styles.title}>{translate(\"WALLET.BALANCE\")}</Text>\r\n                            <Text {...styles.balance}>{wallet}</Text>\r\n                        </>\r\n                    )}\r\n                </Box>\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}