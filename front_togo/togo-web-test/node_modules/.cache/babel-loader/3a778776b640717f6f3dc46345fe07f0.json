{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { callAllHandlers } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useControllableProp } from \"./use-controllable\";\nimport { useId } from \"./use-id\";\nexport function useDisclosure(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    onCloseProp = _props.onClose,\n    onOpenProp = _props.onOpen,\n    isOpenProp = _props.isOpen,\n    idProp = _props.id;\n  var _React$useState = React.useState(props.defaultIsOpen || false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isOpenState = _React$useState2[0],\n    setIsOpen = _React$useState2[1];\n  var _useControllableProp = useControllableProp(isOpenProp, isOpenState),\n    _useControllableProp2 = _slicedToArray(_useControllableProp, 2),\n    isControlled = _useControllableProp2[0],\n    isOpen = _useControllableProp2[1];\n  var id = useId(idProp, \"disclosure\");\n  var onClose = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onCloseProp == null ? void 0 : onCloseProp();\n  }, [isControlled, onCloseProp]);\n  var onOpen = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenProp == null ? void 0 : onOpenProp();\n  }, [isControlled, onOpenProp]);\n  var onToggle = React.useCallback(function () {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle,\n    isControlled: isControlled,\n    getButtonProps: function getButtonProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n      return _extends({}, props, {\n        \"aria-expanded\": \"true\",\n        \"aria-controls\": id,\n        onClick: callAllHandlers(props.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n      return _extends({}, props, {\n        hidden: !isOpen,\n        id: id\n      });\n    }\n  };\n}","map":{"version":3,"names":["callAllHandlers","React","useControllableProp","useId","useDisclosure","props","_props","onCloseProp","onClose","onOpenProp","onOpen","isOpenProp","isOpen","idProp","id","_React$useState","useState","defaultIsOpen","_React$useState2","_slicedToArray","isOpenState","setIsOpen","_useControllableProp","_useControllableProp2","isControlled","useCallback","onToggle","action","getButtonProps","_extends","onClick","getDisclosureProps","hidden"],"sources":["../../src/use-disclosure.ts"],"sourcesContent":["import { callAllHandlers } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useControllableProp } from \"./use-controllable\"\nimport { useId } from \"./use-id\"\n\nexport interface UseDisclosureProps {\n  isOpen?: boolean\n  defaultIsOpen?: boolean\n  onClose?(): void\n  onOpen?(): void\n  id?: string\n}\n\nexport function useDisclosure(props: UseDisclosureProps = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp,\n  } = props\n\n  const [isOpenState, setIsOpen] = React.useState(props.defaultIsOpen || false)\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState)\n\n  const id = useId(idProp, \"disclosure\")\n\n  const onClose = React.useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false)\n    }\n    onCloseProp?.()\n  }, [isControlled, onCloseProp])\n\n  const onOpen = React.useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true)\n    }\n    onOpenProp?.()\n  }, [isControlled, onOpenProp])\n\n  const onToggle = React.useCallback(() => {\n    const action = isOpen ? onClose : onOpen\n    action()\n  }, [isOpen, onOpen, onClose])\n\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props: any = {}) => ({\n      ...props,\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": id,\n      onClick: callAllHandlers(props.onClick, onToggle),\n    }),\n    getDisclosureProps: (props: any = {}) => ({\n      ...props,\n      hidden: !isOpen,\n      id,\n    }),\n  }\n}\n\nexport type UseDisclosureReturn = ReturnType<typeof useDisclosure>\n"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,KAAT,QAAsB,UAAtB;AAUA,OAAO,SAASC,aAATA,CAAuBC,KAAvB,EAAuD;EAAA,IAAhCA,KAAgC;IAAhCA,KAAgC,GAAJ,EAAI;EAAA;EAC5D,IAAAC,MAAA,GAKID,KALJ;IACWE,WADL,GAAAD,MAAA,CACJE,OAAO;IACCC,UAFJ,GAAAH,MAAA,CAEJI,MAAM;IACEC,UAHJ,GAAAL,MAAA,CAGJM,MAAM;IACFC,MAAA,GAAAP,MAAA,CAAJQ,EAAE;EAGJ,IAAAC,eAAA,GAAiCd,KAAK,CAACe,QAAN,CAAeX,KAAK,CAACY,aAAN,IAAuB,KAAtC,CAAjC;IAAAC,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAAOK,WAAD,GAAAF,gBAAA;IAAcG,SAAd,GAAAH,gBAAA;EACN,IAAAI,oBAAA,GAA+BpB,mBAAmB,CAACS,UAAD,EAAaS,WAAb,CAAlD;IAAAG,qBAAA,GAAAJ,cAAA,CAAAG,oBAAA;IAAOE,YAAD,GAAAD,qBAAA;IAAeX,MAAf,GAAAW,qBAAA;EAEN,IAAMT,EAAE,GAAGX,KAAK,CAACU,MAAD,EAAS,YAAT,CAAhB;EAEA,IAAML,OAAO,GAAGP,KAAK,CAACwB,WAAN,CAAkB,YAAM;IACtC,IAAI,CAACD,YAAL,EAAmB;MACjBH,SAAS,CAAC,KAAD,CAAT;IACD;IACDd,WAAW,QAAX,YAAAA,WAAW;EACZ,CALe,EAKb,CAACiB,YAAD,EAAejB,WAAf,CALa,CAAhB;EAOA,IAAMG,MAAM,GAAGT,KAAK,CAACwB,WAAN,CAAkB,YAAM;IACrC,IAAI,CAACD,YAAL,EAAmB;MACjBH,SAAS,CAAC,IAAD,CAAT;IACD;IACDZ,UAAU,QAAV,YAAAA,UAAU;EACX,CALc,EAKZ,CAACe,YAAD,EAAef,UAAf,CALY,CAAf;EAOA,IAAMiB,QAAQ,GAAGzB,KAAK,CAACwB,WAAN,CAAkB,YAAM;IACvC,IAAME,MAAM,GAAGf,MAAM,GAAGJ,OAAH,GAAaE,MAAlC;IACAiB,MAAM;EACP,CAHgB,EAGd,CAACf,MAAD,EAASF,MAAT,EAAiBF,OAAjB,CAHc,CAAjB;EAKA,OAAO;IACLI,MAAM,EAAE,CAAC,CAACA,MADL;IAELF,MAFK,EAELA,MAFK;IAGLF,OAHK,EAGLA,OAHK;IAILkB,QAJK,EAILA,QAJK;IAKLF,YALK,EAKLA,YALK;IAMLI,cAAc,EAAE,SAAAA,eAACvB,KAAD;MAAA,IAACA,KAAD;QAACA,KAAD,GAAc,EAAd;MAAA;MAAA,OAAAwB,QAAA,KACXxB,KADW;QAEd,iBAAiB,MAFH;QAGd,iBAAiBS,EAHH;QAIdgB,OAAO,EAAE9B,eAAe,CAACK,KAAK,CAACyB,OAAP,EAAgBJ,QAAhB;MAJV;IAAA,CANX;IAYLK,kBAAkB,EAAE,SAAAA,mBAAC1B,KAAD;MAAA,IAACA,KAAD;QAACA,KAAD,GAAc,EAAd;MAAA;MAAA,OAAAwB,QAAA,KACfxB,KADe;QAElB2B,MAAM,EAAE,CAACpB,MAFS;QAGlBE,EAAA,EAAAA;MAHkB;IAAA;EAZf,CAAP;AAkBD"},"metadata":{},"sourceType":"module"}