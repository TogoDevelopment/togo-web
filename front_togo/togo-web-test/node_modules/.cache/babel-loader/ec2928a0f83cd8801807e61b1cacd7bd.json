{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/TestComponent.jsx\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Row, Col, Container, Button, ListGroup } from 'react-bootstrap';\nexport default function TestComponent() {\n  var _this = this;\n\n  var textRef = useRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listAreas = _useState2[0],\n      setListAreas = _useState2[1];\n\n  var cleanHandler = function cleanHandler() {\n    var tempStr = textRef.current.value;\n    var tempArr = tempStr.split(\"<option value=\\\"\\\">\")[1].split(\"</option>\");\n    var resArr = [];\n\n    for (var i = 1; i < tempArr.length - 1; i++) {\n      var tempNumber = tempArr[i].split(\"\\\">\")[0].split(\"\\\"\")[1];\n      var tempName = tempArr[i].split(\"\\\">\")[1];\n      resArr.push({\n        number: tempNumber,\n        name: tempName\n      });\n    }\n\n    setListAreas(resArr);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 64\n    }\n  }, \"This is a test component!\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"\",\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Enter options to clear:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    style: {\n      height: \"300px\",\n      overflowY: \"scroll\"\n    },\n    as: \"textarea\",\n    rows: 100,\n    ref: textRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-5\",\n    onClick: cleanHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"clean\")), /*#__PURE__*/React.createElement(Col, {\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, listAreas.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 40\n      }\n    }, item.number + \" - \" + item.name);\n  })))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/TestComponent.jsx"],"names":["React","useRef","useState","Form","Row","Col","Container","Button","ListGroup","TestComponent","textRef","listAreas","setListAreas","cleanHandler","tempStr","current","value","tempArr","split","resArr","i","length","tempNumber","tempName","push","number","name","height","overflowY","map","item","index"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Form, Row, Col, Container, Button, ListGroup } from 'react-bootstrap';\r\n\r\nexport default function TestComponent() {\r\n\r\n    const textRef = useRef();\r\n    const [listAreas, setListAreas] = useState([]);\r\n\r\n    const cleanHandler = () => {\r\n        let tempStr = textRef.current.value;\r\n    \r\n        let tempArr = tempStr.split(\"<option value=\\\"\\\">\")[1].split(\"</option>\");    \r\n        \r\n        let resArr = [];\r\n\r\n        for (let i = 1; i < tempArr.length - 1; i++) {\r\n            let tempNumber = tempArr[i].split(\"\\\">\")[0].split(\"\\\"\")[1];\r\n            let tempName = tempArr[i].split(\"\\\">\")[1];\r\n            resArr.push({number: tempNumber, name: tempName});\r\n        }\r\n\r\n        setListAreas(resArr);\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col className=\"d-flex justify-content-center\"><span className=\"h1\">This is a test component!</span></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={5}>\r\n                    <Form.Group className=\"\" controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Enter options to clear:</Form.Label>\r\n                        <Form.Control style={{ height: \"300px\", overflowY: \"scroll\" }} as=\"textarea\" rows={100} ref={textRef} />\r\n                    </Form.Group>\r\n                </Col>\r\n\r\n                <Col lg={2}>\r\n                    <Button className=\"mt-5\" onClick={cleanHandler}>\r\n                        clean\r\n                    </Button>\r\n                </Col>\r\n\r\n                <Col lg={5}>\r\n                    <ListGroup className=\"mt-3\">\r\n                        {\r\n                            listAreas.map((item, index) => {\r\n                                return <ListGroup.Item key={index}>{item.number + \" - \" + item.name}</ListGroup.Item>\r\n                            })\r\n                        }\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}