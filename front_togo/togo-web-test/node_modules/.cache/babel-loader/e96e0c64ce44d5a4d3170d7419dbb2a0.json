{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/App/App.jsx\";\n\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { useSelector } from \"react-redux\";\nimport { I18nProvider } from '../../i18n';\nimport { LOCALES_TYPES } from \"../../i18n/locales\";\nimport Account from \"../../Container/Account/Account\";\nimport Home from \"../../Container/Home/Home\";\nimport Toast from \"../Toast\";\nimport AdminAccount from \"../../Container/AdminAccount/AdminAccount\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nimport { onMessageListener } from \"../../firebase\";\n\nvar App = function App() {\n  var dispatch = useDispatch();\n  var language = useSelector(function (state) {\n    return state.general.language;\n  });\n  /* ----------------------( FCM )---------------------- */\n  // notReload used in order to update the DOM at every notification\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      notReload = _useState2[0],\n      setNotReload = _useState2[1]; // using Firebase Cloud Messaging (FCM) push notification\n  // onMessageListener => listening to new messages from the cloud\n  // listen only if the user is logged in\n\n\n  if (localStorage.getItem(\"Adminid\") != undefined || localStorage.getItem(\"userId\") != undefined) onMessageListener().then(function (payload) {\n    // setNotReload(!notReload);\n    // show a popup notification\n    dispatch(toastNotification(payload.notification.title, payload.notification.body, \"info\"));\n  }).catch(function (err) {\n    return console.log(\"failed: \", err);\n  });\n  /* -------------------------------------------- */\n\n  useLayoutEffect(function () {\n    document.dir = language === LOCALES_TYPES.ENGLISH ? \"ltr\" : \"rtl\";\n    document.documentElement.lang = language;\n\n    if (language === LOCALES_TYPES.ENGLISH) {\n      document.getElementById(\"bootStyle\").href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\";\n    } else {\n      document.getElementById(\"bootStyle\").href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.rtl.min.css\";\n    }\n  }, [language]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(I18nProvider, {\n    locale: language,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/account\",\n    component: function component() {\n      return /*#__PURE__*/React.createElement(Account, {\n        path: \"/account\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 65\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/adminapp\",\n    component: function component() {\n      return /*#__PURE__*/React.createElement(AdminAccount, {\n        path: \"/adminapp\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 66\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Home,\n    exact: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Toast, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/App/App.jsx"],"names":["React","useEffect","useLayoutEffect","useState","BrowserRouter","Router","Switch","Route","useSelector","I18nProvider","LOCALES_TYPES","Account","Home","Toast","AdminAccount","useDispatch","toastNotification","onMessageListener","App","dispatch","language","state","general","notReload","setNotReload","localStorage","getItem","undefined","then","payload","notification","title","body","catch","err","console","log","document","dir","ENGLISH","documentElement","lang","getElementById","href"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { I18nProvider } from '../../i18n';\r\nimport { LOCALES_TYPES } from \"../../i18n/locales\";\r\nimport Account from \"../../Container/Account/Account\";\r\nimport Home from \"../../Container/Home/Home\";\r\nimport Toast from \"../Toast\";\r\nimport AdminAccount from \"../../Container/AdminAccount/AdminAccount\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\nimport { onMessageListener } from \"../../firebase\";\r\n\r\nconst App = () => {\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const language = useSelector(state => state.general.language);\r\n\r\n    /* ----------------------( FCM )---------------------- */\r\n\r\n    // notReload used in order to update the DOM at every notification\r\n    const [notReload, setNotReload] = useState(false);\r\n\r\n    // using Firebase Cloud Messaging (FCM) push notification\r\n    // onMessageListener => listening to new messages from the cloud\r\n\r\n    // listen only if the user is logged in\r\n    if (localStorage.getItem(\"Adminid\") != undefined || localStorage.getItem(\"userId\") != undefined)\r\n        onMessageListener().then((payload) => {\r\n            // setNotReload(!notReload);\r\n\r\n            // show a popup notification\r\n            dispatch(toastNotification(payload.notification.title, payload.notification.body, \"info\"));\r\n        }).catch((err) => console.log(\"failed: \", err));\r\n\r\n    /* -------------------------------------------- */\r\n\r\n    useLayoutEffect(() => {\r\n        document.dir = language === LOCALES_TYPES.ENGLISH ? \"ltr\" : \"rtl\";\r\n        document.documentElement.lang = language;\r\n        if (language === LOCALES_TYPES.ENGLISH) {\r\n            document.getElementById(\"bootStyle\").href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\";\r\n        } else {\r\n            document.getElementById(\"bootStyle\").href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.rtl.min.css\"\r\n        }\r\n\r\n    }, [language])\r\n\r\n    return (\r\n        <>\r\n            <I18nProvider locale={language}>\r\n                <Router>\r\n                    <Switch>\r\n                        {/* client/ transporter (user) account path */}\r\n                        <Route path=\"/account\" component={() => <Account path=\"/account\" />} />\r\n\r\n                        {/* admin account path */}\r\n                        <Route path=\"/adminapp\" component={() => <AdminAccount path=\"/adminapp\" />} />\r\n                        <Route path=\"/\" component={Home} exact />\r\n                    </Switch>\r\n                </Router>\r\n                <Toast />\r\n            </I18nProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}