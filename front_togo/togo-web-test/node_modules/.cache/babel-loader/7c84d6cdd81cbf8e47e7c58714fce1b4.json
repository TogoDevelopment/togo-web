{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from \"react\";\nimport { useUnmountEffect } from \"./use-unmount-effect\";\nexport function useForceUpdate() {\n  var unloadingRef = React.useRef(false);\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    count = _React$useState2[0],\n    setCount = _React$useState2[1];\n  useUnmountEffect(function () {\n    unloadingRef.current = true;\n  });\n  return React.useCallback(function () {\n    if (!unloadingRef.current) {\n      setCount(count + 1);\n    }\n  }, [count]);\n}","map":{"version":3,"names":["React","useUnmountEffect","useForceUpdate","unloadingRef","useRef","_React$useState","useState","_React$useState2","_slicedToArray","count","setCount","current","useCallback"],"sources":["../../src/use-force-update.ts"],"sourcesContent":["import * as React from \"react\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport function useForceUpdate() {\n  const unloadingRef = React.useRef(false)\n  const [count, setCount] = React.useState(0)\n\n  useUnmountEffect(() => {\n    unloadingRef.current = true\n  })\n\n  return React.useCallback(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1)\n    }\n  }, [count])\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,SAASC,cAATA,CAAA,EAA0B;EAC/B,IAAMC,YAAY,GAAGH,KAAK,CAACI,MAAN,CAAa,KAAb,CAArB;EACA,IAAAC,eAAA,GAA0BL,KAAK,CAACM,QAAN,CAAe,CAAf,CAA1B;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,KAAD,GAAAF,gBAAA;IAAQG,QAAR,GAAAH,gBAAA;EAENN,gBAAgB,CAAC,YAAM;IACrBE,YAAY,CAACQ,OAAb,GAAuB,IAAvB;EACD,CAFe,CAAhB;EAIA,OAAOX,KAAK,CAACY,WAAN,CAAkB,YAAM;IAC7B,IAAI,CAACT,YAAY,CAACQ,OAAlB,EAA2B;MACzBD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACD;EACF,CAJM,EAIJ,CAACA,KAAD,CAJI,CAAP;AAKD"},"metadata":{},"sourceType":"module"}