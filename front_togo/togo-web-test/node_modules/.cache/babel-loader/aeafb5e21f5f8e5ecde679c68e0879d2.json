{"ast":null,"code":"import { useRef, useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport helper from '../DOMHelper';\nfunction usePortal(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    id = _props.id,\n    container = _props.container;\n  var rootElemRef = useRef(helper.canUseDOM ? document.body : null);\n  useEffect(function () {\n    var containerElement = typeof container === 'function' ? container() : container; // Look for existing target dom element to append to\n\n    var existingParent = id && document.querySelector(\"#\" + id); // Parent is either a new root or the existing dom element\n\n    var parentElement = containerElement || existingParent || document.body;\n    rootElemRef.current = parentElement;\n  }, [rootElemRef, container, id]);\n  var Portal = useCallback(function (_ref) {\n    var children = _ref.children;\n    if (rootElemRef.current != null) return /*#__PURE__*/createPortal(children, rootElemRef.current);\n    return null;\n  }, [rootElemRef]);\n  return {\n    target: rootElemRef.current,\n    Portal: Portal\n  };\n}\nexport default usePortal;","map":{"version":3,"names":["useRef","useEffect","useCallback","createPortal","helper","usePortal","props","_props","id","container","rootElemRef","canUseDOM","document","body","containerElement","existingParent","querySelector","parentElement","current","Portal","_ref","children","target"],"sources":["/home/system/togo-web-test/node_modules/rsuite/esm/utils/usePortal.js"],"sourcesContent":["import { useRef, useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport helper from '../DOMHelper';\n\nfunction usePortal(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      id = _props.id,\n      container = _props.container;\n  var rootElemRef = useRef(helper.canUseDOM ? document.body : null);\n  useEffect(function () {\n    var containerElement = typeof container === 'function' ? container() : container; // Look for existing target dom element to append to\n\n    var existingParent = id && document.querySelector(\"#\" + id); // Parent is either a new root or the existing dom element\n\n    var parentElement = containerElement || existingParent || document.body;\n    rootElemRef.current = parentElement;\n  }, [rootElemRef, container, id]);\n  var Portal = useCallback(function (_ref) {\n    var children = _ref.children;\n    if (rootElemRef.current != null) return /*#__PURE__*/createPortal(children, rootElemRef.current);\n    return null;\n  }, [rootElemRef]);\n  return {\n    target: rootElemRef.current,\n    Portal: Portal\n  };\n}\n\nexport default usePortal;"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACtD,SAASC,YAAY,QAAQ,WAAW;AACxC,OAAOC,MAAM,MAAM,cAAc;AAEjC,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,IAAIA,KAAK,KAAK,KAAK,CAAC,EAAE;IACpBA,KAAK,GAAG,CAAC,CAAC;EACZ;EAEA,IAAIC,MAAM,GAAGD,KAAK;IACdE,EAAE,GAAGD,MAAM,CAACC,EAAE;IACdC,SAAS,GAAGF,MAAM,CAACE,SAAS;EAChC,IAAIC,WAAW,GAAGV,MAAM,CAACI,MAAM,CAACO,SAAS,GAAGC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAAC;EACjEZ,SAAS,CAAC,YAAY;IACpB,IAAIa,gBAAgB,GAAG,OAAOL,SAAS,KAAK,UAAU,GAAGA,SAAS,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC;;IAElF,IAAIM,cAAc,GAAGP,EAAE,IAAII,QAAQ,CAACI,aAAa,CAAC,GAAG,GAAGR,EAAE,CAAC,CAAC,CAAC;;IAE7D,IAAIS,aAAa,GAAGH,gBAAgB,IAAIC,cAAc,IAAIH,QAAQ,CAACC,IAAI;IACvEH,WAAW,CAACQ,OAAO,GAAGD,aAAa;EACrC,CAAC,EAAE,CAACP,WAAW,EAAED,SAAS,EAAED,EAAE,CAAC,CAAC;EAChC,IAAIW,MAAM,GAAGjB,WAAW,CAAC,UAAUkB,IAAI,EAAE;IACvC,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;IAC5B,IAAIX,WAAW,CAACQ,OAAO,IAAI,IAAI,EAAE,OAAO,aAAaf,YAAY,CAACkB,QAAQ,EAAEX,WAAW,CAACQ,OAAO,CAAC;IAChG,OAAO,IAAI;EACb,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EACjB,OAAO;IACLY,MAAM,EAAEZ,WAAW,CAACQ,OAAO;IAC3BC,MAAM,EAAEA;EACV,CAAC;AACH;AAEA,eAAed,SAAS"},"metadata":{},"sourceType":"module"}