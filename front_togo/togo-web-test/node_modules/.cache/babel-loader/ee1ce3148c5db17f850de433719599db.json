{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { useClickable } from \"@chakra-ui/clickable\";\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { useControllableState, useDisclosure, useFocusOnHide, useId, useIds, useOutsideClick, useShortcut, useUnmountEffect, useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { usePopper } from \"@chakra-ui/popper\";\nimport { createContext, getValidChildren, mergeRefs } from \"@chakra-ui/react-utils\";\nimport { addItem, callAllHandlers, dataAttr, determineLazyBehavior, focus, getNextItemFromSearch, getOwnerDocument, isActiveElement, isArray, isHTMLElement, isString, normalizeEventKey, removeItem } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nvar _createDescendantCont = createDescendantContext(),\n  _createDescendantCont2 = _slicedToArray(_createDescendantCont, 4),\n  MenuDescendantsProvider = _createDescendantCont2[0],\n  useMenuDescendantsContext = _createDescendantCont2[1],\n  useMenuDescendants = _createDescendantCont2[2],\n  useMenuDescendant = _createDescendantCont2[3];\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\nexport { MenuDescendantsProvider, useMenuDescendantsContext, useMenuDescendants, useMenuDescendant };\nvar _createContext = createContext({\n    strict: false,\n    name: \"MenuContext\"\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  MenuProvider = _createContext2[0],\n  useMenuContext = _createContext2[1];\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport { MenuProvider, useMenuContext };\nexport function useMenu(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props = props,\n    id = _props.id,\n    _props$closeOnSelect = _props.closeOnSelect,\n    closeOnSelect = _props$closeOnSelect === void 0 ? true : _props$closeOnSelect,\n    _props$closeOnBlur = _props.closeOnBlur,\n    closeOnBlur = _props$closeOnBlur === void 0 ? true : _props$closeOnBlur,\n    _props$autoSelect = _props.autoSelect,\n    autoSelect = _props$autoSelect === void 0 ? true : _props$autoSelect,\n    isLazy = _props.isLazy,\n    isOpenProp = _props.isOpen,\n    defaultIsOpen = _props.defaultIsOpen,\n    onCloseProp = _props.onClose,\n    onOpenProp = _props.onOpen,\n    _props$placement = _props.placement,\n    placement = _props$placement === void 0 ? \"bottom-start\" : _props$placement,\n    _props$lazyBehavior = _props.lazyBehavior,\n    lazyBehavior = _props$lazyBehavior === void 0 ? \"unmount\" : _props$lazyBehavior,\n    direction = _props.direction,\n    computePositionOnMount = _props.computePositionOnMount,\n    popperProps = _objectWithoutPropertiesLoose(props, [\"id\", \"closeOnSelect\", \"closeOnBlur\", \"autoSelect\", \"isLazy\", \"isOpen\", \"defaultIsOpen\", \"onClose\", \"onOpen\", \"placement\", \"lazyBehavior\", \"direction\", \"computePositionOnMount\"]);\n  var _useDisclosure = useDisclosure({\n      isOpen: isOpenProp,\n      defaultIsOpen: defaultIsOpen,\n      onClose: onCloseProp,\n      onOpen: onOpenProp\n    }),\n    isOpen = _useDisclosure.isOpen,\n    onOpen = _useDisclosure.onOpen,\n    onClose = _useDisclosure.onClose,\n    onToggle = _useDisclosure.onToggle;\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n\n  var menuRef = React.useRef(null);\n  var buttonRef = React.useRef(null);\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: function handler(event) {\n      var _buttonRef$current;\n      if (!((_buttonRef$current = buttonRef.current) != null && _buttonRef$current.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n\n  var popper = usePopper(_extends({}, popperProps, {\n    enabled: isOpen || computePositionOnMount,\n    placement: placement,\n    direction: direction\n  }));\n  var _React$useState = React.useState(-1),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    focusedIndex = _React$useState2[0],\n    setFocusedIndex = _React$useState2[1];\n  /**\n   * Context to register all menu item nodes\n   */\n\n  var descendants = useMenuDescendants();\n  /**\n   * Focus the button when we close the menu\n   */\n\n  useUpdateEffect(function () {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  /**\n   * Generate unique ids for menu's list and button\n   */\n\n  var _useIds = useIds(id, \"menu-button\", \"menu-list\"),\n    _useIds2 = _slicedToArray(_useIds, 2),\n    buttonId = _useIds2[0],\n    menuId = _useIds2[1];\n  var openAndFocusMenu = React.useCallback(function () {\n    onOpen();\n    focus(menuRef.current, {\n      nextTick: true,\n      selectTextIfInput: false\n    });\n  }, [onOpen, menuRef]);\n  var timeoutIds = React.useRef(new Set([]));\n  useUnmountEffect(function () {\n    timeoutIds.current.forEach(function (id) {\n      return clearTimeout(id);\n    });\n    timeoutIds.current.clear();\n  });\n  var openAndFocusFirstItem = React.useCallback(function () {\n    onOpen();\n    var id = setTimeout(function () {\n      var first = descendants.firstEnabled();\n      if (first) setFocusedIndex(first.index);\n    });\n    timeoutIds.current.add(id);\n  }, [onOpen, setFocusedIndex, descendants]);\n  var openAndFocusLastItem = React.useCallback(function () {\n    onOpen();\n    var id = setTimeout(function () {\n      var last = descendants.lastEnabled();\n      if (last) setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id);\n  }, [onOpen, setFocusedIndex, descendants]);\n  var refocus = React.useCallback(function () {\n    var _menuRef$current, _descendants$item;\n    var doc = getOwnerDocument(menuRef.current);\n    var hasFocusWithin = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(doc.activeElement);\n    var shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    var node = (_descendants$item = descendants.item(focusedIndex)) == null ? void 0 : _descendants$item.node;\n    if (node) {\n      focus(node, {\n        selectTextIfInput: false,\n        preventScroll: false\n      });\n    }\n  }, [isOpen, focusedIndex, descendants]);\n  React.useEffect(function () {\n    if (!isOpen) return;\n    if (autoSelect) openAndFocusFirstItem();else openAndFocusMenu();\n  }, [isOpen, autoSelect, openAndFocusFirstItem, openAndFocusMenu]);\n  return {\n    openAndFocusMenu: openAndFocusMenu,\n    openAndFocusFirstItem: openAndFocusFirstItem,\n    openAndFocusLastItem: openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    descendants: descendants,\n    popper: popper,\n    buttonId: buttonId,\n    menuId: menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen: isOpen,\n    onToggle: onToggle,\n    onOpen: onOpen,\n    onClose: onClose,\n    menuRef: menuRef,\n    buttonRef: buttonRef,\n    focusedIndex: focusedIndex,\n    closeOnSelect: closeOnSelect,\n    closeOnBlur: closeOnBlur,\n    autoSelect: autoSelect,\n    setFocusedIndex: setFocusedIndex,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior\n  };\n}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(props, externalRef) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n  var menu = useMenuContext();\n  var onToggle = menu.onToggle,\n    popper = menu.popper,\n    openAndFocusFirstItem = menu.openAndFocusFirstItem,\n    openAndFocusLastItem = menu.openAndFocusLastItem;\n  var onKeyDown = React.useCallback(function (event) {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    var action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n  return _extends({}, props, {\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\nfunction isTargetMenuItem(target) {\n  var _target$getAttribute;\n\n  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n  return isHTMLElement(target) && !!((_target$getAttribute = target.getAttribute(\"role\")) != null && _target$getAttribute.startsWith(\"menuitem\"));\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(props, ref) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (ref === void 0) {\n    ref = null;\n  }\n  var menu = useMenuContext();\n  if (!menu) {\n    throw new Error(\"useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>\");\n  }\n  var focusedIndex = menu.focusedIndex,\n    setFocusedIndex = menu.setFocusedIndex,\n    menuRef = menu.menuRef,\n    isOpen = menu.isOpen,\n    onClose = menu.onClose,\n    menuId = menu.menuId,\n    isLazy = menu.isLazy,\n    lazyBehavior = menu.lazyBehavior;\n  var descendants = useMenuDescendantsContext();\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n\n  var createTypeaheadHandler = useShortcut({\n    preventDefault: function preventDefault(event) {\n      return event.key !== \" \" && isTargetMenuItem(event.target);\n    }\n  });\n  var onKeyDown = React.useCallback(function (event) {\n    var eventKey = normalizeEventKey(event);\n    var keyMap = {\n      Tab: function Tab(event) {\n        return event.preventDefault();\n      },\n      Escape: onClose,\n      ArrowDown: function ArrowDown() {\n        var next = descendants.nextEnabled(focusedIndex);\n        if (next) setFocusedIndex(next.index);\n      },\n      ArrowUp: function ArrowUp() {\n        var prev = descendants.prevEnabled(focusedIndex);\n        if (prev) setFocusedIndex(prev.index);\n      }\n    };\n    var fn = keyMap[eventKey];\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n    /**\n     * Typeahead: Based on current character pressed,\n     * find the next item to be selected\n     */\n\n    var onTypeahead = createTypeaheadHandler(function (character) {\n      var nextItem = getNextItemFromSearch(descendants.values(), character, function (item) {\n        var _item$node$textConten, _item$node;\n        return (_item$node$textConten = item == null ? void 0 : (_item$node = item.node) == null ? void 0 : _item$node.textContent) != null ? _item$node$textConten : \"\";\n      }, descendants.item(focusedIndex));\n      if (nextItem) {\n        var index = descendants.indexOf(nextItem.node);\n        setFocusedIndex(index);\n      }\n    });\n    if (isTargetMenuItem(event.target)) {\n      onTypeahead(event);\n    }\n  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);\n  var hasBeenOpened = React.useRef(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  var shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy: isLazy,\n    lazyBehavior: lazyBehavior,\n    isSelected: isOpen\n  });\n  return _extends({}, props, {\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: _extends({}, props.style, {\n      transformOrigin: \"var(--popper-transform-origin)\"\n    }),\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown)\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _useMenuContext = useMenuContext(),\n    popper = _useMenuContext.popper,\n    isOpen = _useMenuContext.isOpen;\n  return popper.getPopperProps(_extends({}, props, {\n    style: _extends({\n      visibility: isOpen ? \"visible\" : \"hidden\"\n    }, props.style)\n  }));\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuItem(props, externalRef) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (externalRef === void 0) {\n    externalRef = null;\n  }\n  var _props2 = props,\n    onMouseEnterProp = _props2.onMouseEnter,\n    onMouseMoveProp = _props2.onMouseMove,\n    onMouseLeaveProp = _props2.onMouseLeave,\n    onClickProp = _props2.onClick,\n    isDisabled = _props2.isDisabled,\n    isFocusable = _props2.isFocusable,\n    closeOnSelect = _props2.closeOnSelect,\n    htmlProps = _objectWithoutPropertiesLoose(props, [\"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"onClick\", \"isDisabled\", \"isFocusable\", \"closeOnSelect\"]);\n  var menu = useMenuContext();\n  var setFocusedIndex = menu.setFocusedIndex,\n    focusedIndex = menu.focusedIndex,\n    menuCloseOnSelect = menu.closeOnSelect,\n    onClose = menu.onClose,\n    menuRef = menu.menuRef,\n    isOpen = menu.isOpen,\n    menuId = menu.menuId;\n  var ref = React.useRef(null);\n  var id = menuId + \"-menuitem-\" + useId();\n  /**\n   * Register the menuitem's node into the domContext\n   */\n\n  var _useMenuDescendant = useMenuDescendant({\n      disabled: isDisabled && !isFocusable\n    }),\n    index = _useMenuDescendant.index,\n    register = _useMenuDescendant.register;\n  var onMouseEnter = React.useCallback(function (event) {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  var onMouseMove = React.useCallback(function (event) {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n    if (ref.current && !isActiveElement(ref.current)) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  var onMouseLeave = React.useCallback(function (event) {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  var onClick = React.useCallback(function (event) {\n    onClickProp == null ? void 0 : onClickProp(event);\n    if (!isTargetMenuItem(event.currentTarget)) return;\n    /**\n     * Close menu and parent menus, allowing the MenuItem\n     * to override its parent menu's `closeOnSelect` prop.\n     */\n\n    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);\n  var isFocused = index === focusedIndex;\n  var trulyDisabled = isDisabled && !isFocusable;\n  useUpdateEffect(function () {\n    if (!isOpen) return;\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current, {\n        nextTick: true,\n        selectTextIfInput: false,\n        preventScroll: false\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      focus(menuRef.current, {\n        preventScroll: false\n      });\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  var clickableProps = useClickable({\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    onMouseMove: onMouseMove,\n    onMouseLeave: onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled: isDisabled,\n    isFocusable: isFocusable\n  });\n  return _extends({}, htmlProps, clickableProps, {\n    id: id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuOption(props, ref) {\n  if (props === void 0) {\n    props = {};\n  }\n  if (ref === void 0) {\n    ref = null;\n  }\n  var _props3 = props,\n    _props3$type = _props3.type,\n    type = _props3$type === void 0 ? \"radio\" : _props3$type,\n    isChecked = _props3.isChecked,\n    rest = _objectWithoutPropertiesLoose(props, [\"type\", \"isChecked\"]);\n  var ownProps = useMenuItem(rest, ref);\n  return _extends({}, ownProps, {\n    role: \"menuitem\" + type,\n    \"aria-checked\": isChecked\n  });\n}\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuOptionGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var _props4 = props,\n    children = _props4.children,\n    _props4$type = _props4.type,\n    type = _props4$type === void 0 ? \"radio\" : _props4$type,\n    valueProp = _props4.value,\n    defaultValue = _props4.defaultValue,\n    onChangeProp = _props4.onChange,\n    htmlProps = _objectWithoutPropertiesLoose(props, [\"children\", \"type\", \"value\", \"defaultValue\", \"onChange\"]);\n  var isRadio = type === \"radio\";\n  var fallback = isRadio ? \"\" : [];\n  var _useControllableState = useControllableState({\n      defaultValue: defaultValue != null ? defaultValue : fallback,\n      value: valueProp,\n      onChange: onChangeProp\n    }),\n    _useControllableState2 = _slicedToArray(_useControllableState, 2),\n    value = _useControllableState2[0],\n    setValue = _useControllableState2[1];\n  var onChange = React.useCallback(function (selectedValue) {\n    if (type === \"radio\" && isString(value)) {\n      setValue(selectedValue);\n    }\n    if (type === \"checkbox\" && isArray(value)) {\n      var nextValue = value.includes(selectedValue) ? removeItem(value, selectedValue) : addItem(value, selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  var validChildren = getValidChildren(children);\n  var clones = validChildren.map(function (child) {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if (child.type.id !== \"MenuItemOption\") return child;\n    var onClick = function onClick(event) {\n      onChange(child.props.value);\n      child.props.onClick == null ? void 0 : child.props.onClick(event);\n    };\n    var isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return /*#__PURE__*/React.cloneElement(child, {\n      type: type,\n      onClick: onClick,\n      isChecked: isChecked\n    });\n  });\n  return _extends({}, htmlProps, {\n    children: clones\n  });\n}\nexport function useMenuState() {\n  var _useMenuContext2 = useMenuContext(),\n    isOpen = _useMenuContext2.isOpen,\n    onClose = _useMenuContext2.onClose;\n  return {\n    isOpen: isOpen,\n    onClose: onClose\n  };\n}","map":{"version":3,"names":["useClickable","createDescendantContext","useControllableState","useDisclosure","useFocusOnHide","useId","useIds","useOutsideClick","useShortcut","useUnmountEffect","useUpdateEffect","usePopper","createContext","getValidChildren","mergeRefs","addItem","callAllHandlers","dataAttr","determineLazyBehavior","focus","getNextItemFromSearch","getOwnerDocument","isActiveElement","isArray","isHTMLElement","isString","normalizeEventKey","removeItem","React","_createDescendantCont","_createDescendantCont2","_slicedToArray","MenuDescendantsProvider","useMenuDescendantsContext","useMenuDescendants","useMenuDescendant","_createContext","strict","name","_createContext2","MenuProvider","useMenuContext","useMenu","props","_props","id","_props$closeOnSelect","closeOnSelect","_props$closeOnBlur","closeOnBlur","_props$autoSelect","autoSelect","isLazy","isOpenProp","isOpen","defaultIsOpen","onCloseProp","onClose","onOpenProp","onOpen","_props$placement","placement","_props$lazyBehavior","lazyBehavior","direction","computePositionOnMount","popperProps","_objectWithoutPropertiesLoose","_useDisclosure","onToggle","menuRef","useRef","buttonRef","enabled","ref","handler","event","_buttonRef$current","current","contains","target","popper","_extends","_React$useState","useState","_React$useState2","focusedIndex","setFocusedIndex","descendants","focusRef","visible","shouldFocus","_useIds","_useIds2","buttonId","menuId","openAndFocusMenu","useCallback","nextTick","selectTextIfInput","timeoutIds","Set","forEach","clearTimeout","clear","openAndFocusFirstItem","setTimeout","first","firstEnabled","index","add","openAndFocusLastItem","last","lastEnabled","refocus","_menuRef$current","_descendants$item","doc","hasFocusWithin","activeElement","shouldRefocus","node","item","preventScroll","useEffect","onTransitionEnd","forceUpdate","orientation","useMenuButton","externalRef","menu","onKeyDown","eventKey","keyMap","Enter","ArrowDown","ArrowUp","action","preventDefault","stopPropagation","referenceRef","onClick","isTargetMenuItem","_target$getAttribute","getAttribute","startsWith","useMenuList","Error","createTypeaheadHandler","key","Tab","Escape","next","nextEnabled","prev","prevEnabled","fn","onTypeahead","character","nextItem","values","_item$node$textConten","_item$node","textContent","indexOf","hasBeenOpened","shouldRenderChildren","hasBeenSelected","isSelected","children","tabIndex","role","style","transformOrigin","useMenuPositioner","_useMenuContext","getPopperProps","visibility","useMenuItem","_props2","onMouseEnterProp","onMouseEnter","onMouseMoveProp","onMouseMove","onMouseLeaveProp","onMouseLeave","onClickProp","isDisabled","isFocusable","htmlProps","menuCloseOnSelect","_useMenuDescendant","disabled","register","currentTarget","isFocused","trulyDisabled","clickableProps","useMenuOption","_props3","_props3$type","type","isChecked","rest","ownProps","useMenuOptionGroup","_props4","_props4$type","valueProp","value","defaultValue","onChangeProp","onChange","isRadio","fallback","_useControllableState","_useControllableState2","setValue","selectedValue","nextValue","includes","validChildren","clones","map","child","cloneElement","useMenuState","_useMenuContext2"],"sources":["../../src/use-menu.ts"],"sourcesContent":["import { useClickable } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport {\n  useControllableState,\n  useDisclosure,\n  UseDisclosureProps,\n  useFocusOnHide,\n  useId,\n  useIds,\n  useOutsideClick,\n  useShortcut,\n  useUnmountEffect,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  createContext,\n  EventKeyMap,\n  getValidChildren,\n  mergeRefs,\n} from \"@chakra-ui/react-utils\"\nimport {\n  addItem,\n  callAllHandlers,\n  dataAttr,\n  determineLazyBehavior,\n  focus,\n  getNextItemFromSearch,\n  getOwnerDocument,\n  isActiveElement,\n  isArray,\n  isHTMLElement,\n  isString,\n  LazyBehavior,\n  normalizeEventKey,\n  removeItem,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n] = createDescendantContext<HTMLElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [MenuProvider, useMenuContext] = createContext<\n  Omit<UseMenuReturn, \"descendants\">\n>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuProps extends UsePopperProps, UseDisclosureProps {\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will receive focus and be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of menu's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The menu's content is always unmounted when not open.\n   * - \"keepMounted\": The menu's content initially unmounted,\n   * but stays mounted when menu is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyBehavior\n  /**\n   * If `rtl`, poper placement positions will be flipped i.e. 'top-right' will\n   * become 'top-left' and vice-verse\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /*\n   * If `true`, the menu will be positioned when it mounts\n   * (even if it's not open).\n   *\n   * Note 🚨: We don't recommend using this in a menu/popover intensive UI or page\n   * as it might affect scrolling performance.\n   */\n  computePositionOnMount?: boolean\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount,\n    ...popperProps\n  } = props\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n  })\n\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = React.useRef<HTMLDivElement>(null)\n  const buttonRef = React.useRef<HTMLButtonElement>(null)\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event) => {\n      if (!buttonRef.current?.contains(event.target as HTMLElement)) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction,\n  })\n\n  const [focusedIndex, setFocusedIndex] = React.useState(-1)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const descendants = useMenuDescendants()\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = React.useCallback(() => {\n    onOpen()\n    focus(menuRef.current, {\n      nextTick: true,\n      selectTextIfInput: false,\n    })\n  }, [onOpen, menuRef])\n\n  const timeoutIds = React.useRef<Set<number>>(new Set([]))\n\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id) => clearTimeout(id))\n    timeoutIds.current.clear()\n  })\n\n  const openAndFocusFirstItem = React.useCallback(() => {\n    onOpen()\n    const id = setTimeout(() => {\n      const first = descendants.firstEnabled()\n      if (first) setFocusedIndex(first.index)\n    })\n    timeoutIds.current.add(id)\n  }, [onOpen, setFocusedIndex, descendants])\n\n  const openAndFocusLastItem = React.useCallback(() => {\n    onOpen()\n    const id = setTimeout(() => {\n      const last = descendants.lastEnabled()\n      if (last) setFocusedIndex(last.index)\n    })\n    timeoutIds.current.add(id)\n  }, [onOpen, setFocusedIndex, descendants])\n\n  const refocus = React.useCallback(() => {\n    const doc = getOwnerDocument(menuRef.current)\n    const hasFocusWithin = menuRef.current?.contains(doc.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const node = descendants.item(focusedIndex)?.node\n    if (node) {\n      focus(node, { selectTextIfInput: false, preventScroll: false })\n    }\n  }, [isOpen, focusedIndex, descendants])\n\n  React.useEffect(() => {\n    if (!isOpen) return\n    if (autoSelect) openAndFocusFirstItem()\n    else openAndFocusMenu()\n  }, [isOpen, autoSelect, openAndFocusFirstItem, openAndFocusMenu])\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuButton hook\n * -----------------------------------------------------------------------------------------------*/\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(\n  props: UseMenuButtonProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const { onToggle, popper, openAndFocusFirstItem, openAndFocusLastItem } = menu\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n      const keyMap: EventKeyMap = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nfunction isTargetMenuItem(target: EventTarget | null) {\n  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n  return (\n    isHTMLElement(target) &&\n    !!target.getAttribute(\"role\")?.startsWith(\"menuitem\")\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(\n  props: UseMenuListProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n  } = menu\n\n  const descendants = useMenuDescendantsContext()\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) =>\n      event.key !== \" \" && isTargetMenuItem(event.target),\n  })\n\n  const onKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = normalizeEventKey(event)\n\n      const keyMap: EventKeyMap = {\n        Tab: (event) => event.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex)\n          if (next) setFocusedIndex(next.index)\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex)\n          if (prev) setFocusedIndex(prev.index)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => item?.node?.textContent ?? \"\",\n          descendants.item(focusedIndex),\n        )\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node)\n          setFocusedIndex(index)\n        }\n      })\n\n      if (isTargetMenuItem(event.target)) {\n        onTypeahead(event)\n      }\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex,\n    ],\n  )\n\n  const hasBeenOpened = React.useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy,\n    lazyBehavior,\n    isSelected: isOpen,\n  })\n\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\",\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style,\n    },\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {\n  /**\n   * If `true`, the menuitem will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and the menuitem is disabled, it'll\n   * remain keyboard-focusable\n   */\n  isFocusable?: boolean\n  /**\n   * Overrides the parent menu's `closeOnSelect` prop.\n   */\n  closeOnSelect?: boolean\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n  } = menu\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const id = `${menuId}-menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const onMouseEnter = React.useCallback(\n    (event) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = React.useCallback(\n    (event) => {\n      onMouseMoveProp?.(event)\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = React.useCallback(\n    (event) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      if (!isTargetMenuItem(event.currentTarget)) return\n      /**\n       * Close menu and parent menus, allowing the MenuItem\n       * to override its parent menu's `closeOnSelect` prop.\n       */\n      if (closeOnSelect ?? menuCloseOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      focus(ref.current, {\n        nextTick: true,\n        selectTextIfInput: false,\n        preventScroll: false,\n      })\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      focus(menuRef.current, { preventScroll: false })\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const clickableProps = useClickable({\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends UseMenuItemProps,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const { type = \"radio\", isChecked, ...rest } = props\n  const ownProps = useMenuItem(rest, ref)\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = React.useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && isString(value)) {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? removeItem(value, selectedValue)\n          : addItem(value, selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return React.cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}