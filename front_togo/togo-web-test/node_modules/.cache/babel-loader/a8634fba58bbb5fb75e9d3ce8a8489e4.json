{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/SubmitAndAssignDialog.jsx\";\nimport React, { useState } from 'react';\nimport { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\nexport default function SubmitAndAssignDialog() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: open,\n    onHide: function onHide() {\n      setOpen(false);\n    },\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, translate(\"TEMP.ASSIGN_TO\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, \"test\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, \"close\"))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/SubmitAndAssignDialog.jsx"],"names":["React","useState","Button","Dropdown","Form","Modal","Spinner","SubmitAndAssignDialog","open","setOpen","translate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,EAAwCC,OAAxC,QAAuD,iBAAvD;AAEA,eAAe,SAASC,qBAAT,GAAiC;AAC5C,kBAAwBN,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,sBACI,uDACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAED,IAAvB;AAA6B,IAAA,MAAM,EAAE,kBAAM;AAACC,MAAAA,OAAO,CAAC,KAAD,CAAP;AAAe,KAA3D;AAA6D,IAAA,QAAQ,MAArE;AAAsE,IAAA,SAAS,EAAE,IAAjF;AAAuF,IAAA,QAAQ,EAAC,QAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,SAAS,CAAC,gBAAD,CAAvB,CADJ,CAFJ,eAMI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,SAAS,EAAC,+BAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AAEXD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CAXJ,CADJ,CADJ;AAkCH","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\r\n\r\nexport default function SubmitAndAssignDialog() {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"lg\" show={open} onHide={() => {setOpen(false)}} centered animation={true} backdrop=\"static\">\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"TEMP.ASSIGN_TO\")}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n\r\n                    test\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-center\">\r\n\r\n                    {/*<Form.Check type=\"checkbox\" label=\"Only for my network\" />*/}\r\n\r\n                    <Button\r\n                        onClick={() => {\r\n\r\n                            setOpen(false);\r\n                        }\r\n                        }\r\n                    >\r\n                        close\r\n                    </Button>\r\n\r\n\r\n                </Modal.Footer>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}