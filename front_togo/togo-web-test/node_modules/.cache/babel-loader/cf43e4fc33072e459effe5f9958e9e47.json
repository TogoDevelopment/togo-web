{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/UploadImage/UploadAndEditImage.jsx\";\nimport React, { useRef, useState } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport AvatarEditor from 'react-avatar-editor';\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap';\nexport default function UploadAndEditImage(_ref) {\n  var _this = this;\n\n  var currentImage = _ref.currentImage,\n      setImage = _ref.setImage,\n      setImageToUpload = _ref.setImageToUpload,\n      imageBorderRadius = _ref.imageBorderRadius,\n      imageHeight = _ref.imageHeight,\n      imageWidth = _ref.imageWidth;\n\n  // console.log(currentImage)\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      images = _useState4[0],\n      setImages = _useState4[1];\n\n  var maxNumber = 1;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rotate = _useState8[0],\n      setRotate = _useState8[1];\n\n  var _useState9 = useState(1.0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      size = _useState10[0],\n      setSize = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      borderRadius = _useState12[0],\n      setBorderRadius = _useState12[1];\n\n  var editor = useRef(null);\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var onChange = function onChange(image) {\n    setImages(image);\n  };\n\n  var handleRotate = function handleRotate(event) {\n    setRotate(parseInt(event.target.value));\n  };\n\n  var handleSize = function handleSize(event) {\n    setSize(parseFloat(event.target.value));\n  };\n\n  var handleBorderRadius = function handleBorderRadius(event) {\n    setBorderRadius(parseInt(event.target.value));\n  };\n\n  var getImageUrl = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var dataUrl, result, blob;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dataUrl = editor.current.getImage().toDataURL();\n              _context.next = 3;\n              return fetch(dataUrl);\n\n            case 3:\n              result = _context.sent;\n              _context.next = 6;\n              return result.blob();\n\n            case 6:\n              blob = _context.sent;\n              return _context.abrupt(\"return\", blob);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getImageUrl() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      handleShow();\n      !currentImage.includes(\"null\") && setImages([{\n        \"data_url\": currentImage\n      }]);\n    },\n    className: \"btn-grad-circle\",\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: 0,\n      height: \"50px\",\n      width: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-pencil-fill h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    style: {\n      backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Upload Image\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImageUploading, {\n    multiple: true,\n    value: images,\n    onChange: onChange,\n    maxNumber: maxNumber,\n    dataURLKey: \"data_url\" // maxFileSize={800000} // max 800,000 B => 781.25 KB\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, function (_ref3) {\n    var imageList = _ref3.imageList,\n        onImageUpload = _ref3.onImageUpload,\n        onImageUpdate = _ref3.onImageUpdate,\n        onImageRemove = _ref3.onImageRemove,\n        isDragging = _ref3.isDragging,\n        dragProps = _ref3.dragProps;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"upload__image-wrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, images.length == 0 && /*#__PURE__*/React.createElement(Button, Object.assign({\n      className: \"w-100\",\n      style: {\n        height: \"300px\"\n      },\n      variant: isDragging ? \"secondary\" : \"outline-secondary\",\n      onClick: onImageUpload\n    }, dragProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 56\n      }\n    }), \"Click or Drop here \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"bi bi-card-image ms-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 56\n      }\n    })), imageList.map(function (image, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"image-item\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"image-item__btn-wrapper w-100 d-flex justify-content-center mb-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-primary\",\n        className: \"w-25 me-1 rounded-pill\",\n        onClick: function onClick() {\n          return onImageUpdate(index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 45\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"outline-danger\",\n        className: \"w-25 rounded-pill\",\n        onClick: function onClick() {\n          return onImageRemove(index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }\n      }, \"Remove\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(AvatarEditor, {\n        ref: editor,\n        image: image['data_url'],\n        width: imageWidth,\n        height: imageHeight,\n        border: 50,\n        borderRadius: imageBorderRadius,\n        scale: size,\n        rotate: rotate,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(Form.Label, {\n        className: \"mt-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }\n      }, \"Rotate: \", rotate, \"\\xB0\"), /*#__PURE__*/React.createElement(Form.Range, {\n        value: rotate,\n        min: \"-180\",\n        max: \"180\",\n        step: \"1\",\n        onChange: handleRotate,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 45\n        }\n      }), \" \", /*#__PURE__*/React.createElement(Form.Label, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 45\n        }\n      }, \"Size: \", size), /*#__PURE__*/React.createElement(Form.Range, {\n        value: size,\n        min: \"0.6\",\n        max: \"10\",\n        step: \"0.1\",\n        onChange: handleSize,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 45\n        }\n      }), \" \", \" \", /*#__PURE__*/React.createElement(Button, {\n        onClick: function onClick() {\n          setRotate(0);\n          setSize(1);\n          setBorderRadius(0);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 45\n        }\n      }, \"Reset\"), \" \"));\n    }));\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Cancel \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var blob, urlCreator, imageUrl, reader;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!editor.current) {\n                _context2.next = 13;\n                break;\n              }\n\n              // console.log(\"uploading... \")\n              setLoading(true);\n              _context2.next = 4;\n              return getImageUrl();\n\n            case 4:\n              blob = _context2.sent;\n              urlCreator = window.URL || window.webkitURL;\n              imageUrl = urlCreator.createObjectURL(blob);\n              setImage(imageUrl); // get new image url\n\n              reader = new FileReader();\n              reader.readAsDataURL(blob);\n\n              reader.onloadend = function () {\n                var base64data = reader.result;\n                setImageToUpload(base64data); // get new image data\n              }; // console.log(\"uploaded\")\n\n\n              setLoading(false);\n              handleClose();\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, loading && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"success\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  }), \" Save \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 102\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/UploadImage/UploadAndEditImage.jsx"],"names":["React","useRef","useState","ImageUploading","AvatarEditor","Modal","Button","Form","Spinner","UploadAndEditImage","currentImage","setImage","setImageToUpload","imageBorderRadius","imageHeight","imageWidth","loading","setLoading","images","setImages","maxNumber","show","setShow","rotate","setRotate","size","setSize","borderRadius","setBorderRadius","editor","handleClose","handleShow","onChange","image","handleRotate","event","parseInt","target","value","handleSize","parseFloat","handleBorderRadius","getImageUrl","dataUrl","current","getImage","toDataURL","fetch","result","blob","includes","position","right","bottom","height","width","backgroundColor","imageList","onImageUpload","onImageUpdate","onImageRemove","isDragging","dragProps","length","map","index","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","reader","FileReader","readAsDataURL","onloadend","base64data"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { Modal, Button, Form, Spinner } from 'react-bootstrap';\r\n\r\n\r\nexport default function UploadAndEditImage({ currentImage, setImage, setImageToUpload, imageBorderRadius, imageHeight, imageWidth }) {\r\n\r\n    // console.log(currentImage)\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 1;\r\n    const [show, setShow] = useState(false);\r\n    const [rotate, setRotate] = useState(0);\r\n    const [size, setSize] = useState(1.0);\r\n    const [borderRadius, setBorderRadius] = useState(0);\r\n    const editor = useRef(null);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const onChange = (image) => {\r\n        setImages(image);\r\n    };\r\n\r\n    const handleRotate = (event) => {\r\n        setRotate(parseInt(event.target.value));\r\n    };\r\n\r\n    const handleSize = (event) => {\r\n        setSize(parseFloat(event.target.value));\r\n    };\r\n\r\n    const handleBorderRadius = (event) => {\r\n        setBorderRadius(parseInt(event.target.value));\r\n    };\r\n\r\n    const getImageUrl = async () => {\r\n        const dataUrl = editor.current.getImage().toDataURL()\r\n        const result = await fetch(dataUrl);\r\n        const blob = await result.blob();\r\n\r\n        return blob;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={() => { handleShow(); !currentImage.includes(\"null\") && setImages([{ \"data_url\": currentImage }]) }} className=\"btn-grad-circle\" style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                height: \"50px\",\r\n                width: \"50px\",\r\n            }}>\r\n                <i className=\"bi bi-pencil-fill h4\"></i>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose} style={{ backgroundColor: \"rgba(0, 0, 0, 0.7)\" }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Upload Image</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/* image uploader */}\r\n                    <ImageUploading\r\n                        multiple\r\n                        value={images}\r\n                        onChange={onChange}\r\n                        maxNumber={maxNumber}\r\n                        dataURLKey=\"data_url\"\r\n                        // maxFileSize={800000} // max 800,000 B => 781.25 KB\r\n                    >\r\n                        {({\r\n                            imageList,\r\n                            onImageUpload,\r\n                            // onImageRemoveAll,\r\n                            onImageUpdate,\r\n                            onImageRemove,\r\n                            isDragging,\r\n                            dragProps,\r\n                        }) => (\r\n                            <div className=\"upload__image-wrapper\">\r\n                                {images.length == 0 && <Button\r\n                                    className='w-100'\r\n                                    style={{ height: \"300px\" }}\r\n                                    variant={isDragging ? \"secondary\" : \"outline-secondary\"}\r\n                                    onClick={onImageUpload}\r\n                                    {...dragProps}\r\n                                >\r\n                                    Click or Drop here <i className=\"bi bi-card-image ms-2\"></i>\r\n                                </Button>}\r\n                                {imageList.map((image, index) => (\r\n                                    <div key={index} className=\"image-item\">\r\n                                        <div className=\"image-item__btn-wrapper w-100 d-flex justify-content-center mb-2\">\r\n                                            <Button variant=\"outline-primary\" className='w-25 me-1 rounded-pill' onClick={() => onImageUpdate(index)}>Update</Button>\r\n                                            <Button variant=\"outline-danger\" className='w-25 rounded-pill' onClick={() => onImageRemove(index)}>Remove</Button>\r\n                                        </div>\r\n                                        <div>\r\n                                            {/* image container/editer */}\r\n                                            <AvatarEditor\r\n                                                ref={editor}\r\n                                                image={image['data_url']}\r\n                                                width={imageWidth}\r\n                                                height={imageHeight}\r\n                                                border={50}\r\n                                                borderRadius={imageBorderRadius}\r\n                                                scale={size}\r\n                                                rotate={rotate}\r\n                                            />\r\n                                            <Form.Label className=\"mt-2\">Rotate: {rotate}°</Form.Label>\r\n                                            <Form.Range value={rotate} min=\"-180\" max=\"180\" step=\"1\" onChange={handleRotate} /> {/* to edit image rotation */}\r\n                                            <Form.Label>Size: {size}</Form.Label>\r\n                                            <Form.Range value={size} min=\"0.6\" max=\"10\" step=\"0.1\" onChange={handleSize} /> {/* to edit image size */}\r\n                                            {/* <Form.Label>Border Radius: {borderRadius}</Form.Label>\r\n                                            <Form.Range value={borderRadius} min=\"0\" max=\"250\" step=\"1\" onChange={handleBorderRadius} /> */} {/* to edit image border raduis */}\r\n                                            <Button onClick={() => { setRotate(0); setSize(1); setBorderRadius(0) }}>Reset</Button> {/* reset image edit */}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </ImageUploading>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                        Cancel <i className=\"bi bi-x\"></i>\r\n                    </Button>\r\n                    <Button variant=\"outline-success\" onClick={async () => {\r\n                        if (editor.current) {\r\n                            \r\n                            // console.log(\"uploading... \")\r\n                            setLoading(true);\r\n\r\n                            const blob = await getImageUrl();\r\n\r\n                            const urlCreator = window.URL || window.webkitURL;\r\n                            const imageUrl = urlCreator.createObjectURL(blob);\r\n                            setImage(imageUrl); // get new image url\r\n\r\n                            let reader = new FileReader();\r\n                            reader.readAsDataURL(blob);\r\n                            reader.onloadend = function () {\r\n                                let base64data = reader.result;\r\n                                setImageToUpload(base64data); // get new image data\r\n                            }\r\n\r\n                            // console.log(\"uploaded\")\r\n                            setLoading(false);\r\n\r\n                            handleClose();\r\n                        }\r\n                    }}>\r\n                        {loading && <Spinner animation=\"border\" variant=\"success\" size=\"sm\" />} Save <i className=\"bi bi-check-all\"></i>\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}