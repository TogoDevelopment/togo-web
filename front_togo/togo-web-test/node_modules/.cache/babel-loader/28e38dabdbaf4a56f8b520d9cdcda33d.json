{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/AdminPanel/AdminPanel.jsx\";\nimport React from \"react\";\nimport \"./AdminPanel.css\";\nimport { GetAllActiveOrders, GetAllClients, GetAllFinishedOrders, GetAllReturnedOrders, GetAllNewOrders, GetAllTransporters, getRecordsActions, getTotalBalance, getLastOrderId, getLastRecord, updateAdminWebNotificationToken } from \"../../APIs/AdminPanelApis\";\nimport { useEffect, useState } from \"react\";\nimport { ResponsivePie } from '@nivo/pie';\nimport OrdersCard from \"./OrdersCard\";\nimport UsersCard from \"./UserCard\";\nimport RecordsCard from \"./RecordsCard\";\nimport TransfersCard from \"./TransfersCard\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\"; //https://dribbble.com/shots/15254181-CRM-Dashboard-Managency\n//https://dribbble.com/shots/16485287-Trustland-Logistic-Management-App\n\nexport default function AdminPanel() {\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold'\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold'\n    }\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      orderStat = _useState2[0],\n      setOrderStat = _useState2[1]; // for orders stat. \n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userStat = _useState4[0],\n      setUserStat = _useState4[1]; // for users stat.\n\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newOrders = _useState6[0],\n      setNewOrders = _useState6[1]; // all newly created orders\n\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      activeOrders = _useState8[0],\n      setActiveOrders = _useState8[1]; // all in process orders\n  // const [finishedOrders, setFinishedOrders] = useState([]); // all finished/deleted orders\n\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      exceptionOrders = _useState10[0],\n      setExceptionOrders = _useState10[1]; // all stuck/returned orders\n\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      activeOrdersNum = _useState12[0],\n      setActiveOrdersNum = _useState12[1]; // number of active orders\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      records = _useState14[0],\n      setRecords = _useState14[1]; // all system actions\n\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      creditAmount = _useState16[0],\n      setCreditAmount = _useState16[1]; // total escrow, all system balance\n\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      totalEscrowBalance = _useState18[0],\n      setTotalEscrowBalance = _useState18[1]; // total in escrow, active money\n\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      allTransporters = _useState20[0],\n      setAllTransporters = _useState20[1]; // all transporters\n\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      allClients = _useState22[0],\n      setAllClients = _useState22[1]; // all clients\n\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      lastorderId = _useState24[0],\n      setLastorderId = _useState24[1]; // last action record id, from system actions\n\n  /* get last order id as number of total orders */\n\n\n  useEffect(function () {\n    getLastOrderId().then(function (res) {\n      setLastorderId(res.data);\n    });\n  }, []);\n  /* get system actions */\n\n  useEffect(function () {\n    getRecordsActions().then(function (res) {\n      setRecords(res.data.records_list);\n    });\n  }, []);\n  /* get total balance */\n\n  useEffect(function () {\n    getTotalBalance().then(function (res) {\n      var _res$data$server_resp, _res$data$server_resp2;\n\n      setTotalEscrowBalance((_res$data$server_resp = res.data.server_response.data) === null || _res$data$server_resp === void 0 ? void 0 : _res$data$server_resp.result.differ_balance);\n      setCreditAmount((_res$data$server_resp2 = res.data.server_response.data) === null || _res$data$server_resp2 === void 0 ? void 0 : _res$data$server_resp2.result.credit_amount);\n    });\n  }, []);\n  /* get all orders */\n\n  useEffect(function () {\n    // reset orders stat. to reset orders pie chart\n    setOrderStat([]); // get all new orders\n\n    GetAllNewOrders().then(function (res) {\n      // console.log(res.data.orders_list);\n      setNewOrders(res.data.orders_list);\n      setOrderStat(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          \"id\": \"new\",\n          \"label\": \"New\",\n          \"value\": res.data.NumberOfOrders\n        }]);\n      });\n    }); // get all in-process orders\n\n    GetAllActiveOrders().then(function (res) {\n      // console.log(res.data.orders_list);\n      setActiveOrders(res.data.orders_list);\n      setActiveOrdersNum(res.data.NumberOfOrders);\n      setOrderStat(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          \"id\": \"active\",\n          \"label\": \"Active\",\n          \"value\": res.data.NumberOfOrders\n        }]);\n      });\n    }); // get all stuck/returned orders\n\n    GetAllReturnedOrders().then(function (res) {\n      // console.log(res.data.orders_list);\n      // setFinishedOrders(res.data.orders_list);\n      setExceptionOrders(res.data.orders_list);\n      setOrderStat(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          \"id\": \"finished\",\n          \"label\": \"Finished\",\n          \"value\": res.data.NumberOfOrders\n        }]);\n      });\n    });\n  }, []);\n  useEffect(function () {\n    // reset users stat. to reset users pie chart\n    setUserStat([]); // get all transporters\n\n    GetAllTransporters().then(function (res) {\n      var tempArr = res.data.transporters_list;\n      setAllTransporters(tempArr);\n      setUserStat(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          \"id\": \"transporter\",\n          \"label\": \"Transporters\",\n          \"value\": res.data.NumberOfTransporters\n        }]);\n      });\n    }); // get all clients\n\n    GetAllClients().then(function (res) {\n      var tempArr = res.data.clients_list;\n      setAllClients(tempArr);\n      setUserStat(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          \"id\": \"client\",\n          \"label\": \"Clients\",\n          \"value\": res.data.NumberOfClients\n        }]);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex w-100 panel-wrapper\",\n    style: {\n      backgroundColor: \"#eaeced\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-3\",\n    style: {\n      width: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RecordsCard, {\n    title: \"Records Log Table\",\n    list: records,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TransfersCard, {\n    title: \"Records Log Table\",\n    list: records,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-3\",\n    style: {\n      width: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(OrdersCard, {\n    title: \"New Orders\",\n    list: newOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-3\",\n    style: {\n      width: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(OrdersCard, {\n    title: \"Active Orders\",\n    list: activeOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-3\",\n    style: {\n      width: \"25%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(OrdersCard, {\n    title: \"Exceptions\",\n    list: exceptionOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/AdminPanel/AdminPanel.jsx"],"names":["React","GetAllActiveOrders","GetAllClients","GetAllFinishedOrders","GetAllReturnedOrders","GetAllNewOrders","GetAllTransporters","getRecordsActions","getTotalBalance","getLastOrderId","getLastRecord","updateAdminWebNotificationToken","useEffect","useState","ResponsivePie","OrdersCard","UsersCard","RecordsCard","TransfersCard","useDispatch","useHistory","AdminPanel","history","dispatch","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","cardHeaderSm","orderStat","setOrderStat","userStat","setUserStat","newOrders","setNewOrders","activeOrders","setActiveOrders","exceptionOrders","setExceptionOrders","activeOrdersNum","setActiveOrdersNum","records","setRecords","creditAmount","setCreditAmount","totalEscrowBalance","setTotalEscrowBalance","allTransporters","setAllTransporters","allClients","setAllClients","lastorderId","setLastorderId","then","res","data","records_list","server_response","result","differ_balance","credit_amount","orders_list","prev","NumberOfOrders","tempArr","transporters_list","NumberOfTransporters","clients_list","NumberOfClients","backgroundColor","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./AdminPanel.css\"\r\nimport { GetAllActiveOrders, GetAllClients, GetAllFinishedOrders, GetAllReturnedOrders, GetAllNewOrders, GetAllTransporters, getRecordsActions, getTotalBalance, getLastOrderId, getLastRecord, updateAdminWebNotificationToken } from \"../../APIs/AdminPanelApis\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport OrdersCard from \"./OrdersCard\";\r\nimport UsersCard from \"./UserCard\";\r\nimport RecordsCard from \"./RecordsCard\";\r\nimport TransfersCard from \"./TransfersCard\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n//https://dribbble.com/shots/15254181-CRM-Dashboard-Managency\r\n//https://dribbble.com/shots/16485287-Trustland-Logistic-Management-App\r\n\r\nexport default function AdminPanel() {\r\n\r\n    const history = useHistory();\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold'\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold'\r\n        }\r\n    }\r\n\r\n    const [orderStat, setOrderStat] = useState([]); // for orders stat. \r\n    const [userStat, setUserStat] = useState([]); // for users stat.\r\n    const [newOrders, setNewOrders] = useState([]); // all newly created orders\r\n    const [activeOrders, setActiveOrders] = useState([]); // all in process orders\r\n    // const [finishedOrders, setFinishedOrders] = useState([]); // all finished/deleted orders\r\n    const [exceptionOrders, setExceptionOrders] = useState([]); // all stuck/returned orders\r\n    const [activeOrdersNum, setActiveOrdersNum] = useState(0); // number of active orders\r\n    const [records, setRecords] = useState([]); // all system actions\r\n    const [creditAmount, setCreditAmount] = useState(0); // total escrow, all system balance\r\n    const [totalEscrowBalance, setTotalEscrowBalance] = useState(0); // total in escrow, active money\r\n    const [allTransporters, setAllTransporters] = useState([]); // all transporters\r\n    const [allClients, setAllClients] = useState([]); // all clients\r\n    const [lastorderId, setLastorderId] = useState(); // last action record id, from system actions\r\n\r\n    /* get last order id as number of total orders */\r\n    useEffect(() => {\r\n        getLastOrderId().then((res) => {\r\n            setLastorderId(res.data);\r\n        })\r\n    }, []);\r\n\r\n    /* get system actions */\r\n    useEffect(() => {\r\n        getRecordsActions().then((res) => {\r\n            setRecords(res.data.records_list);\r\n        });\r\n    }, []);\r\n\r\n    /* get total balance */\r\n    useEffect(() => {\r\n        getTotalBalance().then((res) => {\r\n\r\n            setTotalEscrowBalance(res.data.server_response.data?.result.differ_balance);\r\n            setCreditAmount(res.data.server_response.data?.result.credit_amount);\r\n        });\r\n    }, []);\r\n\r\n    /* get all orders */\r\n    useEffect(() => {\r\n        // reset orders stat. to reset orders pie chart\r\n        setOrderStat([]);\r\n\r\n        // get all new orders\r\n        GetAllNewOrders().then((res) => {\r\n            // console.log(res.data.orders_list);\r\n            setNewOrders(res.data.orders_list);\r\n            setOrderStat((prev) => {\r\n                return [...prev, {\r\n                    \"id\": \"new\",\r\n                    \"label\": \"New\",\r\n                    \"value\": res.data.NumberOfOrders,\r\n                }]\r\n            });\r\n        });\r\n\r\n        // get all in-process orders\r\n        GetAllActiveOrders().then((res) => {\r\n            // console.log(res.data.orders_list);\r\n            setActiveOrders(res.data.orders_list);\r\n            setActiveOrdersNum(res.data.NumberOfOrders);\r\n            setOrderStat((prev) => {\r\n                return [...prev, {\r\n                    \"id\": \"active\",\r\n                    \"label\": \"Active\",\r\n                    \"value\": res.data.NumberOfOrders,\r\n                }]\r\n            });\r\n        });\r\n\r\n        // get all stuck/returned orders\r\n        GetAllReturnedOrders().then((res) => {\r\n            // console.log(res.data.orders_list);\r\n            // setFinishedOrders(res.data.orders_list);\r\n            setExceptionOrders(res.data.orders_list);\r\n            setOrderStat((prev) => {\r\n                return [...prev, {\r\n                    \"id\": \"finished\",\r\n                    \"label\": \"Finished\",\r\n                    \"value\": res.data.NumberOfOrders,\r\n                }]\r\n            });\r\n\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // reset users stat. to reset users pie chart\r\n        setUserStat([]);\r\n\r\n        // get all transporters\r\n        GetAllTransporters().then((res) => {\r\n            let tempArr = res.data.transporters_list;\r\n\r\n            setAllTransporters(tempArr);\r\n            setUserStat((prev) => {\r\n                return [...prev, {\r\n                    \"id\": \"transporter\",\r\n                    \"label\": \"Transporters\",\r\n                    \"value\": res.data.NumberOfTransporters,\r\n                }]\r\n            });\r\n        });\r\n\r\n        // get all clients\r\n        GetAllClients().then((res) => {\r\n            let tempArr = res.data.clients_list;\r\n\r\n            setAllClients(tempArr);\r\n            setUserStat((prev) => {\r\n                return [...prev, {\r\n                    \"id\": \"client\",\r\n                    \"label\": \"Clients\",\r\n                    \"value\": res.data.NumberOfClients,\r\n                }]\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex w-100 panel-wrapper\" style={{ backgroundColor: \"#eaeced\" }}>\r\n                {/* <div\r\n                    className=\"bg-white mt-3 mb-3 ms-3 rounded-22 shadow admin-left-menu\"\r\n                >\r\n\r\n                    <div className=\" h-100\">\r\n                        <RecordsCard title=\"Records Log Table\" list={records} />\r\n                    </div>\r\n\r\n                </div> */}\r\n                {/* <div className=\"w-100 ps-3\" style={{ overflowX: \"auto\" }}>\r\n                    <div className=\"w-100 d-flex\">\r\n                        <div\r\n                            className=\"bg-white me-3 mt-3 rounded-22 shadow togo-chart\"\r\n                        >\r\n                            <ResponsivePie\r\n                                data={orderStat}\r\n                                margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n                                innerRadius={0.5}\r\n                                padAngle={0.7}\r\n                                cornerRadius={3}\r\n                                activeOuterRadiusOffset={8}\r\n                                borderWidth={1}\r\n                                borderColor={{\r\n                                    from: 'color',\r\n                                    modifiers: [\r\n                                        [\r\n                                            'darker',\r\n                                            0.2\r\n                                        ]\r\n                                    ]\r\n                                }}\r\n                                arcLinkLabelsSkipAngle={10}\r\n                                arcLinkLabelsTextColor=\"#333333\"\r\n                                arcLinkLabelsThickness={2}\r\n                                arcLinkLabelsColor={{ from: 'color' }}\r\n                                arcLabelsSkipAngle={10}\r\n                                arcLabelsTextColor={{\r\n                                    from: 'color',\r\n                                    modifiers: [\r\n                                        [\r\n                                            'darker',\r\n                                            2\r\n                                        ]\r\n                                    ]\r\n                                }}\r\n                                defs={[\r\n                                    {\r\n                                        id: 'dots',\r\n                                        type: 'patternDots',\r\n                                        background: 'inherit',\r\n                                        color: 'rgba(255, 255, 255, 0.3)',\r\n                                        size: 4,\r\n                                        padding: 1,\r\n                                        stagger: true\r\n                                    },\r\n                                    {\r\n                                        id: 'lines',\r\n                                        type: 'patternLines',\r\n                                        background: 'inherit',\r\n                                        color: 'rgba(255, 255, 255, 0.3)',\r\n                                        rotation: -45,\r\n                                        lineWidth: 6,\r\n                                        spacing: 10\r\n                                    }\r\n                                ]}\r\n                                fill={[\r\n\r\n                                ]}\r\n                                legends={[\r\n                                    {\r\n                                        anchor: 'bottom',\r\n                                        direction: 'row',\r\n                                        justify: false,\r\n                                        translateX: 0,\r\n                                        translateY: 56,\r\n                                        itemsSpacing: 0,\r\n                                        itemWidth: 100,\r\n                                        itemHeight: 18,\r\n                                        itemTextColor: '#999',\r\n                                        itemDirection: 'left-to-right',\r\n                                        itemOpacity: 1,\r\n                                        symbolSize: 18,\r\n                                        symbolShape: 'circle',\r\n                                        effects: [\r\n                                            {\r\n                                                on: 'hover',\r\n                                                style: {\r\n                                                    itemTextColor: '#000'\r\n                                                }\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                        <div\r\n\r\n                            className=\"bg-white me-3 mt-3 rounded-22 shadow togo-chart\"\r\n                        >\r\n                            <ResponsivePie\r\n                                margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n                                data={userStat}\r\n                                animate={true}\r\n                                colors={{\r\n                                    scheme: 'set2'//datum: 'data.color' \r\n                                }}\r\n                                activeOuterRadiusOffset={8}\r\n                                innerRadius={0.6}\r\n                                padAngle={0.5}\r\n                                cornerRadius={5}\r\n                                arcLinkLabelsColor={{\r\n                                    from: 'color',\r\n                                }}\r\n                                arcLinkLabelsThickness={3}\r\n                                arcLinkLabelsTextColor={{\r\n                                    from: 'color',\r\n                                    modifiers: [['darker', 1.2]],\r\n                                }}\r\n                                legends={[\r\n                                    {\r\n                                        anchor: 'bottom',\r\n                                        direction: 'row',\r\n                                        justify: false,\r\n                                        translateX: 0,\r\n                                        translateY: 56,\r\n                                        itemsSpacing: 0,\r\n                                        itemWidth: 100,\r\n                                        itemHeight: 18,\r\n                                        itemTextColor: '#999',\r\n                                        itemDirection: 'left-to-right',\r\n                                        itemOpacity: 1,\r\n                                        symbolSize: 18,\r\n                                        symbolShape: 'circle',\r\n                                        effects: [\r\n                                            {\r\n                                                on: 'hover',\r\n                                                style: {\r\n                                                    itemTextColor: '#000'\r\n                                                }\r\n                                            }\r\n                                        ]\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            style={{ position: \"relative\" }}\r\n                            className=\"bg-white me-3 mt-3 rounded-22 shadow togo-chart p-3\"\r\n                        >\r\n                            <div className=\"row\">\r\n                                <div style={{ fontSize: \"1rem\" }}>Total in Escrow: <span style={{ color: \"#35b09d\" }}>{totalEscrowBalance}</span></div>\r\n                                <div style={{ fontSize: \"1rem\" }}>Total Escrow: <span style={{ color: \"#35b09d\" }}>{creditAmount}</span></div>\r\n                            </div>\r\n\r\n                            <hr style={{ marginTop: \"20px\", marginBottom: \"20px\" }} />\r\n\r\n                            <div className=\"row\">\r\n                                <div style={{ fontSize: \"1rem\" }}>Active Packages: <span style={{ color: \"#35b09d\" }}>{activeOrdersNum}</span></div>\r\n                                <div style={{ fontSize: \"1rem\" }}>Total Packages: <span style={{ color: \"#35b09d\" }}>{lastorderId}</span></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w-100 d-flex h-25\">\r\n                        <OrdersCard title=\"New Orders\" list={newOrders} />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"w-100 d-flex h-25\">\r\n                        <OrdersCard title=\"Active Orders\" list={activeOrders} />\r\n                    </div>\r\n\r\n                    <div className=\"w-100 d-flex h-25\">\r\n                        <OrdersCard title=\"Exceptions\" list={exceptionOrders} />\r\n                    </div>\r\n                </div> */}\r\n                {/* <div className=\"m-3\" style={{ width: \"30%\" }}>\r\n\r\n                    <div className=\"\" style={{ height: \"49%\" }}>\r\n                        <UsersCard title=\"All Clients\" list={allClients} />\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\" style={{ height: \"49%\" }}>\r\n                        <UsersCard title=\"All Transporters\" list={allTransporters} />\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"m-3\" style={{ width: \"25%\" }}>\r\n                    <RecordsCard title=\"Records Log Table\" list={records} />\r\n                    <TransfersCard title=\"Records Log Table\" list={records} />\r\n                </div>\r\n                <div className=\"m-3\" style={{ width: \"25%\" }}>\r\n                    <OrdersCard title=\"New Orders\" list={newOrders} />\r\n                </div>\r\n                <div className=\"m-3\" style={{ width: \"25%\" }}>\r\n                    <OrdersCard title=\"Active Orders\" list={activeOrders} />\r\n                </div>\r\n                <div className=\"m-3\" style={{ width: \"25%\" }}>\r\n                    <OrdersCard title=\"Exceptions\" list={exceptionOrders} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}