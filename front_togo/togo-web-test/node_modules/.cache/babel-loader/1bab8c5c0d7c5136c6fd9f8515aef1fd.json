{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite'; // import { getAuth } from \"firebase/auth\";\n\nimport { getMessaging } from \"firebase/messaging\"; // Follow this pattern to import other Firebase services\n// import { } from 'firebase/<service>';\n// TODO: Replace the following with your app's Firebase project configuration\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\n  authDomain: \"togo-7f889.firebaseapp.com\",\n  projectId: \"togo-7f889\",\n  storageBucket: \"togo-7f889.appspot.com\",\n  messagingSenderId: \"861859089841\",\n  appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\n  measurementId: \"G-4DSC9GYT3S\"\n};\nvar app = initializeApp(firebaseConfig);\nvar db = getFirestore(app); // Initialize Firebase Authentication and get a reference to the service\n// export const auth = getAuth(app);\n\nexport function requestPermission() {\n  console.log('Requesting permission...');\n  Notification.requestPermission().then(function (permission) {\n    if (permission === 'granted') {\n      console.log('Notification permission granted.'); // Initialize Firebase Cloud Messaging and get a reference to the service\n\n      var messaging = getMessaging(app);\n    }\n  });\n} // Get a list of cities from your database\n\nexport function getCities(_x) {\n  return _getCities.apply(this, arguments);\n}\n\nfunction _getCities() {\n  _getCities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(db) {\n    var citiesCol, citySnapshot, cityList;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            citiesCol = collection(db, 'cities');\n            _context.next = 3;\n            return getDocs(citiesCol);\n\n          case 3:\n            citySnapshot = _context.sent;\n            cityList = citySnapshot.docs.map(function (doc) {\n              return doc.data();\n            });\n            return _context.abrupt(\"return\", cityList);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getCities.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/firebase.js"],"names":["initializeApp","getFirestore","collection","getDocs","getMessaging","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","requestPermission","console","log","Notification","then","permission","messaging","getCities","citiesCol","citySnapshot","cityList","docs","map","doc","data"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,OAAnC,QAAkD,yBAAlD,C,CACA;;AACA,SAASC,YAAT,QAA6B,oBAA7B,C,CACA;AACA;AAEA;;AACA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,4BAFO;AAGnBC,EAAAA,SAAS,EAAE,YAHQ;AAInBC,EAAAA,aAAa,EAAE,wBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AAUA,IAAMC,GAAG,GAAGb,aAAa,CAACK,cAAD,CAAzB;AACA,IAAMS,EAAE,GAAGb,YAAY,CAACY,GAAD,CAAvB,C,CAEA;AACA;;AAEA,OAAO,SAASE,iBAAT,GAA6B;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAC,EAAAA,YAAY,CAACH,iBAAb,GAAiCI,IAAjC,CAAsC,UAACC,UAAD,EAAgB;AAClD,QAAIA,UAAU,KAAK,SAAnB,EAA8B;AAC1BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAD0B,CAG1B;;AACA,UAAMI,SAAS,GAAGjB,YAAY,CAACS,GAAD,CAA9B;AACH;AACJ,GAPD;AAQH,C,CAED;;AACA,gBAAsBS,SAAtB;AAAA;AAAA;;;wEAAO,iBAAyBR,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACGS,YAAAA,SADH,GACerB,UAAU,CAACY,EAAD,EAAK,QAAL,CADzB;AAAA;AAAA,mBAEwBX,OAAO,CAACoB,SAAD,CAF/B;;AAAA;AAEGC,YAAAA,YAFH;AAGGC,YAAAA,QAHH,GAGcD,YAAY,CAACE,IAAb,CAAkBC,GAAlB,CAAsB,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aAAzB,CAHd;AAAA,6CAIIJ,QAJJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore/lite';\r\n// import { getAuth } from \"firebase/auth\";\r\nimport { getMessaging } from \"firebase/messaging\";\r\n// Follow this pattern to import other Firebase services\r\n// import { } from 'firebase/<service>';\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\r\n    authDomain: \"togo-7f889.firebaseapp.com\",\r\n    projectId: \"togo-7f889\",\r\n    storageBucket: \"togo-7f889.appspot.com\",\r\n    messagingSenderId: \"861859089841\",\r\n    appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\r\n    measurementId: \"G-4DSC9GYT3S\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\n// Initialize Firebase Authentication and get a reference to the service\r\n// export const auth = getAuth(app);\r\n\r\nexport function requestPermission() {\r\n    console.log('Requesting permission...');\r\n    Notification.requestPermission().then((permission) => {\r\n        if (permission === 'granted') {\r\n            console.log('Notification permission granted.');\r\n\r\n            // Initialize Firebase Cloud Messaging and get a reference to the service\r\n            const messaging = getMessaging(app);\r\n        }\r\n    })\r\n}\r\n\r\n// Get a list of cities from your database\r\nexport async function getCities(db) {\r\n    const citiesCol = collection(db, 'cities');\r\n    const citySnapshot = await getDocs(citiesCol);\r\n    const cityList = citySnapshot.docs.map(doc => doc.data());\r\n    return cityList;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}