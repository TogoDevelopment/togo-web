{"ast":null,"code":"import{getUserCreditialParams}from\"../UserManager/UserManager\";import{apiUrl}from\"../../Constants/GeneralCont\";var axios=require(\"axios\");var requestHeaders={\"Access-Control-Allow-Origin\":\"*\",\"Content-Type\":\"application/x-www-form-urlencoded\"};export function getAuthenticationQR(){var params=getUserCreditialParams();params.append(\"CheckTypeFunction\",\"GenerateUUID\");return axios.post(apiUrl,params,{headers:requestHeaders}).then(function(response){if(response.data===\"Function Not Found\"){return\"null\";}return response.data;}).catch(function(error){console.log(error);});}export var checkAccessAPI=function checkAccessAPI(qrUUID){var params=new URLSearchParams();params.append(\"CheckTypeFunction\",\"getUserCredentials\");params.append(\"QRId\",qrUUID);return axios.post(apiUrl,params,{headers:requestHeaders}).then(function(response){if(response.data===\"Function Not Found\"||response.data.ResultArray[0].CustomerId===null){return false;}localStorage.setItem(\"userId\",response.data.ResultArray[0].CustomerId);localStorage.setItem(\"TokenDevice\",response.data.ResultArray[0].TokenDevice);localStorage.setItem(\"UserType\",response.data.ResultArray[0].UserType);localStorage.setItem(\"IsTransporterMaster\",response.data.ResultArray[0].IsTransporterMaster);localStorage.setItem(\"IsTeamMember\",response.data.ResultArray[0].IsTeamMember);return true;}).catch(function(error){console.log(error);});};","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/APIs/AuthenticationAPIs.jsx"],"names":["getUserCreditialParams","apiUrl","axios","require","requestHeaders","getAuthenticationQR","params","append","post","headers","then","response","data","catch","error","console","log","checkAccessAPI","qrUUID","URLSearchParams","ResultArray","CustomerId","localStorage","setItem","TokenDevice","UserType","IsTransporterMaster","IsTeamMember"],"mappings":"AAAA,OAAQA,sBAAR,KAAqC,4BAArC,CACA,OAAQC,MAAR,KAAqB,6BAArB,CAEA,GAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CACA,GAAMC,CAAAA,cAAc,CAAG,CACnB,iCADmB,CAEnB,kDAFmB,CAAvB,CAKA,MAAO,SAASC,CAAAA,mBAAT,EAA+B,CAClC,GAAIC,CAAAA,MAAM,CAAGN,sBAAsB,EAAnC,CACAM,MAAM,CAACC,MAAP,CAAc,mBAAd,CAAmC,cAAnC,EACA,MAAOL,CAAAA,KAAK,CACPM,IADE,CACGP,MADH,CACWK,MADX,CACmB,CAClBG,OAAO,CAAEL,cADS,CADnB,EAIFM,IAJE,CAIG,SAACC,QAAD,CAAc,CAChB,GAAIA,QAAQ,CAACC,IAAT,GAAkB,oBAAtB,CAA4C,CACxC,MAAO,MAAP,CACH,CACD,MAAOD,CAAAA,QAAQ,CAACC,IAAhB,CACH,CATE,EAUFC,KAVE,CAUI,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CAZE,CAAP,CAaH,CAED,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAAY,CACtC,GAAIZ,CAAAA,MAAM,CAAG,GAAIa,CAAAA,eAAJ,EAAb,CACAb,MAAM,CAACC,MAAP,CAAc,mBAAd,CAAmC,oBAAnC,EACAD,MAAM,CAACC,MAAP,CAAc,MAAd,CAAsBW,MAAtB,EACA,MAAOhB,CAAAA,KAAK,CACPM,IADE,CACGP,MADH,CACWK,MADX,CACmB,CAClBG,OAAO,CAAEL,cADS,CADnB,EAIFM,IAJE,CAIG,SAACC,QAAD,CAAc,CAChB,GACIA,QAAQ,CAACC,IAAT,GAAkB,oBAAlB,EACAD,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BC,UAA7B,GAA4C,IAFhD,CAGE,CACE,MAAO,MAAP,CACH,CAEDC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+BZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BC,UAA5D,EACAC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoCZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BI,WAAjE,EACAF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BK,QAA9D,EACAH,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAA4CZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BM,mBAAzE,EACAJ,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAqCZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BO,YAAlE,EACA,MAAO,KAAP,CACH,CAlBE,EAmBFd,KAnBE,CAmBI,SAACC,KAAD,CAAW,CACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACH,CArBE,CAAP,CAsBH,CA1BM","sourcesContent":["import {getUserCreditialParams} from \"../UserManager/UserManager\";\r\nimport {apiUrl} from \"../../Constants/GeneralCont\";\r\n\r\nconst axios = require(\"axios\");\r\nconst requestHeaders = {\r\n    \"Access-Control-Allow-Origin\": `*`,\r\n    \"Content-Type\": `application/x-www-form-urlencoded`,\r\n};\r\n\r\nexport function getAuthenticationQR() {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"GenerateUUID\");\r\n    return axios\r\n        .post(apiUrl, params, {\r\n            headers: requestHeaders,\r\n        })\r\n        .then((response) => {\r\n            if (response.data === \"Function Not Found\") {\r\n                return \"null\";\r\n            }\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const checkAccessAPI = (qrUUID) => {\r\n    let params = new URLSearchParams();\r\n    params.append(\"CheckTypeFunction\", \"getUserCredentials\");\r\n    params.append(\"QRId\", qrUUID);\r\n    return axios\r\n        .post(apiUrl, params, {\r\n            headers: requestHeaders,\r\n        })\r\n        .then((response) => {\r\n            if (\r\n                response.data === \"Function Not Found\" ||\r\n                response.data.ResultArray[0].CustomerId === null\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            localStorage.setItem(\"userId\", response.data.ResultArray[0].CustomerId);\r\n            localStorage.setItem(\"TokenDevice\", response.data.ResultArray[0].TokenDevice);\r\n            localStorage.setItem(\"UserType\", response.data.ResultArray[0].UserType);\r\n            localStorage.setItem(\"IsTransporterMaster\", response.data.ResultArray[0].IsTransporterMaster);\r\n            localStorage.setItem(\"IsTeamMember\", response.data.ResultArray[0].IsTeamMember)\r\n            return true;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}