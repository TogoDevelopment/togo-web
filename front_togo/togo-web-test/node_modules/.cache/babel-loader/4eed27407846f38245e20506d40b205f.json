{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/Orders/Main.jsx\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { getFunctions, getClientDeliveredTotalAmounts } from \"../../APIs/OrdersAPIs\";\nimport { OrdersTabularView } from \"./OrdersTabularView\";\nimport { Box } from \"@chakra-ui/react\";\nimport { isTeamMember, isTransporter } from \"../../Util\";\nimport Loader from \"../Loader/Loader\";\nimport { toastMessage } from \"../../Actions/GeneralActions\";\nimport { useDispatch } from \"react-redux\";\nimport translate from \"../../i18n/translate\";\nimport { useHistory } from \"react-router-dom\";\nimport PaginateComp from \"../Pagination/Pagination\";\nimport newproduct from \"../../assets/images/new-product.png\";\nimport processingOrder from \"../../assets/images/processing-time.png\";\nimport receipt from \"../../assets/images/receipt.png\";\nimport processedOrder from \"../../assets/images/order-processed.png\";\nimport { CreateNewOrder } from \"../CreateNewOrder\";\nimport \"./Main.css\";\nimport CreateAddress from \"../CreateAddress\";\nimport { Button } from \"react-bootstrap\";\nimport { PAGE_SIZE } from \"../../APIs/AuthenticationAPIs\";\nimport Transactions from \"../FinancialTransactions/FinancialTransactions\";\nimport AssignToDialog from \"../AssignToDialog\";\nvar styles = {\n  navImg: {\n    width: \"30px\",\n    height: \"30px\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  },\n  navLal: {\n    display: \"inline-block\",\n    margin: \"0 5px\",\n    verticalAlign: \"middle\",\n    color: \"var(--bs-dark)\"\n  }\n};\n\nvar getCurrentPage = function getCurrentPage(history) {\n  var pathname = history.location.pathname;\n  return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n};\n\nvar Main = function Main(_ref) {\n  var _getCurrentPage;\n\n  var socket = _ref.socket,\n      token = _ref.token;\n  var history = useHistory();\n\n  var _useState = useState((_getCurrentPage = getCurrentPage(history)) !== null && _getCurrentPage !== void 0 ? _getCurrentPage : \"all-orders\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orders = _useState4[0],\n      setOrders = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalNumOfRecs = _useState6[0],\n      setTotalNumberOfRecs = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      activePage = _useState8[0],\n      setActivePage = _useState8[1]; // const [transactions, setTransactions] = useState([]);\n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      refresh = _useState12[0],\n      setRefresh = _useState12[1];\n\n  var dispatch = useDispatch();\n\n  var cleanUp = function cleanUp() {\n    setOrders([]); // setTransactions([]);\n  };\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      assignedIds = _useState14[0],\n      setAssignedIds = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      ordersSelected = _useState16[0],\n      setOrdersSelected = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      totalCOD = _useState18[0],\n      setTotalCOD = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      totalComission = _useState20[0],\n      setTotalComission = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      totalDeliveryCost = _useState22[0],\n      setTotalDeliveryCost = _useState22[1];\n\n  useEffect(function () {\n    var currentPage = getCurrentPage(history);\n\n    if (!currentPage || currentPage === '/main') {\n      currentPage = \"all-orders\";\n      var currentPagePath = \"/account/main/\".concat(currentPage);\n      history.push(currentPagePath);\n    }\n\n    setCurrentPage(currentPage);\n    var historyUnListen = history.listen(function (location) {\n      var pathname = location.pathname;\n      var currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n\n      if (!currentPageTmp) {\n        currentPageTmp = \"all-orders\";\n\n        var _currentPagePath = \"account/main/\".concat(currentPageTmp);\n\n        history.push(_currentPagePath);\n      }\n\n      setCurrentPage(currentPageTmp);\n    });\n    return function () {\n      historyUnListen();\n      cleanUp();\n    };\n  }, [history]);\n  var fetchData = useCallback(function (functionType, stateKey) {\n    setLoading(true); // transporter orders filter variable initialized\n\n    var transporterFunctionfilter = \"none\";\n    /* \r\n    set transporter orders function by filter:\r\n        - NEW_ORDERS -> to get all new orders\r\n        - MY_ORDERS -> to get all in process orders\r\n        - DELIVERED -> to get all finished orders\r\n    */\n\n    if (functionType === \"TransporterGetOrder\" || functionType === \"TransporterOrderCurrent\" || functionType === \"TransporterHistoryOrder\") {\n      switch (functionType) {\n        case 'TransporterGetOrder':\n          transporterFunctionfilter = \"NEW_ORDERS\";\n          break;\n\n        case 'TransporterOrderCurrent':\n          transporterFunctionfilter = \"MY_ORDERS\";\n          break;\n\n        case 'TransporterHistoryOrder':\n          transporterFunctionfilter = \"DELIVERED\";\n          break;\n\n        default:\n          transporterFunctionfilter = \"none\";\n          break;\n      } // transporter orders function type\n\n\n      functionType = \"getTransporterRelatedOrdersByPage\";\n    }\n\n    getFunctions(functionType, activePage, transporterFunctionfilter).then(function (resp) {\n      console.log(resp.data); // temp test\n\n      if (resp === 'NotActiveNow') {\n        dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\n      } else {\n        var _resp$data = resp.data,\n            server_response = _resp$data.server_response,\n            total_orders = _resp$data.total_orders;\n\n        switch (stateKey) {\n          case 'orders':\n            setTotalNumberOfRecs(total_orders);\n            setOrders(server_response);\n            break;\n\n          /*case 'transactions':  edited (add transactions case) \r\n              console.log(\"Transactions: \");\r\n              console.log(server_response);\r\n              setTransactions(server_response);*/\n\n          default:\n            setTotalNumberOfRecs(0);\n            break;\n        }\n      }\n    }).catch(function (err) {\n      dispatch(toastMessage(err));\n    }).finally(function () {\n      setLoading(false);\n    }); // get total cod, total comission, and total delivery price fro delivered orders\n\n    getClientDeliveredTotalAmounts().then(function (res) {\n      // console.log(res.data);\n      setTotalCOD(res.data.sum_cods);\n      setTotalComission(res.data.sum_commission);\n      setTotalDeliveryCost(res.data.sum_deliveryCosts);\n    });\n  }, [dispatch, activePage]);\n  useEffect(function () {\n    var stateKey,\n        functionType = null;\n    cleanUp();\n    /* in the following switch statement there are three cases: all-orders, current-orders, and previous-orders\r\n        * all-orders -> all related new orders\r\n        * current-orders -> all related in-process orders\r\n        * previous-orders -. all related finished/deleted orders\r\n       --------------------------------------------\r\n       for transporter there are three functions types: TransporterGetOrder, TransporterOrderCurrent, and TransporterHistoryOrder\r\n       all of them will refer to one function type -> getTransporterRelatedOrdersByPage . (function type -> api function name)\r\n       --------------------------------------------\r\n       as for the client, there are also three functions types: ShowClientOrder, ClientShowBidRequistsAccepted, and ClientHistoryOrder\r\n       each will call a function type with the same name. (function type -> api function name)\r\n    */\n\n    switch (currentPage) {\n      case \"all-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\n        break;\n\n      case \"current-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\n        break;\n\n      case \"previous-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\n        break;\n\n      /* case \"transactions\":\r\n          stateKey = \"transactions\";\r\n          functionType = isTransporter() ? \"TeamMemberTransaction\" : null;\r\n          break; */\n\n      default:\n        break;\n    }\n\n    if (functionType) {\n      fetchData(functionType, stateKey);\n    }\n  }, [currentPage, fetchData, refresh]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between py-2 px-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, !isTransporter() && currentPage == \"previous-orders\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, \"Delivered Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 53\n    }\n  }, totalCOD), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, \"Delivered Orders Total Comission: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 59\n    }\n  }, totalComission), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, \"Delivered Orders Total Delivey Cost: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 62\n    }\n  }, totalDeliveryCost), \" NIS\")) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"41px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 26\n    }\n  }), !isTransporter() && currentPage == \"previous-orders\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, \"Delivered Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 53\n    }\n  }, totalCOD), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, \"Delivered Orders Total Comission: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 59\n    }\n  }, totalComission), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"Delivered Orders Total Delivey Cost: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 62\n    }\n  }, totalDeliveryCost), \" NIS\")) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"41px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(CreateNewOrder, {\n    onSuccess: function onSuccess() {\n      // console.log()\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), currentPage === \"current-orders\" && isTransporter() && ordersSelected && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      position: \"absolute\",\n      left: \"10px\",\n      top: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 87\n    }\n  }, /*#__PURE__*/React.createElement(AssignToDialog, {\n    ordersIds: assignedIds,\n    onSuccess: function onSuccess() {\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    justify: true,\n    variant: \"tabs\",\n    defaultActiveKey: currentPage,\n    activeKey: currentPage,\n    onSelect: function onSelect(eventKey) {\n      history.push(\"/account/main/\".concat(eventKey));\n      setActivePage(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"all-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: newproduct,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.NEW_ORDERS\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"current-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: processingOrder,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.IN_PROCESS_ORDER\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"previous-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: processedOrder,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.COMPLETED_OR_CANCELED_ORDER\")))), \" \", /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"transactions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: receipt,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.FINANCIAL_TRANSACTIONS\")))))), /*#__PURE__*/React.createElement(Box, {\n    height: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, !!orders && currentPage.indexOf(\"orders\") !== -1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OrdersTabularView, {\n    socket: socket,\n    orders: orders,\n    currentPage: currentPage,\n    assignOrders: function assignOrders(ordersIds) {\n      setAssignedIds(ordersIds);\n      ordersIds.length > 0 ? setOrdersSelected(true) : setOrdersSelected(false);\n    },\n    update: function update() {\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(PaginateComp, {\n    totalNumOfRecs: totalNumOfRecs,\n    pageSize: PAGE_SIZE,\n    activePage: activePage,\n    setActive: setActivePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 33\n    }\n  })), currentPage === \"transactions\" && /*#__PURE__*/React.createElement(Transactions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 60\n    }\n  }))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Orders/Main.jsx"],"names":["React","useCallback","useEffect","useState","Nav","getFunctions","getClientDeliveredTotalAmounts","OrdersTabularView","Box","isTeamMember","isTransporter","Loader","toastMessage","useDispatch","translate","useHistory","PaginateComp","newproduct","processingOrder","receipt","processedOrder","CreateNewOrder","CreateAddress","Button","PAGE_SIZE","Transactions","AssignToDialog","styles","navImg","width","height","display","verticalAlign","navLal","margin","color","getCurrentPage","history","pathname","location","substr","lastIndexOf","length","Main","socket","token","currentPage","setCurrentPage","orders","setOrders","totalNumOfRecs","setTotalNumberOfRecs","activePage","setActivePage","loading","setLoading","refresh","setRefresh","dispatch","cleanUp","assignedIds","setAssignedIds","ordersSelected","setOrdersSelected","totalCOD","setTotalCOD","totalComission","setTotalComission","totalDeliveryCost","setTotalDeliveryCost","currentPagePath","push","historyUnListen","listen","currentPageTmp","fetchData","functionType","stateKey","transporterFunctionfilter","then","resp","console","log","data","server_response","total_orders","catch","err","finally","res","sum_cods","sum_commission","sum_deliveryCosts","position","border","borderRadius","left","top","eventKey","indexOf","ordersIds"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { getFunctions, getClientDeliveredTotalAmounts } from \"../../APIs/OrdersAPIs\";\r\nimport { OrdersTabularView } from \"./OrdersTabularView\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { isTeamMember, isTransporter } from \"../../Util\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { toastMessage } from \"../../Actions/GeneralActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PaginateComp from \"../Pagination/Pagination\";\r\nimport newproduct from \"../../assets/images/new-product.png\";\r\nimport processingOrder from \"../../assets/images/processing-time.png\";\r\nimport receipt from \"../../assets/images/receipt.png\";\r\nimport processedOrder from \"../../assets/images/order-processed.png\";\r\nimport { CreateNewOrder } from \"../CreateNewOrder\";\r\nimport \"./Main.css\";\r\nimport CreateAddress from \"../CreateAddress\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { PAGE_SIZE } from \"../../APIs/AuthenticationAPIs\";\r\nimport Transactions from \"../FinancialTransactions/FinancialTransactions\";\r\nimport AssignToDialog from \"../AssignToDialog\";\r\n\r\nconst styles = {\r\n    navImg: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        display: \"inline-block\",\r\n\r\n        verticalAlign: \"middle\",\r\n    },\r\n    navLal: {\r\n        display: \"inline-block\",\r\n        margin: \"0 5px\",\r\n        verticalAlign: \"middle\",\r\n        color: \"var(--bs-dark)\"\r\n    }\r\n};\r\n\r\nconst getCurrentPage = (history) => {\r\n    const pathname = history.location.pathname;\r\n    return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n}\r\n\r\nconst Main = ({ socket, token }) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [currentPage, setCurrentPage] = useState(getCurrentPage(history) ?? (\"all-orders\"));\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalNumOfRecs, setTotalNumberOfRecs] = useState(0);\r\n    const [activePage, setActivePage] = useState(0);\r\n    // const [transactions, setTransactions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const cleanUp = () => {\r\n        setOrders([]);\r\n        // setTransactions([]);\r\n    };\r\n\r\n    const [assignedIds, setAssignedIds] = useState([]);\r\n    const [ordersSelected, setOrdersSelected] = useState(false);\r\n\r\n    const [totalCOD, setTotalCOD] = useState(0);\r\n    const [totalComission, setTotalComission] = useState(0);\r\n    const [totalDeliveryCost, setTotalDeliveryCost] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let currentPage = getCurrentPage(history);\r\n        if (!currentPage || currentPage === '/main') {\r\n            currentPage = \"all-orders\";\r\n            let currentPagePath = `/account/main/${currentPage}`;\r\n            history.push(currentPagePath);\r\n        }\r\n\r\n        setCurrentPage(currentPage);\r\n\r\n        let historyUnListen = history.listen(location => {\r\n            const pathname = location.pathname;\r\n            let currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n            if (!currentPageTmp) {\r\n                currentPageTmp = \"all-orders\";\r\n                let currentPagePath = `account/main/${currentPageTmp}`;\r\n                history.push(currentPagePath);\r\n            }\r\n            setCurrentPage(currentPageTmp);\r\n        });\r\n\r\n        return () => {\r\n            historyUnListen();\r\n            cleanUp();\r\n        }\r\n    }, [history]);\r\n\r\n    const fetchData = useCallback((functionType, stateKey) => {\r\n        setLoading(true);\r\n\r\n        // transporter orders filter variable initialized\r\n        let transporterFunctionfilter = \"none\";\r\n\r\n        /* \r\n        set transporter orders function by filter:\r\n            - NEW_ORDERS -> to get all new orders\r\n            - MY_ORDERS -> to get all in process orders\r\n            - DELIVERED -> to get all finished orders\r\n        */\r\n        if (functionType === \"TransporterGetOrder\" || functionType === \"TransporterOrderCurrent\" || functionType === \"TransporterHistoryOrder\") {\r\n\r\n            switch (functionType) {\r\n                case 'TransporterGetOrder':\r\n                    transporterFunctionfilter = \"NEW_ORDERS\";\r\n                    break;\r\n                case 'TransporterOrderCurrent':\r\n                    transporterFunctionfilter = \"MY_ORDERS\";\r\n                    break;\r\n                case 'TransporterHistoryOrder':\r\n                    transporterFunctionfilter = \"DELIVERED\";\r\n                    break;\r\n                default:\r\n                    transporterFunctionfilter = \"none\";\r\n                    break;\r\n            }\r\n\r\n            // transporter orders function type\r\n            functionType = \"getTransporterRelatedOrdersByPage\";\r\n        }\r\n\r\n        getFunctions(functionType, activePage, transporterFunctionfilter)\r\n            .then(resp => {\r\n                console.log(resp.data) // temp test\r\n                if (resp === 'NotActiveNow') {\r\n                    dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\r\n                } else {\r\n                    const { data: { server_response, total_orders } } = resp;\r\n                    switch (stateKey) {\r\n                        case 'orders':\r\n                            setTotalNumberOfRecs(total_orders);\r\n                            setOrders(server_response);\r\n                            break;\r\n                        /*case 'transactions':  edited (add transactions case) \r\n                            console.log(\"Transactions: \");\r\n                            console.log(server_response);\r\n                            setTransactions(server_response);*/\r\n                        default:\r\n                            setTotalNumberOfRecs(0);\r\n                            break;\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(toastMessage(err));\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        // get total cod, total comission, and total delivery price fro delivered orders\r\n        getClientDeliveredTotalAmounts().then((res) => {\r\n            // console.log(res.data);\r\n            setTotalCOD(res.data.sum_cods);\r\n            setTotalComission(res.data.sum_commission);\r\n            setTotalDeliveryCost(res.data.sum_deliveryCosts);\r\n        })\r\n\r\n    }, [dispatch, activePage]);\r\n\r\n    useEffect(() => {\r\n        let stateKey, functionType = null;\r\n        cleanUp();\r\n\r\n        /* in the following switch statement there are three cases: all-orders, current-orders, and previous-orders\r\n            * all-orders -> all related new orders\r\n            * current-orders -> all related in-process orders\r\n            * previous-orders -. all related finished/deleted orders\r\n           --------------------------------------------\r\n           for transporter there are three functions types: TransporterGetOrder, TransporterOrderCurrent, and TransporterHistoryOrder\r\n           all of them will refer to one function type -> getTransporterRelatedOrdersByPage . (function type -> api function name)\r\n           --------------------------------------------\r\n           as for the client, there are also three functions types: ShowClientOrder, ClientShowBidRequistsAccepted, and ClientHistoryOrder\r\n           each will call a function type with the same name. (function type -> api function name)\r\n        */\r\n\r\n        switch (currentPage) {\r\n            case \"all-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\r\n                break;\r\n            case \"current-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\r\n                break;\r\n            case \"previous-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\r\n                break;\r\n            /* case \"transactions\":\r\n                stateKey = \"transactions\";\r\n                functionType = isTransporter() ? \"TeamMemberTransaction\" : null;\r\n                break; */\r\n            default:\r\n                break;\r\n        }\r\n        if (functionType) {\r\n            fetchData(functionType, stateKey);\r\n        }\r\n    }, [currentPage, fetchData, refresh]);\r\n\r\n    return (\r\n        <div style={{ position: \"relative\" }}>\r\n\r\n            {/* <button style={{ color: \"white\" }} onClick={() => {\r\n                testFunction().then((res) => {\r\n                    console.log(res.data);\r\n                });\r\n            }}>\r\n                test\r\n            </button> */}\r\n\r\n            {/* add new address, create new order buttons */}\r\n            <div className=\"d-flex justify-content-between py-2 px-3\">\r\n                {/* show add new address button only for client */}\r\n                {/* {!isTransporter() && <div className=\"m-inline-e-2\">\r\n                    <CreateAddress onSuccess={() => {  }}>\r\n                        <Button\r\n                            className=\"font-weight-bold btn-grad text-white\"\r\n                            variant=\"\"\r\n                        >\r\n                            {translate(\"ORDERS.ADD_ADDRESS\")}\r\n                        </Button>\r\n                    </CreateAddress>\r\n                </div>} */}\r\n\r\n                {!isTransporter() && currentPage == \"previous-orders\" ? <div className=\"d-flex jsutify-content-between\">\r\n                    <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                        Delivered Orders Total COD: <span style={{ color: \"red\" }}>{totalCOD}</span> NIS\r\n                    </div>\r\n\r\n                    <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                        Delivered Orders Total Comission: <span style={{ color: \"red\" }}>{totalComission}</span> NIS\r\n                    </div>\r\n\r\n                    <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                        Delivered Orders Total Delivey Cost: <span style={{ color: \"red\" }}>{totalDeliveryCost}</span> NIS\r\n                    </div>\r\n                </div> : <div style={{ height: \"41px\" }}></div>}\r\n\r\n                {!isTransporter() && currentPage == \"previous-orders\" ? <div className=\"d-flex jsutify-content-between\">\r\n                    <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                        Delivered Orders Total COD: <span style={{ color: \"red\" }}>{totalCOD}</span> NIS\r\n                    </div>\r\n\r\n                    <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                        Delivered Orders Total Comission: <span style={{ color: \"red\" }}>{totalComission}</span> NIS\r\n                    </div>\r\n\r\n                    <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                        Delivered Orders Total Delivey Cost: <span style={{ color: \"red\" }}>{totalDeliveryCost}</span> NIS\r\n                    </div>\r\n                </div> : <div style={{ height: \"41px\" }}></div>}\r\n\r\n                <CreateNewOrder onSuccess={() => {\r\n                    // console.log()\r\n                    setRefresh(!refresh);\r\n                }} />\r\n            </div>\r\n\r\n            {/* {!isTransporter() && currentPage == \"previous-orders\" &&\r\n                <div>\r\n                    {\"Total COD: \" + totalCOD};\r\n                </div>\r\n            } */}\r\n\r\n            {/* assign to my network button (dialog), it will apear only if there are selected orders to be assigned (in in-process orders) */}\r\n            {currentPage === \"current-orders\" && isTransporter() && ordersSelected && <Box style={{ position: \"absolute\", left: \"10px\", top: \"10px\" }}>\r\n\r\n                <AssignToDialog ordersIds={assignedIds} onSuccess={() => {\r\n                    setRefresh(!refresh);\r\n                }} />\r\n\r\n            </Box>}\r\n\r\n            <div>\r\n                <Nav\r\n                    justify\r\n                    variant=\"tabs\"\r\n                    defaultActiveKey={currentPage}\r\n                    activeKey={currentPage}\r\n                    onSelect={(eventKey) => { history.push(`/account/main/${eventKey}`); setActivePage(0) }}\r\n                >\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"all-orders\">\r\n                            <img src={newproduct} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>{translate(\"ORDERS.NEW_ORDERS\")}</div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"current-orders\">\r\n                            <img src={processingOrder} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>{translate(\"ORDERS.IN_PROCESS_ORDER\")}</div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"previous-orders\">\r\n                            <img src={processedOrder} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.COMPLETED_OR_CANCELED_ORDER\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n\r\n                    {/* for this tab, Transactions component will be called directly by currentPage name -> \"transactions\", not like the other tabs (temporarly) */} {/* to be edited */}\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"transactions\">\r\n                            <img src={receipt} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.FINANCIAL_TRANSACTIONS\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n\r\n            {/* table display */}\r\n            <Box height=\"400px\">\r\n                {loading ? <Loader /> : (\r\n                    <>\r\n                        {!!orders && currentPage.indexOf(\"orders\") !== -1 &&\r\n                            <>\r\n                                <OrdersTabularView\r\n                                    socket={socket}\r\n                                    orders={orders}\r\n                                    currentPage={currentPage}\r\n                                    assignOrders={(ordersIds) => { setAssignedIds(ordersIds); ordersIds.length > 0 ? setOrdersSelected(true) : setOrdersSelected(false) }}\r\n                                    update={() => {\r\n                                        setRefresh(!refresh);\r\n                                    }}\r\n                                />\r\n                                <PaginateComp\r\n                                    totalNumOfRecs={totalNumOfRecs}\r\n                                    pageSize={PAGE_SIZE}\r\n                                    activePage={activePage}\r\n                                    setActive={setActivePage}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {currentPage === \"transactions\" && <Transactions />}\r\n                    </>\r\n                )}\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}