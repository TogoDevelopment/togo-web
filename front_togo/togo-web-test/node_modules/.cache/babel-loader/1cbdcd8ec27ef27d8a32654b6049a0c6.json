{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateAddress.jsx\";\nimport translate from \"../i18n/translate\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Col, Form, Modal, Row, FloatingLabel, InputGroup } from \"react-bootstrap\";\nimport { CreateAddressReq, GetCityRegion } from \"./APIs/OrdersAPIs\";\nexport default function CreateAddress(_ref) {\n  var _cities$map,\n      _this = this;\n\n  var onSuccess = _ref.onSuccess;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cities = _useState4[0],\n      setCities = _useState4[1];\n\n  useEffect(function () {\n    GetCityRegion().then(function (res) {\n      setCities(res.data.server_response);\n    });\n  }, []); //const formRef= useRef();\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      validated = _useState6[0],\n      setValidated = _useState6[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"font-weight-bold btn-grad text-white\",\n    variant: \"\",\n    onClick: function onClick() {\n      setShow(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, translate(\"ORDERS.ADD_ADDRESS\")), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: function onHide() {\n      setShow(false);\n    },\n    centered: true,\n    animation: false,\n    backdrop: \"static\",\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.ADD_ADDRESS\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"addressForm\",\n    validated: validated,\n    noValidate: true\n    /* ref={formRef} */\n    ,\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var formData = new FormData(event.target),\n          formDataObj = Object.fromEntries(formData.entries());\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === true) {\n        CreateAddressReq(formDataObj).then(function () {\n          setShow(false);\n          onSuccess && onSuccess();\n        });\n      }\n\n      setValidated(true);\n      console.log(formDataObj);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"formBasicEmail\",\n    label: translate(\"ORDERS.ADDRESS_NAME\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"placename\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, \"Please add place name\")), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"userTel\",\n    label: translate(\"ORDERS.ADDRESS_PHONE\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"tel\",\n    placeholder: \"...\",\n    name: \"phone\",\n    pattern: \"^(0598|0568)[0-9]{6}?$\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \"Please enter a valid phone number example 0568000000\")), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"AddressCity\",\n    label: translate(\"ORDERS.ADDRESS_CITY\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    name: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, (_cities$map = cities.map) === null || _cities$map === void 0 ? void 0 : _cities$map.call(cities, function (city) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: city.IdCity,\n      value: city.IdCity,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 44\n      }\n    }, city.Name);\n  }))), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"userAddress\",\n    label: translate(\"ORDERS.ADDRESS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"addressInfo\",\n    label: translate(\"ORDERS.ADDRESS_INFO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"addressinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"addCountry\",\n    label: translate(\"ORDERS.ADDRESS_COUNTRY\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"addressCode\",\n    label: translate(\"ORDERS.ADDRESS_CODE\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"zipcode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"custom-switch\",\n    label: translate(\"ORDERS.ADDRESS_SHARED\"),\n    name: \"isShared\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: function onClick() {// CreateAddressReq().then(()=>{\n      //     setShow(false);\n      //     onSuccess();\n      // })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, translate(\"GENERAL.PROCEED\"))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateAddress.jsx"],"names":["translate","React","useEffect","useRef","useState","Button","Col","Form","Modal","Row","FloatingLabel","InputGroup","CreateAddressReq","GetCityRegion","CreateAddress","onSuccess","show","setShow","cities","setCities","then","res","data","server_response","validated","setValidated","event","preventDefault","stopPropagation","formData","FormData","target","formDataObj","Object","fromEntries","entries","form","currentTarget","checkValidity","console","log","map","city","IdCity","Name"],"mappings":"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","sourcesContent":["import translate from \"../i18n/translate\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row, FloatingLabel, InputGroup } from \"react-bootstrap\";\r\nimport { CreateAddressReq, GetCityRegion } from \"./APIs/OrdersAPIs\";\r\n\r\nexport default function CreateAddress({onSuccess}){\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        GetCityRegion().then((res)=>{\r\n            \r\n            setCities(res.data.server_response);\r\n        })\r\n    }, []);\r\n    //const formRef= useRef();\r\n    const [validated, setValidated] = useState(false);\r\n    return (\r\n        <div>\r\n            <Button \r\n                className=\"font-weight-bold btn-grad text-white\"\r\n                variant=\"\" \r\n                onClick={()=>{\r\n                    setShow(true);\r\n                }}>\r\n                {translate(\"ORDERS.ADD_ADDRESS\")}\r\n            </Button>\r\n            <Modal show={show} onHide={()=>{setShow(false)}} centered animation={false} backdrop=\"static\" fullscreen>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDERS.ADD_ADDRESS\")}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form id=\"addressForm\" validated={validated} noValidate /* ref={formRef} */ onSubmit={(event)=>{\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        const formData = new FormData(event.target),\r\n                        formDataObj = Object.fromEntries(formData.entries())\r\n                        const form = event.currentTarget;\r\n                        if (form.checkValidity() === true) {\r\n                            CreateAddressReq(formDataObj).then(()=>{\r\n                                setShow(false);\r\n                                onSuccess && onSuccess();\r\n                            });\r\n                        }\r\n                        setValidated(true);\r\n                        console.log(formDataObj);\r\n                        \r\n                    }}>\r\n                        \r\n                        <FloatingLabel className=\"mb-3\" controlId=\"formBasicEmail\" label={translate(\"ORDERS.ADDRESS_NAME\")}>\r\n                            <Form.Control type=\"text\" placeholder=\"...\" name=\"placename\" required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please add place name\r\n                            </Form.Control.Feedback>\r\n                        </FloatingLabel>\r\n                        \r\n                        <FloatingLabel className=\"mb-3\" controlId=\"userTel\" label={translate(\"ORDERS.ADDRESS_PHONE\")}>\r\n                            <Form.Control type=\"tel\" placeholder=\"...\" name=\"phone\" pattern=\"^(0598|0568)[0-9]{6}?$\" required/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please enter a valid phone number example 0568000000\r\n                            </Form.Control.Feedback>\r\n                        </FloatingLabel>\r\n                        \r\n                        <FloatingLabel className=\"mb-3\" controlId=\"AddressCity\" label={translate(\"ORDERS.ADDRESS_CITY\")}>\r\n                            <Form.Select name=\"city\">\r\n                                {cities.map?.((city)=>{\r\n                                    return <option key={city.IdCity} value={city.IdCity}>{city.Name}</option>\r\n                                })}\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n\r\n                        <FloatingLabel className=\"mb-3\" controlId=\"userAddress\" label={translate(\"ORDERS.ADDRESS\")}>\r\n                            <Form.Control type=\"text\" placeholder=\"...\" name=\"address\" />\r\n                        </FloatingLabel>\r\n\r\n                        <FloatingLabel className=\"mb-3\" controlId=\"addressInfo\" label={translate(\"ORDERS.ADDRESS_INFO\")}>\r\n                            <Form.Control type=\"text\" placeholder=\"...\" name=\"addressinfo\" />\r\n                        </FloatingLabel>\r\n                        <Row>\r\n                            <Col md>\r\n                            <FloatingLabel className=\"mb-3\" controlId=\"addCountry\" label={translate(\"ORDERS.ADDRESS_COUNTRY\")}>\r\n                                <Form.Control type=\"text\" placeholder=\"...\" name=\"country\" />\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel className=\"mb-3\" controlId=\"addressCode\" label={translate(\"ORDERS.ADDRESS_CODE\")}>\r\n                                <Form.Control type=\"text\" placeholder=\"...\" name=\"zipcode\" />\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Form.Check \r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label={translate(\"ORDERS.ADDRESS_SHARED\")}\r\n                            name=\"isShared\"\r\n                        />\r\n\r\n                        <Button variant=\"primary\" type=\"submit\" onClick={()=>{\r\n\r\n                        // CreateAddressReq().then(()=>{\r\n                        //     setShow(false);\r\n                        //     onSuccess();\r\n                        // })\r\n                        }}>\r\n                            {translate(\"GENERAL.PROCEED\")}\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}