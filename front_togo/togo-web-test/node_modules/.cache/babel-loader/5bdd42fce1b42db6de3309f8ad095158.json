{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/FinancialTransactions/FinancialTransactions.js\";\nimport React, { useEffect, useState } from 'react';\nimport translate from \"../../i18n/translate\";\nimport './FinancialTransactions.css';\nimport { getFinancialTransactions, invoicesTest } from '../../APIs/OrdersAPIs';\nimport \"./FinancialTransactions.css\";\nimport { Link } from \"react-router-dom\";\nimport Loader from \"../Loader/Loader\";\nimport { Box } from \"@chakra-ui/layout\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n/* convert order number to a link to display order details */\n\nfunction orderIdFormatter(value) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Number(value) ? /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: \"/account/Order/\".concat(value)\n    },\n    className: \"orderLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }\n  }, value) : value);\n}\n/* time formatter, to convert from 24 hrs system to 12 hrs system */\n\n\nfunction timeFormatter(value) {\n  var tempStr = value.split(\":\");\n  var time = value;\n  if (tempStr[0].length === 1) time = \"0\".concat(value); // Check correct time format and split into components\n\n  time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n  if (time.length > 1) {\n    // If time format correct\n    time = time.slice(1); // Remove full string match value\n\n    time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n\n    time[0] = +time[0] % 12 || 12; // Adjust hours\n  }\n\n  return time.join(''); // return adjusted time or original string\n}\n\nexport default function Transactions() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isEmpty = _useState4[0],\n      setIsEmpty = _useState4[1]; // isEmpty used for showing the loader when there are no data yet\n\n\n  useEffect(function () {\n    var isMounted = true;\n    getFinancialTransactions(localStorage.getItem(\"userId\")).then(function (res) {\n      var tempArr = res.data.server_response.data.result.response;\n      tempArr = tempArr.filter(function (data) {\n        return data.journal_id_name != 'Bank Transfer Hold' && data.journal_id_name != 'Bank Transfer Reject';\n      }); // console.log(tempArr);\n\n      if (isMounted) {\n        setTransactions(tempArr);\n\n        if (tempArr.length > 0) {\n          setIsEmpty(false);\n        } else {\n          setIsEmpty(true);\n        }\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  /* table columns */\n\n  var columns = [{\n    dataField: 'ref',\n    text: translate(\"TRANSACTIONS.ORDER_ID\"),\n    formatter: orderIdFormatter,\n    filter: textFilter({\n      style: {\n        width: '100px',\n        marginLeft: \"10px\",\n        marginRight: \"10px\"\n      },\n      placeholder: 'ID...'\n    }),\n    style: {\n      width: \"250px\"\n    }\n  }, {\n    dataField: 'move_name',\n    text: translate(\"TRANSACTIONS.NAME\")\n  }, {\n    dataField: 'date',\n    text: translate(\"TRANSACTIONS.DATE\")\n  }, {\n    dataField: 'time',\n    text: translate(\"TRANSACTIONS.TIME\"),\n    formatter: timeFormatter\n  }, {\n    dataField: 'journal_id_name',\n    text: translate(\"TRANSACTIONS.JOURNAL_NAME\")\n  }, {\n    dataField: 'credit',\n    text: translate(\"TRANSACTIONS.IN\"),\n    style: function callback(cell) {\n      return {\n        fontWeight: parseFloat(cell) > 0 ? 'bold' : '',\n        color: parseFloat(cell) === 0 ? 'lightgray' : ''\n      };\n    }\n  }, {\n    dataField: 'debit',\n    text: translate(\"TRANSACTIONS.OUT\"),\n    style: function callback(cell) {\n      return {\n        fontWeight: parseFloat(cell) > 0 ? 'bold' : '',\n        color: parseFloat(cell) === 0 ? 'lightgray' : ''\n      };\n    }\n  }];\n  /* clear the borders for table headers */\n\n  for (var i = 0; i < columns.length; i++) {\n    columns[i].headerStyle = {\n      border: 'none'\n    };\n  }\n\n  if (transactions.length > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pe-4 ps-4 pt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: transactions,\n      columns: columns,\n      pagination: paginationFactory(),\n      rowClasses: \"custom-row-class\",\n      columnClasses: \"custom-column-class\",\n      filter: filterFactory(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }));\n  } else if (!isEmpty) {\n    return /*#__PURE__*/React.createElement(Box, {\n      height: \"400px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 32\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-100 d-flex justify-content-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  }, \"There are no Transactions\");\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/FinancialTransactions/FinancialTransactions.js"],"names":["React","useEffect","useState","translate","getFinancialTransactions","invoicesTest","Link","Loader","Box","BootstrapTable","paginationFactory","filterFactory","textFilter","orderIdFormatter","value","Number","pathname","timeFormatter","tempStr","split","time","length","concat","toString","match","slice","join","Transactions","transactions","setTransactions","isEmpty","setIsEmpty","isMounted","localStorage","getItem","then","res","tempArr","data","server_response","result","response","filter","journal_id_name","columns","dataField","text","formatter","style","width","marginLeft","marginRight","placeholder","callback","cell","fontWeight","parseFloat","color","i","headerStyle","border"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport translate from \"../../i18n/translate\";\r\nimport './FinancialTransactions.css';\r\nimport { getFinancialTransactions, invoicesTest } from '../../APIs/OrdersAPIs';\r\nimport \"./FinancialTransactions.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\n\r\n/* convert order number to a link to display order details */\r\nfunction orderIdFormatter(value) {\r\n  return <>\r\n    {Number(value) ? <Link\r\n      to={{\r\n        pathname: `/account/Order/${value}`,\r\n      }}\r\n      className=\"orderLink\"\r\n    >\r\n      {value}\r\n    </Link> : value}\r\n  </>\r\n}\r\n\r\n/* time formatter, to convert from 24 hrs system to 12 hrs system */\r\nfunction timeFormatter(value) {\r\n  const tempStr = value.split(\":\");\r\n  let time = value;\r\n  if (tempStr[0].length === 1)\r\n    time = \"0\".concat(value);\r\n\r\n  // Check correct time format and split into components\r\n  time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n  if (time.length > 1) { // If time format correct\r\n    time = time.slice(1);  // Remove full string match value\r\n    time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n    time[0] = +time[0] % 12 || 12; // Adjust hours\r\n  }\r\n  return time.join(''); // return adjusted time or original string\r\n}\r\n\r\nexport default function Transactions() {\r\n\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [isEmpty, setIsEmpty] = useState(false); // isEmpty used for showing the loader when there are no data yet\r\n\r\n  useEffect(() => {\r\n\r\n    let isMounted = true;\r\n    getFinancialTransactions(localStorage.getItem(\"userId\")).then(res => {\r\n\r\n      let tempArr = res.data.server_response.data.result.response;\r\n      tempArr = tempArr.filter(data => (data.journal_id_name != 'Bank Transfer Hold' && data.journal_id_name != 'Bank Transfer Reject'));\r\n\r\n      // console.log(tempArr);\r\n\r\n      if (isMounted) {\r\n        setTransactions(tempArr);\r\n\r\n\r\n        if (tempArr.length > 0) {\r\n          setIsEmpty(false)\r\n        } else {\r\n          setIsEmpty(true)\r\n        }\r\n      }\r\n    })\r\n    return () => { isMounted = false };\r\n  }, []);\r\n\r\n  /* table columns */\r\n  const columns = [\r\n    {\r\n      dataField: 'ref',\r\n      text: translate(\"TRANSACTIONS.ORDER_ID\"),\r\n      formatter: orderIdFormatter,\r\n      filter: textFilter({ style: { width: '100px', marginLeft: \"10px\", marginRight: \"10px\" }, placeholder: 'ID...' }),\r\n      style: { width: \"250px\" }\r\n    },\r\n    {\r\n      dataField: 'move_name',\r\n      text: translate(\"TRANSACTIONS.NAME\")\r\n    },\r\n    {\r\n      dataField: 'date',\r\n      text: translate(\"TRANSACTIONS.DATE\")\r\n    },\r\n    {\r\n      dataField: 'time',\r\n      text: translate(\"TRANSACTIONS.TIME\"),\r\n      formatter: timeFormatter\r\n    },\r\n    {\r\n      dataField: 'journal_id_name',\r\n      text: translate(\"TRANSACTIONS.JOURNAL_NAME\")\r\n    },\r\n    {\r\n      dataField: 'credit',\r\n      text: translate(\"TRANSACTIONS.IN\"),\r\n      style: function callback(cell) { return { fontWeight: parseFloat(cell) > 0 ? 'bold' : '', color: parseFloat(cell) === 0 ? 'lightgray' : '' } }\r\n    },\r\n    {\r\n      dataField: 'debit',\r\n      text: translate(\"TRANSACTIONS.OUT\"),\r\n      style: function callback(cell) { return { fontWeight: parseFloat(cell) > 0 ? 'bold' : '', color: parseFloat(cell) === 0 ? 'lightgray' : '' } }\r\n    }\r\n  ];\r\n\r\n  /* clear the borders for table headers */\r\n  for (let i = 0; i < columns.length; i++) {\r\n    columns[i].headerStyle = { border: 'none' }\r\n  }\r\n\r\n  if (transactions.length > 0) {\r\n    return (\r\n      <div className=\"pe-4 ps-4 pt-2\">\r\n\r\n        <BootstrapTable\r\n          keyField='id'\r\n          data={transactions}\r\n          columns={columns}\r\n          pagination={paginationFactory()}\r\n          rowClasses={\"custom-row-class\"}\r\n          columnClasses={\"custom-column-class\"}\r\n          filter={filterFactory()}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  } else if (!isEmpty) {\r\n    return <Box height=\"400px\"><Loader /></Box>\r\n  }\r\n\r\n  return <div className=\"w-100 d-flex justify-content-center mt-5\">There are no Transactions</div>\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}