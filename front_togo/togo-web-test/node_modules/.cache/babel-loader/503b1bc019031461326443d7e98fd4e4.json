{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/system/togo-web-test/src/components/Orders/OrdersTabularView.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport './OrdersTabularView.css';\nimport translate from \"../../i18n/translate\";\nimport { Link } from \"react-router-dom\";\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\nimport DynamicTable from \"../DynamicTable/DynamicTable\";\nimport { isTransporter, isTransporterMaster } from \"../../Util\";\nimport { Badge, ToggleButton, Button } from \"react-bootstrap\";\nimport { updateOrderReviewedStatus, updateReviewedOrders } from \"../../APIs/OrdersAPIs\";\nexport var PackageTypes = {\n  \"1\": \"FOOD\",\n  \"2\": \"SMALL_PACKAGE_AND_ENVELOPS\",\n  \"3\": \"MEDIUM_PACKAGE\",\n  \"4\": \"LARGE_PACKAGE\"\n};\nexport var DeliveryTypes = {\n  \"1\": \"DELIVERY\",\n  \"2\": \"COD\",\n  \"3\": \"PICKUP\",\n  \"4\": \"PAP\"\n};\nexport var deliverFormatter = function deliverFormatter(data) {\n  if (DeliveryTypes[parseInt(data.DeliveryWays)]) {\n    return translate(\"ORDERS.\" + DeliveryTypes[parseInt(data.DeliveryWays)]);\n  }\n  return \"\";\n};\nexport var packageFormatter = function packageFormatter(data) {\n  if (PackageTypes[parseInt(data.PackageType)]) {\n    return translate(\"ORDERS.\" + PackageTypes[parseInt(data.PackageType)]);\n  }\n  return \"\";\n};\n\n/* edited (deliverFormatter added) */\nexport var deliverFormatterTransporter = function deliverFormatterTransporter(data) {\n  if (DeliveryTypes[parseInt(data.deliveryWay)]) {\n    // edited (old => data.DeliveryWays)\n    return translate(\"ORDERS.\" + DeliveryTypes[parseInt(data.deliveryWay)]);\n  }\n  return \"\";\n};\n\n/* edited (packageFormatter added) */\nexport var packageFormatterTransporter = function packageFormatterTransporter(data) {\n  if (PackageTypes[parseInt(data.TypeLoad)]) {\n    // edited (old => data.PackageType)\n    return translate(\"ORDERS.\" + PackageTypes[parseInt(data.TypeLoad)]);\n  }\n  return \"\";\n};\n\n/* edited (timeFormatter added) */\nexport var timeFormatter = function timeFormatter(data) {\n  if (data.DateLoad) {\n    return data.DateLoad.split(\" \")[1];\n  }\n  return \"\";\n};\n\n/* edited (dateFormatter added) */\nexport var dateFormatter = function dateFormatter(data) {\n  if (data.DateLoad) {\n    return data.DateLoad.split(\" \")[0];\n  }\n  return \"\";\n};\n\n/* edited (bidsCountFormat added) */\nexport var bidsCountFormat = function bidsCountFormat(data) {\n  if (data.bidsCount) {\n    if (data.bidsCount !== \"0\") {\n      return data.bidsCount;\n    }\n    return \"--\";\n  }\n  return \"\";\n};\n\n/* edited (sourceAddressFormatter added) */\nexport var sourceAddressFormatter = function sourceAddressFormatter(data) {\n  return data.fromAddress + \", \" + data.fromCityName;\n};\n\n/* edited (desAddressFormatter added) */\nexport var desAddressFormatter = function desAddressFormatter(data) {\n  return data.toAddress + \", \" + data.toCityName;\n};\n\n/* edited (transporterStatusFormattter added) */\nexport var statusFormat = function statusFormat(data) {\n  // console.log(data)\n  if (data.IsStuckOrder == 1 && data.IsReturnedOrder == 0) {\n    return /*#__PURE__*/React.createElement(Badge, {\n      bg: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }\n    }, \"Order Stuck\");\n  }\n  if (data.IsReturnedOrder == 1) {\n    return /*#__PURE__*/React.createElement(Badge, {\n      bg: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    }, \"Order Returned\");\n  }\n  if (data.order_status == \"Deleted\") {\n    return /*#__PURE__*/React.createElement(Badge, {\n      bg: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }\n    }, data.order_status);\n  }\n  return /*#__PURE__*/React.createElement(Badge, {\n    bg: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }\n  }, data.order_status);\n};\nexport var clientOrderStatusFotmatter = function clientOrderStatusFotmatter(data) {\n  if (data.bidsCount) {\n    if (data.bidsCount == 0) {\n      return /*#__PURE__*/React.createElement(Badge, {\n        bg: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 20\n        }\n      }, \"Waiting for bid\");\n    } else if (data.bidsCount == 1) {\n      return /*#__PURE__*/React.createElement(Badge, {\n        bg: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }\n      }, \"1 Bid\");\n    }\n    return /*#__PURE__*/React.createElement(Badge, {\n      bg: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 16\n      }\n    }, data.bidsCount + \" Bids\");\n  }\n  return statusFormat(data);\n};\nexport var OrdersTabularView = function OrdersTabularView(_ref) {\n  var socket = _ref.socket,\n    orders = _ref.orders,\n    currentPage = _ref.currentPage,\n    update = _ref.update,\n    assignOrders = _ref.assignOrders;\n  var _useState = useState(\"-\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    bidPrice = _useState2[0],\n    setBidPrice = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    columns = _useState4[0],\n    setColumns = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    assignedOrders = _useState6[0],\n    setAssignedOrders = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    reviewList = _useState8[0],\n    setRreviewList = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    totalCOD = _useState10[0],\n    setTotalCOD = _useState10[1];\n  var showDetailsButton = useCallback(function (orderId) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/account/Order/\".concat(orderId),\n        state: {\n          currentPage: currentPage\n        }\n      },\n      style: {\n        paddingRight: \"20%\",\n        paddingLeft: \"20%\",\n        border: \"none\",\n        width: \"100%\",\n        textAlign: \"center\"\n      },\n      className: \"btn btn-primary btn-rounded btn-grad\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, translate(\"ORDERS.SHOW\"));\n  }, [currentPage]);\n  var addToAssign = function addToAssign(isChecked, orderId) {\n    var tempId = parseInt(orderId);\n    if (isChecked) {\n      assignedOrders.push(tempId);\n    } else {\n      var idIndex = assignedOrders.findIndex(function (id) {\n        return id === tempId;\n      });\n      assignedOrders.splice(idIndex, 1);\n      assignOrders(assignedOrders);\n    }\n  };\n  var checkOrderReviewedHandler = function checkOrderReviewedHandler(status, orderId) {\n    // console.log(status + \" - \" + orderId)\n\n    updateOrderReviewedStatus(status, orderId).then(function (res) {\n      // document.getElementById(\"tr-\" + orderId).checked = true;;\n      // console.log(res.data);\n      // update();\n    });\n  };\n  var addRemToReview = function addRemToReview(status, orderId, COD) {\n    // console.log(status + \" - \" + orderId);\n    // console.log(COD);\n    if (!status) {\n      setRreviewList(function (reviewList) {\n        return reviewList.filter(function (id) {\n          return id !== orderId;\n        });\n      });\n      setTotalCOD(function (prevState) {\n        return prevState - parseInt(COD);\n      });\n    } else {\n      setRreviewList(function (reviewList) {\n        return [].concat(_toConsumableArray(reviewList), [orderId]);\n      });\n      setTotalCOD(function (prevState) {\n        return prevState + parseInt(COD);\n      });\n    }\n  };\n  var saveReviewed = function saveReviewed() {\n    // console.log(reviewList);\n\n    var isToReview = currentPage === \"previous-orders\";\n    updateReviewedOrders(reviewList, isToReview).then(function (res) {\n      // console.log(res.data);\n\n      update();\n    });\n  };\n  useEffect(function () {\n    var newColumns = [];\n\n    /* differ between transporter and client columns */\n    if (isTransporter()) {\n      // transporter columns\n\n      newColumns = [{\n        label: translate(\"ORDERS.ORDER_NUM\"),\n        key: \"id\"\n      },\n      /* {\r\n          label: translate(\"ORDERS.DELIVERY_TYPE\"),\r\n          key: \"deliveryWay\",\r\n          format: deliverFormatterTransporter\r\n      }, */\n      /* {\r\n          label: translate(\"ORDERS.PACKAGE_TYPE\"),\r\n          key: \"TypeLoad\",\r\n          format: packageFormatterTransporter\r\n      }, */\n      {\n        label: \"COD\",\n        key: \"COD\",\n        format: function format(_ref2) {\n          var COD = _ref2.COD;\n          return /*#__PURE__*/React.createElement(React.Fragment, null, !!COD ? COD : 0);\n        }\n      }, {\n        label: translate(\"ORDERS.ORDER_DATE\"),\n        key: \"DateLoad\",\n        format: dateFormatter\n      },\n      /* {\r\n          label: translate(\"ORDERS.ORDER_TIME\"),\r\n          key: \"DateLoad\",\r\n          format: timeFormatter\r\n      }, */\n      {\n        label: translate(\"ORDERS.FROM_CITY\"),\n        key: \"fromAddress\",\n        format: sourceAddressFormatter\n      }, {\n        label: translate(\"ORDERS.RECEIVER_NAME\"),\n        key: \"receiverName\"\n      }, {\n        label: translate(\"ORDERS.TO_CITY\"),\n        key: \"toAddress\",\n        format: desAddressFormatter\n      }, {\n        label: translate(\"ORDERS.ORDER_STATUS\"),\n        key: \"order_status\",\n        format: statusFormat\n      }, {\n        label: translate(\"ORDERS.FULL_DETAILS\"),\n        key: \"id\",\n        format: function format(_ref3) {\n          var id = _ref3.id;\n          return showDetailsButton(id);\n        }\n      }];\n      if (currentPage !== \"all-orders\") {\n        newColumns.splice(1, 0, {\n          label: translate(\"ORDERS.FOREIGN_BARCODE\"),\n          key: \"loges_barcode\",\n          format: function format(_ref4) {\n            var foreignOrderId = _ref4.foreignOrderId,\n              loges_barcode = _ref4.loges_barcode;\n            return /*#__PURE__*/React.createElement(React.Fragment, null, !!loges_barcode ? loges_barcode : !!foreignOrderId ? foreignOrderId : \"-\");\n          }\n        });\n      }\n      if (currentPage === \"previous-orders\" || currentPage === \"reviewed-orders\") {\n        newColumns.splice(0, 0, {\n          label: translate(\"ORDERS.REVIEWED\"),\n          key: \"assign\",\n          format: function format(_ref5, reviewed, handleCheck) {\n            var id = _ref5.id,\n              isReviewed = _ref5.isReviewed,\n              COD = _ref5.COD;\n            var cod = !!COD ? COD : 0;\n            return /*#__PURE__*/React.createElement(\"input\", {\n              className: \"form-check-input\",\n              defaultChecked: currentPage === \"previous-orders\" ? reviewed == 1 ? true : false : reviewed == 1 ? false : true,\n              style: {\n                cursor: \"pointer\"\n              },\n              type: \"checkbox\",\n              value: id,\n              id: \"flexCheckDefault\",\n              onClick: function onClick(event) {\n                /* checkOrderReviewedHandler(event.target.checked, event.target.value); */addRemToReview(event.target.checked, event.target.value, cod);\n                handleCheck();\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 32\n              }\n            });\n          }\n        });\n      }\n\n      /* check to assign */\n      if (currentPage === \"current-orders\" && false) {\n        newColumns.splice(0, 0, {\n          label: translate(\"ORDERS.ASSIGN\"),\n          key: \"assign\",\n          format: function format(_ref6) {\n            var id = _ref6.id,\n              AssignerId = _ref6.AssignerId,\n              isAssigned = _ref6.isAssigned;\n            return /*#__PURE__*/React.createElement(React.Fragment, null, AssignerId === localStorage.getItem(\"userId\") && isAssigned == 0 || AssignerId !== localStorage.getItem(\"userId\") && isAssigned == 2 ? /*#__PURE__*/React.createElement(\"input\", {\n              className: \"form-check-input\",\n              style: {\n                cursor: \"pointer\"\n              },\n              type: \"checkbox\",\n              value: id,\n              id: \"flexCheckDefault\",\n              onClick: function onClick(event) {\n                addToAssign(event.target.checked, event.target.value);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 29\n              }\n            }) : /*#__PURE__*/React.createElement(\"input\", {\n              className: \"form-check-input\",\n              disabled: true,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 29\n              }\n            }));\n          }\n        });\n      }\n    } else {\n      // client columns\n      newColumns = [{\n        label: translate(\"ORDERS.ORDER_NUM\"),\n        key: \"idOrder\"\n      },\n      /* {\r\n          label: translate(\"ORDERS.DELIVERY_TYPE\"),\r\n          key: \"DeliveryWays\",\r\n          format: deliverFormatter\r\n      }, */\n      /* {\r\n          label: translate(\"ORDERS.PACKAGE_TYPE\"),\r\n          key: \"PackageType\",\r\n          format: packageFormatter\r\n      }, */\n      {\n        label: translate(\"ORDERS.TO_CITY_NAME\"),\n        key: \"toCityName\"\n      }, {\n        label: translate(\"ORDERS.ORDER_DATE\"),\n        key: \"DateOrder\"\n      },\n      /* {\r\n          label: translate(\"ORDERS.DELIVERY_COST\"),\r\n          key: \"deliveryCost\"\r\n      }, */\n      /* {\r\n          label: translate(\"ORDERS.ORDER_TIME\"),\r\n          key: \"TimeOrder\"\r\n      }, */\n      /* {\r\n          label: translate(\"ORDERS.FROM_CITY\"),\r\n          key: \"FromAddress\"\r\n      }, */\n      /* {\r\n          label: translate(\"ORDERS.CLIENT_NAME\"),\r\n          key: \"clientName\"\r\n      }, */\n      /* {\r\n          label: translate(\"ORDERS.TO_CITY\"),\r\n          key: \"ToAddress\"\r\n      }, */\n      {\n        label: translate(\"ORDERS.COD\"),\n        key: \"CostLoad\",\n        format: function format(_ref7) {\n          var CostLoad = _ref7.CostLoad;\n          return /*#__PURE__*/React.createElement(React.Fragment, null, !!CostLoad ? CostLoad : 0);\n        }\n      }, {\n        label: translate(\"ORDERS.RECEIVER_NAME\"),\n        key: \"receiverName\"\n      }, {\n        label: translate(\"ORDERS.ORDER_STATUS\"),\n        key: \"order_status\",\n        format: clientOrderStatusFotmatter\n      }, {\n        label: translate(\"ORDERS.FULL_DETAILS\"),\n        key: \"idOrder\",\n        format: function format(_ref8) {\n          var idOrder = _ref8.idOrder;\n          return showDetailsButton(idOrder);\n        }\n      }];\n\n      /* check reviewed */\n      if (currentPage === \"previous-orders\" || currentPage === \"reviewed-orders\" /* && localStorage.getItem(\"userId\") == 41 */) {\n        newColumns.splice(0, 0, {\n          label: translate(\"ORDERS.REVIEWED\"),\n          key: \"assign\",\n          format: function format(_ref9, reviewed, handleCheck) {\n            var idOrder = _ref9.idOrder,\n              isReviewed = _ref9.isReviewed,\n              CostLoad = _ref9.CostLoad;\n            var cod = !!CostLoad ? CostLoad : 0;\n            return /*#__PURE__*/React.createElement(\"input\", {\n              className: \"form-check-input\",\n              defaultChecked: currentPage === \"previous-orders\" ? reviewed == 1 ? true : false : reviewed == 1 ? false : true,\n              style: {\n                cursor: \"pointer\"\n              },\n              type: \"checkbox\",\n              value: idOrder,\n              id: \"flexCheckDefault\",\n              onClick: function onClick(event) {\n                /* checkOrderReviewedHandler(event.target.checked, event.target.value); */addRemToReview(event.target.checked, event.target.value, cod);\n                handleCheck();\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 32\n              }\n            });\n          }\n        });\n      }\n      if (currentPage !== \"all-orders\") {\n        newColumns.splice(3, 0, {\n          label: translate(\"ORDERS.DELIVERY_COST\"),\n          key: \"deliveryCost\"\n        });\n        newColumns.splice(1, 0, {\n          label: translate(\"ORDERS.FOREIGN_NUM\"),\n          key: \"foreignOrderId\",\n          format: function format(_ref10) {\n            var foreignOrderId = _ref10.foreignOrderId,\n              loges_barcode = _ref10.loges_barcode;\n            return /*#__PURE__*/React.createElement(React.Fragment, null, !!loges_barcode ? loges_barcode : !!foreignOrderId ? foreignOrderId : \"-\");\n          }\n        });\n      }\n    }\n\n    /* edited (comment bidPrice) */\n    /*if (isTransporter()) {\r\n        newColumns.splice(3, 0, {\r\n            label: translate(\"ORDER_DETAILS.BID_PRICE\"),\r\n            key: \"bidPrice\",\r\n            format: ({idOrder}) => <p>{bidPrice}</p>\r\n        });\r\n    }*/\n\n    if (!isTransporter() && currentPage === \"all-orders\") {\n      newColumns.push({\n        label: \"\",\n        key: \"\",\n        format: function format(_ref11) {\n          var idOrder = _ref11.idOrder;\n          return /*#__PURE__*/React.createElement(CancelOrder, {\n            className: \"w-100\",\n            socket: socket,\n            orderId: idOrder,\n            onSuccess: update,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 42\n            }\n          });\n        }\n      });\n    }\n\n    /* edited (commented) */\n    /* if (currentPage === \"current-orders\") {\r\n        //TODO:: key to be changed\r\n          newColumns.splice(3, 0, {\r\n            label: translate(\"ORDERS.PRICE\"),\r\n            key: \"CostLoad\"\r\n        });\r\n        \r\n        if(isTransporterMaster()){\r\n            newColumns.splice(newColumns.length - 1, 0,{\r\n                label: translate(\"ORDER_DETAILS.ASSIGNED\"),\r\n                key: \"AssignedMemberName\",\r\n            });\r\n        }\r\n    } */ /* else if (currentPage === \"previous-orders\") {\r\n         newColumns.push({\r\n            label: translate(\"ORDERS.ORDER_STATUS\"),\r\n            key: \"idOrder\",\r\n            format: ({IsFinished, IsDeleted}) => IsFinished ? translate(\"ORDERS.COMPLETED\") : IsDeleted ? translate(\"ORDERS.CANCELED\") : null\r\n         })\r\n         } */\n\n    setColumns(newColumns);\n  }, [currentPage, showDetailsButton]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(DynamicTable, {\n    columns: columns,\n    data: orders,\n    currentPage: currentPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }\n  }), reviewList.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: \"-30px\",\n      left: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"200px\"\n    },\n    onClick: saveReviewed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }\n  }, currentPage === \"previous-orders\" ? \"Reviewed\" : \"Remove\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ms-3\",\n    style: {\n      width: \"200px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }\n  }, \"Total COD: \", totalCOD)));\n};","map":{"version":3,"names":["React","useCallback","useEffect","useState","translate","Link","CancelOrder","DynamicTable","isTransporter","isTransporterMaster","Badge","ToggleButton","Button","updateOrderReviewedStatus","updateReviewedOrders","PackageTypes","DeliveryTypes","deliverFormatter","data","parseInt","DeliveryWays","packageFormatter","PackageType","deliverFormatterTransporter","deliveryWay","packageFormatterTransporter","TypeLoad","timeFormatter","DateLoad","split","dateFormatter","bidsCountFormat","bidsCount","sourceAddressFormatter","fromAddress","fromCityName","desAddressFormatter","toAddress","toCityName","statusFormat","IsStuckOrder","IsReturnedOrder","createElement","bg","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","order_status","clientOrderStatusFotmatter","OrdersTabularView","_ref","socket","orders","currentPage","update","assignOrders","_useState","_useState2","_slicedToArray","bidPrice","setBidPrice","_useState3","_useState4","columns","setColumns","_useState5","_useState6","assignedOrders","setAssignedOrders","_useState7","_useState8","reviewList","setRreviewList","_useState9","_useState10","totalCOD","setTotalCOD","showDetailsButton","orderId","to","pathname","concat","state","style","paddingRight","paddingLeft","border","width","textAlign","className","addToAssign","isChecked","tempId","push","idIndex","findIndex","id","splice","checkOrderReviewedHandler","status","then","res","addRemToReview","COD","filter","prevState","_toConsumableArray","saveReviewed","isToReview","newColumns","label","key","format","_ref2","Fragment","_ref3","_ref4","foreignOrderId","loges_barcode","_ref5","reviewed","handleCheck","isReviewed","cod","defaultChecked","cursor","type","value","onClick","event","target","checked","_ref6","AssignerId","isAssigned","localStorage","getItem","disabled","_ref7","CostLoad","_ref8","idOrder","_ref9","_ref10","_ref11","onSuccess","position","length","bottom","left"],"sources":["/home/system/togo-web-test/src/components/Orders/OrdersTabularView.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport './OrdersTabularView.css';\r\nimport translate from \"../../i18n/translate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\r\nimport DynamicTable from \"../DynamicTable/DynamicTable\";\r\nimport { isTransporter, isTransporterMaster } from \"../../Util\";\r\nimport { Badge, ToggleButton, Button } from \"react-bootstrap\";\r\nimport { updateOrderReviewedStatus, updateReviewedOrders } from \"../../APIs/OrdersAPIs\";\r\n\r\nexport const PackageTypes = {\r\n    \"1\": \"FOOD\",\r\n    \"2\": \"SMALL_PACKAGE_AND_ENVELOPS\",\r\n    \"3\": \"MEDIUM_PACKAGE\",\r\n    \"4\": \"LARGE_PACKAGE\"\r\n};\r\n\r\nexport const DeliveryTypes = {\r\n    \"1\": \"DELIVERY\",\r\n    \"2\": \"COD\",\r\n    \"3\": \"PICKUP\",\r\n    \"4\": \"PAP\"\r\n};\r\n\r\nexport const deliverFormatter = (data) => {\r\n    if (DeliveryTypes[parseInt(data.DeliveryWays)]) {\r\n        return translate(\"ORDERS.\" + DeliveryTypes[parseInt(data.DeliveryWays)])\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport const packageFormatter = (data) => {\r\n    if (PackageTypes[parseInt(data.PackageType)]) {\r\n        return translate(\"ORDERS.\" + PackageTypes[parseInt(data.PackageType)])\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/* edited (deliverFormatter added) */\r\nexport const deliverFormatterTransporter = (data) => {\r\n    if (DeliveryTypes[parseInt(data.deliveryWay)]) { // edited (old => data.DeliveryWays)\r\n        return translate(\"ORDERS.\" + DeliveryTypes[parseInt(data.deliveryWay)])\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/* edited (packageFormatter added) */\r\nexport const packageFormatterTransporter = (data) => {\r\n    if (PackageTypes[parseInt(data.TypeLoad)]) { // edited (old => data.PackageType)\r\n        return translate(\"ORDERS.\" + PackageTypes[parseInt(data.TypeLoad)])\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/* edited (timeFormatter added) */\r\nexport const timeFormatter = (data) => {\r\n    if (data.DateLoad) {\r\n        return data.DateLoad.split(\" \")[1];\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/* edited (dateFormatter added) */\r\nexport const dateFormatter = (data) => {\r\n    if (data.DateLoad) {\r\n        return data.DateLoad.split(\" \")[0];\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/* edited (bidsCountFormat added) */\r\nexport const bidsCountFormat = (data) => {\r\n    if (data.bidsCount) {\r\n        if (data.bidsCount !== \"0\") {\r\n            return data.bidsCount;\r\n        }\r\n\r\n        return \"--\"\r\n    }\r\n    return \"\";\r\n}\r\n\r\n/* edited (sourceAddressFormatter added) */\r\nexport const sourceAddressFormatter = (data) => {\r\n\r\n    return data.fromAddress + \", \" + data.fromCityName;\r\n}\r\n\r\n/* edited (desAddressFormatter added) */\r\nexport const desAddressFormatter = (data) => {\r\n\r\n    return data.toAddress + \", \" + data.toCityName;\r\n}\r\n\r\n/* edited (transporterStatusFormattter added) */\r\nexport const statusFormat = (data) => {\r\n    // console.log(data)\r\n    if (data.IsStuckOrder == 1 && data.IsReturnedOrder == 0) {\r\n        return <Badge bg=\"danger\">Order Stuck</Badge>\r\n    }\r\n\r\n    if (data.IsReturnedOrder == 1) {\r\n        return <Badge bg=\"danger\">Order Returned</Badge>\r\n    }\r\n\r\n    if (data.order_status == \"Deleted\") {\r\n        return <Badge bg=\"danger\">{data.order_status}</Badge>\r\n    }\r\n\r\n    return <Badge bg=\"primary\">{data.order_status}</Badge>\r\n}\r\n\r\nexport const clientOrderStatusFotmatter = (data) => {\r\n\r\n    if (data.bidsCount) {\r\n        if (data.bidsCount == 0) {\r\n            return <Badge bg=\"primary\">Waiting for bid</Badge>\r\n        } else if (data.bidsCount == 1) {\r\n            return <Badge bg=\"primary\">{\"1 Bid\"}</Badge>\r\n        }\r\n        return <Badge bg=\"primary\">{data.bidsCount + \" Bids\"}</Badge>\r\n    }\r\n\r\n    return statusFormat(data)\r\n}\r\n\r\nexport const OrdersTabularView = ({ socket, orders, currentPage, update, assignOrders }) => {\r\n\r\n    const [bidPrice, setBidPrice] = useState(\"-\");\r\n\r\n    const [columns, setColumns] = useState([]);\r\n    const [assignedOrders, setAssignedOrders] = useState([]);\r\n\r\n    const [reviewList, setRreviewList] = useState([]);\r\n    const [totalCOD, setTotalCOD] = useState(0);\r\n\r\n    const showDetailsButton = useCallback((orderId) =>\r\n        <Link\r\n            to={{\r\n                pathname: `/account/Order/${orderId}`,\r\n                state: { currentPage: currentPage },\r\n            }}\r\n            style={{\r\n                paddingRight: \"20%\",\r\n                paddingLeft: \"20%\",\r\n                border: \"none\",\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n            }}\r\n            className=\"btn btn-primary btn-rounded btn-grad\"\r\n        >\r\n            {translate(\"ORDERS.SHOW\")}\r\n        </Link>, [currentPage]);\r\n\r\n    const addToAssign = (isChecked, orderId) => {\r\n\r\n        const tempId = parseInt(orderId);\r\n\r\n        if (isChecked) {\r\n            assignedOrders.push(tempId);\r\n        } else {\r\n            const idIndex = assignedOrders.findIndex(id => id === tempId);\r\n            assignedOrders.splice(idIndex, 1);\r\n\r\n            assignOrders(assignedOrders);\r\n        }\r\n    }\r\n\r\n    const checkOrderReviewedHandler = (status, orderId) => {\r\n        // console.log(status + \" - \" + orderId)\r\n\r\n        updateOrderReviewedStatus(status, orderId).then(res => {\r\n            // document.getElementById(\"tr-\" + orderId).checked = true;;\r\n            // console.log(res.data);\r\n            // update();\r\n        })\r\n    }\r\n\r\n    const addRemToReview = (status, orderId, COD) => {\r\n        // console.log(status + \" - \" + orderId);\r\n        // console.log(COD);\r\n        if (!status) {\r\n            setRreviewList(reviewList => reviewList.filter(id => id !== orderId));\r\n            setTotalCOD(prevState => prevState - parseInt(COD));\r\n        } else {\r\n            setRreviewList(reviewList => [...reviewList, orderId]);\r\n            setTotalCOD(prevState => prevState + parseInt(COD));\r\n        }\r\n    }\r\n\r\n    const saveReviewed = () => {\r\n        // console.log(reviewList);\r\n\r\n        const isToReview = currentPage === \"previous-orders\";\r\n\r\n        updateReviewedOrders(reviewList, isToReview).then(res => {\r\n            // console.log(res.data);\r\n\r\n            update();\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        let newColumns = [];\r\n\r\n        /* differ between transporter and client columns */\r\n        if (isTransporter()) { // transporter columns\r\n\r\n            newColumns = [\r\n                {\r\n                    label: translate(\"ORDERS.ORDER_NUM\"),\r\n                    key: \"id\"\r\n                },\r\n                /* {\r\n                    label: translate(\"ORDERS.DELIVERY_TYPE\"),\r\n                    key: \"deliveryWay\",\r\n                    format: deliverFormatterTransporter\r\n                }, */\r\n                /* {\r\n                    label: translate(\"ORDERS.PACKAGE_TYPE\"),\r\n                    key: \"TypeLoad\",\r\n                    format: packageFormatterTransporter\r\n                }, */\r\n                {\r\n                    label: \"COD\",\r\n                    key: \"COD\",\r\n                    format: ({ COD }) => {\r\n                        return <>{!!COD ? COD : 0}</>\r\n                    }\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.ORDER_DATE\"),\r\n                    key: \"DateLoad\",\r\n                    format: dateFormatter\r\n                },\r\n                /* {\r\n                    label: translate(\"ORDERS.ORDER_TIME\"),\r\n                    key: \"DateLoad\",\r\n                    format: timeFormatter\r\n                }, */\r\n                {\r\n                    label: translate(\"ORDERS.FROM_CITY\"),\r\n                    key: \"fromAddress\",\r\n                    format: sourceAddressFormatter\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.RECEIVER_NAME\"),\r\n                    key: \"receiverName\"\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.TO_CITY\"),\r\n                    key: \"toAddress\",\r\n                    format: desAddressFormatter\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                    key: \"order_status\",\r\n                    format: statusFormat\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.FULL_DETAILS\"),\r\n                    key: \"id\",\r\n                    format: ({ id }) => showDetailsButton(id)\r\n                }\r\n            ];\r\n\r\n            if (currentPage !== \"all-orders\") {\r\n\r\n                newColumns.splice(1, 0, {\r\n                    label: translate(\"ORDERS.FOREIGN_BARCODE\"),\r\n                    key: \"loges_barcode\",\r\n                    format: ({ foreignOrderId, loges_barcode }) => {\r\n                        return <>{!!loges_barcode ? loges_barcode : !!foreignOrderId ? foreignOrderId : \"-\"}</>\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (currentPage === \"previous-orders\"  || currentPage === \"reviewed-orders\") {\r\n                newColumns.splice(0, 0, {\r\n                    label: translate(\"ORDERS.REVIEWED\"),\r\n                    key: \"assign\",\r\n                    format: ({ id, isReviewed, COD }, reviewed, handleCheck) => {\r\n                        let cod = !!COD ? COD : 0;\r\n                        return <input className=\"form-check-input\" defaultChecked={currentPage === \"previous-orders\" ? (reviewed == 1 ? true : false) : (reviewed == 1 ? false : true)} style={{ cursor: \"pointer\" }} type=\"checkbox\" value={id} id=\"flexCheckDefault\" onClick={(event) => { /* checkOrderReviewedHandler(event.target.checked, event.target.value); */ addRemToReview(event.target.checked, event.target.value, cod); handleCheck() }} />\r\n                    }\r\n                });\r\n            }\r\n\r\n            /* check to assign */\r\n            if (currentPage === \"current-orders\" && false) {\r\n                newColumns.splice(0, 0, {\r\n                    label: translate(\"ORDERS.ASSIGN\"),\r\n                    key: \"assign\",\r\n                    format: ({ id, AssignerId, isAssigned }) => {\r\n                        return <>{(AssignerId === localStorage.getItem(\"userId\") && isAssigned == 0) || (AssignerId !== localStorage.getItem(\"userId\") && isAssigned == 2) ?\r\n                            <input className=\"form-check-input\" style={{ cursor: \"pointer\" }} type=\"checkbox\" value={id} id=\"flexCheckDefault\" onClick={(event) => { addToAssign(event.target.checked, event.target.value) }} /> :\r\n                            <input className=\"form-check-input\" disabled />\r\n                        }</>\r\n                    }\r\n                });\r\n            }\r\n        } else { // client columns\r\n            newColumns = [\r\n                {\r\n                    label: translate(\"ORDERS.ORDER_NUM\"),\r\n                    key: \"idOrder\"\r\n                },\r\n                /* {\r\n                    label: translate(\"ORDERS.DELIVERY_TYPE\"),\r\n                    key: \"DeliveryWays\",\r\n                    format: deliverFormatter\r\n                }, */\r\n                /* {\r\n                    label: translate(\"ORDERS.PACKAGE_TYPE\"),\r\n                    key: \"PackageType\",\r\n                    format: packageFormatter\r\n                }, */\r\n                {\r\n                    label: translate(\"ORDERS.TO_CITY_NAME\"),\r\n                    key: \"toCityName\"\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.ORDER_DATE\"),\r\n                    key: \"DateOrder\"\r\n                },\r\n                /* {\r\n                    label: translate(\"ORDERS.DELIVERY_COST\"),\r\n                    key: \"deliveryCost\"\r\n                }, */\r\n                /* {\r\n                    label: translate(\"ORDERS.ORDER_TIME\"),\r\n                    key: \"TimeOrder\"\r\n                }, */\r\n                /* {\r\n                    label: translate(\"ORDERS.FROM_CITY\"),\r\n                    key: \"FromAddress\"\r\n                }, */\r\n                /* {\r\n                    label: translate(\"ORDERS.CLIENT_NAME\"),\r\n                    key: \"clientName\"\r\n                }, */\r\n                /* {\r\n                    label: translate(\"ORDERS.TO_CITY\"),\r\n                    key: \"ToAddress\"\r\n                }, */\r\n                {\r\n                    label: translate(\"ORDERS.COD\"),\r\n                    key: \"CostLoad\",\r\n                    format: ({ CostLoad }) => {\r\n                        return <>{!!CostLoad ? CostLoad : 0}</>\r\n                    }\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.RECEIVER_NAME\"),\r\n                    key: \"receiverName\"\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                    key: \"order_status\",\r\n                    format: clientOrderStatusFotmatter\r\n                },\r\n                {\r\n                    label: translate(\"ORDERS.FULL_DETAILS\"),\r\n                    key: \"idOrder\",\r\n                    format: ({ idOrder }) => showDetailsButton(idOrder)\r\n                }\r\n            ];\r\n\r\n            /* check reviewed */\r\n            if (currentPage === \"previous-orders\" || currentPage === \"reviewed-orders\" /* && localStorage.getItem(\"userId\") == 41 */) {\r\n                newColumns.splice(0, 0, {\r\n                    label: translate(\"ORDERS.REVIEWED\"),\r\n                    key: \"assign\",\r\n                    format: ({ idOrder, isReviewed, CostLoad }, reviewed, handleCheck) => {\r\n                        let cod = !!CostLoad ? CostLoad : 0;\r\n                        return <input className=\"form-check-input\" defaultChecked={currentPage === \"previous-orders\" ? (reviewed == 1 ? true : false) : (reviewed == 1 ? false : true)} style={{ cursor: \"pointer\" }} type=\"checkbox\" value={idOrder} id=\"flexCheckDefault\" onClick={(event) => { /* checkOrderReviewedHandler(event.target.checked, event.target.value); */ addRemToReview(event.target.checked, event.target.value, cod); handleCheck() }} />\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (currentPage !== \"all-orders\") {\r\n                newColumns.splice(3, 0, {\r\n                    label: translate(\"ORDERS.DELIVERY_COST\"),\r\n                    key: \"deliveryCost\"\r\n                });\r\n\r\n                newColumns.splice(1, 0, {\r\n                    label: translate(\"ORDERS.FOREIGN_NUM\"),\r\n                    key: \"foreignOrderId\",\r\n                    format: ({ foreignOrderId, loges_barcode }) => {\r\n                        return <>{!!loges_barcode ? loges_barcode : !!foreignOrderId ? foreignOrderId : \"-\"}</>\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        /* edited (comment bidPrice) */\r\n        /*if (isTransporter()) {\r\n            newColumns.splice(3, 0, {\r\n                label: translate(\"ORDER_DETAILS.BID_PRICE\"),\r\n                key: \"bidPrice\",\r\n                format: ({idOrder}) => <p>{bidPrice}</p>\r\n            });\r\n        }*/\r\n\r\n        if (!isTransporter() && currentPage === \"all-orders\") {\r\n            newColumns.push({\r\n                label: \"\",\r\n                key: \"\",\r\n                format: ({ idOrder }) => <CancelOrder className=\"w-100\" socket={socket} orderId={idOrder} onSuccess={update} />\r\n            });\r\n        }\r\n\r\n        /* edited (commented) */\r\n        /* if (currentPage === \"current-orders\") {\r\n            //TODO:: key to be changed\r\n\r\n            newColumns.splice(3, 0, {\r\n                label: translate(\"ORDERS.PRICE\"),\r\n                key: \"CostLoad\"\r\n            });\r\n            \r\n            if(isTransporterMaster()){\r\n                newColumns.splice(newColumns.length - 1, 0,{\r\n                    label: translate(\"ORDER_DETAILS.ASSIGNED\"),\r\n                    key: \"AssignedMemberName\",\r\n                });\r\n            }\r\n        } */ /* else if (currentPage === \"previous-orders\") {\r\n            newColumns.push({\r\n                label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                key: \"idOrder\",\r\n                format: ({IsFinished, IsDeleted}) => IsFinished ? translate(\"ORDERS.COMPLETED\") : IsDeleted ? translate(\"ORDERS.CANCELED\") : null\r\n            })\r\n        } */\r\n\r\n        setColumns(newColumns);\r\n    }, [currentPage, showDetailsButton]);\r\n\r\n    return <div style={{ position: \"relative\" }}>\r\n        <DynamicTable columns={columns} data={orders} currentPage={currentPage} />\r\n        {reviewList.length > 0 && <div style={{ position: \"absolute\", bottom: \"-30px\", left: \"20px\" }}>\r\n            <Button className=\"btn-grad\" style={{ width: \"200px\" }} onClick={saveReviewed}>{currentPage === \"previous-orders\" ? \"Reviewed\" : \"Remove\"}</Button>\r\n            <span className=\"ms-3\" style={{ width: \"200px\" }}>Total COD: {totalCOD}</span>\r\n        </div>}\r\n    </div>;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}