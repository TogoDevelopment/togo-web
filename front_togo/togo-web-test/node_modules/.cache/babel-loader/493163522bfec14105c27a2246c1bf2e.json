{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/TestComponent.jsx\";\nimport { Button, Form, Table, Card, Container, Row, Col } from \"react-bootstrap\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { getAllAreas, addToLogesAreas } from \"../APIs/OrdersAPIs\";\nexport default function TestComponent() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      areas = _useState2[0],\n      setAreas = _useState2[1];\n\n  useEffect(function () {\n    getAllAreas().then(function (res) {\n      // console.log(res.data.areas);\n      setAreas(res.data.areas);\n    });\n  }, []);\n\n  var setLogesNameHandler = function setLogesNameHandler(togoId, togoName, logesName) {\n    // console.group(id + \" --> \" + name);\n    addToLogesAreas(togoId, togoName, logesName).then(function (res) {\n      console.log(res.data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, \"Area Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }, \"City Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, \"Logestechs' Village Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, areas.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }\n    }, item.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 41\n      }\n    }, item.areaName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }\n    }, item.cityName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"logestechs' village name\",\n      onKeyPress: function onKeyPress(e) {\n        if (e.charCode === 13) {\n          setLogesNameHandler(item.id, item.areaName, e.target.value);\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 45\n      }\n    })));\n  }))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/TestComponent.jsx"],"names":["Button","Form","Table","Card","Container","Row","Col","React","useRef","useEffect","useState","getAllAreas","addToLogesAreas","TestComponent","areas","setAreas","then","res","data","setLogesNameHandler","togoId","togoName","logesName","console","log","map","item","index","id","areaName","cityName","e","charCode","target","value"],"mappings":"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","sourcesContent":["import { Button, Form, Table, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { getAllAreas, addToLogesAreas } from \"../APIs/OrdersAPIs\";\r\n\r\n\r\nexport default function TestComponent() {\r\n\r\n    const [areas, setAreas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllAreas().then(res => {\r\n            // console.log(res.data.areas);\r\n            setAreas(res.data.areas);\r\n        })\r\n    }, [])\r\n\r\n    const setLogesNameHandler = (togoId, togoName, logesName) => {\r\n        // console.group(id + \" --> \" + name);\r\n        addToLogesAreas(togoId, togoName, logesName).then(res => {\r\n            console.log(res.data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"p-5\">\r\n            <Row>\r\n                <Col>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Area Name</th>\r\n                                <th>City Name</th>\r\n                                <th>Logestechs' Village Name</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                areas.map((item, index) => {\r\n                                    return <tr key={index}>\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.areaName}</td>\r\n                                        <td>{item.cityName}</td>\r\n                                        <td>\r\n                                            <Form.Control placeholder=\"logestechs' village name\" onKeyPress={(e) => { if (e.charCode === 13) { setLogesNameHandler(item.id, item.areaName, e.target.value) } }} />\r\n                                        </td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}