{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/BusinessInfoForm.jsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { Button, Dropdown, Form, FormControl, InputGroup, Spinner } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { GetTypeBusiness, SetBusinessInfo } from \"./APIs/LoginAPIs\";\nexport default function BusinessInfoForm() {\n  var _this = this;\n\n  var BNameRef = useRef();\n  var BLocRef = useRef();\n  var imgRef = useRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      types = _useState2[0],\n      setTypes = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loadingSubmit = _useState4[0],\n      setLoadingSubmit = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedType = _useState6[0],\n      setSelectedType = _useState6[1];\n\n  var history = useHistory();\n\n  function onFileChange(event) {\n    console.log(imgRef.current);\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      imgRef.current.src = e.target.result;\n    };\n\n    if (event.currentTarget.files[0]) {\n      reader.readAsDataURL(event.currentTarget.files[0]);\n    }\n  }\n\n  useEffect(function () {\n    GetTypeBusiness().then(function (res) {\n      setTypes(res.data.server_response);\n      setSelectedType(res.data.server_response[0]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" mainbg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h1 p-3 text-center togo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Create account /client\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-auto w-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center togo-border h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Business information\"), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formGridEmail\",\n    className: \"m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Business name\"), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2 togo-outling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    className: \"bg-white rounded-22\",\n    ref: BNameRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formGridEmail\",\n    className: \"m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Business location\"), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2 togo-outling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"text\",\n    className: \"bg-white rounded-22\",\n    ref: BLocRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formGridEmail\",\n    className: \"m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Business type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"togo-outling mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"rounded-22 bg-white\",\n    onSelect: function onSelect(eve) {\n      setSelectedType(types[eve]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center shadow-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, selectedType === null || selectedType === void 0 ? void 0 : selectedType.Name)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, types.map(function (type, index) {\n    return /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: index,\n      key: index,\n      className: \"d-flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }, \"\".concat(type.Name));\n  })))), /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-2 togo-outling\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    type: \"file\",\n    className: \"bg-white rounded-22\",\n    accept: \"image/*\",\n    onChange: onFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    style: {\n      maxHeight: \"150px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    ref: imgRef,\n    className: \"border border-2\",\n    style: {\n      height: \"150px\",\n      margin: \"auto\",\n      padding: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"\",\n    className: \"d-block m-auto rounded-22 togo-button w-25\",\n    disabled: loadingSubmit,\n    onClick: function onClick() {\n      var dataUri = imgRef.current.src;\n      var base64 = dataUri.substr(dataUri.indexOf(\",\") + 1);\n      setLoadingSubmit(true);\n      SetBusinessInfo(BNameRef.current.value, BLocRef.current.value, selectedType.id, base64).then(function (res) {\n        setLoadingSubmit(false);\n        history.push(\"/dashboard\");\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 47\n    }\n  }), \"Send\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"\",\n    className: \"d-block m-auto rounded-22 togo-button w-25\",\n    onClick: function onClick() {\n      history.push(\"/business-info\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Skip\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/BusinessInfoForm.jsx"],"names":["React","useEffect","useRef","useState","Button","Dropdown","Form","FormControl","InputGroup","Spinner","useHistory","GetTypeBusiness","SetBusinessInfo","BusinessInfoForm","BNameRef","BLocRef","imgRef","types","setTypes","loadingSubmit","setLoadingSubmit","selectedType","setSelectedType","history","onFileChange","event","console","log","current","reader","FileReader","onload","e","src","target","result","currentTarget","files","readAsDataURL","then","res","data","server_response","eve","width","Name","map","type","index","maxHeight","height","margin","padding","dataUri","base64","substr","indexOf","value","id","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Dropdown, Form, FormControl, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GetTypeBusiness, SetBusinessInfo } from \"./APIs/LoginAPIs\";\r\n\r\nexport default function BusinessInfoForm(){\r\n    const BNameRef = useRef();\r\n    const BLocRef = useRef();\r\n    const imgRef = useRef();\r\n    const [types, setTypes] = useState([]);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n    const [selectedType, setSelectedType] = useState();\r\n    const history = useHistory();\r\n    function onFileChange(event){\r\n        console.log(imgRef.current)\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = function (e) {\r\n            imgRef.current.src = e.target.result\r\n        }\r\n        if(event.currentTarget.files[0]){\r\n            reader.readAsDataURL(event.currentTarget.files[0]);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        GetTypeBusiness().then((res) => {\r\n            setTypes(res.data.server_response);\r\n            setSelectedType(res.data.server_response[0]);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\" mainbg\">\r\n                <div className=\"h1 p-3 text-center togo-button\">\r\n                    Create account /client\r\n                </div>\r\n                <div className=\"m-auto w-75\">\r\n                    <p className=\"text-center togo-border h4\">Business information</p>\r\n                    <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                        <Form.Label>Business name</Form.Label>\r\n                        <InputGroup className=\"mb-2 togo-outling\">\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                className=\"bg-white rounded-22\"\r\n                                ref={BNameRef}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                        <Form.Label>Business location</Form.Label>\r\n                        <InputGroup className=\"mb-2 togo-outling\">\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                className=\"bg-white rounded-22\"\r\n                                ref={BLocRef}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                        <Form.Label>Business type</Form.Label>\r\n                        <div className=\"togo-outling mb-2\">\r\n                            <Dropdown\r\n                                className=\"rounded-22 bg-white\"\r\n                                onSelect={(eve)=>{\r\n                                    setSelectedType(types[eve])\r\n                                }}\r\n                            >\r\n                                <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center shadow-none\">\r\n                                    <div style={{width: \"97%\"}}>\r\n                                        {selectedType?.Name}\r\n                                    </div>\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu className=\"w-100\">\r\n                                    {types.map((type, index) => {\r\n                                        return (\r\n                                            <Dropdown.Item eventKey={index} key={index} className=\"d-flex\">\r\n                                                {`${type.Name}`}\r\n                                            </Dropdown.Item>\r\n                                        )\r\n                                    })}\r\n\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n\r\n                        <InputGroup className=\"mb-2 togo-outling\">\r\n                            <FormControl\r\n                                type=\"file\"\r\n                                className=\"bg-white rounded-22\"\r\n                                accept=\"image/*\"\r\n                                onChange={onFileChange}\r\n                            />\r\n\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <div className=\"mb-2\" style={{maxHeight: \"150px\"}}>\r\n                        <img ref={imgRef} className=\"border border-2\" style={{height: \"150px\",margin: \"auto\",padding: \"2px\"}} />\r\n                    </div>\r\n                    <div>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"d-block m-auto rounded-22 togo-button w-25\"\r\n                            disabled={loadingSubmit}\r\n                            onClick={()=>{\r\n                                let dataUri = imgRef.current.src;\r\n                                let base64 = dataUri.substr(dataUri.indexOf(\",\") + 1);\r\n                                setLoadingSubmit(true);\r\n                                SetBusinessInfo(\r\n                                    BNameRef.current.value,\r\n                                    BLocRef.current.value,\r\n                                    selectedType.id,\r\n                                    base64\r\n                                ).then((res) => {\r\n                                    setLoadingSubmit(false);\r\n                                    history.push(\"/dashboard\");\r\n                                });\r\n                            }}\r\n                        >\r\n                            {loadingSubmit && <Spinner animation=\"border\" size=\"sm\"/>}\r\n                            Send\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"\"\r\n                            className=\"d-block m-auto rounded-22 togo-button w-25\"\r\n                            onClick={()=>{\r\n                                history.push(\"/business-info\")\r\n                            }}\r\n                        >\r\n                            Skip\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}