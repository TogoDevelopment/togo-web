{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nexport function useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n  var _React$useState = React.useState(queries.map(function (query) {\n      return isSupported ? !!env.window.matchMedia(query).matches : false;\n    })),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    matches = _React$useState2[0],\n    setMatches = _React$useState2[1];\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (mediaQuery, index) {\n      var listener = function listener() {\n        return setMatches(function (prev) {\n          return prev.map(function (prevValue, idx) {\n            return index === idx ? !!mediaQuery.matches : prevValue;\n          });\n        });\n      };\n      mediaQuery.addListener(listener);\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (mediaQuery, index) {\n        mediaQuery.removeListener(listenerList[index]);\n      });\n    };\n  }, [query]);\n  return matches;\n}","map":{"version":3,"names":["useEnvironment","isBrowser","React","useSafeLayoutEffect","useLayoutEffect","useEffect","useMediaQuery","query","env","queries","Array","isArray","isSupported","window","_React$useState","useState","map","matchMedia","matches","_React$useState2","_slicedToArray","setMatches","undefined","mediaQueryList","listenerList","mediaQuery","index","listener","prev","prevValue","idx","addListener","forEach","removeListener"],"sources":["../../src/use-media-query.ts"],"sourcesContent":["import { useEnvironment } from \"@chakra-ui/react-env\"\nimport { isBrowser } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nconst useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\nexport function useMediaQuery(query: string | string[]): boolean[] {\n  const env = useEnvironment()\n  const queries = Array.isArray(query) ? query : [query]\n  const isSupported = isBrowser && \"matchMedia\" in env.window\n\n  const [matches, setMatches] = React.useState(\n    queries.map((query) =>\n      isSupported ? !!env.window.matchMedia(query).matches : false,\n    ),\n  )\n\n  useSafeLayoutEffect(() => {\n    if (!isSupported) return undefined\n\n    const mediaQueryList = queries.map((query) => env.window.matchMedia(query))\n\n    const listenerList = mediaQueryList.map((mediaQuery, index) => {\n      const listener = () =>\n        setMatches((prev) =>\n          prev.map((prevValue, idx) =>\n            index === idx ? !!mediaQuery.matches : prevValue,\n          ),\n        )\n\n      mediaQuery.addListener(listener)\n\n      return listener\n    })\n\n    return () => {\n      mediaQueryList.forEach((mediaQuery, index) => {\n        mediaQuery.removeListener(listenerList[index])\n      })\n    }\n  }, [query])\n\n  return matches\n}\n"],"mappings":";AAAA,SAASA,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,mBAAmB,GAAGF,SAAS,GAAGC,KAAK,CAACE,eAAT,GAA2BF,KAAK,CAACG,SAAtE;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAATA,CAAuBC,KAAvB,EAA4D;EACjE,IAAMC,GAAG,GAAGR,cAAc,EAA1B;EACA,IAAMS,OAAO,GAAGC,KAAK,CAACC,OAAN,CAAcJ,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAA/C;EACA,IAAMK,WAAW,GAAGX,SAAS,IAAI,gBAAgBO,GAAG,CAACK,MAArD;EAEA,IAAAC,eAAA,GAA8BZ,KAAK,CAACa,QAAN,CAC5BN,OAAO,CAACO,GAAR,CAAa,UAAAT,KAAD;MAAA,OACVK,WAAW,GAAG,CAAC,CAACJ,GAAG,CAACK,MAAJ,CAAWI,UAAX,CAAsBV,KAAtB,EAA6BW,OAAlC,GAA4C,KADzD;IAAA,EAD4B,CAA9B;IAAAC,gBAAA,GAAAC,cAAA,CAAAN,eAAA;IAAOI,OAAD,GAAAC,gBAAA;IAAUE,UAAV,GAAAF,gBAAA;EAMNhB,mBAAmB,CAAC,YAAM;IACxB,IAAI,CAACS,WAAL,EAAkB,OAAOU,SAAP;IAElB,IAAMC,cAAc,GAAGd,OAAO,CAACO,GAAR,CAAa,UAAAT,KAAD;MAAA,OAAWC,GAAG,CAACK,MAAJ,CAAWI,UAAX,CAAsBV,KAAtB,CAAvB;IAAA,EAAvB;IAEA,IAAMiB,YAAY,GAAGD,cAAc,CAACP,GAAf,CAAmB,UAACS,UAAD,EAAaC,KAAb,EAAuB;MAC7D,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA;QAAA,OACZN,UAAU,CAAE,UAAAO,IAAD;UAAA,OACTA,IAAI,CAACZ,GAAL,CAAS,UAACa,SAAD,EAAYC,GAAZ;YAAA,OACPJ,KAAK,KAAKI,GAAV,GAAgB,CAAC,CAACL,UAAU,CAACP,OAA7B,GAAuCW,SADzC;UAAA,EADQ;QAAA,EADZ;MAAA;MAOAJ,UAAU,CAACM,WAAX,CAAuBJ,QAAvB;MAEA,OAAOA,QAAP;IACD,CAXoB,CAArB;IAaA,OAAO,YAAM;MACXJ,cAAc,CAACS,OAAf,CAAuB,UAACP,UAAD,EAAaC,KAAb,EAAuB;QAC5CD,UAAU,CAACQ,cAAX,CAA0BT,YAAY,CAACE,KAAD,CAAtC;MACD,CAFD;IAGD,CAJD;EAKD,CAvBkB,EAuBhB,CAACnB,KAAD,CAvBgB,CAAnB;EAyBA,OAAOW,OAAP;AACD"},"metadata":{},"sourceType":"module"}