{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from\"react\";import{Dropdown,FormControl,Spinner}from\"react-bootstrap\";import{useIntl}from\"react-intl\";import translate from\"../i18n/translate\";export default function AddressDropdown(_ref){var _addresses$map;var addresses=_ref.addresses,onSearch=_ref.onSearch,_onSelect=_ref.onSelect,selectedAddress=_ref.selectedAddress,loading=_ref.loading;return/*#__PURE__*/React.createElement(Dropdown,{className:\"togo-dropdown\",onSelect:function onSelect(event){_onSelect(addresses[event]);//setSelectedPickUpAddress(deliverAddresses[event]);\n}},/*#__PURE__*/React.createElement(Dropdown.Toggle,{variant:\"transparent\",className:\"w-100 text-start\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline-block\",style:{width:\"97%\"}},/*#__PURE__*/React.createElement(\"div\",null,selectedAddress&&selectedAddress.name||translate(\"ORDERS.SELECT_ADDRESS\")),/*#__PURE__*/React.createElement(\"div\",null,selectedAddress&&selectedAddress.details))),/*#__PURE__*/React.createElement(Dropdown.Menu,{variant:\"dark\",renderOnMount:true,as:CustomMenu,onSearch:onSearch,className:\"w-100\"},loading&&/*#__PURE__*/React.createElement(Dropdown.Item,null,/*#__PURE__*/React.createElement(Spinner,{size:\"lg\",animation:\"border\",variant:\"light\"})),(_addresses$map=addresses.map)===null||_addresses$map===void 0?void 0:_addresses$map.call(addresses,function(address,idx){return/*#__PURE__*/React.createElement(Fragment,{key:address.id},/*#__PURE__*/React.createElement(Dropdown.Item,{eventKey:idx},/*#__PURE__*/React.createElement(\"div\",null,address.name),/*#__PURE__*/React.createElement(\"div\",null,address.details)),/*#__PURE__*/React.createElement(Dropdown.Divider,null));})));}var CustomMenu=React.forwardRef(function(_ref2,ref){var children=_ref2.children,style=_ref2.style,className=_ref2.className,onSearch=_ref2.onSearch,labeledBy=_ref2['aria-labelledby'];var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var intl=useIntl();return/*#__PURE__*/React.createElement(\"div\",{ref:ref,style:style,className:className,\"aria-labelledby\":labeledBy},/*#__PURE__*/React.createElement(FormControl,{autoFocus:true,className:\"mx-3 my-2\",style:{width:\"93%\"},placeholder:intl.formatMessage({id:\"ORDERS.ADDRESS_SEARCH\"}),onChange:function onChange(e){//setValue(e.target.value);\nonSearch(e.target.value);}//value={value}\n}),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-unstyled\"},React.Children.toArray(children).filter(function(child){return!value||child.props.children.toLowerCase().startsWith(value);})));});","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/AddressDropdown.jsx"],"names":["React","useState","Fragment","Dropdown","FormControl","Spinner","useIntl","translate","AddressDropdown","addresses","onSearch","onSelect","selectedAddress","loading","event","width","name","details","CustomMenu","map","address","idx","id","forwardRef","ref","children","style","className","labeledBy","value","setValue","intl","formatMessage","e","target","Children","toArray","filter","child","props","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import React, { useState, Fragment }  from \"react\";\r\nimport { Dropdown, FormControl, Spinner } from \"react-bootstrap\";\r\nimport { useIntl } from \"react-intl\";\r\nimport translate from \"../i18n/translate\";\r\n\r\nexport default function AddressDropdown({addresses, onSearch, onSelect, selectedAddress, loading}) {\r\n    \r\n    return (\r\n        <Dropdown\r\n            className=\"togo-dropdown\"\r\n            onSelect={(event) => {\r\n                onSelect(addresses[event])\r\n                //setSelectedPickUpAddress(deliverAddresses[event]);\r\n            }}\r\n        >\r\n            <Dropdown.Toggle variant=\"transparent\" className=\"w-100 text-start\">\r\n                <div className=\"d-inline-block\" style={{width: \"97%\"}}>\r\n                    <div>{(selectedAddress && selectedAddress.name) || translate(\"ORDERS.SELECT_ADDRESS\")}</div>\r\n                    <div>{(selectedAddress && selectedAddress.details)}</div>\r\n                </div>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu variant=\"dark\" renderOnMount={true} as={CustomMenu} onSearch={onSearch} className=\"w-100\">\r\n                {loading && \r\n                    <Dropdown.Item >\r\n                        <Spinner size=\"lg\" animation=\"border\" variant=\"light\" />\r\n                    </Dropdown.Item>\r\n                }\r\n                {addresses.map?.((address, idx) => {\r\n                    return (\r\n                        <Fragment key={address.id}>\r\n                            <Dropdown.Item eventKey={idx}>\r\n                                <div>{address.name}</div>\r\n                                <div>{address.details}</div>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nconst CustomMenu = React.forwardRef(\r\n    ({ children, style, className, onSearch, 'aria-labelledby': labeledBy }, ref) => {\r\n        const [value, setValue] = useState('');\r\n        const intl = useIntl();\r\n        return (\r\n            <div\r\n                ref={ref}\r\n                style={style}\r\n                className={className}\r\n                aria-labelledby={labeledBy}\r\n            >\r\n                <FormControl\r\n                    autoFocus\r\n                    className=\"mx-3 my-2\"\r\n                    style={{width: \"93%\"}}\r\n                    placeholder={intl.formatMessage({id: \"ORDERS.ADDRESS_SEARCH\"})}\r\n                    onChange={(e) => {\r\n                        //setValue(e.target.value);\r\n                        onSearch(e.target.value);\r\n                    }}\r\n                    //value={value}\r\n                />\r\n                <ul className=\"list-unstyled\">\r\n                    {React.Children.toArray(children).filter(\r\n                    (child) =>\r\n                        !value || child.props.children.toLowerCase().startsWith(value),\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    },\r\n);"]},"metadata":{},"sourceType":"module"}