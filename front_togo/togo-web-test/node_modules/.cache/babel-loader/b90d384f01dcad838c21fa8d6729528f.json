{"ast":null,"code":"import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    var _context$layerContain;\n    var container = (_context$layerContain = context.layerContainer) !== null && _context$layerContain !== void 0 ? _context$layerContain : context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    var context = useLeafletContext();\n    var elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","map":{"version":3,"names":["useEffect","useAttribution","useLeafletContext","useEventHandlers","withPane","useLayerLifecycle","element","context","addLayer","_context$layerContain","container","layerContainer","map","instance","removeLayer","_context$layersContro","layersControl","createLayerHook","useElement","useLayer","props","elementRef","attribution","current","eventHandlers"],"sources":["/home/system/togo-web-test/node_modules/@react-leaflet/core/esm/layer.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layersContro;\n\n      (_context$layersContro = context.layersControl) == null ? void 0 : _context$layersContro.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,iBAAiB,QAAQ,WAAW;AAC7C,SAASC,gBAAgB,QAAQ,UAAU;AAC3C,SAASC,QAAQ,QAAQ,QAAQ;AACjC,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAClDP,SAAS,CAAC,SAASQ,QAAQA,CAAA,EAAG;IAAA,IAAAC,qBAAA;IAC5B,IAAMC,SAAS,IAAAD,qBAAA,GAAGF,OAAO,CAACI,cAAc,cAAAF,qBAAA,cAAAA,qBAAA,GAAIF,OAAO,CAACK,GAAG;IACvDF,SAAS,CAACF,QAAQ,CAACF,OAAO,CAACO,QAAQ,CAAC;IACpC,OAAO,SAASC,WAAWA,CAAA,EAAG;MAC5B,IAAIC,qBAAqB;MAEzB,CAACA,qBAAqB,GAAGR,OAAO,CAACS,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,qBAAqB,CAACD,WAAW,CAACR,OAAO,CAACO,QAAQ,CAAC;MACtHN,OAAO,CAACK,GAAG,CAACE,WAAW,CAACR,OAAO,CAACO,QAAQ,CAAC;IAC3C,CAAC;EACH,CAAC,EAAE,CAACN,OAAO,EAAED,OAAO,CAAC,CAAC;AACxB;AACA,OAAO,SAASW,eAAeA,CAACC,UAAU,EAAE;EAC1C,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAE;IAC9B,IAAMb,OAAO,GAAGL,iBAAiB,CAAC,CAAC;IACnC,IAAMmB,UAAU,GAAGH,UAAU,CAACd,QAAQ,CAACgB,KAAK,EAAEb,OAAO,CAAC,EAAEA,OAAO,CAAC;IAChEN,cAAc,CAACM,OAAO,CAACK,GAAG,EAAEQ,KAAK,CAACE,WAAW,CAAC;IAC9CnB,gBAAgB,CAACkB,UAAU,CAACE,OAAO,EAAEH,KAAK,CAACI,aAAa,CAAC;IACzDnB,iBAAiB,CAACgB,UAAU,CAACE,OAAO,EAAEhB,OAAO,CAAC;IAC9C,OAAOc,UAAU;EACnB,CAAC;AACH"},"metadata":{},"sourceType":"module"}