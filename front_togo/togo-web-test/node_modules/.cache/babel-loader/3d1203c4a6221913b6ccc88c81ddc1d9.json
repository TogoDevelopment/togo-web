{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nimport { chakra, forwardRef, keyframes, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { usePrevious } from \"@chakra-ui/hooks\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar useIsFirstRender = function useIsFirstRender() {\n  var isFirstRender = React.useRef(true);\n  React.useEffect(function () {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n};\nexport var Skeleton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Skeleton\", props);\n  var isFirstRender = useIsFirstRender();\n  var _omitThemingProps = omitThemingProps(props),\n    isLoaded = _omitThemingProps.isLoaded,\n    fadeDuration = _omitThemingProps.fadeDuration,\n    className = _omitThemingProps.className,\n    rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"className\"]);\n  var wasPreviouslyLoaded = usePrevious(isLoaded);\n  var _className = cx(\"chakra-skeleton\", className);\n  if (isLoaded) {\n    var animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : fade + \" \" + fadeDuration + \"s\";\n    return /*#__PURE__*/React.createElement(chakra.div, _extends({\n      ref: ref,\n      className: _className,\n      __css: {\n        animation: animation\n      }\n    }, rest));\n  }\n  return /*#__PURE__*/React.createElement(StyledSkeleton, _extends({\n    ref: ref,\n    className: _className\n  }, rest, {\n    __css: styles\n  }));\n});\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8\n};\nif (__DEV__) {\n  Skeleton.displayName = \"Skeleton\";\n}\nfunction range(count) {\n  return Array(count).fill(1).map(function (_, index) {\n    return index + 1;\n  });\n}\nvar defaultNoOfLines = 3;\nexport var SkeletonText = function SkeletonText(props) {\n  var _props$noOfLines = props.noOfLines,\n    noOfLines = _props$noOfLines === void 0 ? defaultNoOfLines : _props$noOfLines,\n    _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n    _props$skeletonHeight = props.skeletonHeight,\n    skeletonHeight = _props$skeletonHeight === void 0 ? \"0.5rem\" : _props$skeletonHeight,\n    className = props.className,\n    startColor = props.startColor,\n    endColor = props.endColor,\n    isLoaded = props.isLoaded,\n    fadeDuration = props.fadeDuration,\n    speed = props.speed,\n    children = props.children,\n    rest = _objectWithoutPropertiesLoose(props, [\"noOfLines\", \"spacing\", \"skeletonHeight\", \"className\", \"startColor\", \"endColor\", \"isLoaded\", \"fadeDuration\", \"speed\", \"children\"]);\n  var noOfLinesValue = useBreakpointValue(typeof noOfLines === \"number\" ? [noOfLines] : noOfLines) || defaultNoOfLines;\n  var numbers = range(noOfLinesValue);\n  var getWidth = function getWidth(index) {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\";\n    }\n    return \"100%\";\n  };\n  var _className = cx(\"chakra-skeleton__group\", className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest), numbers.map(function (number, index) {\n    if (isLoaded && index > 0) {\n      // skip other lines\n      return null;\n    }\n    var sizeProps = isLoaded ? null : {\n      mb: number === numbers.length ? \"0\" : spacing,\n      width: getWidth(number),\n      height: skeletonHeight\n    };\n    return /*#__PURE__*/React.createElement(Skeleton, _extends({\n      key: numbers.length.toString() + number,\n      startColor: startColor,\n      endColor: endColor,\n      isLoaded: isLoaded,\n      fadeDuration: fadeDuration,\n      speed: speed\n    }, sizeProps),\n    // allows animating the children\n    index === 0 ? children : undefined);\n  }));\n};\nif (__DEV__) {\n  SkeletonText.displayName = \"SkeletonText\";\n}\nexport var SkeletonCircle = function SkeletonCircle(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? \"2rem\" : _ref$size,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"size\"]);\n  return /*#__PURE__*/React.createElement(Skeleton, _extends({\n    borderRadius: \"full\",\n    boxSize: size\n  }, rest));\n};\nif (__DEV__) {\n  SkeletonCircle.displayName = \"SkeletonCircle\";\n}","map":{"version":3,"names":["useBreakpointValue","chakra","forwardRef","keyframes","omitThemingProps","useStyleConfig","usePrevious","cx","__DEV__","React","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","fade","from","opacity","to","useIsFirstRender","isFirstRender","useRef","useEffect","current","Skeleton","props","ref","styles","_omitThemingProps","isLoaded","fadeDuration","className","rest","_objectWithoutPropertiesLoose","wasPreviouslyLoaded","_className","animation","createElement","div","_extends","__css","defaultProps","speed","displayName","range","count","Array","fill","map","_","index","defaultNoOfLines","SkeletonText","_props$noOfLines","noOfLines","_props$spacing","spacing","_props$skeletonHeight","skeletonHeight","startColor","endColor","children","noOfLinesValue","numbers","getWidth","length","number","sizeProps","mb","width","height","key","toString","undefined","SkeletonCircle","_ref","_ref$size","size","borderRadius","boxSize"],"sources":["../../src/skeleton.tsx"],"sourcesContent":["import { useBreakpointValue } from \"@chakra-ui/media-query\"\nimport {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { usePrevious } from \"@chakra-ui/hooks\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface SkeletonOptions {\n  /**\n   * The color at the animation start\n   */\n  startColor?: string\n  /**\n   * The color at the animation end\n   */\n  endColor?: string\n  /**\n   * If `true`, it'll render its children with a nice fade transition\n   */\n  isLoaded?: boolean\n  /**\n   * The animation speed in seconds\n   * @default\n   * 0.8\n   */\n  speed?: number\n  /**\n   * The fadeIn duration in seconds\n   *\n   * @default\n   * 0.4\n   */\n  fadeDuration?: number\n}\n\nconst StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\",\n    },\n  },\n})\n\nexport type ISkeleton = SkeletonOptions\n\nexport interface SkeletonProps\n  extends HTMLChakraProps<\"div\">,\n    SkeletonOptions,\n    ThemingProps<\"Skeleton\"> {}\n\nconst fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 },\n})\n\nconst useIsFirstRender = () => {\n  const isFirstRender = React.useRef(true)\n\n  React.useEffect(() => {\n    isFirstRender.current = false\n  }, [])\n\n  return isFirstRender.current\n}\n\nexport const Skeleton = forwardRef<SkeletonProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Skeleton\", props)\n  const isFirstRender = useIsFirstRender()\n\n  const {\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const wasPreviouslyLoaded = usePrevious(isLoaded)\n\n  const _className = cx(\"chakra-skeleton\", className)\n\n  if (isLoaded) {\n    const animation =\n      isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`\n\n    return (\n      <chakra.div\n        ref={ref}\n        className={_className}\n        __css={{ animation }}\n        {...rest}\n      />\n    )\n  }\n\n  return (\n    <StyledSkeleton ref={ref} className={_className} {...rest} __css={styles} />\n  )\n})\n\nSkeleton.defaultProps = {\n  fadeDuration: 0.4,\n  speed: 0.8,\n}\n\nif (__DEV__) {\n  Skeleton.displayName = \"Skeleton\"\n}\n\nfunction range(count: number) {\n  return Array(count)\n    .fill(1)\n    .map((_, index) => index + 1)\n}\n\nexport interface SkeletonTextProps extends SkeletonProps {\n  spacing?: SkeletonProps[\"margin\"]\n  skeletonHeight?: SkeletonProps[\"height\"]\n  startColor?: SkeletonProps[\"startColor\"]\n  endColor?: SkeletonProps[\"endColor\"]\n  isLoaded?: SkeletonProps[\"isLoaded\"]\n}\n\nconst defaultNoOfLines = 3\n\nexport const SkeletonText: React.FC<SkeletonTextProps> = (props) => {\n  const {\n    noOfLines = defaultNoOfLines,\n    spacing = \"0.5rem\",\n    skeletonHeight = \"0.5rem\",\n    className,\n    startColor,\n    endColor,\n    isLoaded,\n    fadeDuration,\n    speed,\n    children,\n    ...rest\n  } = props\n\n  const noOfLinesValue =\n    useBreakpointValue(\n      typeof noOfLines === \"number\" ? [noOfLines] : noOfLines,\n    ) || defaultNoOfLines\n  const numbers = range(noOfLinesValue)\n\n  const getWidth = (index: number) => {\n    if (noOfLinesValue > 1) {\n      return index === numbers.length ? \"80%\" : \"100%\"\n    }\n    return \"100%\"\n  }\n\n  const _className = cx(\"chakra-skeleton__group\", className)\n\n  return (\n    <chakra.div className={_className} {...rest}>\n      {numbers.map((number, index) => {\n        if (isLoaded && index > 0) {\n          // skip other lines\n          return null\n        }\n\n        const sizeProps = isLoaded\n          ? null\n          : {\n              mb: number === numbers.length ? \"0\" : spacing,\n              width: getWidth(number),\n              height: skeletonHeight,\n            }\n\n        return (\n          <Skeleton\n            key={numbers.length.toString() + number}\n            startColor={startColor}\n            endColor={endColor}\n            isLoaded={isLoaded}\n            fadeDuration={fadeDuration}\n            speed={speed}\n            {...sizeProps}\n          >\n            {\n              // allows animating the children\n              index === 0 ? children : undefined\n            }\n          </Skeleton>\n        )\n      })}\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  SkeletonText.displayName = \"SkeletonText\"\n}\n\nexport const SkeletonCircle: React.FC<SkeletonProps> = ({\n  size = \"2rem\",\n  ...rest\n}) => <Skeleton borderRadius=\"full\" boxSize={size} {...rest} />\n\nif (__DEV__) {\n  SkeletonCircle.displayName = \"SkeletonCircle\"\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}