{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { apiUrl } from \"../Constants/GeneralCont\";\nimport { getUserCreditialParams } from \"../components/UserManager/UserManager\";\n\nvar axios = require(\"axios\");\n\nexport var getBusinessTypes = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var params;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            params = getUserCreditialParams();\n            params.append(\"CheckTypeFunction\", \"ClientProfileGetTypeWork\");\n            return _context.abrupt(\"return\", axios.post(apiUrl, params));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getBusinessTypes() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var setClientBusiness = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var BusinessName, BusinessPlace, BusinessTypeId, params;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            BusinessName = _ref2.BusinessName, BusinessPlace = _ref2.BusinessPlace, BusinessTypeId = _ref2.BusinessTypeId;\n            params = getUserCreditialParams();\n            params.append(\"CheckTypeFunction\", \"ClientProfileEditWorkInfo\");\n            params.append(\"WorkName\", BusinessName);\n            params.append(\"WorkPlace\", BusinessPlace);\n            params.append(\"WorkTypeId\", BusinessTypeId);\n            return _context2.abrupt(\"return\", axios.post(apiUrl, params));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function setClientBusiness(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateTransporterBusniessLocationAPI = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, action) {\n    var params;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            params = getUserCreditialParams();\n            params.append(\"CheckTypeFunction\", \"TransporterUpdateProfileCityinfo\");\n            params.append(\"CityId\", id);\n            params.append(\"CheckAction\", action);\n            return _context3.abrupt(\"return\", axios.post(apiUrl, params));\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function updateTransporterBusniessLocationAPI(_x2, _x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getWallet = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var params;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            params = getUserCreditialParams();\n            params.append(\"CheckTypeFunction\", \"GetBalanceTransporter\");\n            return _context4.abrupt(\"return\", axios.post(apiUrl, params));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getWallet() {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/system/togo-web-test/src/APIs/ProfileAPIs.js"],"names":["apiUrl","getUserCreditialParams","axios","require","getBusinessTypes","params","append","post","setClientBusiness","BusinessName","BusinessPlace","BusinessTypeId","updateTransporterBusniessLocationAPI","id","action","getWallet"],"mappings":";;AAAA,SAAQA,MAAR,QAAqB,0BAArB;AACA,SAAQC,sBAAR,QAAqC,uCAArC;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,OAAO,IAAMC,gBAAgB;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,MADwB,GACfJ,sBAAsB,EADP;AAE5BI,YAAAA,MAAM,CAACC,MAAP,CAAc,mBAAd,EAAmC,0BAAnC;AAF4B,6CAGrBJ,KAAK,CAACK,IAAN,CAAWP,MAAX,EAAmBK,MAAnB,CAHqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBD,gBAAgB;AAAA;AAAA;AAAA,GAAtB;AAMP,OAAO,IAAMI,iBAAiB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,YAAAA,YAAR,SAAQA,YAAR,EAAsBC,aAAtB,SAAsBA,aAAtB,EAAqCC,cAArC,SAAqCA,cAArC;AACzBN,YAAAA,MADyB,GAChBJ,sBAAsB,EADN;AAE7BI,YAAAA,MAAM,CAACC,MAAP,CAAc,mBAAd,EAAmC,2BAAnC;AACAD,YAAAA,MAAM,CAACC,MAAP,CAAc,UAAd,EAA0BG,YAA1B;AACAJ,YAAAA,MAAM,CAACC,MAAP,CAAc,WAAd,EAA2BI,aAA3B;AACAL,YAAAA,MAAM,CAACC,MAAP,CAAc,YAAd,EAA4BK,cAA5B;AAL6B,8CAMtBT,KAAK,CAACK,IAAN,CAAWP,MAAX,EAAmBK,MAAnB,CANsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBG,iBAAiB;AAAA;AAAA;AAAA,GAAvB;AASP,OAAO,IAAMI,oCAAoC;AAAA,uEAAG,kBAAOC,EAAP,EAAWC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5CT,YAAAA,MAD4C,GACnCJ,sBAAsB,EADa;AAEhDI,YAAAA,MAAM,CAACC,MAAP,CAAc,mBAAd,EAAmC,kCAAnC;AACAD,YAAAA,MAAM,CAACC,MAAP,CAAc,QAAd,EAAwBO,EAAxB;AACAR,YAAAA,MAAM,CAACC,MAAP,CAAc,aAAd,EAA6BQ,MAA7B;AAJgD,8CAKzCZ,KAAK,CAACK,IAAN,CAAWP,MAAX,EAAmBK,MAAnB,CALyC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApCO,oCAAoC;AAAA;AAAA;AAAA,GAA1C;AAQP,OAAO,IAAMG,SAAS;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBV,YAAAA,MADiB,GACRJ,sBAAsB,EADd;AAErBI,YAAAA,MAAM,CAACC,MAAP,CAAc,mBAAd,EAAmC,uBAAnC;AAFqB,8CAGdJ,KAAK,CAACK,IAAN,CAAWP,MAAX,EAAmBK,MAAnB,CAHc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATU,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import {apiUrl} from \"../Constants/GeneralCont\";\r\nimport {getUserCreditialParams} from \"../components/UserManager/UserManager\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nexport const getBusinessTypes = async () => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"ClientProfileGetTypeWork\");\r\n    return axios.post(apiUrl, params);\r\n};\r\n\r\nexport const setClientBusiness = async ({BusinessName, BusinessPlace, BusinessTypeId}) => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"ClientProfileEditWorkInfo\");\r\n    params.append(\"WorkName\", BusinessName);\r\n    params.append(\"WorkPlace\", BusinessPlace);\r\n    params.append(\"WorkTypeId\", BusinessTypeId);\r\n    return axios.post(apiUrl, params);\r\n};\r\n\r\nexport const updateTransporterBusniessLocationAPI = async (id, action) => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"TransporterUpdateProfileCityinfo\");\r\n    params.append(\"CityId\", id);\r\n    params.append(\"CheckAction\", action);\r\n    return axios.post(apiUrl, params);\r\n};\r\n\r\nexport const getWallet = async () => {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"GetBalanceTransporter\");\r\n    return axios.post(apiUrl, params);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}