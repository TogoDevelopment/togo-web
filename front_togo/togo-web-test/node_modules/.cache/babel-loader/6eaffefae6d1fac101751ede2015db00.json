{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createClass from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\n\nvar _ERROR_DESCRIPTION_MA, _ERROR_MAP;\n\nimport { registerVersion, _registerComponent, _getProvider, getApp } from 'https://www.gstatic.com/firebasejs/9.9.1/firebase-app.js';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\n\nfunction isIndexedDBAvailable() {\n  return typeof indexedDB === 'object';\n}\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\n\n\nfunction validateIndexedDBOpenable() {\n  return new Promise(function (resolve, reject) {\n    try {\n      var preExist = true;\n      var DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\n      var request = self.indexedDB.open(DB_CHECK_NAME);\n\n      request.onsuccess = function () {\n        request.result.close(); // delete database only when it doesn't pre-exist\n\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n\n        resolve(true);\n      };\n\n      request.onupgradeneeded = function () {\n        preExist = false;\n      };\n\n      request.onerror = function () {\n        var _a;\n\n        reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\n\n\nfunction areCookiesEnabled() {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n\n  return true;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\n\n\nvar ERROR_NAME = 'FirebaseError'; // Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\n\nvar FirebaseError = /*#__PURE__*/function (_Error) {\n  _inherits(FirebaseError, _Error);\n\n  var _super = _createSuper(FirebaseError);\n\n  function FirebaseError(\n  /** The error code for this error. */\n  code, message,\n  /** Custom data for this error. */\n  customData) {\n    var _this;\n\n    _classCallCheck(this, FirebaseError);\n\n    _this = _super.call(this, message);\n    _this.code = code;\n    _this.customData = customData;\n    /** The custom name for all FirebaseErrors. */\n\n    _this.name = ERROR_NAME; // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), FirebaseError.prototype); // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), ErrorFactory.prototype.create);\n    }\n\n    return _this;\n  }\n\n  return FirebaseError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ErrorFactory = /*#__PURE__*/function () {\n  function ErrorFactory(service, serviceName, errors) {\n    _classCallCheck(this, ErrorFactory);\n\n    this.service = service;\n    this.serviceName = serviceName;\n    this.errors = errors;\n  }\n\n  _createClass(ErrorFactory, [{\n    key: \"create\",\n    value: function create(code) {\n      var customData = (arguments.length <= 1 ? undefined : arguments[1]) || {};\n      var fullCode = \"\".concat(this.service, \"/\").concat(code);\n      var template = this.errors[code];\n      var message = template ? replaceTemplate(template, customData) : 'Error'; // Service Name: Error message (service/code).\n\n      var fullMessage = \"\".concat(this.serviceName, \": \").concat(message, \" (\").concat(fullCode, \").\");\n      var error = new FirebaseError(fullCode, fullMessage, customData);\n      return error;\n    }\n  }]);\n\n  return ErrorFactory;\n}();\n\nfunction replaceTemplate(template, data) {\n  return template.replace(PATTERN, function (_, key) {\n    var value = data[key];\n    return value != null ? String(value) : \"<\".concat(key, \"?>\");\n  });\n}\n\nvar PATTERN = /\\{\\$([^}]+)}/g;\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction getModularInstance(service) {\n  if (service && service._delegate) {\n    return service._delegate;\n  } else {\n    return service;\n  }\n}\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\n\n\nvar Component = /*#__PURE__*/function () {\n  /**\r\n   *\r\n   * @param name The public service name, e.g. app, auth, firestore, database\r\n   * @param instanceFactory Service factory responsible for creating the public interface\r\n   * @param type whether the service provided by the component is public or private\r\n   */\n  function Component(name, instanceFactory, type) {\n    _classCallCheck(this, Component);\n\n    this.name = name;\n    this.instanceFactory = instanceFactory;\n    this.type = type;\n    this.multipleInstances = false;\n    /**\r\n     * Properties to be added to the service namespace\r\n     */\n\n    this.serviceProps = {};\n    this.instantiationMode = \"LAZY\"\n    /* LAZY */\n    ;\n    this.onInstanceCreated = null;\n  }\n\n  _createClass(Component, [{\n    key: \"setInstantiationMode\",\n    value: function setInstantiationMode(mode) {\n      this.instantiationMode = mode;\n      return this;\n    }\n  }, {\n    key: \"setMultipleInstances\",\n    value: function setMultipleInstances(multipleInstances) {\n      this.multipleInstances = multipleInstances;\n      return this;\n    }\n  }, {\n    key: \"setServiceProps\",\n    value: function setServiceProps(props) {\n      this.serviceProps = props;\n      return this;\n    }\n  }, {\n    key: \"setInstanceCreatedCallback\",\n    value: function setInstanceCreatedCallback(callback) {\n      this.onInstanceCreated = callback;\n      return this;\n    }\n  }]);\n\n  return Component;\n}();\n\nvar instanceOfAny = function instanceOfAny(object, constructors) {\n  return constructors.some(function (c) {\n    return object instanceof c;\n  });\n};\n\nvar idbProxyableTypes;\nvar cursorAdvanceMethods; // This is a function to prevent it throwing up in node environments.\n\nfunction getIdbProxyableTypes() {\n  return idbProxyableTypes || (idbProxyableTypes = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction]);\n} // This is a function to prevent it throwing up in node environments.\n\n\nfunction getCursorAdvanceMethods() {\n  return cursorAdvanceMethods || (cursorAdvanceMethods = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey]);\n}\n\nvar cursorRequestMap = new WeakMap();\nvar transactionDoneMap = new WeakMap();\nvar transactionStoreNamesMap = new WeakMap();\nvar transformCache = new WeakMap();\nvar reverseTransformCache = new WeakMap();\n\nfunction promisifyRequest(request) {\n  var promise = new Promise(function (resolve, reject) {\n    var unlisten = function unlisten() {\n      request.removeEventListener('success', success);\n      request.removeEventListener('error', error);\n    };\n\n    var success = function success() {\n      resolve(wrap(request.result));\n      unlisten();\n    };\n\n    var error = function error() {\n      reject(request.error);\n      unlisten();\n    };\n\n    request.addEventListener('success', success);\n    request.addEventListener('error', error);\n  });\n  promise.then(function (value) {\n    // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n    // (see wrapFunction).\n    if (value instanceof IDBCursor) {\n      cursorRequestMap.set(value, request);\n    } // Catching to avoid \"Uncaught Promise exceptions\"\n\n  }).catch(function () {}); // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n  // is because we create many promises from a single IDBRequest.\n\n  reverseTransformCache.set(promise, request);\n  return promise;\n}\n\nfunction cacheDonePromiseForTransaction(tx) {\n  // Early bail if we've already created a done promise for this transaction.\n  if (transactionDoneMap.has(tx)) return;\n  var done = new Promise(function (resolve, reject) {\n    var unlisten = function unlisten() {\n      tx.removeEventListener('complete', complete);\n      tx.removeEventListener('error', error);\n      tx.removeEventListener('abort', error);\n    };\n\n    var complete = function complete() {\n      resolve();\n      unlisten();\n    };\n\n    var error = function error() {\n      reject(tx.error || new DOMException('AbortError', 'AbortError'));\n      unlisten();\n    };\n\n    tx.addEventListener('complete', complete);\n    tx.addEventListener('error', error);\n    tx.addEventListener('abort', error);\n  }); // Cache it for later retrieval.\n\n  transactionDoneMap.set(tx, done);\n}\n\nvar idbProxyTraps = {\n  get: function get(target, prop, receiver) {\n    if (target instanceof IDBTransaction) {\n      // Special handling for transaction.done.\n      if (prop === 'done') return transactionDoneMap.get(target); // Polyfill for objectStoreNames because of Edge.\n\n      if (prop === 'objectStoreNames') {\n        return target.objectStoreNames || transactionStoreNamesMap.get(target);\n      } // Make tx.store return the only store in the transaction, or undefined if there are many.\n\n\n      if (prop === 'store') {\n        return receiver.objectStoreNames[1] ? undefined : receiver.objectStore(receiver.objectStoreNames[0]);\n      }\n    } // Else transform whatever we get back.\n\n\n    return wrap(target[prop]);\n  },\n  set: function set(target, prop, value) {\n    target[prop] = value;\n    return true;\n  },\n  has: function has(target, prop) {\n    if (target instanceof IDBTransaction && (prop === 'done' || prop === 'store')) {\n      return true;\n    }\n\n    return prop in target;\n  }\n};\n\nfunction replaceTraps(callback) {\n  idbProxyTraps = callback(idbProxyTraps);\n}\n\nfunction wrapFunction(func) {\n  // Due to expected object equality (which is enforced by the caching in `wrap`), we\n  // only create one new func per func.\n  // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n  if (func === IDBDatabase.prototype.transaction && !('objectStoreNames' in IDBTransaction.prototype)) {\n    return function (storeNames) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var tx = func.call.apply(func, [unwrap(this), storeNames].concat(args));\n      transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n      return wrap(tx);\n    };\n  } // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n  // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n  // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n  // with real promises, so each advance methods returns a new promise for the cursor object, or\n  // undefined if the end of the cursor has been reached.\n\n\n  if (getCursorAdvanceMethods().includes(func)) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n      // the original object.\n      func.apply(unwrap(this), args);\n      return wrap(cursorRequestMap.get(this));\n    };\n  }\n\n  return function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n    // the original object.\n    return wrap(func.apply(unwrap(this), args));\n  };\n}\n\nfunction transformCachableValue(value) {\n  if (typeof value === 'function') return wrapFunction(value); // This doesn't return, it just creates a 'done' promise for the transaction,\n  // which is later returned for transaction.done (see idbObjectHandler).\n\n  if (value instanceof IDBTransaction) cacheDonePromiseForTransaction(value);\n  if (instanceOfAny(value, getIdbProxyableTypes())) return new Proxy(value, idbProxyTraps); // Return the same value back if we're not going to transform it.\n\n  return value;\n}\n\nfunction wrap(value) {\n  // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n  // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n  if (value instanceof IDBRequest) return promisifyRequest(value); // If we've already transformed this value before, reuse the transformed value.\n  // This is faster, but it also provides object equality.\n\n  if (transformCache.has(value)) return transformCache.get(value);\n  var newValue = transformCachableValue(value); // Not all types are transformed.\n  // These may be primitive types, so they can't be WeakMap keys.\n\n  if (newValue !== value) {\n    transformCache.set(value, newValue);\n    reverseTransformCache.set(newValue, value);\n  }\n\n  return newValue;\n}\n\nvar unwrap = function unwrap(value) {\n  return reverseTransformCache.get(value);\n};\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\n\n\nfunction openDB(name, version) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      blocked = _ref.blocked,\n      upgrade = _ref.upgrade,\n      blocking = _ref.blocking,\n      terminated = _ref.terminated;\n\n  var request = indexedDB.open(name, version);\n  var openPromise = wrap(request);\n\n  if (upgrade) {\n    request.addEventListener('upgradeneeded', function (event) {\n      upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n    });\n  }\n\n  if (blocked) request.addEventListener('blocked', function () {\n    return blocked();\n  });\n  openPromise.then(function (db) {\n    if (terminated) db.addEventListener('close', function () {\n      return terminated();\n    });\n    if (blocking) db.addEventListener('versionchange', function () {\n      return blocking();\n    });\n  }).catch(function () {});\n  return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\n\n\nfunction deleteDB(name) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      blocked = _ref2.blocked;\n\n  var request = indexedDB.deleteDatabase(name);\n  if (blocked) request.addEventListener('blocked', function () {\n    return blocked();\n  });\n  return wrap(request).then(function () {\n    return undefined;\n  });\n}\n\nvar readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nvar writeMethods = ['put', 'add', 'delete', 'clear'];\nvar cachedMethods = new Map();\n\nfunction getMethod(target, prop) {\n  if (!(target instanceof IDBDatabase && !(prop in target) && typeof prop === 'string')) {\n    return;\n  }\n\n  if (cachedMethods.get(prop)) return cachedMethods.get(prop);\n  var targetFuncName = prop.replace(/FromIndex$/, '');\n  var useIndex = prop !== targetFuncName;\n  var isWrite = writeMethods.includes(targetFuncName);\n\n  if ( // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n  !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) || !(isWrite || readMethods.includes(targetFuncName))) {\n    return;\n  }\n\n  var method = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(storeName) {\n      var _target;\n\n      var tx,\n          target,\n          _len4,\n          args,\n          _key4,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n              tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n              target = tx.store;\n\n              for (_len4 = _args.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n                args[_key4 - 1] = _args[_key4];\n              }\n\n              if (useIndex) target = target.index(args.shift()); // Must reject if op rejects.\n              // If it's a write operation, must reject if tx.done rejects.\n              // Must reject with op rejection first.\n              // Must resolve with op value.\n              // Must handle both promises (no unhandled rejections)\n\n              _context.next = 6;\n              return Promise.all([(_target = target)[targetFuncName].apply(_target, args), isWrite && tx.done]);\n\n            case 6:\n              return _context.abrupt(\"return\", _context.sent[0]);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function method(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  cachedMethods.set(prop, method);\n  return method;\n}\n\nreplaceTraps(function (oldTraps) {\n  return _objectSpread(_objectSpread({}, oldTraps), {}, {\n    get: function get(target, prop, receiver) {\n      return getMethod(target, prop) || oldTraps.get(target, prop, receiver);\n    },\n    has: function has(target, prop) {\n      return !!getMethod(target, prop) || oldTraps.has(target, prop);\n    }\n  });\n});\nvar name$1 = \"@firebase/installations\";\nvar version$1 = \"0.5.12\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PENDING_TIMEOUT_MS = 10000;\nvar PACKAGE_VERSION = \"w:\".concat(version$1);\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nvar SERVICE = 'installations';\nvar SERVICE_NAME = 'Installations';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar ERROR_DESCRIPTION_MAP = (_ERROR_DESCRIPTION_MA = {}, _defineProperty(_ERROR_DESCRIPTION_MA, \"missing-app-config-values\"\n/* MISSING_APP_CONFIG_VALUES */\n, 'Missing App configuration value: \"{$valueName}\"'), _defineProperty(_ERROR_DESCRIPTION_MA, \"not-registered\"\n/* NOT_REGISTERED */\n, 'Firebase Installation is not registered.'), _defineProperty(_ERROR_DESCRIPTION_MA, \"installation-not-found\"\n/* INSTALLATION_NOT_FOUND */\n, 'Firebase Installation not found.'), _defineProperty(_ERROR_DESCRIPTION_MA, \"request-failed\"\n/* REQUEST_FAILED */\n, '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"'), _defineProperty(_ERROR_DESCRIPTION_MA, \"app-offline\"\n/* APP_OFFLINE */\n, 'Could not process request. Application offline.'), _defineProperty(_ERROR_DESCRIPTION_MA, \"delete-pending-registration\"\n/* DELETE_PENDING_REGISTRATION */\n, \"Can't delete installation while there is a pending registration request.\"), _ERROR_DESCRIPTION_MA);\nvar ERROR_FACTORY$1 = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\n\nfunction isServerError(error) {\n  return error instanceof FirebaseError && error.code.includes(\"request-failed\"\n  /* REQUEST_FAILED */\n  );\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getInstallationsEndpoint(_ref4) {\n  var projectId = _ref4.projectId;\n  return \"\".concat(INSTALLATIONS_API_URL, \"/projects/\").concat(projectId, \"/installations\");\n}\n\nfunction extractAuthTokenInfoFromResponse(response) {\n  return {\n    token: response.token,\n    requestStatus: 2\n    /* COMPLETED */\n    ,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nfunction getErrorFromResponse(_x2, _x3) {\n  return _getErrorFromResponse.apply(this, arguments);\n}\n\nfunction _getErrorFromResponse() {\n  _getErrorFromResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(requestName, response) {\n    var responseJson, errorData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return response.json();\n\n          case 2:\n            responseJson = _context2.sent;\n            errorData = responseJson.error;\n            return _context2.abrupt(\"return\", ERROR_FACTORY$1.create(\"request-failed\"\n            /* REQUEST_FAILED */\n            , {\n              requestName: requestName,\n              serverCode: errorData.code,\n              serverMessage: errorData.message,\n              serverStatus: errorData.status\n            }));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getErrorFromResponse.apply(this, arguments);\n}\n\nfunction getHeaders$1(_ref5) {\n  var apiKey = _ref5.apiKey;\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nfunction getHeadersWithAuth(appConfig, _ref6) {\n  var refreshToken = _ref6.refreshToken;\n  var headers = getHeaders$1(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\n\n\nfunction retryIfServerError(_x4) {\n  return _retryIfServerError.apply(this, arguments);\n}\n\nfunction _retryIfServerError() {\n  _retryIfServerError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(fn) {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fn();\n\n          case 2:\n            result = _context3.sent;\n\n            if (!(result.status >= 500 && result.status < 600)) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", fn());\n\n          case 5:\n            return _context3.abrupt(\"return\", result);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _retryIfServerError.apply(this, arguments);\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken) {\n  return \"\".concat(INTERNAL_AUTH_VERSION, \" \").concat(refreshToken);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction createInstallationRequest(_x5, _x6) {\n  return _createInstallationRequest.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Returns a promise that resolves after given time passes. */\n\n\nfunction _createInstallationRequest() {\n  _createInstallationRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref7, _ref8) {\n    var appConfig, heartbeatServiceProvider, fid, endpoint, headers, heartbeatService, heartbeatsHeader, body, request, response, responseValue, registeredInstallationEntry;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            appConfig = _ref7.appConfig, heartbeatServiceProvider = _ref7.heartbeatServiceProvider;\n            fid = _ref8.fid;\n            endpoint = getInstallationsEndpoint(appConfig);\n            headers = getHeaders$1(appConfig); // If heartbeat service exists, add the heartbeat string to the header.\n\n            heartbeatService = heartbeatServiceProvider.getImmediate({\n              optional: true\n            });\n\n            if (!heartbeatService) {\n              _context4.next = 10;\n              break;\n            }\n\n            _context4.next = 8;\n            return heartbeatService.getHeartbeatsHeader();\n\n          case 8:\n            heartbeatsHeader = _context4.sent;\n\n            if (heartbeatsHeader) {\n              headers.append('x-firebase-client', heartbeatsHeader);\n            }\n\n          case 10:\n            body = {\n              fid: fid,\n              authVersion: INTERNAL_AUTH_VERSION,\n              appId: appConfig.appId,\n              sdkVersion: PACKAGE_VERSION\n            };\n            request = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context4.next = 14;\n            return retryIfServerError(function () {\n              return fetch(endpoint, request);\n            });\n\n          case 14:\n            response = _context4.sent;\n\n            if (!response.ok) {\n              _context4.next = 23;\n              break;\n            }\n\n            _context4.next = 18;\n            return response.json();\n\n          case 18:\n            responseValue = _context4.sent;\n            registeredInstallationEntry = {\n              fid: responseValue.fid || fid,\n              registrationStatus: 2\n              /* COMPLETED */\n              ,\n              refreshToken: responseValue.refreshToken,\n              authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n            };\n            return _context4.abrupt(\"return\", registeredInstallationEntry);\n\n          case 23:\n            _context4.next = 25;\n            return getErrorFromResponse('Create Installation', response);\n\n          case 25:\n            throw _context4.sent;\n\n          case 26:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _createInstallationRequest.apply(this, arguments);\n}\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction bufferToBase64UrlSafe(array) {\n  var b64 = btoa(String.fromCharCode.apply(String, _toConsumableArray(array)));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nvar INVALID_FID = '';\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\n\nfunction generateFid() {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    var fidByteArray = new Uint8Array(17);\n    var crypto = self.crypto || self.msCrypto;\n    crypto.getRandomValues(fidByteArray); // Replace the first 4 random bits with the constant FID header of 0b0111.\n\n    fidByteArray[0] = 112 + fidByteArray[0] % 16;\n    var fid = encode(fidByteArray);\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch (_a) {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\n\n\nfunction encode(fidByteArray) {\n  var b64String = bufferToBase64UrlSafe(fidByteArray); // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n\n  return b64String.substr(0, 22);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Returns a string key that can be used to identify the app. */\n\n\nfunction getKey$1(appConfig) {\n  return \"\".concat(appConfig.appName, \"!\").concat(appConfig.appId);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar fidChangeCallbacks = new Map();\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\n\nfunction fidChanged(appConfig, fid) {\n  var key = getKey$1(appConfig);\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nfunction callFidChangeCallbacks(key, fid) {\n  var callbacks = fidChangeCallbacks.get(key);\n\n  if (!callbacks) {\n    return;\n  }\n\n  var _iterator = _createForOfIteratorHelper(callbacks),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var callback = _step.value;\n      callback(fid);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction broadcastFidChange(key, fid) {\n  var channel = getBroadcastChannel();\n\n  if (channel) {\n    channel.postMessage({\n      key: key,\n      fid: fid\n    });\n  }\n\n  closeBroadcastChannel();\n}\n\nvar broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\n\nfunction getBroadcastChannel() {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n\n    broadcastChannel.onmessage = function (e) {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel() {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DATABASE_NAME$1 = 'firebase-installations-database';\nvar DATABASE_VERSION$1 = 1;\nvar OBJECT_STORE_NAME$1 = 'firebase-installations-store';\nvar dbPromise$1 = null;\n\nfunction getDbPromise$1() {\n  if (!dbPromise$1) {\n    dbPromise$1 = openDB(DATABASE_NAME$1, DATABASE_VERSION$1, {\n      upgrade: function upgrade(db, oldVersion) {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME$1);\n        }\n      }\n    });\n  }\n\n  return dbPromise$1;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\n\n\nfunction set(_x7, _x8) {\n  return _set.apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\n\n\nfunction _set() {\n  _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(appConfig, value) {\n    var key, db, tx, objectStore, oldValue;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            key = getKey$1(appConfig);\n            _context5.next = 3;\n            return getDbPromise$1();\n\n          case 3:\n            db = _context5.sent;\n            tx = db.transaction(OBJECT_STORE_NAME$1, 'readwrite');\n            objectStore = tx.objectStore(OBJECT_STORE_NAME$1);\n            _context5.next = 8;\n            return objectStore.get(key);\n\n          case 8:\n            oldValue = _context5.sent;\n            _context5.next = 11;\n            return objectStore.put(value, key);\n\n          case 11:\n            _context5.next = 13;\n            return tx.done;\n\n          case 13:\n            if (!oldValue || oldValue.fid !== value.fid) {\n              fidChanged(appConfig, value.fid);\n            }\n\n            return _context5.abrupt(\"return\", value);\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _set.apply(this, arguments);\n}\n\nfunction remove(_x9) {\n  return _remove.apply(this, arguments);\n}\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\n\n\nfunction _remove() {\n  _remove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(appConfig) {\n    var key, db, tx;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            key = getKey$1(appConfig);\n            _context6.next = 3;\n            return getDbPromise$1();\n\n          case 3:\n            db = _context6.sent;\n            tx = db.transaction(OBJECT_STORE_NAME$1, 'readwrite');\n            _context6.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME$1).delete(key);\n\n          case 7:\n            _context6.next = 9;\n            return tx.done;\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _remove.apply(this, arguments);\n}\n\nfunction update(_x10, _x11) {\n  return _update.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\n\n\nfunction _update() {\n  _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(appConfig, updateFn) {\n    var key, db, tx, store, oldValue, newValue;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            key = getKey$1(appConfig);\n            _context7.next = 3;\n            return getDbPromise$1();\n\n          case 3:\n            db = _context7.sent;\n            tx = db.transaction(OBJECT_STORE_NAME$1, 'readwrite');\n            store = tx.objectStore(OBJECT_STORE_NAME$1);\n            _context7.next = 8;\n            return store.get(key);\n\n          case 8:\n            oldValue = _context7.sent;\n            newValue = updateFn(oldValue);\n\n            if (!(newValue === undefined)) {\n              _context7.next = 15;\n              break;\n            }\n\n            _context7.next = 13;\n            return store.delete(key);\n\n          case 13:\n            _context7.next = 17;\n            break;\n\n          case 15:\n            _context7.next = 17;\n            return store.put(newValue, key);\n\n          case 17:\n            _context7.next = 19;\n            return tx.done;\n\n          case 19:\n            if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n              fidChanged(appConfig, newValue.fid);\n            }\n\n            return _context7.abrupt(\"return\", newValue);\n\n          case 21:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _update.apply(this, arguments);\n}\n\nfunction getInstallationEntry(_x12) {\n  return _getInstallationEntry.apply(this, arguments);\n}\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\n\n\nfunction _getInstallationEntry() {\n  _getInstallationEntry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(installations) {\n    var registrationPromise, installationEntry;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return update(installations.appConfig, function (oldEntry) {\n              var installationEntry = updateOrCreateInstallationEntry(oldEntry);\n              var entryWithPromise = triggerRegistrationIfNecessary(installations, installationEntry);\n              registrationPromise = entryWithPromise.registrationPromise;\n              return entryWithPromise.installationEntry;\n            });\n\n          case 2:\n            installationEntry = _context8.sent;\n\n            if (!(installationEntry.fid === INVALID_FID)) {\n              _context8.next = 8;\n              break;\n            }\n\n            _context8.next = 6;\n            return registrationPromise;\n\n          case 6:\n            _context8.t0 = _context8.sent;\n            return _context8.abrupt(\"return\", {\n              installationEntry: _context8.t0\n            });\n\n          case 8:\n            return _context8.abrupt(\"return\", {\n              installationEntry: installationEntry,\n              registrationPromise: registrationPromise\n            });\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _getInstallationEntry.apply(this, arguments);\n}\n\nfunction updateOrCreateInstallationEntry(oldEntry) {\n  var entry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: 0\n    /* NOT_STARTED */\n\n  };\n  return clearTimedOutRequest(entry);\n}\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\n\n\nfunction triggerRegistrationIfNecessary(installations, installationEntry) {\n  if (installationEntry.registrationStatus === 0\n  /* NOT_STARTED */\n  ) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      var registrationPromiseWithError = Promise.reject(ERROR_FACTORY$1.create(\"app-offline\"\n      /* APP_OFFLINE */\n      ));\n      return {\n        installationEntry: installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    } // Try registering. Change status to IN_PROGRESS.\n\n\n    var inProgressEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: 1\n      /* IN_PROGRESS */\n      ,\n      registrationTime: Date.now()\n    };\n    var registrationPromise = registerInstallation(installations, inProgressEntry);\n    return {\n      installationEntry: inProgressEntry,\n      registrationPromise: registrationPromise\n    };\n  } else if (installationEntry.registrationStatus === 1\n  /* IN_PROGRESS */\n  ) {\n    return {\n      installationEntry: installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return {\n      installationEntry: installationEntry\n    };\n  }\n}\n/** This will be executed only once for each new Firebase Installation. */\n\n\nfunction registerInstallation(_x13, _x14) {\n  return _registerInstallation.apply(this, arguments);\n}\n/** Call if FID registration is pending in another request. */\n\n\nfunction _registerInstallation() {\n  _registerInstallation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(installations, installationEntry) {\n    var registeredInstallationEntry;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return createInstallationRequest(installations, installationEntry);\n\n          case 3:\n            registeredInstallationEntry = _context9.sent;\n            return _context9.abrupt(\"return\", set(installations.appConfig, registeredInstallationEntry));\n\n          case 7:\n            _context9.prev = 7;\n            _context9.t0 = _context9[\"catch\"](0);\n\n            if (!(isServerError(_context9.t0) && _context9.t0.customData.serverCode === 409)) {\n              _context9.next = 14;\n              break;\n            }\n\n            _context9.next = 12;\n            return remove(installations.appConfig);\n\n          case 12:\n            _context9.next = 16;\n            break;\n\n          case 14:\n            _context9.next = 16;\n            return set(installations.appConfig, {\n              fid: installationEntry.fid,\n              registrationStatus: 0\n              /* NOT_STARTED */\n\n            });\n\n          case 16:\n            throw _context9.t0;\n\n          case 17:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 7]]);\n  }));\n  return _registerInstallation.apply(this, arguments);\n}\n\nfunction waitUntilFidRegistration(_x15) {\n  return _waitUntilFidRegistration.apply(this, arguments);\n}\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\n\n\nfunction _waitUntilFidRegistration() {\n  _waitUntilFidRegistration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(installations) {\n    var entry, _yield$getInstallatio, installationEntry, registrationPromise;\n\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return updateInstallationRequest(installations.appConfig);\n\n          case 2:\n            entry = _context10.sent;\n\n          case 3:\n            if (!(entry.registrationStatus === 1\n            /* IN_PROGRESS */\n            )) {\n              _context10.next = 11;\n              break;\n            }\n\n            _context10.next = 6;\n            return sleep(100);\n\n          case 6:\n            _context10.next = 8;\n            return updateInstallationRequest(installations.appConfig);\n\n          case 8:\n            entry = _context10.sent;\n            _context10.next = 3;\n            break;\n\n          case 11:\n            if (!(entry.registrationStatus === 0\n            /* NOT_STARTED */\n            )) {\n              _context10.next = 22;\n              break;\n            }\n\n            _context10.next = 14;\n            return getInstallationEntry(installations);\n\n          case 14:\n            _yield$getInstallatio = _context10.sent;\n            installationEntry = _yield$getInstallatio.installationEntry;\n            registrationPromise = _yield$getInstallatio.registrationPromise;\n\n            if (!registrationPromise) {\n              _context10.next = 21;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", registrationPromise);\n\n          case 21:\n            return _context10.abrupt(\"return\", installationEntry);\n\n          case 22:\n            return _context10.abrupt(\"return\", entry);\n\n          case 23:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _waitUntilFidRegistration.apply(this, arguments);\n}\n\nfunction updateInstallationRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!oldEntry) {\n      throw ERROR_FACTORY$1.create(\"installation-not-found\"\n      /* INSTALLATION_NOT_FOUND */\n      );\n    }\n\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry) {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: 0\n      /* NOT_STARTED */\n\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(installationEntry) {\n  return installationEntry.registrationStatus === 1\n  /* IN_PROGRESS */\n  && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction generateAuthTokenRequest(_x16, _x17) {\n  return _generateAuthTokenRequest.apply(this, arguments);\n}\n\nfunction _generateAuthTokenRequest() {\n  _generateAuthTokenRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(_ref9, installationEntry) {\n    var appConfig, heartbeatServiceProvider, endpoint, headers, heartbeatService, heartbeatsHeader, body, request, response, responseValue, completedAuthToken;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            appConfig = _ref9.appConfig, heartbeatServiceProvider = _ref9.heartbeatServiceProvider;\n            endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n            headers = getHeadersWithAuth(appConfig, installationEntry); // If heartbeat service exists, add the heartbeat string to the header.\n\n            heartbeatService = heartbeatServiceProvider.getImmediate({\n              optional: true\n            });\n\n            if (!heartbeatService) {\n              _context11.next = 9;\n              break;\n            }\n\n            _context11.next = 7;\n            return heartbeatService.getHeartbeatsHeader();\n\n          case 7:\n            heartbeatsHeader = _context11.sent;\n\n            if (heartbeatsHeader) {\n              headers.append('x-firebase-client', heartbeatsHeader);\n            }\n\n          case 9:\n            body = {\n              installation: {\n                sdkVersion: PACKAGE_VERSION,\n                appId: appConfig.appId\n              }\n            };\n            request = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context11.next = 13;\n            return retryIfServerError(function () {\n              return fetch(endpoint, request);\n            });\n\n          case 13:\n            response = _context11.sent;\n\n            if (!response.ok) {\n              _context11.next = 22;\n              break;\n            }\n\n            _context11.next = 17;\n            return response.json();\n\n          case 17:\n            responseValue = _context11.sent;\n            completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n            return _context11.abrupt(\"return\", completedAuthToken);\n\n          case 22:\n            _context11.next = 24;\n            return getErrorFromResponse('Generate Auth Token', response);\n\n          case 24:\n            throw _context11.sent;\n\n          case 25:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _generateAuthTokenRequest.apply(this, arguments);\n}\n\nfunction getGenerateAuthTokenEndpoint(appConfig, _ref10) {\n  var fid = _ref10.fid;\n  return \"\".concat(getInstallationsEndpoint(appConfig), \"/\").concat(fid, \"/authTokens:generate\");\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\n\n\nfunction refreshAuthToken(_x18) {\n  return _refreshAuthToken.apply(this, arguments);\n}\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\n\n\nfunction _refreshAuthToken() {\n  _refreshAuthToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(installations) {\n    var forceRefresh,\n        tokenPromise,\n        entry,\n        authToken,\n        _args12 = arguments;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            forceRefresh = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : false;\n            _context12.next = 3;\n            return update(installations.appConfig, function (oldEntry) {\n              if (!isEntryRegistered(oldEntry)) {\n                throw ERROR_FACTORY$1.create(\"not-registered\"\n                /* NOT_REGISTERED */\n                );\n              }\n\n              var oldAuthToken = oldEntry.authToken;\n\n              if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n                // There is a valid token in the DB.\n                return oldEntry;\n              } else if (oldAuthToken.requestStatus === 1\n              /* IN_PROGRESS */\n              ) {\n                // There already is a token request in progress.\n                tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n                return oldEntry;\n              } else {\n                // No token or token expired.\n                if (!navigator.onLine) {\n                  throw ERROR_FACTORY$1.create(\"app-offline\"\n                  /* APP_OFFLINE */\n                  );\n                }\n\n                var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n                tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n                return inProgressEntry;\n              }\n            });\n\n          case 3:\n            entry = _context12.sent;\n\n            if (!tokenPromise) {\n              _context12.next = 10;\n              break;\n            }\n\n            _context12.next = 7;\n            return tokenPromise;\n\n          case 7:\n            _context12.t0 = _context12.sent;\n            _context12.next = 11;\n            break;\n\n          case 10:\n            _context12.t0 = entry.authToken;\n\n          case 11:\n            authToken = _context12.t0;\n            return _context12.abrupt(\"return\", authToken);\n\n          case 13:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _refreshAuthToken.apply(this, arguments);\n}\n\nfunction waitUntilAuthTokenRequest(_x19, _x20) {\n  return _waitUntilAuthTokenRequest.apply(this, arguments);\n}\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\n\n\nfunction _waitUntilAuthTokenRequest() {\n  _waitUntilAuthTokenRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(installations, forceRefresh) {\n    var entry, authToken;\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return updateAuthTokenRequest(installations.appConfig);\n\n          case 2:\n            entry = _context13.sent;\n\n          case 3:\n            if (!(entry.authToken.requestStatus === 1\n            /* IN_PROGRESS */\n            )) {\n              _context13.next = 11;\n              break;\n            }\n\n            _context13.next = 6;\n            return sleep(100);\n\n          case 6:\n            _context13.next = 8;\n            return updateAuthTokenRequest(installations.appConfig);\n\n          case 8:\n            entry = _context13.sent;\n            _context13.next = 3;\n            break;\n\n          case 11:\n            authToken = entry.authToken;\n\n            if (!(authToken.requestStatus === 0\n            /* NOT_STARTED */\n            )) {\n              _context13.next = 16;\n              break;\n            }\n\n            return _context13.abrupt(\"return\", refreshAuthToken(installations, forceRefresh));\n\n          case 16:\n            return _context13.abrupt(\"return\", authToken);\n\n          case 17:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _waitUntilAuthTokenRequest.apply(this, arguments);\n}\n\nfunction updateAuthTokenRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY$1.create(\"not-registered\"\n      /* NOT_REGISTERED */\n      );\n    }\n\n    var oldAuthToken = oldEntry.authToken;\n\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return Object.assign(Object.assign({}, oldEntry), {\n        authToken: {\n          requestStatus: 0\n          /* NOT_STARTED */\n\n        }\n      });\n    }\n\n    return oldEntry;\n  });\n}\n\nfunction fetchAuthTokenFromServer(_x21, _x22) {\n  return _fetchAuthTokenFromServer.apply(this, arguments);\n}\n\nfunction _fetchAuthTokenFromServer() {\n  _fetchAuthTokenFromServer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(installations, installationEntry) {\n    var authToken, updatedInstallationEntry, _updatedInstallationEntry;\n\n    return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return generateAuthTokenRequest(installations, installationEntry);\n\n          case 3:\n            authToken = _context14.sent;\n            updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n              authToken: authToken\n            });\n            _context14.next = 7;\n            return set(installations.appConfig, updatedInstallationEntry);\n\n          case 7:\n            return _context14.abrupt(\"return\", authToken);\n\n          case 10:\n            _context14.prev = 10;\n            _context14.t0 = _context14[\"catch\"](0);\n\n            if (!(isServerError(_context14.t0) && (_context14.t0.customData.serverCode === 401 || _context14.t0.customData.serverCode === 404))) {\n              _context14.next = 17;\n              break;\n            }\n\n            _context14.next = 15;\n            return remove(installations.appConfig);\n\n          case 15:\n            _context14.next = 20;\n            break;\n\n          case 17:\n            _updatedInstallationEntry = Object.assign(Object.assign({}, installationEntry), {\n              authToken: {\n                requestStatus: 0\n                /* NOT_STARTED */\n\n              }\n            });\n            _context14.next = 20;\n            return set(installations.appConfig, _updatedInstallationEntry);\n\n          case 20:\n            throw _context14.t0;\n\n          case 21:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14, null, [[0, 10]]);\n  }));\n  return _fetchAuthTokenFromServer.apply(this, arguments);\n}\n\nfunction isEntryRegistered(installationEntry) {\n  return installationEntry !== undefined && installationEntry.registrationStatus === 2\n  /* COMPLETED */\n  ;\n}\n\nfunction isAuthTokenValid(authToken) {\n  return authToken.requestStatus === 2\n  /* COMPLETED */\n  && !isAuthTokenExpired(authToken);\n}\n\nfunction isAuthTokenExpired(authToken) {\n  var now = Date.now();\n  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\n\n\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n  var inProgressAuthToken = {\n    requestStatus: 1\n    /* IN_PROGRESS */\n    ,\n    requestTime: Date.now()\n  };\n  return Object.assign(Object.assign({}, oldEntry), {\n    authToken: inProgressAuthToken\n  });\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken) {\n  return authToken.requestStatus === 1\n  /* IN_PROGRESS */\n  && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Creates a Firebase Installation if there isn't one for the app and\r\n * returns the Installation ID.\r\n * @param installations - The `Installations` instance.\r\n *\r\n * @public\r\n */\n\n\nfunction _getId2(_x23) {\n  return _getId.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a Firebase Installations auth token, identifying the current\r\n * Firebase Installation.\r\n * @param installations - The `Installations` instance.\r\n * @param forceRefresh - Force refresh regardless of token expiration.\r\n *\r\n * @public\r\n */\n\n\nfunction _getId() {\n  _getId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(installations) {\n    var installationsImpl, _yield$getInstallatio2, installationEntry, registrationPromise;\n\n    return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            installationsImpl = installations;\n            _context15.next = 3;\n            return getInstallationEntry(installationsImpl);\n\n          case 3:\n            _yield$getInstallatio2 = _context15.sent;\n            installationEntry = _yield$getInstallatio2.installationEntry;\n            registrationPromise = _yield$getInstallatio2.registrationPromise;\n\n            if (registrationPromise) {\n              registrationPromise.catch(console.error);\n            } else {\n              // If the installation is already registered, update the authentication\n              // token if needed.\n              refreshAuthToken(installationsImpl).catch(console.error);\n            }\n\n            return _context15.abrupt(\"return\", installationEntry.fid);\n\n          case 8:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _getId.apply(this, arguments);\n}\n\nfunction getToken$2(_x24) {\n  return _getToken$.apply(this, arguments);\n}\n\nfunction _getToken$() {\n  _getToken$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(installations) {\n    var forceRefresh,\n        installationsImpl,\n        authToken,\n        _args16 = arguments;\n    return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            forceRefresh = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : false;\n            installationsImpl = installations;\n            _context16.next = 4;\n            return completeInstallationRegistration(installationsImpl);\n\n          case 4:\n            _context16.next = 6;\n            return refreshAuthToken(installationsImpl, forceRefresh);\n\n          case 6:\n            authToken = _context16.sent;\n            return _context16.abrupt(\"return\", authToken.token);\n\n          case 8:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _getToken$.apply(this, arguments);\n}\n\nfunction completeInstallationRegistration(_x25) {\n  return _completeInstallationRegistration.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _completeInstallationRegistration() {\n  _completeInstallationRegistration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(installations) {\n    var _yield$getInstallatio3, registrationPromise;\n\n    return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _context17.next = 2;\n            return getInstallationEntry(installations);\n\n          case 2:\n            _yield$getInstallatio3 = _context17.sent;\n            registrationPromise = _yield$getInstallatio3.registrationPromise;\n\n            if (!registrationPromise) {\n              _context17.next = 7;\n              break;\n            }\n\n            _context17.next = 7;\n            return registrationPromise;\n\n          case 7:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _completeInstallationRegistration.apply(this, arguments);\n}\n\nfunction extractAppConfig$1(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError$1('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError$1('App Name');\n  } // Required app config keys\n\n\n  var configKeys = ['projectId', 'apiKey', 'appId'];\n\n  for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {\n    var keyName = _configKeys[_i];\n\n    if (!app.options[keyName]) {\n      throw getMissingValueError$1(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId,\n    apiKey: app.options.apiKey,\n    appId: app.options.appId\n  };\n}\n\nfunction getMissingValueError$1(valueName) {\n  return ERROR_FACTORY$1.create(\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  , {\n    valueName: valueName\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar INSTALLATIONS_NAME = 'installations';\nvar INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nvar publicFactory = function publicFactory(container) {\n  var app = container.getProvider('app').getImmediate(); // Throws if app isn't configured properly.\n\n  var appConfig = extractAppConfig$1(app);\n\n  var heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  var installationsImpl = {\n    app: app,\n    appConfig: appConfig,\n    heartbeatServiceProvider: heartbeatServiceProvider,\n    _delete: function _delete() {\n      return Promise.resolve();\n    }\n  };\n  return installationsImpl;\n};\n\nvar internalFactory = function internalFactory(container) {\n  var app = container.getProvider('app').getImmediate(); // Internal FIS instance relies on public FIS instance.\n\n  var installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  var installationsInternal = {\n    getId: function getId() {\n      return _getId2(installations);\n    },\n    getToken: function getToken(forceRefresh) {\n      return getToken$2(installations, forceRefresh);\n    }\n  };\n  return installationsInternal;\n};\n\nfunction registerInstallations() {\n  _registerComponent(new Component(INSTALLATIONS_NAME, publicFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n\n  _registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL, internalFactory, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n}\n/**\r\n * Firebase Installations\r\n *\r\n * @packageDocumentation\r\n */\n\n\nregisterInstallations();\nregisterVersion(name$1, version$1); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\nregisterVersion(name$1, version$1, 'esm2017');\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nvar CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nvar CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\n\nvar CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nvar MessageType$1;\n\n(function (MessageType) {\n  MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n  MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\n\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction arrayToBase64(array) {\n  var uint8Array = new Uint8Array(array);\n  var base64String = btoa(String.fromCharCode.apply(String, _toConsumableArray(uint8Array)));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction base64ToArray(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\n\nvar OLD_DB_VERSION = 5;\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nfunction migrateOldDatabase(_x26) {\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction _migrateOldDatabase() {\n  _migrateOldDatabase = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(senderId) {\n    var databases, dbNames, tokenDetails, db;\n    return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            if (!('databases' in indexedDB)) {\n              _context19.next = 7;\n              break;\n            }\n\n            _context19.next = 3;\n            return indexedDB.databases();\n\n          case 3:\n            databases = _context19.sent;\n            dbNames = databases.map(function (db) {\n              return db.name;\n            });\n\n            if (dbNames.includes(OLD_DB_NAME)) {\n              _context19.next = 7;\n              break;\n            }\n\n            return _context19.abrupt(\"return\", null);\n\n          case 7:\n            tokenDetails = null;\n            _context19.next = 10;\n            return openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n              upgrade: function () {\n                var _upgrade = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(db, oldVersion, newVersion, upgradeTransaction) {\n                  var _a, objectStore, value, oldDetails, _oldDetails, _oldDetails2;\n\n                  return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                    while (1) {\n                      switch (_context18.prev = _context18.next) {\n                        case 0:\n                          if (!(oldVersion < 2)) {\n                            _context18.next = 2;\n                            break;\n                          }\n\n                          return _context18.abrupt(\"return\");\n\n                        case 2:\n                          if (db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                            _context18.next = 4;\n                            break;\n                          }\n\n                          return _context18.abrupt(\"return\");\n\n                        case 4:\n                          objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n                          _context18.next = 7;\n                          return objectStore.index('fcmSenderId').get(senderId);\n\n                        case 7:\n                          value = _context18.sent;\n                          _context18.next = 10;\n                          return objectStore.clear();\n\n                        case 10:\n                          if (value) {\n                            _context18.next = 12;\n                            break;\n                          }\n\n                          return _context18.abrupt(\"return\");\n\n                        case 12:\n                          if (!(oldVersion === 2)) {\n                            _context18.next = 19;\n                            break;\n                          }\n\n                          oldDetails = value;\n\n                          if (!(!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint)) {\n                            _context18.next = 16;\n                            break;\n                          }\n\n                          return _context18.abrupt(\"return\");\n\n                        case 16:\n                          tokenDetails = {\n                            token: oldDetails.fcmToken,\n                            createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                            subscriptionOptions: {\n                              auth: oldDetails.auth,\n                              p256dh: oldDetails.p256dh,\n                              endpoint: oldDetails.endpoint,\n                              swScope: oldDetails.swScope,\n                              vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n                            }\n                          };\n                          _context18.next = 20;\n                          break;\n\n                        case 19:\n                          if (oldVersion === 3) {\n                            _oldDetails = value;\n                            tokenDetails = {\n                              token: _oldDetails.fcmToken,\n                              createTime: _oldDetails.createTime,\n                              subscriptionOptions: {\n                                auth: arrayToBase64(_oldDetails.auth),\n                                p256dh: arrayToBase64(_oldDetails.p256dh),\n                                endpoint: _oldDetails.endpoint,\n                                swScope: _oldDetails.swScope,\n                                vapidKey: arrayToBase64(_oldDetails.vapidKey)\n                              }\n                            };\n                          } else if (oldVersion === 4) {\n                            _oldDetails2 = value;\n                            tokenDetails = {\n                              token: _oldDetails2.fcmToken,\n                              createTime: _oldDetails2.createTime,\n                              subscriptionOptions: {\n                                auth: arrayToBase64(_oldDetails2.auth),\n                                p256dh: arrayToBase64(_oldDetails2.p256dh),\n                                endpoint: _oldDetails2.endpoint,\n                                swScope: _oldDetails2.swScope,\n                                vapidKey: arrayToBase64(_oldDetails2.vapidKey)\n                              }\n                            };\n                          }\n\n                        case 20:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }\n                  }, _callee18);\n                }));\n\n                function upgrade(_x61, _x62, _x63, _x64) {\n                  return _upgrade.apply(this, arguments);\n                }\n\n                return upgrade;\n              }()\n            });\n\n          case 10:\n            db = _context19.sent;\n            db.close(); // Delete all old databases.\n\n            _context19.next = 14;\n            return deleteDB(OLD_DB_NAME);\n\n          case 14:\n            _context19.next = 16;\n            return deleteDB('fcm_vapid_details_db');\n\n          case 16:\n            _context19.next = 18;\n            return deleteDB('undefined');\n\n          case 18:\n            return _context19.abrupt(\"return\", checkTokenDetails(tokenDetails) ? tokenDetails : null);\n\n          case 19:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19);\n  }));\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n\n  var subscriptionOptions = tokenDetails.subscriptionOptions;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\n\n\nvar DATABASE_NAME = 'firebase-messaging-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\nvar dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: function upgrade(upgradeDb, oldVersion) {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\n\n\nfunction dbGet(_x27) {\n  return _dbGet.apply(this, arguments);\n}\n/** Assigns or overwrites the record for the given key with the given value. */\n\n\nfunction _dbGet() {\n  _dbGet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(firebaseDependencies) {\n    var key, db, tokenDetails, oldTokenDetails;\n    return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context20.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context20.sent;\n            _context20.next = 6;\n            return db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key);\n\n          case 6:\n            tokenDetails = _context20.sent;\n\n            if (!tokenDetails) {\n              _context20.next = 11;\n              break;\n            }\n\n            return _context20.abrupt(\"return\", tokenDetails);\n\n          case 11:\n            _context20.next = 13;\n            return migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n\n          case 13:\n            oldTokenDetails = _context20.sent;\n\n            if (!oldTokenDetails) {\n              _context20.next = 18;\n              break;\n            }\n\n            _context20.next = 17;\n            return dbSet(firebaseDependencies, oldTokenDetails);\n\n          case 17:\n            return _context20.abrupt(\"return\", oldTokenDetails);\n\n          case 18:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _dbGet.apply(this, arguments);\n}\n\nfunction dbSet(_x28, _x29) {\n  return _dbSet.apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\n\n\nfunction _dbSet() {\n  _dbSet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(firebaseDependencies, tokenDetails) {\n    var key, db, tx;\n    return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context21.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context21.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context21.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n\n          case 7:\n            _context21.next = 9;\n            return tx.done;\n\n          case 9:\n            return _context21.abrupt(\"return\", tokenDetails);\n\n          case 10:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee21);\n  }));\n  return _dbSet.apply(this, arguments);\n}\n\nfunction dbRemove(_x30) {\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction _dbRemove() {\n  _dbRemove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(firebaseDependencies) {\n    var key, db, tx;\n    return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context22.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context22.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context22.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).delete(key);\n\n          case 7:\n            _context22.next = 9;\n            return tx.done;\n\n          case 9:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, _callee22);\n  }));\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction getKey(_ref11) {\n  var appConfig = _ref11.appConfig;\n  return appConfig.appId;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ERROR_MAP = (_ERROR_MAP = {}, _defineProperty(_ERROR_MAP, \"missing-app-config-values\"\n/* MISSING_APP_CONFIG_VALUES */\n, 'Missing App configuration value: \"{$valueName}\"'), _defineProperty(_ERROR_MAP, \"only-available-in-window\"\n/* AVAILABLE_IN_WINDOW */\n, 'This method is available in a Window context.'), _defineProperty(_ERROR_MAP, \"only-available-in-sw\"\n/* AVAILABLE_IN_SW */\n, 'This method is available in a service worker context.'), _defineProperty(_ERROR_MAP, \"permission-default\"\n/* PERMISSION_DEFAULT */\n, 'The notification permission was not granted and dismissed instead.'), _defineProperty(_ERROR_MAP, \"permission-blocked\"\n/* PERMISSION_BLOCKED */\n, 'The notification permission was not granted and blocked instead.'), _defineProperty(_ERROR_MAP, \"unsupported-browser\"\n/* UNSUPPORTED_BROWSER */\n, \"This browser doesn't support the API's required to use the Firebase SDK.\"), _defineProperty(_ERROR_MAP, \"indexed-db-unsupported\"\n/* INDEXED_DB_UNSUPPORTED */\n, \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\"), _defineProperty(_ERROR_MAP, \"failed-service-worker-registration\"\n/* FAILED_DEFAULT_REGISTRATION */\n, 'We are unable to register the default service worker. {$browserErrorMessage}'), _defineProperty(_ERROR_MAP, \"token-subscribe-failed\"\n/* TOKEN_SUBSCRIBE_FAILED */\n, 'A problem occurred while subscribing the user to FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-subscribe-no-token\"\n/* TOKEN_SUBSCRIBE_NO_TOKEN */\n, 'FCM returned no token when subscribing the user to push.'), _defineProperty(_ERROR_MAP, \"token-unsubscribe-failed\"\n/* TOKEN_UNSUBSCRIBE_FAILED */\n, 'A problem occurred while unsubscribing the ' + 'user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-failed\"\n/* TOKEN_UPDATE_FAILED */\n, 'A problem occurred while updating the user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-no-token\"\n/* TOKEN_UPDATE_NO_TOKEN */\n, 'FCM returned no token when updating the user to push.'), _defineProperty(_ERROR_MAP, \"use-sw-after-get-token\"\n/* USE_SW_AFTER_GET_TOKEN */\n, 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.'), _defineProperty(_ERROR_MAP, \"invalid-sw-registration\"\n/* INVALID_SW_REGISTRATION */\n, 'The input to useServiceWorker() must be a ServiceWorkerRegistration.'), _defineProperty(_ERROR_MAP, \"invalid-bg-handler\"\n/* INVALID_BG_HANDLER */\n, 'The input to setBackgroundMessageHandler() must be a function.'), _defineProperty(_ERROR_MAP, \"invalid-vapid-key\"\n/* INVALID_VAPID_KEY */\n, 'The public VAPID key must be a string.'), _defineProperty(_ERROR_MAP, \"use-vapid-key-after-get-token\"\n/* USE_VAPID_KEY_AFTER_GET_TOKEN */\n, 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.'), _ERROR_MAP);\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction requestGetToken(_x31, _x32) {\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction _requestGetToken() {\n  _requestGetToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(firebaseDependencies, subscriptionOptions) {\n    var _a, headers, body, subscribeOptions, responseData, response, message;\n\n    return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n      while (1) {\n        switch (_context23.prev = _context23.next) {\n          case 0:\n            _context23.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context23.sent;\n            body = getBody(subscriptionOptions);\n            subscribeOptions = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context23.prev = 5;\n            _context23.next = 8;\n            return fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n\n          case 8:\n            response = _context23.sent;\n            _context23.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context23.sent;\n            _context23.next = 17;\n            break;\n\n          case 14:\n            _context23.prev = 14;\n            _context23.t0 = _context23[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: (_a = _context23.t0) === null || _a === void 0 ? void 0 : _a.toString()\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context23.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context23.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-subscribe-no-token\"\n            /* TOKEN_SUBSCRIBE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context23.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context23.stop();\n        }\n      }\n    }, _callee23, null, [[5, 14]]);\n  }));\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction requestUpdateToken(_x33, _x34) {\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction _requestUpdateToken() {\n  _requestUpdateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(firebaseDependencies, tokenDetails) {\n    var _a, headers, body, updateOptions, responseData, response, message;\n\n    return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n      while (1) {\n        switch (_context24.prev = _context24.next) {\n          case 0:\n            _context24.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context24.sent;\n            body = getBody(tokenDetails.subscriptionOptions);\n            updateOptions = {\n              method: 'PATCH',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context24.prev = 5;\n            _context24.next = 8;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(tokenDetails.token), updateOptions);\n\n          case 8:\n            response = _context24.sent;\n            _context24.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context24.sent;\n            _context24.next = 17;\n            break;\n\n          case 14:\n            _context24.prev = 14;\n            _context24.t0 = _context24[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: (_a = _context24.t0) === null || _a === void 0 ? void 0 : _a.toString()\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context24.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context24.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-update-no-token\"\n            /* TOKEN_UPDATE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context24.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context24.stop();\n        }\n      }\n    }, _callee24, null, [[5, 14]]);\n  }));\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction requestDeleteToken(_x35, _x36) {\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction _requestDeleteToken() {\n  _requestDeleteToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(firebaseDependencies, token) {\n    var _a, headers, unsubscribeOptions, response, responseData, message;\n\n    return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n      while (1) {\n        switch (_context25.prev = _context25.next) {\n          case 0:\n            _context25.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context25.sent;\n            unsubscribeOptions = {\n              method: 'DELETE',\n              headers: headers\n            };\n            _context25.prev = 4;\n            _context25.next = 7;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(token), unsubscribeOptions);\n\n          case 7:\n            response = _context25.sent;\n            _context25.next = 10;\n            return response.json();\n\n          case 10:\n            responseData = _context25.sent;\n\n            if (!responseData.error) {\n              _context25.next = 14;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 14:\n            _context25.next = 19;\n            break;\n\n          case 16:\n            _context25.prev = 16;\n            _context25.t0 = _context25[\"catch\"](4);\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: (_a = _context25.t0) === null || _a === void 0 ? void 0 : _a.toString()\n            });\n\n          case 19:\n          case \"end\":\n            return _context25.stop();\n        }\n      }\n    }, _callee25, null, [[4, 16]]);\n  }));\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction getEndpoint(_ref12) {\n  var projectId = _ref12.projectId;\n  return \"\".concat(ENDPOINT, \"/projects/\").concat(projectId, \"/registrations\");\n}\n\nfunction getHeaders(_x37) {\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction _getHeaders() {\n  _getHeaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(_ref13) {\n    var appConfig, installations, authToken;\n    return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n      while (1) {\n        switch (_context26.prev = _context26.next) {\n          case 0:\n            appConfig = _ref13.appConfig, installations = _ref13.installations;\n            _context26.next = 3;\n            return installations.getToken();\n\n          case 3:\n            authToken = _context26.sent;\n            return _context26.abrupt(\"return\", new Headers({\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n              'x-goog-api-key': appConfig.apiKey,\n              'x-goog-firebase-installations-auth': \"FIS \".concat(authToken)\n            }));\n\n          case 5:\n          case \"end\":\n            return _context26.stop();\n        }\n      }\n    }, _callee26);\n  }));\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction getBody(_ref14) {\n  var p256dh = _ref14.p256dh,\n      auth = _ref14.auth,\n      endpoint = _ref14.endpoint,\n      vapidKey = _ref14.vapidKey;\n  var body = {\n    web: {\n      endpoint: endpoint,\n      auth: auth,\n      p256dh: p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// UpdateRegistration will be called once every week.\n\n\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nfunction getTokenInternal(_x38) {\n  return _getTokenInternal.apply(this, arguments);\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\n\n\nfunction _getTokenInternal() {\n  _getTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(messaging) {\n    var pushSubscription, subscriptionOptions, tokenDetails;\n    return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n      while (1) {\n        switch (_context27.prev = _context27.next) {\n          case 0:\n            _context27.next = 2;\n            return getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n\n          case 2:\n            pushSubscription = _context27.sent;\n            subscriptionOptions = {\n              vapidKey: messaging.vapidKey,\n              swScope: messaging.swRegistration.scope,\n              endpoint: pushSubscription.endpoint,\n              auth: arrayToBase64(pushSubscription.getKey('auth')),\n              p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n            };\n            _context27.next = 6;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 6:\n            tokenDetails = _context27.sent;\n\n            if (tokenDetails) {\n              _context27.next = 11;\n              break;\n            }\n\n            return _context27.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 11:\n            if (isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n              _context27.next = 23;\n              break;\n            }\n\n            _context27.prev = 12;\n            _context27.next = 15;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 15:\n            _context27.next = 20;\n            break;\n\n          case 17:\n            _context27.prev = 17;\n            _context27.t0 = _context27[\"catch\"](12);\n            // Suppress errors because of #2364\n            console.warn(_context27.t0);\n\n          case 20:\n            return _context27.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 23:\n            if (!(Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS)) {\n              _context27.next = 27;\n              break;\n            }\n\n            return _context27.abrupt(\"return\", updateToken(messaging, {\n              token: tokenDetails.token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            }));\n\n          case 27:\n            return _context27.abrupt(\"return\", tokenDetails.token);\n\n          case 28:\n          case \"end\":\n            return _context27.stop();\n        }\n      }\n    }, _callee27, null, [[12, 17]]);\n  }));\n  return _getTokenInternal.apply(this, arguments);\n}\n\nfunction deleteTokenInternal(_x39) {\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction _deleteTokenInternal() {\n  _deleteTokenInternal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(messaging) {\n    var tokenDetails, pushSubscription;\n    return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n      while (1) {\n        switch (_context28.prev = _context28.next) {\n          case 0:\n            _context28.next = 2;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 2:\n            tokenDetails = _context28.sent;\n\n            if (!tokenDetails) {\n              _context28.next = 8;\n              break;\n            }\n\n            _context28.next = 6;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 6:\n            _context28.next = 8;\n            return dbRemove(messaging.firebaseDependencies);\n\n          case 8:\n            _context28.next = 10;\n            return messaging.swRegistration.pushManager.getSubscription();\n\n          case 10:\n            pushSubscription = _context28.sent;\n\n            if (!pushSubscription) {\n              _context28.next = 13;\n              break;\n            }\n\n            return _context28.abrupt(\"return\", pushSubscription.unsubscribe());\n\n          case 13:\n            return _context28.abrupt(\"return\", true);\n\n          case 14:\n          case \"end\":\n            return _context28.stop();\n        }\n      }\n    }, _callee28);\n  }));\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction updateToken(_x40, _x41) {\n  return _updateToken.apply(this, arguments);\n}\n\nfunction _updateToken() {\n  _updateToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(messaging, tokenDetails) {\n    var updatedToken, updatedTokenDetails;\n    return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n      while (1) {\n        switch (_context29.prev = _context29.next) {\n          case 0:\n            _context29.prev = 0;\n            _context29.next = 3;\n            return requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n\n          case 3:\n            updatedToken = _context29.sent;\n            updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), {\n              token: updatedToken,\n              createTime: Date.now()\n            });\n            _context29.next = 7;\n            return dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n\n          case 7:\n            return _context29.abrupt(\"return\", updatedToken);\n\n          case 10:\n            _context29.prev = 10;\n            _context29.t0 = _context29[\"catch\"](0);\n            _context29.next = 14;\n            return deleteTokenInternal(messaging);\n\n          case 14:\n            throw _context29.t0;\n\n          case 15:\n          case \"end\":\n            return _context29.stop();\n        }\n      }\n    }, _callee29, null, [[0, 10]]);\n  }));\n  return _updateToken.apply(this, arguments);\n}\n\nfunction getNewToken(_x42, _x43) {\n  return _getNewToken.apply(this, arguments);\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\n\n\nfunction _getNewToken() {\n  _getNewToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(firebaseDependencies, subscriptionOptions) {\n    var token, tokenDetails;\n    return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n      while (1) {\n        switch (_context30.prev = _context30.next) {\n          case 0:\n            _context30.next = 2;\n            return requestGetToken(firebaseDependencies, subscriptionOptions);\n\n          case 2:\n            token = _context30.sent;\n            tokenDetails = {\n              token: token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            };\n            _context30.next = 6;\n            return dbSet(firebaseDependencies, tokenDetails);\n\n          case 6:\n            return _context30.abrupt(\"return\", tokenDetails.token);\n\n          case 7:\n          case \"end\":\n            return _context30.stop();\n        }\n      }\n    }, _callee30);\n  }));\n  return _getNewToken.apply(this, arguments);\n}\n\nfunction getPushSubscription(_x44, _x45) {\n  return _getPushSubscription.apply(this, arguments);\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\n\n\nfunction _getPushSubscription() {\n  _getPushSubscription = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(swRegistration, vapidKey) {\n    var subscription;\n    return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n      while (1) {\n        switch (_context31.prev = _context31.next) {\n          case 0:\n            _context31.next = 2;\n            return swRegistration.pushManager.getSubscription();\n\n          case 2:\n            subscription = _context31.sent;\n\n            if (!subscription) {\n              _context31.next = 5;\n              break;\n            }\n\n            return _context31.abrupt(\"return\", subscription);\n\n          case 5:\n            return _context31.abrupt(\"return\", swRegistration.pushManager.subscribe({\n              userVisibleOnly: true,\n              // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n              // submitted to pushManager#subscribe must be of type Uint8Array.\n              applicationServerKey: base64ToArray(vapidKey)\n            }));\n\n          case 6:\n          case \"end\":\n            return _context31.stop();\n        }\n      }\n    }, _callee31);\n  }));\n  return _getPushSubscription.apply(this, arguments);\n}\n\nfunction isTokenValid(dbOptions, currentOptions) {\n  var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  var isAuthEqual = currentOptions.auth === dbOptions.auth;\n  var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction externalizePayload(internalPayload) {\n  var payload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  };\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n  return payload;\n}\n\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n  var title = messagePayloadInternal.notification.title;\n\n  if (!!title) {\n    payload.notification.title = title;\n  }\n\n  var body = messagePayloadInternal.notification.body;\n\n  if (!!body) {\n    payload.notification.body = body;\n  }\n\n  var image = messagePayloadInternal.notification.image;\n\n  if (!!image) {\n    payload.notification.image = image;\n  }\n}\n\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data;\n}\n\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n  var _a, _b, _c, _d, _e; // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n\n\n  if (!messagePayloadInternal.fcmOptions && !((_a = messagePayloadInternal.notification) === null || _a === void 0 ? void 0 : _a.click_action)) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n  var link = (_c = (_b = messagePayloadInternal.fcmOptions) === null || _b === void 0 ? void 0 : _b.link) !== null && _c !== void 0 ? _c : (_d = messagePayloadInternal.notification) === null || _d === void 0 ? void 0 : _d.click_action;\n\n  if (!!link) {\n    payload.fcmOptions.link = link;\n  } // eslint-disable-next-line camelcase\n\n\n  var analyticsLabel = (_e = messagePayloadInternal.fcmOptions) === null || _e === void 0 ? void 0 : _e.analytics_label;\n\n  if (!!analyticsLabel) {\n    payload.fcmOptions.analyticsLabel = analyticsLabel;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\n\nfunction _mergeStrings(s1, s2) {\n  var resultArray = [];\n\n  for (var i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  } // Required app config keys\n\n\n  var configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  var options = app.options;\n\n  for (var _i2 = 0, _configKeys2 = configKeys; _i2 < _configKeys2.length; _i2++) {\n    var keyName = _configKeys2[_i2];\n\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\n\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  , {\n    valueName: valueName\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MessagingService = /*#__PURE__*/function () {\n  function MessagingService(app, installations, analyticsProvider) {\n    _classCallCheck(this, MessagingService);\n\n    // logging is only done with end user consent. Default to false.\n    this.deliveryMetricsExportedToBigQueryEnabled = false;\n    this.onBackgroundMessageHandler = null;\n    this.onMessageHandler = null;\n    this.logEvents = [];\n    this.isLogServiceStarted = false;\n    var appConfig = extractAppConfig(app);\n    this.firebaseDependencies = {\n      app: app,\n      appConfig: appConfig,\n      installations: installations,\n      analyticsProvider: analyticsProvider\n    };\n  }\n\n  _createClass(MessagingService, [{\n    key: \"_delete\",\n    value: function _delete() {\n      return Promise.resolve();\n    }\n  }]);\n\n  return MessagingService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerDefaultSw(_x46) {\n  return _registerDefaultSw.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _registerDefaultSw() {\n  _registerDefaultSw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(messaging) {\n    var _a;\n\n    return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n      while (1) {\n        switch (_context32.prev = _context32.next) {\n          case 0:\n            _context32.prev = 0;\n            _context32.next = 3;\n            return navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n              scope: DEFAULT_SW_SCOPE\n            });\n\n          case 3:\n            messaging.swRegistration = _context32.sent;\n            // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n            // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n            // is stuck with the old version. For example,\n            // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n            // sw if there was an update.\n            messaging.swRegistration.update().catch(function () {\n              /* it is non blocking and we don't care if it failed */\n            });\n            _context32.next = 10;\n            break;\n\n          case 7:\n            _context32.prev = 7;\n            _context32.t0 = _context32[\"catch\"](0);\n            throw ERROR_FACTORY.create(\"failed-service-worker-registration\"\n            /* FAILED_DEFAULT_REGISTRATION */\n            , {\n              browserErrorMessage: (_a = _context32.t0) === null || _a === void 0 ? void 0 : _a.message\n            });\n\n          case 10:\n          case \"end\":\n            return _context32.stop();\n        }\n      }\n    }, _callee32, null, [[0, 7]]);\n  }));\n  return _registerDefaultSw.apply(this, arguments);\n}\n\nfunction updateSwReg(_x47, _x48) {\n  return _updateSwReg.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _updateSwReg() {\n  _updateSwReg = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33(messaging, swRegistration) {\n    return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n      while (1) {\n        switch (_context33.prev = _context33.next) {\n          case 0:\n            if (!(!swRegistration && !messaging.swRegistration)) {\n              _context33.next = 3;\n              break;\n            }\n\n            _context33.next = 3;\n            return registerDefaultSw(messaging);\n\n          case 3:\n            if (!(!swRegistration && !!messaging.swRegistration)) {\n              _context33.next = 5;\n              break;\n            }\n\n            return _context33.abrupt(\"return\");\n\n          case 5:\n            if (swRegistration instanceof ServiceWorkerRegistration) {\n              _context33.next = 7;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"invalid-sw-registration\"\n            /* INVALID_SW_REGISTRATION */\n            );\n\n          case 7:\n            messaging.swRegistration = swRegistration;\n\n          case 8:\n          case \"end\":\n            return _context33.stop();\n        }\n      }\n    }, _callee33);\n  }));\n  return _updateSwReg.apply(this, arguments);\n}\n\nfunction updateVapidKey(_x49, _x50) {\n  return _updateVapidKey.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _updateVapidKey() {\n  _updateVapidKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34(messaging, vapidKey) {\n    return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n      while (1) {\n        switch (_context34.prev = _context34.next) {\n          case 0:\n            if (!!vapidKey) {\n              messaging.vapidKey = vapidKey;\n            } else if (!messaging.vapidKey) {\n              messaging.vapidKey = DEFAULT_VAPID_KEY;\n            }\n\n          case 1:\n          case \"end\":\n            return _context34.stop();\n        }\n      }\n    }, _callee34);\n  }));\n  return _updateVapidKey.apply(this, arguments);\n}\n\nfunction getToken$1(_x51, _x52) {\n  return _getToken$2.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _getToken$2() {\n  _getToken$2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35(messaging, options) {\n    return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n      while (1) {\n        switch (_context35.prev = _context35.next) {\n          case 0:\n            if (navigator) {\n              _context35.next = 2;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"only-available-in-window\"\n            /* AVAILABLE_IN_WINDOW */\n            );\n\n          case 2:\n            if (!(Notification.permission === 'default')) {\n              _context35.next = 5;\n              break;\n            }\n\n            _context35.next = 5;\n            return Notification.requestPermission();\n\n          case 5:\n            if (!(Notification.permission !== 'granted')) {\n              _context35.next = 7;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"permission-blocked\"\n            /* PERMISSION_BLOCKED */\n            );\n\n          case 7:\n            _context35.next = 9;\n            return updateVapidKey(messaging, options === null || options === void 0 ? void 0 : options.vapidKey);\n\n          case 9:\n            _context35.next = 11;\n            return updateSwReg(messaging, options === null || options === void 0 ? void 0 : options.serviceWorkerRegistration);\n\n          case 11:\n            return _context35.abrupt(\"return\", getTokenInternal(messaging));\n\n          case 12:\n          case \"end\":\n            return _context35.stop();\n        }\n      }\n    }, _callee35);\n  }));\n  return _getToken$2.apply(this, arguments);\n}\n\nfunction logToScion(_x53, _x54, _x55) {\n  return _logToScion.apply(this, arguments);\n}\n\nfunction _logToScion() {\n  _logToScion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36(messaging, messageType, data) {\n    var eventType, analytics;\n    return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n      while (1) {\n        switch (_context36.prev = _context36.next) {\n          case 0:\n            eventType = getEventType(messageType);\n            _context36.next = 3;\n            return messaging.firebaseDependencies.analyticsProvider.get();\n\n          case 3:\n            analytics = _context36.sent;\n            analytics.logEvent(eventType, {\n              /* eslint-disable camelcase */\n              message_id: data[CONSOLE_CAMPAIGN_ID],\n              message_name: data[CONSOLE_CAMPAIGN_NAME],\n              message_time: data[CONSOLE_CAMPAIGN_TIME],\n              message_device_time: Math.floor(Date.now() / 1000)\n              /* eslint-enable camelcase */\n\n            });\n\n          case 5:\n          case \"end\":\n            return _context36.stop();\n        }\n      }\n    }, _callee36);\n  }));\n  return _logToScion.apply(this, arguments);\n}\n\nfunction getEventType(messageType) {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n\n    default:\n      throw new Error();\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction messageEventListener(_x56, _x57) {\n  return _messageEventListener.apply(this, arguments);\n}\n\nfunction _messageEventListener() {\n  _messageEventListener = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(messaging, event) {\n    var internalPayload, dataPayload;\n    return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n      while (1) {\n        switch (_context37.prev = _context37.next) {\n          case 0:\n            internalPayload = event.data;\n\n            if (internalPayload.isFirebaseMessaging) {\n              _context37.next = 3;\n              break;\n            }\n\n            return _context37.abrupt(\"return\");\n\n          case 3:\n            if (messaging.onMessageHandler && internalPayload.messageType === MessageType.PUSH_RECEIVED) {\n              if (typeof messaging.onMessageHandler === 'function') {\n                messaging.onMessageHandler(externalizePayload(internalPayload));\n              } else {\n                messaging.onMessageHandler.next(externalizePayload(internalPayload));\n              }\n            } // Log to Scion if applicable\n\n\n            dataPayload = internalPayload.data;\n\n            if (!(isConsoleMessage(dataPayload) && dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1')) {\n              _context37.next = 8;\n              break;\n            }\n\n            _context37.next = 8;\n            return logToScion(messaging, internalPayload.messageType, dataPayload);\n\n          case 8:\n          case \"end\":\n            return _context37.stop();\n        }\n      }\n    }, _callee37);\n  }));\n  return _messageEventListener.apply(this, arguments);\n}\n\nvar name = \"@firebase/messaging\";\nvar version = \"0.9.16\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar WindowMessagingFactory = function WindowMessagingFactory(container) {\n  var messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n  navigator.serviceWorker.addEventListener('message', function (e) {\n    return messageEventListener(messaging, e);\n  });\n  return messaging;\n};\n\nvar WindowMessagingInternalFactory = function WindowMessagingInternalFactory(container) {\n  var messaging = container.getProvider('messaging').getImmediate();\n  var messagingInternal = {\n    getToken: function getToken(options) {\n      return getToken$1(messaging, options);\n    }\n  };\n  return messagingInternal;\n};\n\nfunction registerMessagingInWindow() {\n  _registerComponent(new Component('messaging', WindowMessagingFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n\n  _registerComponent(new Component('messaging-internal', WindowMessagingInternalFactory, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n\n  registerVersion(name, version); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\n  registerVersion(name, version, 'esm2017');\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Checks if all required APIs exist in the browser.\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\n\n\nfunction isWindowSupported() {\n  return _isWindowSupported.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _isWindowSupported() {\n  _isWindowSupported = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38() {\n    return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n      while (1) {\n        switch (_context38.prev = _context38.next) {\n          case 0:\n            _context38.prev = 0;\n            _context38.next = 3;\n            return validateIndexedDBOpenable();\n\n          case 3:\n            _context38.next = 8;\n            break;\n\n          case 5:\n            _context38.prev = 5;\n            _context38.t0 = _context38[\"catch\"](0);\n            return _context38.abrupt(\"return\", false);\n\n          case 8:\n            return _context38.abrupt(\"return\", typeof window !== 'undefined' && isIndexedDBAvailable() && areCookiesEnabled() && 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey'));\n\n          case 9:\n          case \"end\":\n            return _context38.stop();\n        }\n      }\n    }, _callee38, null, [[0, 5]]);\n  }));\n  return _isWindowSupported.apply(this, arguments);\n}\n\nfunction deleteToken$1(_x58) {\n  return _deleteToken$.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _deleteToken$() {\n  _deleteToken$ = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(messaging) {\n    return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n      while (1) {\n        switch (_context39.prev = _context39.next) {\n          case 0:\n            if (navigator) {\n              _context39.next = 2;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"only-available-in-window\"\n            /* AVAILABLE_IN_WINDOW */\n            );\n\n          case 2:\n            if (messaging.swRegistration) {\n              _context39.next = 5;\n              break;\n            }\n\n            _context39.next = 5;\n            return registerDefaultSw(messaging);\n\n          case 5:\n            return _context39.abrupt(\"return\", deleteTokenInternal(messaging));\n\n          case 6:\n          case \"end\":\n            return _context39.stop();\n        }\n      }\n    }, _callee39);\n  }));\n  return _deleteToken$.apply(this, arguments);\n}\n\nfunction onMessage$1(messaging, nextOrObserver) {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(\"only-available-in-window\"\n    /* AVAILABLE_IN_WINDOW */\n    );\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n  return function () {\n    messaging.onMessageHandler = null;\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\n\n\nfunction getMessagingInWindow() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(function (isSupported) {\n    // If `isWindowSupported()` resolved, but returned false.\n    if (!isSupported) {\n      throw ERROR_FACTORY.create(\"unsupported-browser\"\n      /* UNSUPPORTED_BROWSER */\n      );\n    }\n  }, function (_) {\n    // If `isWindowSupported()` rejected.\n    throw ERROR_FACTORY.create(\"indexed-db-unsupported\"\n    /* INDEXED_DB_UNSUPPORTED */\n    );\n  });\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n/**\r\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\r\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\r\n * instance.\r\n *\r\n * If a notification permission isn't already granted, this method asks the user for permission. The\r\n * returned promise rejects if the user does not allow the app to show notifications.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param options - Provides an optional vapid key and an optinoal service worker registration\r\n *\r\n * @returns The promise resolves with an FCM registration token.\r\n *\r\n * @public\r\n */\n\n\nfunction getToken(_x59, _x60) {\n  return _getToken.apply(this, arguments);\n}\n/**\r\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\r\n * the {@link Messaging} instance from the push subscription.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n *\r\n * @returns The promise resolves when the token has been successfully deleted.\r\n *\r\n * @public\r\n */\n\n\nfunction _getToken() {\n  _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(messaging, options) {\n    return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n      while (1) {\n        switch (_context40.prev = _context40.next) {\n          case 0:\n            messaging = getModularInstance(messaging);\n            return _context40.abrupt(\"return\", getToken$1(messaging, options));\n\n          case 2:\n          case \"end\":\n            return _context40.stop();\n        }\n      }\n    }, _callee40);\n  }));\n  return _getToken.apply(this, arguments);\n}\n\nfunction deleteToken(messaging) {\n  messaging = getModularInstance(messaging);\n  return deleteToken$1(messaging);\n}\n/**\r\n * When a push message is received and the user is currently on a page for your origin, the\r\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\r\n * the push message.\r\n *\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined,\r\n *     is called when a message is received and the user is currently viewing your page.\r\n * @returns To stop listening for messages execute this returned function.\r\n *\r\n * @public\r\n */\n\n\nfunction onMessage(messaging, nextOrObserver) {\n  messaging = getModularInstance(messaging);\n  return onMessage$1(messaging, nextOrObserver);\n}\n/**\r\n * Firebase Cloud Messaging\r\n *\r\n * @packageDocumentation\r\n */\n\n\nregisterMessagingInWindow();\nexport { deleteToken, getMessagingInWindow as getMessaging, getToken, isWindowSupported as isSupported, onMessage };","map":{"version":3,"sources":["../util/src/constants.ts","../util/src/environment.ts","../util/src/errors.ts","../util/src/compat.ts","../component/src/component.ts","../../node_modules/idb/build/wrap-idb-value.js","../../node_modules/idb/build/index.js","../installations/src/util/constants.ts","../installations/src/util/errors.ts","../installations/src/functions/common.ts","../installations/src/functions/create-installation-request.ts","../installations/src/util/sleep.ts","../installations/src/helpers/buffer-to-base64-url-safe.ts","../installations/src/helpers/generate-fid.ts","../installations/src/util/get-key.ts","../installations/src/helpers/fid-changed.ts","../installations/src/helpers/idb-manager.ts","../installations/src/helpers/get-installation-entry.ts","../installations/src/functions/generate-auth-token-request.ts","../installations/src/helpers/refresh-auth-token.ts","../installations/src/api/get-id.ts","../installations/src/api/get-token.ts","../installations/src/helpers/extract-app-config.ts","../installations/src/functions/config.ts","../installations/src/index.ts","../messaging/src/util/constants.ts","../messaging/src/interfaces/internal-message-payload.ts","../messaging/src/helpers/array-base64-translator.ts","../messaging/src/helpers/migrate-old-database.ts","../messaging/src/internals/idb-manager.ts","../messaging/src/util/errors.ts","../messaging/src/internals/requests.ts","../messaging/src/internals/token-manager.ts","../messaging/src/helpers/externalizePayload.ts","../messaging/src/helpers/is-console-message.ts","../messaging/src/helpers/logToFirelog.ts","../messaging/src/helpers/extract-app-config.ts","../messaging/src/messaging-service.ts","../messaging/src/helpers/registerDefaultSw.ts","../messaging/src/helpers/updateSwReg.ts","../messaging/src/helpers/updateVapidKey.ts","../messaging/src/api/getToken.ts","../messaging/src/helpers/logToScion.ts","../messaging/src/listeners/window-listener.ts","../messaging/src/helpers/register.ts","../messaging/src/api/isSupported.ts","../messaging/src/api/deleteToken.ts","../messaging/src/api/onMessage.ts","../messaging/src/api.ts","../messaging/src/index.ts"],"names":["ERROR_FACTORY","getHeaders","getKey","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","getToken","extractAppConfig","getMissingValueError","name","version","MessageType","deleteToken","_getToken","_deleteToken","_onMessage"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: (e as Error)?.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics =\n    await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","/**\n * Firebase Cloud Messaging\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport { Messaging } from './interfaces/public-types';\nimport { registerMessagingInWindow } from './helpers/register';\n\nexport {\n  getToken,\n  deleteToken,\n  onMessage,\n  getMessagingInWindow as getMessaging\n} from './api';\nexport { isWindowSupported as isSupported } from './api/isSupported';\nexport * from './interfaces/public-types';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging': Messaging;\n  }\n}\n\nregisterMessagingInWindow();\n"]},"metadata":{},"sourceType":"module"}