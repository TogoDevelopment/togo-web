{"ast":null,"code":"import ReactPaginate from'react-paginate';import React from'react';import\"./Pagination.css\";export default function PaginateComp(_ref){var totalNumOfRecs=_ref.totalNumOfRecs,activePage=_ref.activePage,pageSize=_ref.pageSize,setActive=_ref.setActive;return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:\"center\"}},totalNumOfRecs/pageSize!==0&&/*#__PURE__*/React.createElement(ReactPaginate,{previousLabel:'<',nextLabel:'>',breakLabel:'...',breakClassName:'dots-break',pageCount:Math.ceil(totalNumOfRecs/pageSize),marginPagesDisplayed:2,pageRangeDisplayed:5,onPageChange:function onPageChange(data){setActive(data.selected);},initialPage:activePage,containerClassName:'paginate',activeClassName:'active-page',nextClassName:\"next-li\",pageClassName:\"page-li\",previousClassName:\"prev-li\"}));}/* import React, { useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nfunction CustomPagination({totalNumOfRecs, activePage, pageSize, setActive}){\r\n\r\n    const pagesArr = useMemo(() => {\r\n        const numOfPages = Math.ceil(totalNumOfRecs / pageSize);\r\n        return { \r\n            numOfPages,\r\n            items: Array.from({length: numOfPages}, (_, i) => i + 1)\r\n        };\r\n    }, [totalNumOfRecs, pageSize]);\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Pagination style={{display: \"inline-flex\"}}>\r\n                <Pagination.First \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(0);\r\n                    }}\r\n                />\r\n                <Pagination.Prev \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(activePage - 1 < 0 ? 0 : activePage -1 );\r\n                    }}\r\n                />\r\n                {\r\n                    pagesArr.items.map((_, i) => {\r\n                        return (\r\n                            <Pagination.Item \r\n                                onClick={()=>setActive(i)}\r\n                                active={i === activePage}\r\n                            >\r\n                                {i + 1}\r\n                            </Pagination.Item>\r\n                        )}\r\n                    )\r\n                }\r\n                <Pagination.Next \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        let numOfPages = pagesArr.numOfPages - 1;\r\n                        setActive(activePage + 1 > numOfPages ? numOfPages : activePage + 1);\r\n                    }}\r\n                />\r\n                <Pagination.Last \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        setActive(pagesArr.numOfPages - 1);\r\n                    }}\r\n                />\r\n            </Pagination>\r\n        </div>\r\n    );\r\n}\r\n */","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Pagination/Pagination.jsx"],"names":["ReactPaginate","React","PaginateComp","totalNumOfRecs","activePage","pageSize","setActive","textAlign","Math","ceil","data","selected"],"mappings":"AAAA,MAAOA,CAAAA,aAAP,KAA0B,gBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,kBAAP,CAEA,cAAe,SAASC,CAAAA,YAAT,MAAwE,IAAjDC,CAAAA,cAAiD,MAAjDA,cAAiD,CAAjCC,UAAiC,MAAjCA,UAAiC,CAArBC,QAAqB,MAArBA,QAAqB,CAAXC,SAAW,MAAXA,SAAW,CACnF,mBACI,2BAAK,KAAK,CAAE,CAACC,SAAS,CAAE,QAAZ,CAAZ,EACCJ,cAAc,CAAGE,QAAjB,GAA8B,CAA9B,eAAmC,oBAAC,aAAD,EAChC,aAAa,CAAE,GADiB,CAEhC,SAAS,CAAE,GAFqB,CAGhC,UAAU,CAAE,KAHoB,CAIhC,cAAc,CAAE,YAJgB,CAKhC,SAAS,CAAEG,IAAI,CAACC,IAAL,CAAUN,cAAc,CAAGE,QAA3B,CALqB,CAMhC,oBAAoB,CAAE,CANU,CAOhC,kBAAkB,CAAE,CAPY,CAQhC,YAAY,CAAE,sBAACK,IAAD,CAAQ,CAClBJ,SAAS,CAACI,IAAI,CAACC,QAAN,CAAT,CACH,CAV+B,CAWhC,WAAW,CAAEP,UAXmB,CAYhC,kBAAkB,CAAE,UAZY,CAahC,eAAe,CAAE,aAbe,CAchC,aAAa,CAAC,SAdkB,CAehC,aAAa,CAAC,SAfkB,CAgBhC,iBAAiB,CAAC,SAhBc,EADpC,CADJ,CAsBH,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ReactPaginate from 'react-paginate';\r\nimport React from 'react';\r\nimport \"./Pagination.css\";\r\n\r\nexport default function PaginateComp({totalNumOfRecs, activePage, pageSize, setActive}){\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n        {totalNumOfRecs / pageSize !== 0 && <ReactPaginate\r\n            previousLabel={'<'}\r\n            nextLabel={'>'}\r\n            breakLabel={'...'}\r\n            breakClassName={'dots-break'}\r\n            pageCount={Math.ceil(totalNumOfRecs / pageSize)}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={(data)=>{\r\n                setActive(data.selected);\r\n            }}\r\n            initialPage={activePage}\r\n            containerClassName={'paginate'}\r\n            activeClassName={'active-page'}\r\n            nextClassName=\"next-li\"\r\n            pageClassName=\"page-li\"\r\n            previousClassName=\"prev-li\"\r\n        />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/* import React, { useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nfunction CustomPagination({totalNumOfRecs, activePage, pageSize, setActive}){\r\n\r\n    const pagesArr = useMemo(() => {\r\n        const numOfPages = Math.ceil(totalNumOfRecs / pageSize);\r\n        return { \r\n            numOfPages,\r\n            items: Array.from({length: numOfPages}, (_, i) => i + 1)\r\n        };\r\n    }, [totalNumOfRecs, pageSize]);\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <Pagination style={{display: \"inline-flex\"}}>\r\n                <Pagination.First \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(0);\r\n                    }}\r\n                />\r\n                <Pagination.Prev \r\n                    disabled={activePage === 0}\r\n                    onClick={()=>{\r\n                        setActive(activePage - 1 < 0 ? 0 : activePage -1 );\r\n                    }}\r\n                />\r\n                {\r\n                    pagesArr.items.map((_, i) => {\r\n                        return (\r\n                            <Pagination.Item \r\n                                onClick={()=>setActive(i)}\r\n                                active={i === activePage}\r\n                            >\r\n                                {i + 1}\r\n                            </Pagination.Item>\r\n                        )}\r\n                    )\r\n                }\r\n                <Pagination.Next \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        let numOfPages = pagesArr.numOfPages - 1;\r\n                        setActive(activePage + 1 > numOfPages ? numOfPages : activePage + 1);\r\n                    }}\r\n                />\r\n                <Pagination.Last \r\n                    disabled={activePage === pagesArr.numOfPages - 1}\r\n                    onClick={()=>{\r\n                        setActive(pagesArr.numOfPages - 1);\r\n                    }}\r\n                />\r\n            </Pagination>\r\n        </div>\r\n    );\r\n}\r\n */"]},"metadata":{},"sourceType":"module"}