{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/MyNetworkDropDown.jsx\",\n    _this2 = this;\n\nimport React, { useState, Fragment } from \"react\";\nimport { Dropdown, FormControl, Spinner } from \"react-bootstrap\";\nimport { useIntl } from \"react-intl\";\nimport translate from \"../i18n/translate\";\nexport default function MyNetworkDropDown(_ref) {\n  var _network$map,\n      _this = this;\n\n  var network = _ref.network,\n      onSearch = _ref.onSearch,\n      _onSelect = _ref.onSelect,\n      selectedMember = _ref.selectedMember,\n      loading = _ref.loading,\n      typeLoad = _ref.typeLoad;\n  // console.log(selectedMember)\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"togo-dropdown mt-2\",\n    onSelect: function onSelect(event) {\n      if (typeLoad == \"2\") {\n        _onSelect(network[event]);\n      } else {\n        console.log(\"not barq\");\n      } //setSelectedPickUpAddress(deliverAddresses[event]);\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"transparent\",\n    className: \"w-100 text-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-inline-block\",\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, selectedMember && selectedMember.FullName || translate(\"TEMP.SELECT_MEMBER\")))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    variant: \"light\",\n    renderOnMount: true,\n    as: CustomMenu,\n    onSearch: onSearch,\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, loading && /*#__PURE__*/React.createElement(Dropdown.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    size: \"lg\",\n    animation: \"border\",\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), (_network$map = network.map) === null || _network$map === void 0 ? void 0 : _network$map.call(network, function (networkMember, index) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }, networkMember.FullName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }\n    }, networkMember.PhoneNumber)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, networkMember.deliveryPrice + \" NIS\"))), /*#__PURE__*/React.createElement(Dropdown.Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }));\n  })));\n}\nvar CustomMenu = React.forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n      style = _ref2.style,\n      className = _ref2.className,\n      onSearch = _ref2.onSearch,\n      labeledBy = _ref2['aria-labelledby'];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var intl = useIntl();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: style,\n    className: className,\n    \"aria-labelledby\": labeledBy,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    autoFocus: true,\n    className: \"mx-3 my-2\",\n    style: {\n      width: \"93%\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"TEMP.MEMBER_SEARCH\"\n    }),\n    onChange: function onChange(e) {\n      //setValue(e.target.value);\n      onSearch(e.target.value);\n    } //value={value}\n    ,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, React.Children.toArray(children).filter(function (child) {\n    return !value || child.props.children.toLowerCase().startsWith(value);\n  })));\n});","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/MyNetworkDropDown.jsx"],"names":["React","useState","Fragment","Dropdown","FormControl","Spinner","useIntl","translate","MyNetworkDropDown","network","onSearch","onSelect","selectedMember","loading","typeLoad","event","console","log","width","FullName","CustomMenu","map","networkMember","index","PhoneNumber","deliveryPrice","forwardRef","ref","children","style","className","labeledBy","value","setValue","intl","formatMessage","id","e","target","Children","toArray","filter","child","props","toLowerCase","startsWith"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport { Dropdown, FormControl, Spinner } from \"react-bootstrap\";\r\nimport { useIntl } from \"react-intl\";\r\nimport translate from \"../i18n/translate\";\r\n\r\nexport default function MyNetworkDropDown({ network, onSearch, onSelect, selectedMember, loading, typeLoad }) {\r\n\r\n    // console.log(selectedMember)\r\n\r\n    return (\r\n        <Dropdown\r\n            className=\"togo-dropdown mt-2\"\r\n            onSelect={(event) => {\r\n                if (typeLoad == \"2\") {\r\n                    onSelect(network[event]);\r\n                } else {\r\n                    console.log(\"not barq\");\r\n                }\r\n                \r\n                //setSelectedPickUpAddress(deliverAddresses[event]);\r\n            }}\r\n        >\r\n            <Dropdown.Toggle variant=\"transparent\" className=\"w-100 text-start\">\r\n                <div className=\"d-inline-block\" style={{ width: \"97%\" }}>\r\n                    <div>{(selectedMember && selectedMember.FullName) || translate(\"TEMP.SELECT_MEMBER\")}</div>\r\n                    { /*<div>{(selectedNetworkMember && selectedNetworkMember.PhoneNumber)}</div>*/}\r\n                </div>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu variant=\"light\" renderOnMount={true} as={CustomMenu} onSearch={onSearch} className=\"w-100\">\r\n                {loading &&\r\n                    <Dropdown.Item >\r\n                        <Spinner size=\"lg\" animation=\"border\" variant=\"light\" />\r\n                    </Dropdown.Item>\r\n                }\r\n                {/* asign to all commented */}\r\n                {/* <Dropdown.Item eventKey=\"-1\">\r\n                    <div>{translate(\"TEMP.TO_ALL_MEMBERS\")}</div>\r\n                </Dropdown.Item> */}\r\n                <Dropdown.Divider />\r\n                {network.map?.((networkMember, index) => {\r\n                    return (\r\n                        <Fragment key={index}>\r\n                            <Dropdown.Item eventKey={index}>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                    <div>\r\n                                        <div>{networkMember.FullName}</div>\r\n                                        <div>{networkMember.PhoneNumber}</div>\r\n                                    </div>\r\n                                    <div>\r\n                                        {networkMember.deliveryPrice + \" NIS\"}\r\n                                    </div>\r\n                                </div>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    )\r\n}\r\n\r\nconst CustomMenu = React.forwardRef(\r\n    ({ children, style, className, onSearch, 'aria-labelledby': labeledBy }, ref) => {\r\n        const [value, setValue] = useState('');\r\n        const intl = useIntl();\r\n        return (\r\n            <div\r\n                ref={ref}\r\n                style={style}\r\n                className={className}\r\n                aria-labelledby={labeledBy}\r\n            >\r\n                <FormControl\r\n                    autoFocus\r\n                    className=\"mx-3 my-2\"\r\n                    style={{ width: \"93%\" }}\r\n                    placeholder={intl.formatMessage({ id: \"TEMP.MEMBER_SEARCH\" })}\r\n                    onChange={(e) => {\r\n                        //setValue(e.target.value);\r\n                        onSearch(e.target.value);\r\n                    }}\r\n                //value={value}\r\n                />\r\n                <ul className=\"list-unstyled\">\r\n                    {React.Children.toArray(children).filter(\r\n                        (child) =>\r\n                            !value || child.props.children.toLowerCase().startsWith(value),\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    },\r\n);"]},"metadata":{},"sourceType":"module"}