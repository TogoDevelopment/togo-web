{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/Orders/Main.jsx\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { getFunctions, GetTransactions } from \"../../APIs/OrdersAPIs\";\nimport { OrdersTabularView } from \"./OrdersTabularView\";\nimport { Box } from \"@chakra-ui/react\";\nimport Invoice from \"../Invoice/Invoice\";\nimport { isTeamMember, isTransporter, isTransporterMaster } from \"../../Util\";\nimport Loader from \"../Loader/Loader\";\nimport { toastMessage } from \"../../Actions/GeneralActions\";\nimport { useDispatch } from \"react-redux\";\nimport translate from \"../../i18n/translate\";\nimport { useHistory } from \"react-router-dom\";\nimport PaginateComp from \"../Pagination/Pagination\";\nimport newproduct from \"../../assets/images/new-product.png\";\nimport processingOrder from \"../../assets/images/processing-time.png\";\nimport receipt from \"../../assets/images/receipt.png\";\nimport processedOrder from \"../../assets/images/order-processed.png\";\nimport voucher from \"../../assets/images/voucher.png\";\nimport think from \"../../assets/images/affiliate-marketing.png\";\nimport AdminBoard from \"../AdminBoard\";\nimport { CreateNewOrder } from \"../CreateNewOrder\";\nimport \"./Main.css\";\nimport CreateAddress from \"../CreateAddress\";\nimport { Button } from \"react-bootstrap\";\nimport Network from \"../Network\";\nimport { PAGE_SIZE } from \"../../APIs/AuthenticationAPIs\"; //import OrdersCardView from \"./OrdersCardView\";\n\nimport Transactions from \"../FinancialTransactions/FinancialTransactions\";\n/* edited (import Transactions) */\n\nvar styles = {\n  navImg: {\n    width: \"30px\",\n    height: \"30px\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  },\n  navLal: {\n    display: \"inline-block\",\n    margin: \"0 5px\",\n    verticalAlign: \"middle\",\n    color: \"var(--bs-dark)\"\n  }\n};\n\nvar getCurrentPage = function getCurrentPage(history) {\n  var pathname = history.location.pathname;\n  return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n};\n\nvar Main = function Main() {\n  var _getCurrentPage;\n\n  var history = useHistory();\n\n  var _useState = useState((_getCurrentPage = getCurrentPage(history)) !== null && _getCurrentPage !== void 0 ? _getCurrentPage : isTeamMember() ? \"current-orders\" : \"all-orders\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orders = _useState4[0],\n      setOrders = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalNumOfRecs = _useState6[0],\n      setTotalNumberOfRecs = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      activePage = _useState8[0],\n      setActivePage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      invoices = _useState10[0],\n      setInvoices = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      transactions = _useState12[0],\n      setTransactions = _useState12[1];\n  /* edited (add transactions to state) */\n\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loading = _useState14[0],\n      setLoading = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      refresh = _useState16[0],\n      setRefresh = _useState16[1];\n\n  var dispatch = useDispatch();\n\n  var cleanUp = function cleanUp() {\n    setOrders([]);\n    setInvoices([]);\n    setTransactions([]);\n    /* edited (setTransactions([]) added) */\n  };\n\n  useEffect(function () {\n    var currentPage = getCurrentPage(history);\n\n    if (!currentPage || currentPage === '/main') {\n      currentPage = isTeamMember() ? \"current-orders\" : \"all-orders\";\n      var currentPagePath = \"/account/main/\".concat(currentPage);\n      history.push(currentPagePath);\n    }\n\n    setCurrentPage(currentPage);\n    var historyUnListen = history.listen(function (location) {\n      var pathname = location.pathname;\n      var currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n\n      if (!currentPageTmp) {\n        currentPageTmp = isTeamMember() ? \"current-orders\" : \"all-orders\";\n\n        var _currentPagePath = \"account/main/\".concat(currentPageTmp);\n\n        history.push(_currentPagePath);\n      }\n\n      setCurrentPage(currentPageTmp);\n    });\n    return function () {\n      historyUnListen();\n      cleanUp();\n    };\n  }, [history]);\n  var fetchData = useCallback(function (functionType, stateKey) {\n    setLoading(true);\n    getFunctions(functionType, activePage).then(function (resp) {\n      if (resp === 'NotActiveNow') {\n        dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\n      } else {\n        var _resp$data = resp.data,\n            server_response = _resp$data.server_response,\n            total_orders = _resp$data.total_orders;\n\n        switch (stateKey) {\n          case 'orders':\n            setTotalNumberOfRecs(total_orders);\n            setOrders(server_response);\n            break;\n\n          case 'invoices':\n            console.log(\"Invoices: \");\n            console.log(server_response);\n            setInvoices(server_response);\n            break;\n\n          case 'transactions':\n            /* edited (add transactions case) */\n            console.log(\"Transactions: \");\n            console.log(server_response);\n            setTransactions(server_response);\n\n          default:\n            setTotalNumberOfRecs(0);\n            break;\n        }\n      }\n    }).catch(function (err) {\n      dispatch(toastMessage(err));\n    }).finally(function () {\n      setLoading(false);\n    });\n  }, [dispatch, activePage]);\n  useEffect(function () {\n    var stateKey,\n        functionType = null,\n        functionTypeExtra = null;\n    cleanUp();\n\n    switch (currentPage) {\n      case \"all-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\n        break;\n\n      case \"current-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\n        break;\n\n      case \"previous-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\n        break;\n\n      case \"invoices\":\n        stateKey = \"invoices\";\n        functionType = isTransporter() ? \"getTransporterInvoices\" : \"getClientInvoices\";\n        break;\n\n      case \"transactions\":\n        /* edited (add transactions case) */\n        stateKey = \"transactions\";\n        functionTypeExtra = isTransporter() ? \"TeamMemberTransaction\" : null;\n        break;\n\n      default:\n        break;\n    }\n\n    if (functionType) {\n      fetchData(functionType, stateKey);\n    }\n\n    if (functionTypeExtra) {\n      GetTransactions(108).then(function (res) {\n        console.log(\"*********************************\");\n        console.log(res.data);\n      });\n    }\n  }, [currentPage, fetchData, refresh]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, !isTransporter() && /*#__PURE__*/React.createElement(Box, {\n    d: \"flex\",\n    justifyContent: \"right\",\n    py: \"2\",\n    px: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-inline-e-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"font-weight-bold btn-grad text-white\",\n    variant: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.ADD_ADDRESS\")))), /*#__PURE__*/React.createElement(CreateNewOrder, {\n    onSuccess: function onSuccess() {\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 20,\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    justify: true,\n    variant: \"tabs\",\n    defaultActiveKey: currentPage,\n    activeKey: currentPage,\n    onSelect: function onSelect(eventKey) {\n      return history.push(\"/account/main/\".concat(eventKey));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, !isTeamMember() && /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"all-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: newproduct,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.NEW_ORDERS\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"current-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: processingOrder,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.IN_PROCESS_ORDER\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"previous-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: processedOrder,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.COMPLETED_OR_CANCELED_ORDER\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 22\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"transactions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: receipt,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.FINANCIAL_TRANSACTIONS\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"invoices\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: voucher,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.INVOICES\")))), isTransporter() && /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"admin\",\n    disabled: !isTransporterMaster(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: think,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, translate(\"ADMIN.MANAGE\")))), isTransporter() && /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"network\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: think,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, translate(\"NETWORK.NETWORK_TITLE\")))))), /*#__PURE__*/React.createElement(Box, {\n    height: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, !!orders && currentPage.indexOf(\"orders\") !== -1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OrdersTabularView, {\n    orders: orders,\n    currentPage: currentPage,\n    update: function update() {\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(PaginateComp, {\n    totalNumOfRecs: totalNumOfRecs,\n    pageSize: PAGE_SIZE,\n    activePage: activePage,\n    setActive: setActivePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  })), currentPage === \"admin\" && isTransporter() && /*#__PURE__*/React.createElement(AdminBoard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 72\n    }\n  }), currentPage === \"network\" && isTransporter() && /*#__PURE__*/React.createElement(Network, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 74\n    }\n  }), !!invoices.length && /*#__PURE__*/React.createElement(Invoice, {\n    invoices: invoices,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 47\n    }\n  }))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Orders/Main.jsx"],"names":["React","useCallback","useEffect","useState","Nav","getFunctions","GetTransactions","OrdersTabularView","Box","Invoice","isTeamMember","isTransporter","isTransporterMaster","Loader","toastMessage","useDispatch","translate","useHistory","PaginateComp","newproduct","processingOrder","receipt","processedOrder","voucher","think","AdminBoard","CreateNewOrder","CreateAddress","Button","Network","PAGE_SIZE","Transactions","styles","navImg","width","height","display","verticalAlign","navLal","margin","color","getCurrentPage","history","pathname","location","substr","lastIndexOf","length","Main","currentPage","setCurrentPage","orders","setOrders","totalNumOfRecs","setTotalNumberOfRecs","activePage","setActivePage","invoices","setInvoices","transactions","setTransactions","loading","setLoading","refresh","setRefresh","dispatch","cleanUp","currentPagePath","push","historyUnListen","listen","currentPageTmp","fetchData","functionType","stateKey","then","resp","data","server_response","total_orders","console","log","catch","err","finally","functionTypeExtra","res","marginBottom","marginTop","eventKey","indexOf"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport {getFunctions, GetTransactions} from \"../../APIs/OrdersAPIs\";\r\nimport {OrdersTabularView} from \"./OrdersTabularView\";\r\nimport {Box} from \"@chakra-ui/react\";\r\nimport Invoice from \"../Invoice/Invoice\";\r\nimport {isTeamMember, isTransporter, isTransporterMaster} from \"../../Util\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {toastMessage} from \"../../Actions/GeneralActions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport translate from \"../../i18n/translate\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PaginateComp from \"../Pagination/Pagination\";\r\n\r\nimport newproduct from \"../../assets/images/new-product.png\";\r\nimport processingOrder from \"../../assets/images/processing-time.png\";\r\nimport receipt from \"../../assets/images/receipt.png\";\r\nimport processedOrder from \"../../assets/images/order-processed.png\";\r\nimport voucher from \"../../assets/images/voucher.png\";\r\nimport think from \"../../assets/images/affiliate-marketing.png\";\r\n\r\nimport AdminBoard from \"../AdminBoard\";\r\nimport { CreateNewOrder } from \"../CreateNewOrder\";\r\nimport \"./Main.css\";\r\nimport CreateAddress from \"../CreateAddress\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Network from \"../Network\";\r\nimport { PAGE_SIZE } from \"../../APIs/AuthenticationAPIs\";\r\n//import OrdersCardView from \"./OrdersCardView\";\r\n\r\nimport Transactions from \"../FinancialTransactions/FinancialTransactions\"; /* edited (import Transactions) */\r\n\r\nconst styles = {\r\n    navImg: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        display: \"inline-block\",\r\n\r\n        verticalAlign: \"middle\",\r\n    },\r\n    navLal: {\r\n        display: \"inline-block\",\r\n        margin: \"0 5px\",\r\n        verticalAlign: \"middle\",\r\n        color: \"var(--bs-dark)\"\r\n    }\r\n};\r\n\r\nconst getCurrentPage = (history) => {\r\n    const pathname = history.location.pathname;\r\n    return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n}\r\n\r\nconst Main = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [currentPage, setCurrentPage] = useState(getCurrentPage(history) ?? (isTeamMember() ? \"current-orders\" : \"all-orders\"));\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalNumOfRecs, setTotalNumberOfRecs] = useState(0);\r\n    const [activePage, setActivePage] = useState(0);\r\n    const [invoices, setInvoices] = useState([]);\r\n    const [transactions, setTransactions] = useState([]); /* edited (add transactions to state) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const cleanUp = () => {\r\n        setOrders([]);\r\n        setInvoices([]);\r\n        setTransactions([]); /* edited (setTransactions([]) added) */\r\n    };\r\n\r\n    useEffect(() => {\r\n        let currentPage = getCurrentPage(history);\r\n        if (!currentPage || currentPage === '/main') {\r\n            currentPage = isTeamMember() ? \"current-orders\" : \"all-orders\";\r\n            let currentPagePath = `/account/main/${currentPage}`;\r\n            history.push(currentPagePath);\r\n        }\r\n        setCurrentPage(currentPage);\r\n\r\n        let historyUnListen = history.listen(location => {\r\n            const pathname = location.pathname;\r\n            let currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n            if (!currentPageTmp) {\r\n                currentPageTmp = isTeamMember() ? \"current-orders\" : \"all-orders\";\r\n                let currentPagePath = `account/main/${currentPageTmp}`;\r\n                history.push(currentPagePath);\r\n            }\r\n            setCurrentPage(currentPageTmp);\r\n        });\r\n\r\n        return () => {\r\n            historyUnListen();\r\n            cleanUp();\r\n        }\r\n    }, [history]);\r\n\r\n    const fetchData = useCallback((functionType, stateKey) => {\r\n        setLoading(true);\r\n        getFunctions(functionType, activePage)\r\n            .then(resp => {\r\n                if (resp === 'NotActiveNow') {\r\n                    dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\r\n                } else {\r\n                    const {data: {server_response, total_orders}} = resp;\r\n                    switch (stateKey) {\r\n                        case 'orders':\r\n                            setTotalNumberOfRecs(total_orders);\r\n                            setOrders(server_response);\r\n                            break;\r\n                        case 'invoices':\r\n                            console.log(\"Invoices: \");\r\n                            console.log(server_response);\r\n                            setInvoices(server_response);\r\n                            break;\r\n                        case 'transactions': /* edited (add transactions case) */\r\n                            console.log(\"Transactions: \");\r\n                            console.log(server_response);\r\n                            setTransactions(server_response);\r\n                        default:\r\n                            setTotalNumberOfRecs(0);\r\n                            break;\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(toastMessage(err));\r\n            }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }, [dispatch, activePage]);\r\n\r\n    useEffect(() => {\r\n        let stateKey, functionType = null, functionTypeExtra = null;\r\n        cleanUp();\r\n        switch (currentPage) {\r\n            case \"all-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\r\n                break;\r\n            case \"current-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\r\n                break;\r\n            case \"previous-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\r\n                break;\r\n            case \"invoices\":\r\n                stateKey = \"invoices\";\r\n                functionType = isTransporter() ? \"getTransporterInvoices\" : \"getClientInvoices\";\r\n                break;\r\n            case \"transactions\": /* edited (add transactions case) */\r\n                stateKey = \"transactions\";\r\n                functionTypeExtra = isTransporter() ? \"TeamMemberTransaction\" : null;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if(functionType){\r\n            fetchData(functionType, stateKey);\r\n        }\r\n        if(functionTypeExtra){\r\n            GetTransactions(108).then((res) => {\r\n                console.log(\"*********************************\");\r\n                console.log(res.data);\r\n            });\r\n        }\r\n    }, [currentPage, fetchData, refresh]);\r\n\r\n    return (\r\n        <div>\r\n            {!isTransporter() && <Box d=\"flex\" justifyContent=\"right\" py=\"2\" px=\"3\">\r\n                <div className=\"m-inline-e-2\">\r\n                    <CreateAddress>\r\n                        <Button\r\n                            className=\"font-weight-bold btn-grad text-white\"\r\n                            variant=\"\"\r\n                            >\r\n                            {translate(\"ORDERS.ADD_ADDRESS\")}\r\n                        </Button>\r\n                    </CreateAddress>\r\n                </div>\r\n                <CreateNewOrder onSuccess={()=>{\r\n                    setRefresh(!refresh);\r\n                }}/>\r\n            </Box>}\r\n            <div style={{marginBottom: 20, marginTop: 20}}>\r\n                <Nav\r\n                    justify\r\n                    variant=\"tabs\"\r\n                    defaultActiveKey={currentPage}\r\n                    activeKey={currentPage}\r\n                    onSelect={(eventKey) => history.push(`/account/main/${eventKey}`)}\r\n                >\r\n                    {!isTeamMember() && <Nav.Item>\r\n                        <Nav.Link eventKey=\"all-orders\">\r\n                            <img src={newproduct} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>{translate(\"ORDERS.NEW_ORDERS\")}</div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>}\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"current-orders\">\r\n                            <img src={processingOrder} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>{translate(\"ORDERS.IN_PROCESS_ORDER\")}</div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"previous-orders\">\r\n                            <img src={processedOrder} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.COMPLETED_OR_CANCELED_ORDER\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                     <Nav.Item> {/* edited (uncomment transactions tab) */}\r\n                        <Nav.Link eventKey=\"transactions\">\r\n                            <img src={receipt} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.FINANCIAL_TRANSACTIONS\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item> \r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"invoices\">\r\n                            <img src={voucher} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.INVOICES\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    {isTransporter() && <Nav.Item>\r\n                        <Nav.Link eventKey=\"admin\" disabled={!isTransporterMaster()}>\r\n                            <img src={think} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ADMIN.MANAGE\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>}\r\n                    {isTransporter() && <Nav.Item>\r\n                        <Nav.Link eventKey=\"network\">\r\n                            <img src={think} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"NETWORK.NETWORK_TITLE\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>}\r\n                </Nav>\r\n            </div>\r\n\r\n            <Box height=\"400px\">\r\n                {loading ? <Loader/> : (\r\n                    <>\r\n                        {!!orders && currentPage.indexOf(\"orders\") !== -1 &&\r\n                        <>\r\n                            {/* <OrdersCardView orders={orders} /> */}\r\n                            <OrdersTabularView\r\n                                orders={orders}\r\n                                currentPage={currentPage}\r\n                                update={()=>{setRefresh(!refresh);}}\r\n                            />\r\n                            <PaginateComp\r\n                                totalNumOfRecs={totalNumOfRecs}\r\n                                pageSize={PAGE_SIZE}\r\n                                activePage={activePage}\r\n                                setActive={setActivePage}\r\n                            />\r\n                        </>\r\n                        }\r\n\r\n                        {currentPage === \"admin\" && isTransporter() && <AdminBoard />}\r\n\r\n                        {currentPage === \"network\" && isTransporter() && <Network />}\r\n\r\n                        {/*!!transactions.length && <Transactions transactions={transactions} /> */}\r\n\r\n                        {!!invoices.length && <Invoice invoices={invoices} /> }\r\n                    </>\r\n                )}\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}