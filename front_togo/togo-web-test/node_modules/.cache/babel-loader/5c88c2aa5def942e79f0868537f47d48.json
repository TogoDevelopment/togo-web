{"ast":null,"code":"import _regeneratorRuntime from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// Import the functions you need from the SDKs you need\nimport{initializeApp}from\"firebase/app\";import{getMessaging,getToken,onMessage}from'firebase/messaging';// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig={apiKey:\"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",authDomain:\"togo-7f889.firebaseapp.com\",projectId:\"togo-7f889\",storageBucket:\"togo-7f889.appspot.com\",messagingSenderId:\"861859089841\",appId:\"1:861859089841:web:5b55bc6bc5573930694190\",measurementId:\"G-4DSC9GYT3S\"};// Initialize Firebase\nvar firebaseApp=initializeApp(firebaseConfig);var messaging=getMessaging(firebaseApp);var REACT_APP_VAPID_KEY=process.env.REACT_APP_VAPID_KEY;var publicKey=REACT_APP_VAPID_KEY;console.log(publicKey);export var getUserToken=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(setTokenFound){var currentToken;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentToken='';_context.prev=1;_context.next=4;return getToken(messaging,{vapidKey:publicKey});case 4:currentToken=_context.sent;if(currentToken){setTokenFound(true);}else{setTokenFound(false);}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.log('An error occurred while retrieving token.',_context.t0);case 11:return _context.abrupt(\"return\",currentToken);case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function getUserToken(_x){return _ref.apply(this,arguments);};}();export var onMessageListener=function onMessageListener(){return new Promise(function(resolve){onMessage(messaging,function(payload){console.log(payload);resolve(payload);});});};","map":null,"metadata":{},"sourceType":"module"}