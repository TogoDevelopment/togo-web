{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { checkAccessAPI } from \"../APIs/AuthenticationAPIs\";\nexport var checkAccess = function checkAccess(qrUUID) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var authenticated;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return checkAccessAPI(qrUUID);\n\n            case 2:\n              authenticated = _context.sent;\n\n              if (authenticated) {\n                dispatch({\n                  type: \"SET_AUTH\",\n                  authenticated: authenticated\n                });\n              }\n\n              return _context.abrupt(\"return\", authenticated);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/Actions/authenticationActions.js"],"names":["checkAccessAPI","checkAccess","qrUUID","dispatch","authenticated","type"],"mappings":";;AAAA,SAAQA,cAAR,QAA6B,4BAA7B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD;AAAA;AAAA,wEAAY,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACTH,cAAc,CAACE,MAAD,CADL;;AAAA;AAC/BE,cAAAA,aAD+B;;AAEnC,kBAAIA,aAAJ,EAAmB;AACfD,gBAAAA,QAAQ,CAAC;AACLE,kBAAAA,IAAI,EAAE,UADD;AAELD,kBAAAA,aAAa,EAAEA;AAFV,iBAAD,CAAR;AAIH;;AAPkC,+CAQ5BA,aAR4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB","sourcesContent":["import {checkAccessAPI} from \"../APIs/AuthenticationAPIs\";\r\n\r\nexport const checkAccess = (qrUUID) => async (dispatch) => {\r\n    let authenticated = await checkAccessAPI(qrUUID);\r\n    if (authenticated) {\r\n        dispatch({\r\n            type: \"SET_AUTH\",\r\n            authenticated: authenticated,\r\n        });\r\n    }\r\n    return authenticated;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}