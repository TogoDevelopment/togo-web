{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers } from \"../../APIs/OrdersAPIs\";\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\";\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/attachment.svg\";\nimport { IoIosGitNetwork } from 'react-icons/io';\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\nimport AddressDropdown from \"../AddressDropdown\";\nimport ClientDropdown from \"../ClientDropdown\";\nimport CreateAddress from \"../CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nimport { isTransporter } from \"../../Util\";\nimport SubmitAndAssignDialog from \"../SubmitAndAssignDialog\";\nimport \"../CreateNewOrder.css\";\nimport { useHistory } from \"react-router\";\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport default function CreateNewOrder(props) {\n  var _this = this;\n\n  var history = useHistory();\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.5rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.2rem\"\n    }\n  };\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openConf = _useState4[0],\n      setOpenConf = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"1\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientInputValue = _useState12[0],\n      setClientInputValue = _useState12[1];\n  /* edited (clientInputValue added) */\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deliverAddresses = _useState14[0],\n      setDeliverAddresses = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allClients = _useState16[0],\n      setAllClients = _useState16[1];\n  /* edited (setAllClients added) Note: not all clients */\n\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedDeliveryAddress = _useState18[0],\n      setSelectedDeliveryAddress = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedPickUpAddress = _useState20[0],\n      setSelectedPickUpAddress = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedClient = _useState22[0],\n      setSelectedClient = _useState22[1];\n  /* edited (setSelectedClient added) */\n\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loading = _useState24[0],\n      setLoading = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      loadingSubmit = _useState26[0],\n      setLoadingSubmit = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      openAssignDialog = _useState28[0],\n      setOpenAssignDialog = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      assignAddressClint = _useState30[0],\n      setAssignAddressClint = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      assignDeliveryParams = _useState32[0],\n      setAssignDeliveryParams = _useState32[1];\n  /* edited (validation variables) */\n\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      beginValidation = _useState34[0],\n      setBeginValidation = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedClientCheck = _useState36[0],\n      setSelectedClientCheckShow = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      deliveryCostCheck = _useState38[0],\n      setDeliveryCostCheckShow = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      selectedPickUpAddressCheck = _useState40[0],\n      setSelectedPickUpAddressCheckShow = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      selectedDeliveryAddressCheck = _useState42[0],\n      setSelectedDeliveryAddressCheckShow = _useState42[1];\n\n  var _useState43 = useState([{\n    name: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    type: \"1\",\n    active: \"active\"\n  }, {\n    name: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    type: \"2\",\n    active: \"\"\n  }]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      deliverTypeArr = _useState44[0],\n      setDeliverTypeArr = _useState44[1];\n\n  var _useState45 = useState([]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      myNetwork = _useState46[0],\n      setMyNetwork = _useState46[1];\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      networkInputValue = _useState48[0],\n      setNetworkInputValue = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      networkLoading = _useState50[0],\n      setNetworkLoading = _useState50[1];\n\n  var deliveryCostRef = useRef();\n  /* edited (deliveryCostRef added) */\n  // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\n\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  useEffect(function () {\n    setNetworkLoading(true);\n    console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\n    GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then(function (res) {\n      setNetworkLoading(false);\n      setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\n    });\n  }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]);\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetDefinedAddresses(inputValue).then(function (res) {\n          setLoading(false);\n          setDeliverAddresses(res.data);\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  /* edited (get all clients) */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetTransporterClients().then(function (res) {\n          setLoading(false);\n          setAllClients(res.data.membersData.filter(function (client) {\n            return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n          }));\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, open]);\n  /* edited (show and hide validation error messages handles) */\n\n  function showValidation() {\n    // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\n    if (isTransporter()) {\n      if (selectedClient) {\n        setSelectedClientCheckShow(false);\n      } else {\n        setSelectedClientCheckShow(true);\n      }\n\n      if (deliveryCostRef && deliveryCostRef.current.value > 0) {\n        setDeliveryCostCheckShow(false);\n      } else {\n        setDeliveryCostCheckShow(true);\n      }\n    }\n\n    if (selectedPickUpAddress) {\n      setSelectedPickUpAddressCheckShow(false);\n    } else {\n      setSelectedPickUpAddressCheckShow(true);\n    }\n\n    if (selectedDeliveryAddress) {\n      setSelectedDeliveryAddressCheckShow(false);\n    } else {\n      setSelectedDeliveryAddressCheckShow(true);\n    } // console.log(\"show validation\");\n\n  }\n\n  function hideValidation() {\n    setBeginValidation(false);\n    setSelectedClientCheckShow(false);\n    setDeliveryCostCheckShow(false);\n    setSelectedPickUpAddressCheckShow(false);\n    setSelectedDeliveryAddressCheckShow(false); // console.log(\"hide validation\");\n  }\n\n  function setCloseAssignDialog() {\n    setOpenAssignDialog(false);\n  }\n\n  function setCloseMainDialog() {\n    setOpen(false);\n  }\n\n  var handleDeliveryTypeClick = function handleDeliveryTypeClick(index, type) {\n    setDeliveryType(type);\n\n    var tempArr = _toConsumableArray(deliverTypeArr);\n\n    for (var i = 0; i < tempArr.length; i++) {\n      tempArr[i].active = \"\";\n    }\n\n    tempArr[index].active = \"active\";\n    setDeliverTypeArr(tempArr);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upperBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    style: {\n      height: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"110px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h3\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, \"My Clients\")), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown\n  /* fofo */\n  , {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 45\n    }\n  }), beginValidation && selectedClientCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 88\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    style: {\n      marginTop: \"9px\"\n    },\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.DELIVERY_COST\"\n    }),\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 45\n    }\n  }), beginValidation && deliveryCostCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 86\n    }\n  }, \"required!\"))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h3\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, \"Order Information\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 49\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"togo-dropdown shadow\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 57\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 61\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2]))))), packageType !== \"1\" && packageType !== \"2\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    style: {\n      marginTop: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 96\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.HEIGHT\"\n    }),\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 65\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WIDTH\"\n    }),\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.LENGTH\"\n    }),\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WEIGHT\"\n    }),\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 61\n    }\n  }))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 49\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggleButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 53\n    }\n  }, deliverTypeArr.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\"),\n      onClick: function onClick() {\n        handleDeliveryTypeClick(index, item.type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"innerRadio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 92\n      }\n    })), \" \", item.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 49\n    }\n  }, deliveryType === \"2\" && /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    style: {\n      width: \"100%\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 57\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedPickUpAddress,\n    selectedAddress: selectedPickUpAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 53\n    }\n  }), beginValidation && selectedPickUpAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 103\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 57\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedDeliveryAddress,\n    selectedAddress: selectedDeliveryAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 53\n    }\n  }), beginValidation && selectedDeliveryAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 105\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\",\n      marginTop: \"30px\"\n    },\n    className: \"btn-grad-circle p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 57\n    }\n  })))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 49\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2 rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.NOTES\"\n    }),\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"30%\",\n      float: \"right\",\n      margin: \"10px 0 10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 37\n    }\n  }, \"Submit\"))))), openAssignDialog && /*#__PURE__*/React.createElement(SubmitAndAssignDialog, {\n    onSuccess: function onSuccess() {\n      return props.onSuccess();\n    },\n    setCloseAssignDialog: setCloseAssignDialog,\n    setCloseMainDialog: setCloseMainDialog,\n    loadingSubmit: loadingSubmit,\n    assignDeliveryParams: assignDeliveryParams,\n    assignAddressClint: assignAddressClint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 29\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 29\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 29\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 29\n    }\n  }, \"Yes\"))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","Table","Card","Container","Row","Col","ListGroup","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","testBarq","GetAllClientNetworkMembers","GetTransporterClients","IoIosGitNetwork","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","useDispatch","toastNotification","isTransporter","SubmitAndAssignDialog","useHistory","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","history","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","dispatch","open","setOpen","openConf","setOpenConf","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","clientInputValue","setClientInputValue","deliverAddresses","setDeliverAddresses","allClients","setAllClients","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","openAssignDialog","setOpenAssignDialog","assignAddressClint","setAssignAddressClint","assignDeliveryParams","setAssignDeliveryParams","beginValidation","setBeginValidation","selectedClientCheck","setSelectedClientCheckShow","deliveryCostCheck","setDeliveryCostCheckShow","selectedPickUpAddressCheck","setSelectedPickUpAddressCheckShow","selectedDeliveryAddressCheck","setSelectedDeliveryAddressCheckShow","name","type","active","deliverTypeArr","setDeliverTypeArr","myNetwork","setMyNetwork","networkInputValue","setNetworkInputValue","networkLoading","setNetworkLoading","deliveryCostRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","console","log","cityId","then","res","data","membersData","timer","setTimeout","clearTimeout","filter","client","FullName","toLowerCase","replaceAll","includes","showValidation","current","value","hideValidation","setCloseAssignDialog","setCloseMainDialog","handleDeliveryTypeClick","index","tempArr","i","length","height","marginTop","formatMessage","id","width","eve","createElement","style","className","backgroundColor","map","item","localStorage","getItem","cursor","float","margin","onSuccess","window"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { ReactComponent as SendIcon } from \"../../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers } from \"../../APIs/OrdersAPIs\";\r\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\"\r\nimport { ReactComponent as FoodIcon } from \"../../assets/images/food.svg\";\r\nimport { ReactComponent as SmBoxIcon } from \"../../assets/images/smallBox.svg\";\r\nimport { ReactComponent as MedBoxIcon } from \"../../assets/images/medbox.svg\";\r\nimport { ReactComponent as BigBoxIcon } from \"../../assets/images/largebox.svg\";\r\nimport { ReactComponent as DeliveryTruckIcon } from \"../../assets/images/deliveryTruck.svg\";\r\nimport { ReactComponent as LocationIcon } from \"../../assets/images/location.svg\";\r\nimport { ReactComponent as AttachmentIcon } from \"../../assets/images/attachment.svg\";\r\nimport { IoIosGitNetwork } from 'react-icons/io';\r\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"../AddressDropdown\";\r\nimport ClientDropdown from \"../ClientDropdown\";\r\nimport CreateAddress from \"../CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\nimport { isTransporter } from \"../../Util\";\r\nimport SubmitAndAssignDialog from \"../SubmitAndAssignDialog\";\r\nimport \"../CreateNewOrder.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport default function CreateNewOrder(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.2rem\"\r\n        },\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState(''); /* edited (clientInputValue added) */\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) Note: not all clients */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const [openAssignDialog, setOpenAssignDialog] = useState(false);\r\n    const [assignAddressClint, setAssignAddressClint] = useState(false);\r\n    const [assignDeliveryParams, setAssignDeliveryParams] = useState(false);\r\n\r\n    /* edited (validation variables) */\r\n\r\n    const [beginValidation, setBeginValidation] = useState(false);\r\n    const [selectedClientCheck, setSelectedClientCheckShow] = useState(false);\r\n    const [deliveryCostCheck, setDeliveryCostCheckShow] = useState(false);\r\n    const [selectedPickUpAddressCheck, setSelectedPickUpAddressCheckShow] = useState(false);\r\n    const [selectedDeliveryAddressCheck, setSelectedDeliveryAddressCheckShow] = useState(false);\r\n\r\n    const [deliverTypeArr, setDeliverTypeArr] = useState([{ name: translate(\"ORDERS.\" + DeliveryTypes[1]), type: \"1\", active: \"active\" }, { name: translate(\"ORDERS.\" + DeliveryTypes[2]), type: \"2\", active: \"\" }]);\r\n\r\n    const [myNetwork, setMyNetwork] = useState([]);\r\n    const [networkInputValue, setNetworkInputValue] = useState('');\r\n    const [networkLoading, setNetworkLoading] = useState('');\r\n\r\n    const deliveryCostRef = useRef(); /* edited (deliveryCostRef added) */\r\n    // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n\r\n        setNetworkLoading(true);\r\n\r\n        console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\r\n\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n\r\n            setNetworkLoading(false);\r\n\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n        });\r\n\r\n    }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetDefinedAddresses(inputValue).then((res) => {\r\n                    setLoading(false);\r\n                    setDeliverAddresses(res.data);\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetTransporterClients().then((res) => {\r\n                    setLoading(false);\r\n\r\n                    setAllClients(res.data.membersData.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, open]);\r\n\r\n    /* edited (show and hide validation error messages handles) */\r\n\r\n    function showValidation() {\r\n        // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\r\n\r\n        if (isTransporter()) {\r\n            if (selectedClient) {\r\n                setSelectedClientCheckShow(false)\r\n            } else {\r\n                setSelectedClientCheckShow(true)\r\n            }\r\n\r\n            if (deliveryCostRef && deliveryCostRef.current.value > 0) {\r\n                setDeliveryCostCheckShow(false)\r\n            } else {\r\n                setDeliveryCostCheckShow(true)\r\n            }\r\n        }\r\n\r\n        if (selectedPickUpAddress) {\r\n            setSelectedPickUpAddressCheckShow(false)\r\n        } else {\r\n            setSelectedPickUpAddressCheckShow(true)\r\n        }\r\n\r\n        if (selectedDeliveryAddress) {\r\n            setSelectedDeliveryAddressCheckShow(false)\r\n        } else {\r\n            setSelectedDeliveryAddressCheckShow(true)\r\n        }\r\n\r\n        // console.log(\"show validation\");\r\n    }\r\n\r\n    function hideValidation() {\r\n        setBeginValidation(false);\r\n        setSelectedClientCheckShow(false);\r\n        setDeliveryCostCheckShow(false);\r\n        setSelectedPickUpAddressCheckShow(false);\r\n        setSelectedDeliveryAddressCheckShow(false);\r\n\r\n        // console.log(\"hide validation\");\r\n    }\r\n\r\n    function setCloseAssignDialog() {\r\n        setOpenAssignDialog(false);\r\n    }\r\n\r\n    function setCloseMainDialog() {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDeliveryTypeClick = (index, type) => {\r\n        setDeliveryType(type);\r\n\r\n        let tempArr = [...deliverTypeArr];\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            tempArr[i].active = \"\";\r\n        }\r\n\r\n        tempArr[index].active = \"active\";\r\n\r\n        setDeliverTypeArr(tempArr);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* upper background */}\r\n            <div className=\"upperBackground\">\r\n            </div>\r\n\r\n            <div className=\"mainContainer\" style={{ height: \"80%\" }}>\r\n                <Container fluid>\r\n                    <Row style={{ marginTop: \"110px\" }}>\r\n                        <span className=\"h3\" style={{ color: \"#26a69a\" }}>My Clients</span>\r\n                    </Row>\r\n                    <Row className=\"mb-4\">\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Body>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-9\">\r\n                                            {/*<Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Client Mobile Number\" ref={clientMobileNumberRef} />*/}\r\n\r\n                                            {/* edited (add clients dropdown) */}\r\n\r\n                                            <ClientDropdown /* fofo */\r\n                                                loading={loading}\r\n                                                clients={allClients}\r\n                                                onSearch={setClientInputValue}\r\n                                                onSelect={setSelectedClient}\r\n                                                selectedClient={selectedClient}\r\n                                            />\r\n\r\n                                            {/* edited (add validation message) */}\r\n                                            {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                                        </div>\r\n                                        <div className=\"col-md-3\">\r\n                                            <Form.Control type=\"number\" style={{ marginTop: \"9px\" }} className=\"rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.DELIVERY_COST\" })} ref={deliveryCostRef} />\r\n\r\n                                            {/* edited (add validation message) */}\r\n                                            {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <span className=\"h3\" style={{ color: \"#26a69a\" }}>Order Information</span>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                {/* <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"ORDERS.CREATE_ORDER\")}</Card.Title>\r\n                                </Card.Header> */}\r\n\r\n                                <ListGroup variant=\"flush\" className=\"my-1\">\r\n\r\n                                    {/* ------------------( package types )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                    {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                                                </div>\r\n\r\n                                                <div className=\"col-lg-4\">\r\n                                                    <Dropdown\r\n                                                        style={{ width: \"100%\" }}\r\n                                                        className=\"togo-dropdown shadow\"\r\n                                                        onSelect={(eve) => {\r\n                                                            setPackageType(eve);\r\n                                                        }}>\r\n                                                        <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                                                            {React.createElement(PackageTypesIcons[packageType], { style: { width: \"20px\", height: \"20px\" }, className: \"me-1\" })}\r\n                                                            <div style={{ width: \"97%\" }}>\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                                                            </div>\r\n                                                        </Dropdown.Toggle>\r\n\r\n                                                        <Dropdown.Menu className=\"w-100\">\r\n                                                            <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                                                <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                                                <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                                                <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                                                <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                                                            </Dropdown.Item>\r\n                                                        </Dropdown.Menu>\r\n                                                    </Dropdown>\r\n                                                </div>\r\n\r\n                                                {packageType !== \"1\" && packageType !== \"2\" && <div className=\"col-lg-8\" style={{ marginTop: \"2px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Group>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    className=\"rounded-22 shadow\"\r\n                                                                    placeholder={intl.formatMessage({ id: \"TEMP.HEIGHT\" })}\r\n                                                                    ref={heightRef}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.WIDTH\" })}\r\n                                                                ref={widthRef}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.LENGTH\" })}\r\n                                                                ref={lengthRef}\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.WEIGHT\" })}\r\n                                                                ref={weightRef}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( delivery type )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                                            </div>\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-10\">\r\n                                                    <div className={\"toggleButtonsContainer\"}>\r\n                                                        {\r\n                                                            deliverTypeArr.map((item, index) => {\r\n                                                                return <div key={index} className={\"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\")} onClick={() => { handleDeliveryTypeClick(index, item.type) }}>\r\n                                                                    <div className=\"radio\"><div className=\"innerRadio\"></div></div> {item.name}\r\n                                                                </div>\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-lg-2\">\r\n                                                    {deliveryType === \"2\" &&\r\n                                                        <Form.Control\r\n                                                            type=\"number\"\r\n                                                            className=\"rounded-22 shadow\" style={{ width: \"100%\" }}\r\n                                                            placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                                            ref={codAmountRef}\r\n                                                        />\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( addresses )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div className=\"w-50 m-inline-e-2\">\r\n                                                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        <LocationIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                        {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                                                    </div>\r\n\r\n                                                    <AddressDropdown\r\n                                                        loading={loading}\r\n                                                        addresses={deliverAddresses}\r\n                                                        onSearch={setInputValue}\r\n                                                        onSelect={setSelectedPickUpAddress}\r\n                                                        selectedAddress={selectedPickUpAddress}\r\n                                                    />\r\n\r\n                                                    {beginValidation && selectedPickUpAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"w-50 m-inline-e-2\">\r\n                                                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                        <SendIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                        <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                                                    </div>\r\n\r\n                                                    <AddressDropdown\r\n                                                        loading={loading}\r\n                                                        addresses={deliverAddresses}\r\n                                                        onSearch={setInputValue}\r\n                                                        onSelect={setSelectedDeliveryAddress}\r\n                                                        selectedAddress={selectedDeliveryAddress}\r\n                                                    />\r\n\r\n                                                    {/* edited (add validation message) */}\r\n                                                    {beginValidation && selectedDeliveryAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                                                </div>\r\n                                                <CreateAddress>\r\n                                                    <div style={{ cursor: \"pointer\", marginTop: \"30px\" }} className=\"btn-grad-circle p-2\">\r\n                                                        <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                                                    </div>\r\n                                                </CreateAddress>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( order notes )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                <AttachmentIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                                            </div>\r\n\r\n                                            <Form.Control type=\"text\" className=\"mt-2 rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.NOTES\" })} ref={notesRef} />\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                                <Card.Footer>\r\n                                    <Button className=\"btn-grad\" style={{ width: \"30%\", float: \"right\", margin: \"10px 0 10px 0\" }}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {openAssignDialog && <SubmitAndAssignDialog\r\n                        onSuccess={() => props.onSuccess()}\r\n                        setCloseAssignDialog={setCloseAssignDialog}\r\n                        setCloseMainDialog={setCloseMainDialog}\r\n                        loadingSubmit={loadingSubmit}\r\n                        assignDeliveryParams={assignDeliveryParams}\r\n                        assignAddressClint={assignAddressClint} />}\r\n\r\n                    <Modal\r\n                        show={openConf}\r\n                        onHide={() => {\r\n\r\n                            setOpenConf(false);\r\n                        }}\r\n                        animation={false}\r\n                        backdrop=\"static\"\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Confirmation</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <p>Would you like to print a waybill ?</p>\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                }}\r\n                            >\r\n                                No\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                    window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                                }}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}