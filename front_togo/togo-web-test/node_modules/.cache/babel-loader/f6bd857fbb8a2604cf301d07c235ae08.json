{"ast":null,"code":"var _jsxFileName = \"/home/system/togo-web-test/src/components/DynamicTable/DynamicTable.js\";\nimport React from 'react';\nimport { Table, Badge } from \"react-bootstrap\";\nimport translate from '../../i18n/translate';\nexport default function DynamicTable(_ref) {\n  var _this = this;\n\n  var columns = _ref.columns,\n      data = _ref.data,\n      onRowSelect = _ref.onRowSelect,\n      selected = _ref.selected;\n  // console.log(data); // temp test\n  return /*#__PURE__*/React.createElement(Table, {\n    hover: true,\n    size: \"sm\",\n    responsive: true,\n    className: \"ms-4 me-4 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, columns.map(function (_ref2, idx) {\n    var label = _ref2.label,\n        key = _ref2.key;\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: key + \"-\" + idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 57\n      }\n    }, label);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, data.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      id: \"tr-\" + item.idOrder,\n      style: {\n        backgroundColor: item.isReviewed == 1 ? \"rgb(103,211,165, 0.3)\" : \"\"\n      },\n      key: index + \"-tr\",\n      onClick:\n      /* onRowSelect ? ()=>{onRowSelect(item, index)} : undefined */\n      console.log(data.isReviewed),\n      className: \"\".concat(selected === index ? \"highlight-row\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, columns.map(function (_ref3, idx) {\n      var key = _ref3.key,\n          format = _ref3.format;\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: key + \"-td\" + idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      }, !!format ? format(item) : item[key]));\n    }));\n  }), !data.length && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: columns.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 34\n    }\n  }, translate(\"ORDERS.NO_ORDERS_FOUND\")))));\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/DynamicTable/DynamicTable.js"],"names":["React","Table","Badge","translate","DynamicTable","columns","data","onRowSelect","selected","map","idx","label","key","item","index","idOrder","backgroundColor","isReviewed","console","log","format","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,KAAf,QAA2B,iBAA3B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEA,eAAe,SAASC,YAAT,OAA8D;AAAA;;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,WAAwB,QAAxBA,WAAwB;AAAA,MAAXC,QAAW,QAAXA,QAAW;AAEzE;AAEA,sBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,IAAlB;AAAuB,IAAA,UAAU,MAAjC;AAAkC,IAAA,SAAS,EAAC,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,OAAO,CAACI,GAAR,CAAY,iBAAeC,GAAf;AAAA,QAAEC,KAAF,SAAEA,KAAF;AAAA,QAASC,GAAT,SAASA,GAAT;AAAA,wBAAuB;AAAI,MAAA,GAAG,EAAEA,GAAG,GAAC,GAAJ,GAAQF,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBC,KAAvB,CAAvB;AAAA,GAAZ,CADL,CADJ,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,IAAI,CAACG,GAAL,CAAS,UAACI,IAAD,EAAOC,KAAP;AAAA,wBACN;AACI,MAAA,EAAE,EAAE,QAAQD,IAAI,CAACE,OADrB;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAEH,IAAI,CAACI,UAAL,IAAmB,CAAnB,GAAuB,uBAAvB,GAAiD;AAApE,OAFX;AAGI,MAAA,GAAG,EAAEH,KAAK,GAAG,KAHjB;AAII,MAAA,OAAO;AAAE;AAA+DI,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACW,UAAjB,CAJ5E;AAKI,MAAA,SAAS,YAAKT,QAAQ,KAAKM,KAAb,GAAqB,eAArB,GAAsC,EAA3C,CALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMKT,OAAO,CAACI,GAAR,CAAY,iBAAgBC,GAAhB;AAAA,UAAEE,GAAF,SAAEA,GAAF;AAAA,UAAOQ,MAAP,SAAOA,MAAP;AAAA,0BACT;AAAI,QAAA,GAAG,EAAER,GAAG,GAAG,KAAN,GAAcF,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,CAAC,CAACU,MAAF,GAAWA,MAAM,CAACP,IAAD,CAAjB,GAA0BA,IAAI,CAACD,GAAD,CAArC,CAFJ,CADS;AAAA,KAAZ,CANL,CADM;AAAA,GAAT,CADD,EAgBC,CAACN,IAAI,CAACe,MAAN,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAI,IAAA,OAAO,EAAEhB,OAAO,CAACgB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BlB,SAAS,CAAC,wBAAD,CAAvC,CAAJ,CAhBjB,CANJ,CADJ;AA2BH;AAAA","sourcesContent":["import React from 'react';\r\nimport {Table, Badge} from \"react-bootstrap\";\r\nimport translate from '../../i18n/translate';\r\n\r\nexport default function DynamicTable({columns, data, onRowSelect, selected}) {\r\n\r\n    // console.log(data); // temp test\r\n\r\n    return (\r\n        <Table hover size=\"sm\" responsive className=\"ms-4 me-4 mt-2\">\r\n            <thead>\r\n                <tr>\r\n                    {columns.map(({label, key}, idx) => <th key={key+\"-\"+idx}>{label}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {data.map((item, index) =>\r\n                <tr \r\n                    id={\"tr-\" + item.idOrder}\r\n                    style={{ backgroundColor: item.isReviewed == 1 ? \"rgb(103,211,165, 0.3)\" : \"\" }}\r\n                    key={index + \"-tr\"} \r\n                    onClick={/* onRowSelect ? ()=>{onRowSelect(item, index)} : undefined */ console.log(data.isReviewed)} \r\n                    className={`${selected === index ? \"highlight-row\": \"\"}`}>\r\n                    {columns.map(({key, format}, idx) =>\r\n                        <td key={key + \"-td\" + idx}>\r\n                            \r\n                            <span>{!!format ? format(item) : item[key]}</span>\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            )}\r\n            {!data.length && <tr><td colSpan={columns.length}>{translate(\"ORDERS.NO_ORDERS_FOUND\")}</td></tr>}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}