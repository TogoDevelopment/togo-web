{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.REFRESH_TIMING_BUFFER_MS = exports.MIN_REFRESH_WAIT_MS = exports.DEFAULT_TOKEN_EXP_MS = void 0;\nexports.getGuestTokenRefreshTiming = getGuestTokenRefreshTiming;\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar REFRESH_TIMING_BUFFER_MS = 5000; // refresh guest token early to avoid failed superset requests\n\nexports.REFRESH_TIMING_BUFFER_MS = REFRESH_TIMING_BUFFER_MS;\nvar MIN_REFRESH_WAIT_MS = 10000; // avoid blasting requests as fast as the cpu can handle\n\nexports.MIN_REFRESH_WAIT_MS = MIN_REFRESH_WAIT_MS;\nvar DEFAULT_TOKEN_EXP_MS = 300000; // (5 min) used only when parsing guest token exp fails\n// when do we refresh the guest token?\n\nexports.DEFAULT_TOKEN_EXP_MS = DEFAULT_TOKEN_EXP_MS;\n\nfunction getGuestTokenRefreshTiming(currentGuestToken) {\n  var parsedJwt = JSON.parse(Buffer.from(currentGuestToken.split('.')[1], 'base64').toString()); // if exp is int, it is in seconds, but Date() takes milliseconds\n\n  var exp = new Date(/[^0-9\\.]/g.test(parsedJwt.exp) ? parsedJwt.exp : parseFloat(parsedJwt.exp) * 1000);\n  var isValidDate = exp.toString() !== 'Invalid Date';\n  var ttl = isValidDate ? Math.max(MIN_REFRESH_WAIT_MS, exp.getTime() - Date.now()) : DEFAULT_TOKEN_EXP_MS;\n  return ttl - REFRESH_TIMING_BUFFER_MS;\n}","map":{"version":3,"sources":["/home/system/togo-web-test/node_modules/@superset-ui/embedded-sdk/lib/guestTokenRefresh.js"],"names":["Object","defineProperty","exports","value","REFRESH_TIMING_BUFFER_MS","MIN_REFRESH_WAIT_MS","DEFAULT_TOKEN_EXP_MS","getGuestTokenRefreshTiming","currentGuestToken","parsedJwt","JSON","parse","Buffer","from","split","toString","exp","Date","test","parseFloat","isValidDate","ttl","Math","max","getTime","now"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,wBAAR,GAAmCF,OAAO,CAACG,mBAAR,GAA8BH,OAAO,CAACI,oBAAR,GAA+B,KAAK,CAArG;AACAJ,OAAO,CAACK,0BAAR,GAAqCA,0BAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMH,wBAAwB,GAAG,IAAjC,C,CAAuC;;AAEvCF,OAAO,CAACE,wBAAR,GAAmCA,wBAAnC;AACA,IAAMC,mBAAmB,GAAG,KAA5B,C,CAAmC;;AAEnCH,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;AACA,IAAMC,oBAAoB,GAAG,MAA7B,C,CAAqC;AACrC;;AAEAJ,OAAO,CAACI,oBAAR,GAA+BA,oBAA/B;;AAEA,SAASC,0BAAT,CAAoCC,iBAApC,EAAuD;AACrD,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYL,iBAAiB,CAACM,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAZ,EAA6C,QAA7C,EAAuDC,QAAvD,EAAX,CAAlB,CADqD,CAC4C;;AAEjG,MAAMC,GAAG,GAAG,IAAIC,IAAJ,CAAS,YAAYC,IAAZ,CAAiBT,SAAS,CAACO,GAA3B,IAAkCP,SAAS,CAACO,GAA5C,GAAkDG,UAAU,CAACV,SAAS,CAACO,GAAX,CAAV,GAA4B,IAAvF,CAAZ;AACA,MAAMI,WAAW,GAAGJ,GAAG,CAACD,QAAJ,OAAmB,cAAvC;AACA,MAAMM,GAAG,GAAGD,WAAW,GAAGE,IAAI,CAACC,GAAL,CAASlB,mBAAT,EAA8BW,GAAG,CAACQ,OAAJ,KAAgBP,IAAI,CAACQ,GAAL,EAA9C,CAAH,GAA+DnB,oBAAtF;AACA,SAAOe,GAAG,GAAGjB,wBAAb;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.REFRESH_TIMING_BUFFER_MS = exports.MIN_REFRESH_WAIT_MS = exports.DEFAULT_TOKEN_EXP_MS = void 0;\nexports.getGuestTokenRefreshTiming = getGuestTokenRefreshTiming;\n\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst REFRESH_TIMING_BUFFER_MS = 5000; // refresh guest token early to avoid failed superset requests\n\nexports.REFRESH_TIMING_BUFFER_MS = REFRESH_TIMING_BUFFER_MS;\nconst MIN_REFRESH_WAIT_MS = 10000; // avoid blasting requests as fast as the cpu can handle\n\nexports.MIN_REFRESH_WAIT_MS = MIN_REFRESH_WAIT_MS;\nconst DEFAULT_TOKEN_EXP_MS = 300000; // (5 min) used only when parsing guest token exp fails\n// when do we refresh the guest token?\n\nexports.DEFAULT_TOKEN_EXP_MS = DEFAULT_TOKEN_EXP_MS;\n\nfunction getGuestTokenRefreshTiming(currentGuestToken) {\n  const parsedJwt = JSON.parse(Buffer.from(currentGuestToken.split('.')[1], 'base64').toString()); // if exp is int, it is in seconds, but Date() takes milliseconds\n\n  const exp = new Date(/[^0-9\\.]/g.test(parsedJwt.exp) ? parsedJwt.exp : parseFloat(parsedJwt.exp) * 1000);\n  const isValidDate = exp.toString() !== 'Invalid Date';\n  const ttl = isValidDate ? Math.max(MIN_REFRESH_WAIT_MS, exp.getTime() - Date.now()) : DEFAULT_TOKEN_EXP_MS;\n  return ttl - REFRESH_TIMING_BUFFER_MS;\n}"]},"metadata":{},"sourceType":"script"}