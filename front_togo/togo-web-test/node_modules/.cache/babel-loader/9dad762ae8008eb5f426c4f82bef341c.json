{"ast":null,"code":"import { flattenTree } from '../utils/treeUtils';\nvar hasSymbol = typeof Symbol === 'function';\nexport var KEY_GROUP = hasSymbol ? Symbol('_$grouped') : '_$grouped';\nexport var KEY_GROUP_TITLE = 'groupTitle';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    if (!tempData[item[key]]) {\n      tempData[item[key]] = [];\n    }\n    tempData[item[key]].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var _ref2;\n    var groupTitle = _ref[0],\n      children = _ref[1];\n    return _ref2 = {\n      children: isSort ? children.sort(sort(false)) : children\n    }, _ref2[KEY_GROUP_TITLE] = groupTitle, _ref2[KEY_GROUP] = true, _ref2;\n  });\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n  return flattenTree(nextData);\n}","map":{"version":3,"names":["flattenTree","hasSymbol","Symbol","KEY_GROUP","KEY_GROUP_TITLE","getDataGroupBy","data","key","sort","tempData","isSort","forEach","item","push","nextData","Object","entries","map","_ref","_ref2","groupTitle","children"],"sources":["/home/system/togo-web-test/node_modules/rsuite/esm/utils/getDataGroupBy.js"],"sourcesContent":["import { flattenTree } from '../utils/treeUtils';\nvar hasSymbol = typeof Symbol === 'function';\nexport var KEY_GROUP = hasSymbol ? Symbol('_$grouped') : '_$grouped';\nexport var KEY_GROUP_TITLE = 'groupTitle';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    if (!tempData[item[key]]) {\n      tempData[item[key]] = [];\n    }\n\n    tempData[item[key]].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var _ref2;\n\n    var groupTitle = _ref[0],\n        children = _ref[1];\n    return _ref2 = {\n      children: isSort ? children.sort(sort(false)) : children\n    }, _ref2[KEY_GROUP_TITLE] = groupTitle, _ref2[KEY_GROUP] = true, _ref2;\n  });\n\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n\n  return flattenTree(nextData);\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,oBAAoB;AAChD,IAAIC,SAAS,GAAG,OAAOC,MAAM,KAAK,UAAU;AAC5C,OAAO,IAAIC,SAAS,GAAGF,SAAS,GAAGC,MAAM,CAAC,WAAW,CAAC,GAAG,WAAW;AACpE,OAAO,IAAIE,eAAe,GAAG,YAAY;AACzC,eAAe,SAASC,cAAcA,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACtD,IAAIF,IAAI,KAAK,KAAK,CAAC,EAAE;IACnBA,IAAI,GAAG,EAAE;EACX;EAEA,IAAIG,QAAQ,GAAG,CAAC,CAAC;EACjB,IAAIC,MAAM,GAAG,OAAOF,IAAI,KAAK,UAAU;EACvCF,IAAI,CAACK,OAAO,CAAC,UAAUC,IAAI,EAAE;IAC3B,IAAI,CAACH,QAAQ,CAACG,IAAI,CAACL,GAAG,CAAC,CAAC,EAAE;MACxBE,QAAQ,CAACG,IAAI,CAACL,GAAG,CAAC,CAAC,GAAG,EAAE;IAC1B;IAEAE,QAAQ,CAACG,IAAI,CAACL,GAAG,CAAC,CAAC,CAACM,IAAI,CAACD,IAAI,CAAC;EAChC,CAAC,CAAC;EACF,IAAIE,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAACP,QAAQ,CAAC,CAACQ,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC1D,IAAIC,KAAK;IAET,IAAIC,UAAU,GAAGF,IAAI,CAAC,CAAC,CAAC;MACpBG,QAAQ,GAAGH,IAAI,CAAC,CAAC,CAAC;IACtB,OAAOC,KAAK,GAAG;MACbE,QAAQ,EAAEX,MAAM,GAAGW,QAAQ,CAACb,IAAI,CAACA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAGa;IAClD,CAAC,EAAEF,KAAK,CAACf,eAAe,CAAC,GAAGgB,UAAU,EAAED,KAAK,CAAChB,SAAS,CAAC,GAAG,IAAI,EAAEgB,KAAK;EACxE,CAAC,CAAC;EAEF,IAAIT,MAAM,EAAE;IACVI,QAAQ,GAAGA,QAAQ,CAACN,IAAI,CAACA,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC;EAEA,OAAOR,WAAW,CAACc,QAAQ,CAAC;AAC9B"},"metadata":{},"sourceType":"module"}