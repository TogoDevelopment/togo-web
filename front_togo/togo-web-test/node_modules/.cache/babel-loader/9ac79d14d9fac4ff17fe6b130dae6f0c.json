{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/FinancialTransactions/FinancialTransactions.js\";\nimport React, { useEffect, useState } from 'react';\nimport translate from \"../../i18n/translate\";\nimport './FinancialTransactions.css';\nimport DynamicTable from '../DynamicTable/DynamicTable';\nimport { isTransporter } from '../../Util';\nimport { Button } from \"react-bootstrap\";\nimport { transactionTest, invoicesTest } from '../../APIs/OrdersAPIs';\nexport default function Transactions() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      transactions = _useState2[0],\n      setTransactions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invoices = _useState4[0],\n      setInvoices = _useState4[1];\n\n  var columns = [{\n    label: \"Name\",\n    key: \"move_name\"\n  }, {\n    label: \"date\",\n    key: \"date\"\n  }, {\n    label: \"Order ID\",\n    key: \"ref\"\n  }, {\n    label: \"Journal\",\n    key: \"journal\"\n  }, {\n    label: \"amount\",\n    key: \"amount\"\n  }];\n  useEffect(function () {\n    var isMounted = true;\n    transactionTest(localStorage.getItem(\"userId\")).then(function (res) {\n      if (isMounted) {\n        var tempArr = res.data.server_response.data.result.response;\n        tempArr.sort(function (a, b) {\n          return b.ref - a.ref;\n        });\n        setTransactions(tempArr);\n      }\n    });\n    return function () {\n      isMounted = false;\n    }; // console.log(localStorage.getItem(\"userId\"));\n\n    /*transactionTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n        console.log(res.data.server_response);\r\n        setTransactions(res.data.server_response.data.result.response);\r\n    });*/\n\n    /*invoicesTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n        // console.log(res.data.server_response.data.result.response);\r\n        // setInvoices(res.data.server_response.data.result.response);\r\n    });*/\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, columns.map(function (_ref, idx) {\n    var label = _ref.label,\n        key = _ref.key;\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: key + \"-\" + idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 57\n      }\n    }, label);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, transactions.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index + \"-tr\" // onClick={onRowSelect ? ()=>{onRowSelect(item, index)} : undefined} \n      ,\n      className: \"\".concat(selected === index ? \"highlight-row\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, columns.map(function (_ref2, idx) {\n      var key = _ref2.key,\n          format = _ref2.format;\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: key + \"-td\" + idx,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, !!format ? format(item) : item[key]);\n    }));\n  }), !transactions.length && /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: columns.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 42\n    }\n  }, \"Transactions not found!\"))));\n}\n;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/FinancialTransactions/FinancialTransactions.js"],"names":["React","useEffect","useState","translate","DynamicTable","isTransporter","Button","transactionTest","invoicesTest","Transactions","transactions","setTransactions","invoices","setInvoices","columns","label","key","isMounted","localStorage","getItem","then","res","tempArr","data","server_response","result","response","sort","a","b","ref","map","idx","item","index","selected","format","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport translate from \"../../i18n/translate\";\r\nimport './FinancialTransactions.css';\r\nimport DynamicTable from '../DynamicTable/DynamicTable';\r\nimport { isTransporter } from '../../Util';\r\n\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport { transactionTest, invoicesTest } from '../../APIs/OrdersAPIs';\r\n\r\nexport default function Transactions() {\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [invoices, setInvoices] = useState([]);\r\n\r\n    const columns = [\r\n        {\r\n            label: \"Name\",\r\n            key: \"move_name\",\r\n        },\r\n        {\r\n            label: \"date\",\r\n            key: \"date\"\r\n        },\r\n        {\r\n            label: \"Order ID\",\r\n            key: \"ref\",\r\n        },\r\n        {\r\n            label: \"Journal\",\r\n            key: \"journal\",\r\n        },\r\n        {\r\n            label: \"amount\",\r\n            key: \"amount\"\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n        let isMounted = true;  \r\n          transactionTest(localStorage.getItem(\"userId\")).then(res => {\r\n            if (isMounted) {\r\n                let tempArr = res.data.server_response.data.result.response;\r\n\r\n                tempArr.sort((a, b) => {\r\n                    return b.ref - a.ref;\r\n                });\r\n\r\n                setTransactions(tempArr); \r\n            }\r\n          })\r\n        return () => { isMounted = false };\r\n\r\n\r\n        // console.log(localStorage.getItem(\"userId\"));\r\n\r\n        /*transactionTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n            console.log(res.data.server_response);\r\n            setTransactions(res.data.server_response.data.result.response);\r\n        });*/\r\n\r\n        /*invoicesTest(localStorage.getItem(\"userId\")).then((res)=>{  // edited (test transactions) \r\n            // console.log(res.data.server_response.data.result.response);\r\n            // setInvoices(res.data.server_response.data.result.response);\r\n        });*/\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/*<DynamicTable columns={columns} data={transactions}/>*/}\r\n\r\n            <thead>\r\n                <tr>\r\n                    {columns.map(({label, key}, idx) => <th key={key+\"-\"+idx}>{label}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {transactions.map((item, index) =>\r\n                <tr \r\n                    key={index + \"-tr\"} \r\n                    // onClick={onRowSelect ? ()=>{onRowSelect(item, index)} : undefined} \r\n                    className={`${selected === index ? \"highlight-row\": \"\"}`}>\r\n                    {columns.map(({key, format}, idx) =>\r\n                        <td key={key + \"-td\" + idx}>\r\n                            {!!format ? format(item) : item[key]}\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            )}\r\n            {!transactions.length && <tr><td colSpan={columns.length}>Transactions not found!</td></tr>}\r\n            </tbody>\r\n\r\n        </div>\r\n    );\r\n   \r\n};\r\n"]},"metadata":{},"sourceType":"module"}