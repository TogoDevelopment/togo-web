{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { useClassNames } from '../utils';\n/**\n * Create a component with `classPrefix` and `as` attributes.\n * @param defaultProps\n */\n\nfunction createComponent(defaultProps) {\n  var name = defaultProps.name,\n      componentAs = defaultProps.componentAs,\n      componentClassPrefix = defaultProps.componentClassPrefix,\n      componentRestProps = _objectWithoutPropertiesLoose(defaultProps, [\"name\", \"componentAs\", \"componentClassPrefix\"]);\n\n  var Component = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    var Component = props.as,\n        classPrefix = props.classPrefix,\n        className = props.className,\n        role = props.role,\n        rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"className\", \"role\"]);\n\n    var _useClassNames = useClassNames(classPrefix),\n        withClassPrefix = _useClassNames.withClassPrefix,\n        merge = _useClassNames.merge;\n\n    var classes = merge(className, withClassPrefix());\n    return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n      role: role,\n      ref: ref,\n      className: classes\n    }));\n  });\n  Component.displayName = name;\n  Component.propTypes = {\n    as: PropTypes.elementType,\n    className: PropTypes.string,\n    classPrefix: PropTypes.string,\n    children: PropTypes.node\n  };\n  Component.defaultProps = _extends({}, componentRestProps, {\n    as: componentAs || 'div',\n    classPrefix: componentClassPrefix || kebabCase(name)\n  });\n  return Component;\n}\n\nexport default createComponent;","map":null,"metadata":{},"sourceType":"module"}