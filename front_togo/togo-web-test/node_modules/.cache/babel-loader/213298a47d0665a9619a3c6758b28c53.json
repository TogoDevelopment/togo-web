{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { chakra, forwardRef, tokenToCSSVar } from \"@chakra-ui/system\";\nimport { cx, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n\n/**\n * Layout component used to stack elements that differ in length\n * and are liable to wrap.\n *\n * Common use cases:\n * - Buttons that appear together at the end of forms\n * - Lists of tags and chips\n *\n * @see Docs https://chakra-ui.com/wrap\n */\nexport var Wrap = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _props$spacing = props.spacing,\n    spacing = _props$spacing === void 0 ? \"0.5rem\" : _props$spacing,\n    children = props.children,\n    justify = props.justify,\n    direction = props.direction,\n    align = props.align,\n    className = props.className,\n    shouldWrapChildren = props.shouldWrapChildren,\n    rest = _objectWithoutPropertiesLoose(props, [\"spacing\", \"children\", \"justify\", \"direction\", \"align\", \"className\", \"shouldWrapChildren\"]);\n  var styles = React.useMemo(function () {\n    return {\n      \"--chakra-wrap-spacing\": function chakraWrapSpacing(theme) {\n        return mapResponsive(spacing, function (value) {\n          return tokenToCSSVar(\"space\", value)(theme);\n        });\n      },\n      \"--wrap-spacing\": \"calc(var(--chakra-wrap-spacing) / 2)\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: justify,\n      alignItems: align,\n      flexDirection: direction,\n      listStyleType: \"none\",\n      padding: \"0\",\n      margin: \"calc(var(--wrap-spacing) * -1)\",\n      \"& > *:not(style)\": {\n        margin: \"var(--wrap-spacing)\"\n      }\n    };\n  }, [spacing, justify, align, direction]);\n  var childrenToRender = shouldWrapChildren ? React.Children.map(children, function (child, index) {\n    return /*#__PURE__*/React.createElement(WrapItem, {\n      key: index\n    }, child);\n  }) : children;\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-wrap\", className)\n  }, rest), /*#__PURE__*/React.createElement(chakra.ul, {\n    className: \"chakra-wrap__list\",\n    __css: styles\n  }, childrenToRender));\n});\nif (__DEV__) {\n  Wrap.displayName = \"Wrap\";\n}\nexport var WrapItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, [\"className\"]);\n  return /*#__PURE__*/React.createElement(chakra.li, _extends({\n    ref: ref,\n    __css: {\n      display: \"flex\",\n      alignItems: \"flex-start\"\n    },\n    className: cx(\"chakra-wrap__listitem\", className)\n  }, rest));\n});\nif (__DEV__) {\n  WrapItem.displayName = \"WrapItem\";\n}","map":{"version":3,"names":["chakra","forwardRef","tokenToCSSVar","cx","mapResponsive","__DEV__","React","Wrap","props","ref","_props$spacing","spacing","children","justify","direction","align","className","shouldWrapChildren","rest","_objectWithoutPropertiesLoose","styles","useMemo","chakraWrapSpacing","theme","value","display","flexWrap","justifyContent","alignItems","flexDirection","listStyleType","padding","margin","childrenToRender","Children","map","child","index","createElement","WrapItem","key","div","_extends","ul","__css","displayName","li"],"sources":["../../src/wrap.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n  tokenToCSSVar,\n} from \"@chakra-ui/system\"\nimport { cx, Dict, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface WrapProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * The space between the each child (even if it wraps)\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The `justify-content` value (for cross-axis alignment)\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * The `align-items` value (for main axis alignment)\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The `flex-direction` value\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * If `true`, the children will be wrapped in a `WrapItem`\n   */\n  shouldWrapChildren?: boolean\n}\n\n/**\n * Layout component used to stack elements that differ in length\n * and are liable to wrap.\n *\n * Common use cases:\n * - Buttons that appear together at the end of forms\n * - Lists of tags and chips\n *\n * @see Docs https://chakra-ui.com/wrap\n */\nexport const Wrap = forwardRef<WrapProps, \"div\">((props, ref) => {\n  const {\n    spacing = \"0.5rem\",\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const styles = React.useMemo(\n    () => ({\n      \"--chakra-wrap-spacing\": (theme: Dict) =>\n        mapResponsive(spacing, (value) => tokenToCSSVar(\"space\", value)(theme)),\n      \"--wrap-spacing\": \"calc(var(--chakra-wrap-spacing) / 2)\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: justify,\n      alignItems: align,\n      flexDirection: direction,\n      listStyleType: \"none\",\n      padding: \"0\",\n      margin: \"calc(var(--wrap-spacing) * -1)\",\n      \"& > *:not(style)\": {\n        margin: \"var(--wrap-spacing)\",\n      },\n    }),\n    [spacing, justify, align, direction],\n  )\n\n  const childrenToRender = shouldWrapChildren\n    ? React.Children.map(children, (child, index) => (\n        <WrapItem key={index}>{child}</WrapItem>\n      ))\n    : children\n\n  return (\n    <chakra.div ref={ref} className={cx(\"chakra-wrap\", className)} {...rest}>\n      <chakra.ul className=\"chakra-wrap__list\" __css={styles}>\n        {childrenToRender}\n      </chakra.ul>\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  Wrap.displayName = \"Wrap\"\n}\n\nexport interface WrapItemProps extends HTMLChakraProps<\"li\"> {}\n\nexport const WrapItem = forwardRef<WrapItemProps, \"li\">((props, ref) => {\n  const { className, ...rest } = props\n  return (\n    <chakra.li\n      ref={ref}\n      __css={{ display: \"flex\", alignItems: \"flex-start\" }}\n      className={cx(\"chakra-wrap__listitem\", className)}\n      {...rest}\n    />\n  )\n})\n\nif (__DEV__) {\n  WrapItem.displayName = \"WrapItem\"\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}