{"ast":null,"code":"import _defineProperty from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var ButtonSpinner = function ButtonSpinner(props) {\n  var label = props.label,\n    placement = props.placement,\n    _props$children = props.children,\n    children = _props$children === void 0 ? /*#__PURE__*/React.createElement(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }) : _props$children,\n    className = props.className,\n    __css = props.__css,\n    rest = _objectWithoutPropertiesLoose(props, [\"label\", \"placement\", \"spacing\", \"children\", \"className\", \"__css\"]);\n  var _className = cx(\"chakra-button__spinner\", className);\n  var marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  var spinnerStyles = React.useMemo(function () {\n    var _extends2;\n    return _extends((_extends2 = {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\"\n    }, _defineProperty(_extends2, marginProp, label ? \"0.5rem\" : 0), _defineProperty(_extends2, \"fontSize\", \"1em\"), _defineProperty(_extends2, \"lineHeight\", \"normal\"), _extends2), __css);\n  }, [__css, label, marginProp]);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: _className\n  }, rest, {\n    __css: spinnerStyles\n  }), children);\n};\nif (__DEV__) {\n  ButtonSpinner.displayName = \"ButtonSpinner\";\n}","map":{"version":3,"names":["Spinner","chakra","cx","__DEV__","React","ButtonSpinner","props","label","placement","_props$children","children","createElement","color","width","height","className","__css","rest","_objectWithoutPropertiesLoose","_className","marginProp","spinnerStyles","useMemo","_extends2","_extends","display","alignItems","position","_defineProperty","div","displayName"],"sources":["../../src/button-spinner.tsx"],"sourcesContent":["import { Spinner } from \"@chakra-ui/spinner\"\nimport {\n  chakra,\n  HTMLChakraProps,\n  SystemProps,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface ButtonSpinnerProps extends HTMLChakraProps<\"div\"> {\n  label?: string\n  /**\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  placement?: \"start\" | \"end\"\n}\n\nexport const ButtonSpinner: React.FC<ButtonSpinnerProps> = (props) => {\n  const {\n    label,\n    placement,\n    spacing,\n    children = <Spinner color=\"currentColor\" width=\"1em\" height=\"1em\" />,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-button__spinner\", className)\n\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\"\n\n  const spinnerStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? \"0.5rem\" : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css,\n    }),\n    [__css, label, marginProp],\n  )\n\n  return (\n    <chakra.div className={_className} {...rest} __css={spinnerStyles}>\n      {children}\n    </chakra.div>\n  )\n}\nif (__DEV__) {\n  ButtonSpinner.displayName = \"ButtonSpinner\"\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SACEC,MADF,QAKO,mBALP;AAMA,SAASC,EAAT,EAAaC,OAAb,QAA4B,kBAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAWA,OAAO,IAAMC,aAA2C,GAAI,SAA/CA,aAA2CA,CAAIC,KAAD,EAAW;EACpE,IACEC,KADI,GAQFD,KARJ,CACEC,KADI;IAEJC,SAFI,GAQFF,KARJ,CAEEE,SAFI;IAAAC,eAAA,GAQFH,KARJ,CAIEI,QAAQ;IAARA,QAAQ,GAAAD,eAAA,2BAAGL,KAAA,CAAAO,aAAA,CAACX,OAAD;MAASY,KAAK,EAAC,cAAf;MAA8BC,KAAK,EAAC,KAApC;MAA0CC,MAAM,EAAC;IAAjD,EAJP,GAAAL,eAAA;IAKJM,SALI,GAQFT,KARJ,CAKES,SALI;IAMJC,KAAA,GAEEV,KARJ,CAMEU,KAAA;IACGC,IAPL,GAAAC,6BAAA,CAQIZ,KARJ;EAUA,IAAMa,UAAU,GAAGjB,EAAE,CAAC,wBAAD,EAA2Ba,SAA3B,CAArB;EAEA,IAAMK,UAAU,GAAGZ,SAAS,KAAK,OAAd,GAAwB,WAAxB,GAAsC,aAAzD;EAEA,IAAMa,aAAgC,GAAGjB,KAAK,CAACkB,OAAN,CACvC;IAAA,IAAAC,SAAA;IAAA,OAAAC,QAAA,EAAAD,SAAA;MACEE,OAAO,EAAE,MADX;MAEEC,UAAU,EAAE,QAFd;MAGEC,QAAQ,EAAEpB,KAAK,GAAG,UAAH,GAAgB;IAHjC,GAAAqB,eAAA,CAAAL,SAAA,EAIGH,UAAD,EAAcb,KAAK,GAAG,QAAH,GAAc,CAJnC,GAAAqB,eAAA,CAAAL,SAAA,cAKY,KALZ,GAAAK,eAAA,CAAAL,SAAA,gBAMc,WAAAA,SAAA,GACTP,KAPL,CADuC;EAAA,GAUvC,CAACA,KAAD,EAAQT,KAAR,EAAea,UAAf,CAVuC,CAAzC;EAaA,oBACEhB,KAAA,CAAAO,aAAA,CAACV,MAAD,CAAQ4B,GAAR,EAAAL,QAAA;IAAYT,SAAS,EAAEI;EAAvB,GAAuCF,IAAvC;IAA6CD,KAAK,EAAEK;EAApD,IACGX,QADH,CADF;AAKD,CAjCM;AAkCP,IAAIP,OAAJ,EAAa;EACXE,aAAa,CAACyB,WAAd,GAA4B,eAA5B;AACD"},"metadata":{},"sourceType":"module"}