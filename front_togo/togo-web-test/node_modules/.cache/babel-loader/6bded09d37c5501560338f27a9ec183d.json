{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/system/togo-web-test/src/Container/AccountDetails/WorkingTime.js\",\n    _this2 = this;\n\nimport React, { useEffect, useState } from \"react\";\nimport { convert24TimeTo12 } from \"../../Util\";\nimport { Box, Flex, Grid } from \"@chakra-ui/layout\";\nimport styles from \"./Styles\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { Input, InputGroup, InputLeftElement } from \"@chakra-ui/input\";\nimport { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Popover, PopoverArrow, PopoverCloseButton, PopoverContent, PopoverTrigger } from \"@chakra-ui/popover\";\nimport TimeKeeper from \"react-timekeeper\";\nimport { getWorkingTime, updateWorkingTime } from \"../../Actions/ProfileActions\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IoIosTime } from 'react-icons/io';\nimport translate from \"../../i18n/translate\";\nimport './WorkingTime.css';\nexport default function WorkingTime() {\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var workingTime = useSelector(function (state) {\n    return state.profile.workingTime;\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      workingTimeList = _useState2[0],\n      setWorkingTimeList = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var onUpdateTime = function onUpdateTime() {\n    dispatch(updateWorkingTime(workingTimeList));\n  };\n\n  useEffect(function () {\n    dispatch(getWorkingTime());\n  }, [dispatch]);\n  useEffect(function () {\n    var SatTimeStart = workingTime.SatTimeStart,\n        SatTimeFinish = workingTime.SatTimeFinish,\n        SunTimeStart = workingTime.SunTimeStart,\n        SunTimeFinish = workingTime.SunTimeFinish,\n        MonTimeStart = workingTime.MonTimeStart,\n        MonTimeFinish = workingTime.MonTimeFinish,\n        TueTimeStart = workingTime.TueTimeStart,\n        TueTimeFinish = workingTime.TueTimeFinish,\n        WenTimeStart = workingTime.WenTimeStart,\n        WenTimeFinish = workingTime.WenTimeFinish,\n        ThuTimeStart = workingTime.ThuTimeStart,\n        ThuTimeFinish = workingTime.ThuTimeFinish,\n        FriTimeStart = workingTime.FriTimeStart,\n        FriTimeFinish = workingTime.FriTimeFinish;\n    var workingTimeList = [{\n      title: translate(\"WORKING_TIME.SATURDAY\"),\n      id: \"Sat\",\n      from: formatTime(SatTimeStart),\n      to: formatTime(SatTimeFinish)\n    }, {\n      title: translate(\"WORKING_TIME.SUNDAY\"),\n      id: \"Sun\",\n      from: formatTime(SunTimeStart),\n      to: formatTime(SunTimeFinish)\n    }, {\n      title: translate(\"WORKING_TIME.MONDAY\"),\n      id: \"Mon\",\n      from: formatTime(MonTimeStart),\n      to: formatTime(MonTimeFinish)\n    }, {\n      title: translate(\"WORKING_TIME.TUESDAY\"),\n      id: \"Tue\",\n      from: formatTime(TueTimeStart),\n      to: formatTime(TueTimeFinish)\n    }, {\n      title: translate(\"WORKING_TIME.WEDNESDAY\"),\n      id: \"Wen\",\n      from: formatTime(WenTimeStart),\n      to: formatTime(WenTimeFinish)\n    }, {\n      title: translate(\"WORKING_TIME.THURSDAY\"),\n      id: \"Thu\",\n      from: formatTime(ThuTimeStart),\n      to: formatTime(ThuTimeFinish)\n    }, {\n      title: translate(\"WORKING_TIME.FRIDAY\"),\n      id: \"Fri\",\n      from: formatTime(FriTimeStart),\n      to: formatTime(FriTimeFinish)\n    }];\n    setWorkingTimeList(workingTimeList);\n\n    if (Object.keys(workingTime).length) {\n      setLoading(false);\n    }\n  }, [workingTime]);\n\n  var formatTime = function formatTime(value) {\n    if (!value) return null;\n    var time = value.split(\" \")[1].slice(0, -3);\n    return convert24TimeTo12(time);\n  };\n\n  var onTimeChange = function onTimeChange(dayId, type, value) {\n    var workingTimeListClone = _toConsumableArray(workingTimeList);\n\n    var workingTimeClone = workingTimeListClone.find(function (workingTime) {\n      return workingTime.id === dayId;\n    });\n    workingTimeClone[type] = value;\n    setWorkingTimeList(workingTimeListClone);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, Object.assign({}, styles.content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, Object.assign({}, styles.workTimeContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, Object.assign({\n    gridColumn: \"1 / span 3\"\n  }, styles.workTimeItems, styles.subTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    justifySelf: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, translate(\"WORKING_TIME.DAY\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, translate(\"WORKING_TIME.FROM\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, translate(\"WORKING_TIME.TO\"))), workingTimeList === null || workingTimeList === void 0 ? void 0 : workingTimeList.map(function (workTime, index) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Box, Object.assign({}, styles.title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }), workTime.title), [{\n      type: \"from\",\n      popupPlacement: \"bottom-start\"\n    }, {\n      type: \"to\",\n      popupPlacement: \"left\"\n    }].map(function (item) {\n      return /*#__PURE__*/React.createElement(Flex, {\n        justifyContent: \"center\",\n        key: \"\".concat(workTime.title, \"-\").concat(item.type),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(InputGroup, {\n        w: \"100%\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(InputLeftElement, Object.assign({\n        value: 2\n      }, styles.timerIcon, {\n        pointerEvents: \"none\",\n        children: /*#__PURE__*/React.createElement(IoIosTime, {\n          color: \"gray.300\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 63\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 49\n        }\n      })), workTime[item.type] && /*#__PURE__*/React.createElement(TimePickerPopover, {\n        placement: item.popupPlacement,\n        value: workTime[item.type],\n        onChange: function onChange(value) {\n          return onTimeChange(workTime.id, item.type, value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 49\n        }\n      })));\n    }));\n  }), /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: onUpdateTime\n  }, styles.workTimeSubmitButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }), translate(\"WORKING_TIME.UPDATE\"))));\n}\n;\n\nvar TimePickerPopover = function TimePickerPopover(_ref) {\n  var placement = _ref.placement,\n      value = _ref.value,\n      onChange = _ref.onChange;\n\n  var _useDisclosure = useDisclosure(),\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose,\n      isOpen = _useDisclosure.isOpen;\n\n  var _useState5 = useState(value),\n      _useState6 = _slicedToArray(_useState5, 2),\n      time = _useState6[0],\n      setTime = _useState6[1];\n\n  var onTimeChange = function onTimeChange(value) {\n    setTime(value);\n    onChange && onChange(value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Popover, {\n    isOpen: isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    placement: placement,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PopoverTrigger, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"phone\",\n    onChange: function onChange(_ref2) {\n      var value = _ref2.target.value;\n      return onTimeChange(value);\n    },\n    value: time,\n    textAlign: \"center\",\n    pl: \"2rem\",\n    style: {\n      marginRight: \"-10px\"\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(PopoverContent, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PopoverArrow, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(PopoverCloseButton, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    zIndex: 5,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimeKeeper, {\n    time: time,\n    onChange: function onChange(data) {\n      return onTimeChange(data.formatted12);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/Container/AccountDetails/WorkingTime.js"],"names":["React","useEffect","useState","convert24TimeTo12","Box","Flex","Grid","styles","Loader","Input","InputGroup","InputLeftElement","Button","useDisclosure","Popover","PopoverArrow","PopoverCloseButton","PopoverContent","PopoverTrigger","TimeKeeper","getWorkingTime","updateWorkingTime","useDispatch","useSelector","IoIosTime","translate","WorkingTime","dispatch","workingTime","state","profile","workingTimeList","setWorkingTimeList","loading","setLoading","onUpdateTime","SatTimeStart","SatTimeFinish","SunTimeStart","SunTimeFinish","MonTimeStart","MonTimeFinish","TueTimeStart","TueTimeFinish","WenTimeStart","WenTimeFinish","ThuTimeStart","ThuTimeFinish","FriTimeStart","FriTimeFinish","title","id","from","formatTime","to","Object","keys","length","value","time","split","slice","onTimeChange","dayId","type","workingTimeListClone","workingTimeClone","find","content","workTimeContainer","workTimeItems","subTitle","map","workTime","index","popupPlacement","item","timerIcon","workTimeSubmitButton","TimePickerPopover","placement","onChange","onOpen","onClose","isOpen","setTime","target","marginRight","data","formatted12"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {convert24TimeTo12} from \"../../Util\";\r\nimport {Box, Flex, Grid} from \"@chakra-ui/layout\";\r\nimport styles from \"./Styles\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {Input, InputGroup, InputLeftElement} from \"@chakra-ui/input\";\r\nimport {Button} from \"@chakra-ui/button\";\r\nimport {useDisclosure} from \"@chakra-ui/hooks\";\r\nimport {Popover, PopoverArrow, PopoverCloseButton, PopoverContent, PopoverTrigger} from \"@chakra-ui/popover\";\r\nimport TimeKeeper from \"react-timekeeper\";\r\nimport {getWorkingTime, updateWorkingTime} from \"../../Actions/ProfileActions\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {IoIosTime} from 'react-icons/io';\r\nimport translate from \"../../i18n/translate\";\r\nimport './WorkingTime.css';\r\n\r\n\r\nexport default function WorkingTime() {\r\n    const dispatch = useDispatch();\r\n    const workingTime = useSelector(state => state.profile.workingTime);\r\n    const [workingTimeList, setWorkingTimeList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const onUpdateTime = () => {\r\n        dispatch(updateWorkingTime(workingTimeList));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getWorkingTime());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const {\r\n            SatTimeStart, SatTimeFinish, SunTimeStart, SunTimeFinish, MonTimeStart,\r\n            MonTimeFinish, TueTimeStart, TueTimeFinish, WenTimeStart, WenTimeFinish,\r\n            ThuTimeStart, ThuTimeFinish, FriTimeStart, FriTimeFinish\r\n        } = workingTime;\r\n\r\n        let workingTimeList = [\r\n            {\r\n                title: translate(\"WORKING_TIME.SATURDAY\"),\r\n                id: \"Sat\",\r\n                from: formatTime(SatTimeStart),\r\n                to: formatTime(SatTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.SUNDAY\"),\r\n                id: \"Sun\",\r\n                from: formatTime(SunTimeStart),\r\n                to: formatTime(SunTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.MONDAY\"),\r\n                id: \"Mon\",\r\n                from: formatTime(MonTimeStart),\r\n                to: formatTime(MonTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.TUESDAY\"),\r\n                id: \"Tue\",\r\n                from: formatTime(TueTimeStart),\r\n                to: formatTime(TueTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.WEDNESDAY\"),\r\n                id: \"Wen\",\r\n                from: formatTime(WenTimeStart),\r\n                to: formatTime(WenTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.THURSDAY\"),\r\n                id: \"Thu\",\r\n                from: formatTime(ThuTimeStart),\r\n                to: formatTime(ThuTimeFinish)\r\n            },\r\n            {\r\n                title: translate(\"WORKING_TIME.FRIDAY\"),\r\n                id: \"Fri\",\r\n                from: formatTime(FriTimeStart),\r\n                to: formatTime(FriTimeFinish)\r\n            }\r\n        ];\r\n        setWorkingTimeList(workingTimeList);\r\n        if (Object.keys(workingTime).length) {\r\n            setLoading(false)\r\n        }\r\n    }, [workingTime]);\r\n\r\n    const formatTime = (value) => {\r\n        if (!value) return null;\r\n        let time = value.split(\" \")[1].slice(0, -3);\r\n        return convert24TimeTo12(time);\r\n    };\r\n\r\n    const onTimeChange = (dayId, type, value) => {\r\n        let workingTimeListClone = [...workingTimeList];\r\n        let workingTimeClone = workingTimeListClone.find(workingTime => workingTime.id === dayId);\r\n        workingTimeClone[type] = value;\r\n        setWorkingTimeList(workingTimeListClone)\r\n    };\r\n\r\n    return (\r\n        <Box {...styles.content}>\r\n            {loading ? <Loader/> :\r\n                <Grid {...styles.workTimeContainer}>\r\n                    <Grid gridColumn=\"1 / span 3\" {...styles.workTimeItems} {...styles.subTitle}>\r\n                        <Box justifySelf=\"start\">{translate(\"WORKING_TIME.DAY\")}</Box>\r\n                        <Box>{translate(\"WORKING_TIME.FROM\")}</Box>\r\n                        <Box>{translate(\"WORKING_TIME.TO\")}</Box>\r\n                    </Grid>\r\n                    {workingTimeList?.map((workTime, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <Box {...styles.title}>\r\n                                    {workTime.title}\r\n                                </Box>\r\n                                {\r\n                                    [\r\n                                        {\r\n                                            type: \"from\",\r\n                                            popupPlacement: \"bottom-start\"\r\n                                        },\r\n                                        {\r\n                                            type: \"to\",\r\n                                            popupPlacement: \"left\"\r\n                                        }\r\n                                    ].map(item =>\r\n                                        <Flex justifyContent=\"center\" key={`${workTime.title}-${item.type}`}>\r\n                                            <InputGroup w=\"100%\">\r\n                                                <InputLeftElement\r\n                                                    value={2}\r\n                                                    {...styles.timerIcon}\r\n                                                    pointerEvents=\"none\"\r\n                                                    children={<IoIosTime color=\"gray.300\"/>}\r\n                                                />\r\n                                                {workTime[item.type] &&\r\n                                                <TimePickerPopover placement={item.popupPlacement}\r\n                                                                   value={workTime[item.type]}\r\n                                                                   onChange={(value) => onTimeChange(workTime.id, item.type, value)}/>}\r\n                                            </InputGroup>\r\n                                        </Flex>\r\n                                    )\r\n                                }\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                    <Button onClick={onUpdateTime} {...styles.workTimeSubmitButton}>\r\n                        {translate(\"WORKING_TIME.UPDATE\")}\r\n                    </Button>\r\n                </Grid>\r\n            }\r\n        </Box>\r\n    )\r\n};\r\nconst TimePickerPopover = ({placement, value, onChange}) => {\r\n    const {onOpen, onClose, isOpen} = useDisclosure();\r\n    const [time, setTime] = useState(value);\r\n\r\n    const onTimeChange = (value) => {\r\n        setTime(value);\r\n        onChange && onChange(value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Popover\r\n                isOpen={isOpen}\r\n                onOpen={onOpen}\r\n                onClose={onClose}\r\n                placement={placement}\r\n            >\r\n                <PopoverTrigger>\r\n                    <Input type=\"phone\" onChange={({target: {value}}) => onTimeChange(value)} value={time}\r\n                           textAlign=\"center\"\r\n                           pl=\"2rem\"\r\n                           style={{ marginRight: \"-10px\" }}/>\r\n                </PopoverTrigger>\r\n                <PopoverContent>\r\n                    <PopoverArrow/>\r\n                    <PopoverCloseButton/>\r\n                    <Box zIndex={5}>\r\n                        <TimeKeeper\r\n                            time={time}\r\n                            onChange={(data) => onTimeChange(data.formatted12)}\r\n                        />\r\n                    </Box>\r\n                </PopoverContent>\r\n            </Popover>\r\n        </>\r\n    )\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}