{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Grid,Checkbox,Box,Flex,Select,Button}from\"@chakra-ui/react\";import styles from\"./Styles\";import React,{useCallback,useEffect,useState}from\"react\";import{useSelector,useDispatch}from'react-redux';import{getBusinessLocation,updateTransporterBusniessLocation}from\"../../Actions/ProfileActions\";import Loader from\"../../components/Loader/Loader\";import{isTransporter}from\"../../Util\";import{Input,Text}from\"@chakra-ui/react\";import{getBusinessTypes,setClientBusiness}from\"../../APIs/ProfileAPIs\";import{Formik,Form}from\"formik\";import{toastMessage}from\"../../Actions/GeneralActions\";import'./BusinessLocation.css';import translate from\"../../i18n/translate\";export default function BusinessLocation(){var dispatch=useDispatch();var businessLocations=useSelector(function(state){return state.profile.businessLocations;});var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var isTransporterVal=isTransporter();var fetchData=useCallback(function(){setLoading(true);dispatch(getBusinessLocation(function(){setLoading(false);},function(err){setLoading(false);dispatch(toastMessage(err));}));},[dispatch]);useEffect(function(){fetchData();},[fetchData]);return/*#__PURE__*/React.createElement(Box,styles.content,loading?/*#__PURE__*/React.createElement(Loader,null):isTransporterVal?/*#__PURE__*/React.createElement(TransporterBusinessLocation,{businessLocations:businessLocations}):/*#__PURE__*/React.createElement(ClientBusinessLocation,{businessLocations:businessLocations,fetchData:fetchData}));};var ClientBusinessLocation=function ClientBusinessLocation(_ref){var _ref$businessLocation=_ref.businessLocations,BusinessName=_ref$businessLocation.BusinessName,BusinessPlace=_ref$businessLocation.BusinessPlace,BusinessTypeId=_ref$businessLocation.BusinessTypeId,fetchData=_ref.fetchData;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),bussinessTypes=_useState4[0],setBusinessTypes=_useState4[1];var dispatch=useDispatch();useEffect(function(){getBusinessTypes().then(function(_ref2){var server_response=_ref2.data.server_response;setBusinessTypes(server_response);}).catch(function(err){console.log(err);});},[]);var handleSubmit=function handleSubmit(values){setClientBusiness(values).then(function(){fetchData();dispatch(toastMessage(\"Business location has been updated\",\"Updated Successfully\",\"success\"));}).catch(function(err){console.log(err);dispatch(toastMessage(err));});};return/*#__PURE__*/React.createElement(Flex,{direction:\"column\",w:\"80%\"},/*#__PURE__*/React.createElement(Formik,{enableReinitialize:true,initialValues:{BusinessName:BusinessName,BusinessPlace:BusinessPlace,BusinessTypeId:BusinessTypeId},onSubmit:handleSubmit},function(_ref3){var values=_ref3.values,handleChange=_ref3.handleChange,handleSubmit=_ref3.handleSubmit,setFieldValue=_ref3.setFieldValue;return/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Text,Object.assign({},styles.title,styles.greyTitle),translate(\"BUSINESS_LOCATION.NAME\"),\":\"),/*#__PURE__*/React.createElement(Input,{placeholder:\"Business Name\",name:\"BusinessName\",onChange:handleChange,value:values.BusinessName,ml:3}),/*#__PURE__*/React.createElement(Text,Object.assign({},styles.title,styles.greyTitle),translate(\"BUSINESS_LOCATION.PLACE\"),\":\"),/*#__PURE__*/React.createElement(Input,{placeholder:\"Business Place\",name:\"BusinessPlace\",onChange:handleChange,value:values.BusinessPlace,ml:3}),/*#__PURE__*/React.createElement(Text,Object.assign({},styles.title,styles.greyTitle),translate(\"BUSINESS_LOCATION.TYPE\"),\":\"),/*#__PURE__*/React.createElement(Select,{placeholder:\"Business Type\",ml:3,name:\"BusinessTypeId\",onChange:function onChange(_ref4){var value=_ref4.target.value;return setFieldValue('BusinessTypeId',value);}},bussinessTypes.map(function(_ref5){var Name=_ref5.Name,id=_ref5.id;return/*#__PURE__*/React.createElement(\"option\",{key:id,selected:BusinessTypeId===id,value:id},Name);})),/*#__PURE__*/React.createElement(Button,Object.assign({type:\"submit\"},styles.updateButton),translate(\"BUSINESS_LOCATION.UPDATE\")));}));};var TransporterBusinessLocation=function TransporterBusinessLocation(_ref6){var businessLocations=_ref6.businessLocations;var dispatch=useDispatch();var handleClick=function handleClick(_ref7){var _ref7$target=_ref7.target,value=_ref7$target.value,checked=_ref7$target.checked;dispatch(updateTransporterBusniessLocation(value,checked?\"Add\":\"Remove\"));};return/*#__PURE__*/React.createElement(Grid,{gridTemplateColumns:\"repeat(2, 1fr)\"},businessLocations.map(function(_ref8){var IdCity=_ref8.IdCity,CityName=_ref8.CityName,CheckAdded=_ref8.CheckAdded;return/*#__PURE__*/React.createElement(Checkbox,Object.assign({colorScheme:\"green\",key:IdCity,defaultIsChecked:CheckAdded===\"Added\",value:IdCity,onChange:handleClick},styles.subTitle),CityName);}));};","map":{"version":3,"sources":["/home/system/togo-web-test/src/Container/AccountDetails/BusinessLocation.js"],"names":["Grid","Checkbox","Box","Flex","Select","Button","styles","React","useCallback","useEffect","useState","useSelector","useDispatch","getBusinessLocation","updateTransporterBusniessLocation","Loader","isTransporter","Input","Text","getBusinessTypes","setClientBusiness","Formik","Form","toastMessage","translate","BusinessLocation","dispatch","businessLocations","state","profile","loading","setLoading","isTransporterVal","fetchData","err","content","ClientBusinessLocation","BusinessName","BusinessPlace","BusinessTypeId","bussinessTypes","setBusinessTypes","then","server_response","data","catch","console","log","handleSubmit","values","handleChange","setFieldValue","title","greyTitle","value","target","map","Name","id","updateButton","TransporterBusinessLocation","handleClick","checked","IdCity","CityName","CheckAdded","subTitle"],"mappings":"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","sourcesContent":["import {\r\n    Grid, Checkbox, Box, Flex, Select, Button\r\n} from \"@chakra-ui/react\"\r\nimport styles from \"./Styles\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {getBusinessLocation, updateTransporterBusniessLocation} from \"../../Actions/ProfileActions\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport {isTransporter} from \"../../Util\";\r\nimport {Input, Text} from \"@chakra-ui/react\"\r\nimport {getBusinessTypes, setClientBusiness} from \"../../APIs/ProfileAPIs\";\r\nimport {Formik, Form} from \"formik\";\r\nimport {toastMessage} from \"../../Actions/GeneralActions\";\r\nimport './BusinessLocation.css';\r\nimport translate from \"../../i18n/translate\";\r\n\r\n\r\nexport default function BusinessLocation() {\r\n    const dispatch = useDispatch();\r\n    const businessLocations = useSelector(state => state.profile.businessLocations);\r\n    const [loading, setLoading] = useState(true);\r\n    const isTransporterVal = isTransporter();\r\n\r\n    const fetchData = useCallback(() => {\r\n        setLoading(true);\r\n        dispatch(getBusinessLocation(() => {\r\n            setLoading(false);\r\n        }, (err) => {\r\n            setLoading(false);\r\n            dispatch(toastMessage(err));\r\n        }));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [fetchData]);\r\n\r\n    return (\r\n        <Box {...styles.content}>\r\n            {loading ? <Loader/> :\r\n                isTransporterVal ? <TransporterBusinessLocation businessLocations={businessLocations}/> :\r\n                    <ClientBusinessLocation businessLocations={businessLocations} fetchData={fetchData}/>\r\n            }\r\n        </Box>\r\n    )\r\n};\r\n\r\n\r\nconst ClientBusinessLocation = ({businessLocations: {BusinessName, BusinessPlace, BusinessTypeId}, fetchData}) => {\r\n    const [bussinessTypes, setBusinessTypes] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getBusinessTypes().then(({data: {server_response}}) => {\r\n            setBusinessTypes(server_response);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }, []);\r\n\r\n    const handleSubmit = (values) => {\r\n        setClientBusiness(values).then(() => {\r\n            fetchData();\r\n            dispatch(toastMessage(\"Business location has been updated\", \"Updated Successfully\", \"success\"));\r\n        }).catch(err => {\r\n            console.log(err);\r\n            dispatch(toastMessage(err));\r\n        });\r\n    };\r\n\r\n    return <Flex direction=\"column\" w=\"80%\">\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{BusinessName, BusinessPlace, BusinessTypeId}}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {({\r\n                  values,\r\n                  handleChange,\r\n                  handleSubmit,\r\n                  setFieldValue\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Text {...styles.title} {...styles.greyTitle}>{translate(\"BUSINESS_LOCATION.NAME\")}:</Text>\r\n                    <Input placeholder=\"Business Name\"\r\n                           name=\"BusinessName\"\r\n                           onChange={handleChange}\r\n                           value={values.BusinessName}\r\n                           ml={3}/>\r\n                    <Text {...styles.title} {...styles.greyTitle}>{translate(\"BUSINESS_LOCATION.PLACE\")}:</Text>\r\n                    <Input placeholder=\"Business Place\"\r\n                           name=\"BusinessPlace\"\r\n                           onChange={handleChange}\r\n                           value={values.BusinessPlace}\r\n                           ml={3}/>\r\n                    <Text {...styles.title} {...styles.greyTitle}>{translate(\"BUSINESS_LOCATION.TYPE\")}:</Text>\r\n                    <Select placeholder=\"Business Type\" ml={3} name=\"BusinessTypeId\"\r\n                            onChange={({target: {value}}) => setFieldValue('BusinessTypeId', value)}>\r\n                        {bussinessTypes.map(({Name, id}) => <option key={id} selected={BusinessTypeId === id}\r\n                                                                    value={id}>{Name}</option>)}\r\n                    </Select>\r\n                    <Button type=\"submit\" {...styles.updateButton}>{translate(\"BUSINESS_LOCATION.UPDATE\")}</Button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </Flex>\r\n};\r\n\r\n\r\nconst TransporterBusinessLocation = ({businessLocations}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = ({target: {value, checked}}) => {\r\n        dispatch(updateTransporterBusniessLocation(value, checked ? \"Add\" : \"Remove\"));\r\n    };\r\n\r\n    return <Grid gridTemplateColumns=\"repeat(2, 1fr)\">\r\n        {businessLocations.map(({IdCity, CityName, CheckAdded}) => (\r\n            <Checkbox\r\n                colorScheme=\"green\"\r\n                key={IdCity}\r\n                defaultIsChecked={CheckAdded === \"Added\"}\r\n                value={IdCity}\r\n                onChange={handleClick}\r\n                {...styles.subTitle}>{CityName}</Checkbox>\r\n        ))}\r\n    </Grid>\r\n};\r\n"]},"metadata":{},"sourceType":"module"}