{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrder.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"../APIs/OrdersAPIs\";\nimport { GetAllClients } from \"../APIs/AdminPanelApis\";\n/* edited (import ) GetAllClients */\n\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/attachment.svg\";\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\nimport AddressDropdown from \"./AddressDropdown\";\nimport ClientDropdown from \"./ClientDropdown\";\n/* edited (import ClientDropdown) */\n\nimport CreateAddress from \"./CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { isTransporter } from \"../Util\";\n/* edited (new import) */\n\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport function CreateNewOrder(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openConf = _useState4[0],\n      setOpenConf = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"1\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      deliverAddresses = _useState12[0],\n      setDeliverAddresses = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      allClients = _useState14[0],\n      setAllClients = _useState14[1];\n  /* edited (setAllClients added) */\n\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedDeliveryAddress = _useState16[0],\n      setSelectedDeliveryAddress = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedPickUpAddress = _useState18[0],\n      setSelectedPickUpAddress = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedClient = _useState20[0],\n      setSelectedClient = _useState20[1];\n  /* edited (setSelectedClient added) */\n\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      loading = _useState22[0],\n      setLoading = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loadingSubmit = _useState24[0],\n      setLoadingSubmit = _useState24[1];\n\n  var deliveryCostRef = useRef();\n  /* edited (deliveryCostRef added) */\n\n  var clientMobileNumberRef = useRef();\n  /* edited (clientMobileNumberRef added) */\n\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetDefinedAddresses(inputValue).then(function (res) {\n          setLoading(false);\n          setDeliverAddresses(res.data);\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  /* edited (get all clients) */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetAllClients().then(function (res) {\n          setLoading(false);\n          setAllClients(res.data.clients_list.filter(function (client) {\n            return client.FullName.includes(inputValue);\n          }));\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"\".concat(props.children ? \"\" : !isTransporter() && \"btn-grad text-white\"),\n    variant: isTransporter() && \"outline-light\",\n    onClick: function onClick() {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, props.children && props.children, !props.children && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      display: \"inline-block\",\n      width: \"22px\",\n      height: \"22px\",\n      marginRight: \"5px\",\n      fill: \"currentcolor\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.CREATE_ORDER\"))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: open,\n    onHide: handleClose,\n    centered: true,\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"togo-dropdown\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2])))), isTransporter() && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown, {\n    loading: loading,\n    clients: allClients,\n    onSearch: setInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Delivery Cost\",\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    onChange: function onChange(event) {\n      if (event.target.name === \"DeliveryType\") {\n        setDeliveryType(event.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios1\",\n    value: \"1\",\n    defaultChecked: deliveryType === \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios2\",\n    value: \"2\",\n    defaultChecked: deliveryType === \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }), deliveryType === \"2\" && /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"ms-auto w-25\",\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[3]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios3\",\n    value: \"3\",\n    defaultChecked: deliveryType === \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[4]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios4\",\n    value: \"4\",\n    defaultChecked: deliveryType === \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }), deliveryType === \"4\" && /*#__PURE__*/React.createElement(Form.Control, {\n    ref: pickAmountRef,\n    type: \"number\",\n    className: \"ms-auto w-25\",\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedPickUpAddress,\n    selectedAddress: selectedPickUpAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedDeliveryAddress,\n    selectedAddress: selectedDeliveryAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-grad p-2 rounded-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), packageType !== \"1\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.DIMENSIONS_LABEL\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"me-2\",\n    placeholder: \"Height\",\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"me-2\",\n    placeholder: \"Width\",\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"\",\n    placeholder: \"Length\",\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"mt-2\",\n    placeholder: \"Weight\",\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Notes\",\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"\",\n    className: \"togo-button w-100\",\n    disabled: loadingSubmit,\n    onClick: function onClick() {\n      setLoadingSubmit(true);\n      var CreatedBy = \"\";\n      /* edited (CreatedBy variable added) */\n\n      var DeliveryParams = {};\n      /* edited (DeliveryParams as empty object) */\n\n      if (isTransporter()) {\n        var _lengthRef$current, _widthRef$current, _heightRef$current, _weightRef$current;\n\n        /* edited (add Client Mobile Number & Delivery Price to DeliveryParams if the user is transporter) */\n        CreatedBy = \"Transporter\";\n        DeliveryParams = {\n          deliveryWay: deliveryType,\n          TypeLoad: packageType,\n          ClientMobileNumber: clientMobileNumberRef.current.value,\n\n          /* edited (add ClientMobileNumber) */\n          DeliveryPrice: deliveryCostRef.current.value,\n\n          /* edited (add DeliveryPrice) */\n          CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n          // 2 or 4\n          DetailsLoad: notesRef.current.value,\n          LengthLoad: ((_lengthRef$current = lengthRef.current) === null || _lengthRef$current === void 0 ? void 0 : _lengthRef$current.value) || \"\",\n          WidthLoad: ((_widthRef$current = widthRef.current) === null || _widthRef$current === void 0 ? void 0 : _widthRef$current.value) || \"\",\n          HeightLoad: ((_heightRef$current = heightRef.current) === null || _heightRef$current === void 0 ? void 0 : _heightRef$current.value) || \"\",\n          WeightLoad: ((_weightRef$current = weightRef.current) === null || _weightRef$current === void 0 ? void 0 : _weightRef$current.value) || \"\",\n          qrCode: \"\"\n        }; // console.log(\"Mobile Number (before): \" + DeliveryParams.ClientMobileNumber);\n\n        /* edited (fix client mobile number intro) */\n\n        if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\n          var firstZero = DeliveryParams.ClientMobileNumber[0];\n          var replaced = DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');\n          DeliveryParams.ClientMobileNumber = replaced;\n        } // console.log(\"Mobile Number (after): \" + DeliveryParams.ClientMobileNumber);\n\n      } else {\n        var _lengthRef$current2, _widthRef$current2, _heightRef$current2, _weightRef$current2;\n\n        CreatedBy = \"Client\";\n        DeliveryParams = {\n          deliveryWay: deliveryType,\n          TypeLoad: packageType,\n          CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n          // 2 or 4\n          DetailsLoad: notesRef.current.value,\n          LengthLoad: ((_lengthRef$current2 = lengthRef.current) === null || _lengthRef$current2 === void 0 ? void 0 : _lengthRef$current2.value) || \"\",\n          WidthLoad: ((_widthRef$current2 = widthRef.current) === null || _widthRef$current2 === void 0 ? void 0 : _widthRef$current2.value) || \"\",\n          HeightLoad: ((_heightRef$current2 = heightRef.current) === null || _heightRef$current2 === void 0 ? void 0 : _heightRef$current2.value) || \"\",\n          WeightLoad: ((_weightRef$current2 = weightRef.current) === null || _weightRef$current2 === void 0 ? void 0 : _weightRef$current2.value) || \"\",\n          qrCode: \"\"\n        };\n      }\n      /* edited (old DeliveryParams commented) */\n\n      /*const DeliveryParams = {\r\n          deliveryWay: deliveryType,\r\n          TypeLoad: packageType,\r\n          CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\" , // 2 or 4\r\n          DetailsLoad: notesRef.current.value,\r\n          LengthLoad: lengthRef.current?.value || \"\",\r\n          WidthLoad: widthRef.current?.value || \"\",\r\n          HeightLoad: heightRef.current?.value || \"\",\r\n          WeightLoad: weightRef.current?.value || \"\",\r\n          qrCode: \"\"\r\n      };*/\n\n\n      var AddressClint = {\n        IdCity: selectedPickUpAddress.cityId,\n        // from selected pick up address\n        OtherDetails: selectedPickUpAddress.details,\n        // details from selected pickup address\n        LatSender: selectedPickUpAddress.latitude,\n        // from selected pick up address\n        LongSender: selectedPickUpAddress.longitude,\n        //  from selected pick up address\n        SenderAddressId: selectedPickUpAddress.id,\n        // from selected pick up address\n        IdCityDes: selectedDeliveryAddress.cityId,\n        // from selected delivery to address\n        OtherDetailsDes: selectedDeliveryAddress.details,\n        // details from selected delivery to address\n        LatReciver: selectedDeliveryAddress.latitude,\n        // from selected delivery to address\n        LongReciver: selectedDeliveryAddress.longitude,\n        // from selected delivery to address\n        ReciverAddressId: selectedDeliveryAddress.id,\n        // from selected delivery to address\n        ReceiverAddressNum: selectedDeliveryAddress.phone_number\n      };\n      CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy\n      /* edited (add CreatedBy parameter) */\n      , JSON.stringify(AddressClint)).then(function (res) {\n        /* edited (test data) */\n        // console.log(\"---------------\\nres : \" + res.data);\n        orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId; //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n\n        setOpenConf(true);\n        setOpen(false);\n        setLoadingSubmit(false); // props.onSuccess(); // to be removed\n      });\n      /* - deliveryWay \r\n          This one from radio button for delivery type it contains four values \r\n              (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n      - CostLoad   \r\n          This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n      - TypeLoad   \r\n          This one from the list we pick Food or Small/Medium/Large package where \r\n              Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n      - qrCode\r\n          in case of submit with qrcode we will put the value else it will be empty */\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 43\n    }\n  }), translate(\"ORDERS.SUBMIT\")))), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 21\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 21\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 21\n    }\n  }, \"Yes\"))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrder.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","GetAllClients","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","isTransporter","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","open","setOpen","openConf","setOpenConf","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","deliverAddresses","setDeliverAddresses","allClients","setAllClients","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","deliveryCostRef","clientMobileNumberRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","timer","setTimeout","then","res","data","clearTimeout","clients_list","filter","client","FullName","includes","children","display","width","height","marginRight","fill","eve","createElement","style","className","event","target","name","value","formatMessage","id","CreatedBy","DeliveryParams","deliveryWay","TypeLoad","ClientMobileNumber","current","DeliveryPrice","CostLoad","DetailsLoad","LengthLoad","WidthLoad","HeightLoad","WeightLoad","qrCode","charAt","firstZero","replaced","replace","AddressClint","IdCity","cityId","OtherDetails","details","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","OtherDetailsDes","LatReciver","LongReciver","ReciverAddressId","ReceiverAddressNum","phone_number","JSON","stringify","parse","server_response","OrderId","window"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../i18n/translate\";\r\nimport {ReactComponent as SendIcon } from \"../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"../APIs/OrdersAPIs\";\r\nimport { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import ) GetAllClients */\r\nimport {ReactComponent as FoodIcon} from \"../assets/images/food.svg\";\r\nimport {ReactComponent as SmBoxIcon} from \"../assets/images/smallBox.svg\";\r\nimport {ReactComponent as MedBoxIcon} from \"../assets/images/medbox.svg\";\r\nimport {ReactComponent as BigBoxIcon} from \"../assets/images/largebox.svg\";\r\nimport {ReactComponent as DeliveryTruckIcon} from \"../assets/images/deliveryTruck.svg\";\r\nimport {ReactComponent as LocationIcon} from \"../assets/images/location.svg\";\r\nimport {ReactComponent as AttachmentIcon} from \"../assets/images/attachment.svg\";\r\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"./AddressDropdown\";\r\nimport ClientDropdown from \"./ClientDropdown\"; /* edited (import ClientDropdown) */\r\nimport CreateAddress from \"./CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport { isTransporter } from \"../Util\"; /* edited (new import) */\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport function CreateNewOrder(props){\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n\tconst deliveryCostRef = useRef(); /* edited (deliveryCostRef added) */\r\n    const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if(open){\r\n                setLoading(true);\r\n\r\n                GetDefinedAddresses(inputValue).then((res)=>{\r\n                    setLoading(false);\r\n                    setDeliverAddresses(res.data);\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if(open){\r\n                setLoading(true);\r\n\r\n                GetAllClients().then((res) => {\r\n                    setLoading(false);\r\n                    setAllClients(res.data.clients_list.filter(client => client.FullName.includes(inputValue)));\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n    \r\n    return(\r\n        <>\r\n\t\t\t{/* edited (change button style if the user is transporter) */}\r\n            <Button className={`${props.children ? \"\" : !isTransporter() && \"btn-grad text-white\"}`} variant={isTransporter() && \"outline-light\"} onClick={()=>{\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight:\"5px\", fill:\"currentcolor\"}} />\r\n                        {translate(\"ORDERS.CREATE_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>\r\n            <Modal size=\"lg\" show={open} onHide={handleClose} centered animation={false} backdrop=\"static\">\r\n                \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDERS.CREATE_ORDER\")}</Modal.Title>\r\n                </Modal.Header>\r\n                \r\n                <Modal.Body>\r\n\r\n                    <div className=\"my-1\">\r\n                        {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                    </div>\r\n\r\n                    <Dropdown \r\n                        className=\"togo-dropdown\" \r\n                        onSelect={(eve)=>{\r\n                            setPackageType(eve);\r\n                        }}>\r\n                        <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                            {React.createElement(PackageTypesIcons[packageType], {style: {width: \"20px\", height: \"20px\"}, className: \"me-1\"})}\r\n                            <div style={{width: \"97%\"}}>    \r\n                                {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"w-100\">\r\n                            <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* edited (Client Mobile Number & Delivery Cost Fields added) */}\r\n                    {isTransporter() && <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                {/*<Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Client Mobile Number\" ref={clientMobileNumberRef} />*/}\r\n\r\n                                {/* test */}\r\n\r\n                                <ClientDropdown \r\n                                    loading={loading} \r\n                                    clients={allClients} \r\n                                    onSearch={setInputValue} \r\n                                    onSelect={setSelectedClient} \r\n                                    selectedClient={selectedClient} \r\n                                />\r\n\r\n                            \r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Delivery Cost\" ref={deliveryCostRef} />\r\n                            </div>\r\n                        </div>\r\n                    </>}\r\n                    \r\n                    <Form.Group onChange={(event)=>{\r\n                        if(event.target.name === \"DeliveryType\"){\r\n                            setDeliveryType(event.target.value);\r\n                        }\r\n                    }}>\r\n                        \r\n                        <div className=\"d-flex align-items-center my-1\">\r\n                            <DeliveryTruckIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                            {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                        </div>\r\n                        \r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[1])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios1\"\r\n                                value=\"1\"\r\n                                defaultChecked={deliveryType === \"1\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[2])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios2\"\r\n                                value=\"2\"\r\n                                defaultChecked={deliveryType === \"2\"}\r\n                            />\r\n                            {deliveryType === \"2\" &&\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    className=\"ms-auto w-25\" \r\n                                    placeholder={intl.formatMessage({id: \"ORDERS.AMOUNT\"})}\r\n                                    ref={codAmountRef}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[3])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios3\"\r\n                                value=\"3\"\r\n                                defaultChecked={deliveryType === \"3\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[4])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios4\"\r\n                                value=\"4\"\r\n                                defaultChecked={deliveryType === \"4\"}\r\n                            />\r\n                            {deliveryType === \"4\" && \r\n                                <Form.Control \r\n                                    ref={pickAmountRef}\r\n                                    type=\"number\"\r\n                                    className=\"ms-auto w-25\"\r\n                                    placeholder={intl.formatMessage({id: \"ORDERS.AMOUNT\"})}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <div className=\"d-flex align-items-end\">\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center my-1\">\r\n                                <LocationIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                            </div>\r\n\r\n                            <AddressDropdown \r\n                                loading={loading} \r\n                                addresses={deliverAddresses} \r\n                                onSearch={setInputValue} \r\n                                onSelect={setSelectedPickUpAddress} \r\n                                selectedAddress={selectedPickUpAddress} \r\n                            />\r\n                        </div>\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center my-1\">\r\n                                <SendIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                                <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                            </div>\r\n                            \r\n                            <AddressDropdown \r\n                                loading={loading} \r\n                                addresses={deliverAddresses} \r\n                                onSearch={setInputValue} \r\n                                onSelect={setSelectedDeliveryAddress} \r\n                                selectedAddress={selectedDeliveryAddress} \r\n                            />\r\n                        </div>\r\n                        <CreateAddress>\r\n                            <div className=\"btn-grad p-2 rounded-circle\">\r\n                                <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                            </div>\r\n                        </CreateAddress>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <AttachmentIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                        {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                    </div>\r\n                    \r\n                    {packageType !== \"1\" &&\r\n                    <>\r\n                        <div className=\"my-1\">{translate(\"ORDERS.DIMENSIONS_LABEL\")}</div>\r\n                        <div className=\"d-flex\">\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"me-2\"\r\n                                placeholder=\"Height\" \r\n                                ref={heightRef}\r\n                            />\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"me-2\" \r\n                                placeholder=\"Width\" \r\n                                ref={widthRef}\r\n                            />\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"\" \r\n                                placeholder=\"Length\" \r\n                                ref={lengthRef}\r\n                            />\r\n                        </div>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            className=\"mt-2\"\r\n                            placeholder=\"Weight\" \r\n                            ref={weightRef}\r\n                        />\r\n                    </>\r\n                    }\r\n                    <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Notes\" ref={notesRef} />\r\n                \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"\" \r\n                        className=\"togo-button w-100\" \r\n                        disabled={loadingSubmit}\r\n                        onClick={()=>{\r\n                            setLoadingSubmit(true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet CreatedBy = \"\"; /* edited (CreatedBy variable added) */\r\n                            let DeliveryParams = {}; /* edited (DeliveryParams as empty object) */\r\n\r\n                            if (isTransporter()) { /* edited (add Client Mobile Number & Delivery Price to DeliveryParams if the user is transporter) */\r\n                                CreatedBy = \"Transporter\";\r\n\r\n                                DeliveryParams = {\r\n                                    deliveryWay: deliveryType,\r\n                                    TypeLoad: packageType,\r\n                                    ClientMobileNumber: clientMobileNumberRef.current.value, /* edited (add ClientMobileNumber) */\r\n                                    DeliveryPrice: deliveryCostRef.current.value, /* edited (add DeliveryPrice) */\r\n                                    CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                    DetailsLoad: notesRef.current.value,\r\n                                    LengthLoad: lengthRef.current?.value || \"\",\r\n                                    WidthLoad: widthRef.current?.value || \"\",\r\n                                    HeightLoad: heightRef.current?.value || \"\",\r\n                                    WeightLoad: weightRef.current?.value || \"\",\r\n                                    qrCode: \"\"\r\n                                };\r\n\r\n                                 // console.log(\"Mobile Number (before): \" + DeliveryParams.ClientMobileNumber);\r\n\r\n                                /* edited (fix client mobile number intro) */\r\n                                if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\r\n                                    const firstZero = DeliveryParams.ClientMobileNumber[0];\r\n                                    const replaced =  DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');  \r\n                                    DeliveryParams.ClientMobileNumber = replaced;\r\n                                } \r\n\r\n                                // console.log(\"Mobile Number (after): \" + DeliveryParams.ClientMobileNumber);\r\n\r\n                            } else {\r\n                                CreatedBy = \"Client\";\r\n\r\n                                DeliveryParams = {\r\n                                    deliveryWay: deliveryType,\r\n                                    TypeLoad: packageType,\r\n                                    CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                    DetailsLoad: notesRef.current.value,\r\n                                    LengthLoad: lengthRef.current?.value || \"\",\r\n                                    WidthLoad: widthRef.current?.value || \"\",\r\n                                    HeightLoad: heightRef.current?.value || \"\",\r\n                                    WeightLoad: weightRef.current?.value || \"\",\r\n                                    qrCode: \"\"\r\n                                };\r\n                            }\r\n\r\n\t\t\t\t\t\t\t/* edited (old DeliveryParams commented) */\r\n                            /*const DeliveryParams = {\r\n                                deliveryWay: deliveryType,\r\n                                TypeLoad: packageType,\r\n                                CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\" , // 2 or 4\r\n                                DetailsLoad: notesRef.current.value,\r\n                                LengthLoad: lengthRef.current?.value || \"\",\r\n                                WidthLoad: widthRef.current?.value || \"\",\r\n                                HeightLoad: heightRef.current?.value || \"\",\r\n                                WeightLoad: weightRef.current?.value || \"\",\r\n                                qrCode: \"\"\r\n                            };*/\r\n                            const AddressClint = {\r\n                                IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                            };\r\n\r\n                            CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then((res)=>{\r\n\r\n                                /* edited (test data) */\r\n                                // console.log(\"---------------\\nres : \" + res.data);\r\n\r\n                                orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\r\n                                //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n                                \r\n                                setOpenConf(true);\r\n                                setOpen(false);\r\n                                setLoadingSubmit(false);\r\n                                // props.onSuccess(); // to be removed\r\n                            });\r\n\r\n    /* - deliveryWay \r\n        This one from radio button for delivery type it contains four values \r\n            (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n    - CostLoad   \r\n        This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n    - TypeLoad   \r\n        This one from the list we pick Food or Small/Medium/Large package where \r\n            Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n    - qrCode\r\n        in case of submit with qrcode we will put the value else it will be empty */\r\n                        }}\r\n                    >\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\"/>} \r\n                        {translate(\"ORDERS.SUBMIT\")}\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n                \r\n            </Modal>\r\n            <Modal \r\n                show={openConf} \r\n                onHide={()=>{\r\n                    \r\n                    setOpenConf(false);\r\n                }} \r\n                animation={false} \r\n                backdrop=\"static\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>Would you like to print a waybill ?</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"secondary\"\r\n                        onClick={()=>{\r\n                            setOpenConf(false);\r\n                        }}\r\n                    >\r\n                        No\r\n                    </Button>\r\n\r\n                    <Button \r\n                        variant=\"primary\"\r\n                        onClick={()=>{\r\n                            setOpenConf(false);\r\n                            window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}