{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/TestComponent.jsx\";\nimport { Button, Form, Table, Card, Container, Row, Col } from \"react-bootstrap\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { testLogestechsArea\n/* , recordRechargeBalance */\n, getLogisticsVillagesTest, getAllCitiesTest } from \"../APIs/OrdersAPIs\";\nexport default function TestComponent() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      citiesAr = _useState2[0],\n      setCitiesAr = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      citiesEn = _useState4[0],\n      setCitiesEn = _useState4[1];\n\n  useEffect(function () {\n    getAllCitiesTest(1).then(function (res) {\n      setCitiesEn(res.data);\n    });\n    getAllCitiesTest(2).then(function (res) {\n      setCitiesAr(res.data);\n    });\n  });\n  /* useEffect(() => {\r\n      getLogisticsVillagesTest().then(res => {\r\n          console.log(res.data);\r\n      })\r\n  }, []) */\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, \"City ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, \"City Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }, \"City Name\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, citiesEn.map(function (city, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 41\n      }\n    }, city.cityId), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }\n    }, city.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 41\n      }\n    }));\n  }))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/TestComponent.jsx"],"names":["Button","Form","Table","Card","Container","Row","Col","React","useRef","useEffect","useState","testLogestechsArea","getLogisticsVillagesTest","getAllCitiesTest","TestComponent","citiesAr","setCitiesAr","citiesEn","setCitiesEn","then","res","data","map","city","index","cityId","name"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,SAApC,EAA+CC,GAA/C,EAAoDC,GAApD,QAA+D,iBAA/D;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC;AAAkB;AAA3B,EAA0DC,wBAA1D,EAAoFC,gBAApF,QAA4G,oBAA5G;AAGA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAEpC,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBM,IAApB,CAAyB,UAAAC,GAAG,EAAI;AAC5BF,MAAAA,WAAW,CAACE,GAAG,CAACC,IAAL,CAAX;AACH,KAFD;AAIAR,IAAAA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBM,IAApB,CAAyB,UAAAC,GAAG,EAAI;AAC5BJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAL,CAAX;AACH,KAFD;AAGH,GARQ,CAAT;AAUA;AACJ;AACA;AACA;AACA;;AAEI,sBACI,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,QAAQ,CAACK,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,wBAAO;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,MAAV,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,IAAV,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHG,CAAP;AAKH,GAND,CAFR,CARJ,CADJ,CADJ,CADJ,CADJ;AA4BH","sourcesContent":["import { Button, Form, Table, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { testLogestechsArea/* , recordRechargeBalance */, getLogisticsVillagesTest, getAllCitiesTest } from \"../APIs/OrdersAPIs\";\r\n\r\n\r\nexport default function TestComponent() {\r\n\r\n    const [citiesAr, setCitiesAr] = useState([]);\r\n    const [citiesEn, setCitiesEn] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllCitiesTest(1).then(res => {\r\n            setCitiesEn(res.data);\r\n        })\r\n\r\n        getAllCitiesTest(2).then(res => {\r\n            setCitiesAr(res.data);\r\n        })\r\n    })\r\n\r\n    /* useEffect(() => {\r\n        getLogisticsVillagesTest().then(res => {\r\n            console.log(res.data);\r\n        })\r\n    }, []) */\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>City ID</th>\r\n                                <th>City Name</th>\r\n                                <th>City Name</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                citiesEn.map((city, index) => {\r\n                                    return <tr key={index}>\r\n                                        <td>{city.cityId}</td>\r\n                                        <td>{city.name}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}