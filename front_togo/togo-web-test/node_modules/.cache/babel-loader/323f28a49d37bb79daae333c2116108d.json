{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateAddress.jsx\";\nimport translate from \"../i18n/translate\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Form, Modal, Row, FloatingLabel, Spinner } from \"react-bootstrap\";\nimport { CreateAddressReq, GetCityRegion } from \"../APIs/OrdersAPIs\";\nexport default function CreateAddress(_ref) {\n  var _cities$map,\n      _this = this;\n\n  var onSuccess = _ref.onSuccess,\n      children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cities = _useState4[0],\n      setCities = _useState4[1];\n\n  useEffect(function () {\n    //if(show === true) {\n    GetCityRegion().then(function (res) {\n      setCities(res.data.server_response);\n    }); //}\n  }, []);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      validated = _useState8[0],\n      setValidated = _useState8[1];\n  /* edited (handleClose handler added) */\n\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: function onClick() {\n      setShow(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, children), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: function onHide() {\n      setShow(false);\n    },\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    style: {\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.ADD_ADDRESS\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"addressForm\",\n    validated: validated,\n    noValidate: true\n    /* ref={formRef} */\n    ,\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var formData = new FormData(event.target),\n          formDataObj = Object.fromEntries(formData.entries());\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === true) {\n        setLoading(true);\n        CreateAddressReq(formDataObj).then(function () {\n          setLoading(false);\n          setShow(false);\n          onSuccess && onSuccess();\n        });\n      }\n\n      setValidated(true);\n      console.log(formDataObj);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"formBasicEmail\",\n    label: translate(\"ORDERS.ADDRESS_NAME\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"placename\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"Please add place name\")), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"userTel\",\n    label: translate(\"ORDERS.ADDRESS_PHONE\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"tel\",\n    placeholder: \"...\",\n    name: \"phone\",\n    pattern: \"^05[0-9]{8}?$\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, \"Please enter a valid phone number example 0568000000\")), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"AddressCity\",\n    label: translate(\"ORDERS.ADDRESS_CITY\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Select, {\n    name: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, cities === null || cities === void 0 ? void 0 : (_cities$map = cities.map) === null || _cities$map === void 0 ? void 0 : _cities$map.call(cities, function (city) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: city.IdCity,\n      value: city.IdCity,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 44\n      }\n    }, city.Name);\n  }))), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"userAddress\",\n    label: translate(\"ORDERS.ADDRESS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"addressInfo\",\n    label: translate(\"ORDERS.ADDRESS_INFO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"addressinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"addCountry\",\n    label: translate(\"ORDERS.ADDRESS_COUNTRY\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"addressCode\",\n    label: translate(\"ORDERS.ADDRESS_CODE\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"zipcode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"switch\",\n    id: \"custom-switch\",\n    label: translate(\"ORDERS.ADDRESS_SHARED\"),\n    name: \"isShared\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, loading && /*#__PURE__*/React.createElement(Spinner, {\n    size: \"sm\",\n    className: \"me-1\",\n    animation: \"border\",\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  }), translate(\"GENERAL.PROCEED\")), \"  \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, translate(\"GENERAL.CANCEL\"))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateAddress.jsx"],"names":["translate","React","useEffect","useState","Button","Col","Form","Modal","Row","FloatingLabel","Spinner","CreateAddressReq","GetCityRegion","CreateAddress","onSuccess","children","show","setShow","cities","setCities","then","res","data","server_response","loading","setLoading","validated","setValidated","handleClose","backgroundColor","event","preventDefault","stopPropagation","formData","FormData","target","formDataObj","Object","fromEntries","entries","form","currentTarget","checkValidity","console","log","map","city","IdCity","Name"],"mappings":"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","sourcesContent":["import translate from \"../i18n/translate\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Modal, Row, FloatingLabel, Spinner } from \"react-bootstrap\";\r\nimport { CreateAddressReq, GetCityRegion } from \"../APIs/OrdersAPIs\";\r\n\r\nexport default function CreateAddress({onSuccess, children}){\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [cities, setCities] = useState([]);\r\n\r\n    useEffect(() => {\r\n        //if(show === true) {\r\n            GetCityRegion().then((res) => {\r\n                setCities(res.data.server_response);\r\n            });\r\n        //}\r\n    }, []);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n\r\n    /* edited (handleClose handler added) */\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span onClick={()=>{\r\n                setShow(true);\r\n            }}>\r\n            \r\n                {children}\r\n            </span>\r\n\r\n            {/*  edited (fullscreen removed and style added) */}\r\n            <Modal \r\n                    show={show}\r\n                    onHide={()=>{setShow(false)}} \r\n                    centered \r\n                    animation={true} \r\n                    backdrop=\"static\"\r\n\r\n                    style={{ backgroundColor: \"rgba(0,0,0,0.5)\" }}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDERS.ADD_ADDRESS\")}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form id=\"addressForm\" validated={validated} noValidate /* ref={formRef} */ onSubmit={(event)=>{\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                        const formData = new FormData(event.target),\r\n                        formDataObj = Object.fromEntries(formData.entries())\r\n                        const form = event.currentTarget;\r\n                        if (form.checkValidity() === true) {\r\n                            setLoading(true);\r\n                            CreateAddressReq(formDataObj).then(()=>{\r\n                                setLoading(false);\r\n                                setShow(false);\r\n                                onSuccess && onSuccess();\r\n                            });\r\n                        }\r\n                        setValidated(true);\r\n                        console.log(formDataObj);\r\n                        \r\n                    }}>\r\n                        \r\n                        <FloatingLabel className=\"mb-3\" controlId=\"formBasicEmail\" label={translate(\"ORDERS.ADDRESS_NAME\")}>\r\n                            <Form.Control type=\"text\" placeholder=\"...\" name=\"placename\" required />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please add place name\r\n                            </Form.Control.Feedback>\r\n                        </FloatingLabel>\r\n                        \r\n                        <FloatingLabel className=\"mb-3\" controlId=\"userTel\" label={translate(\"ORDERS.ADDRESS_PHONE\")}>\r\n                            <Form.Control type=\"tel\" placeholder=\"...\" name=\"phone\" pattern=\"^05[0-9]{8}?$\" required/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please enter a valid phone number example 0568000000\r\n                            </Form.Control.Feedback>\r\n                        </FloatingLabel>\r\n                        \r\n                        <FloatingLabel className=\"mb-3\" controlId=\"AddressCity\" label={translate(\"ORDERS.ADDRESS_CITY\")}>\r\n                            <Form.Select name=\"city\">\r\n                                {cities?.map?.((city)=>{\r\n                                    return <option key={city.IdCity} value={city.IdCity}>{city.Name}</option>\r\n                                })}\r\n                            </Form.Select>\r\n                        </FloatingLabel>\r\n\r\n                        <FloatingLabel className=\"mb-3\" controlId=\"userAddress\" label={translate(\"ORDERS.ADDRESS\")}>\r\n                            <Form.Control type=\"text\" placeholder=\"...\" name=\"address\" />\r\n                        </FloatingLabel>\r\n\r\n                        <FloatingLabel className=\"mb-3\" controlId=\"addressInfo\" label={translate(\"ORDERS.ADDRESS_INFO\")}>\r\n                            <Form.Control type=\"text\" placeholder=\"...\" name=\"addressinfo\" />\r\n                        </FloatingLabel>\r\n                        <Row>\r\n                            <Col md>\r\n                            <FloatingLabel className=\"mb-3\" controlId=\"addCountry\" label={translate(\"ORDERS.ADDRESS_COUNTRY\")}>\r\n                                <Form.Control type=\"text\" placeholder=\"...\" name=\"country\" />\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                            <Col>\r\n                            <FloatingLabel className=\"mb-3\" controlId=\"addressCode\" label={translate(\"ORDERS.ADDRESS_CODE\")}>\r\n                                <Form.Control type=\"text\" placeholder=\"...\" name=\"zipcode\" />\r\n                            </FloatingLabel>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Form.Check \r\n                            type=\"switch\"\r\n                            id=\"custom-switch\"\r\n                            label={translate(\"ORDERS.ADDRESS_SHARED\")}\r\n                            name=\"isShared\"\r\n                        />\r\n\r\n                        <Button variant=\"outline-primary\" type=\"submit\">\r\n                            {loading && <Spinner size=\"sm\" className=\"me-1\" animation=\"border\" variant=\"light\" />}\r\n\r\n                            {translate(\"GENERAL.PROCEED\")}\r\n                        </Button>\r\n\r\n                        {/* edited (cancel button added) */}\r\n\r\n                        {\"  \"}\r\n                        <Button variant=\"danger\" onClick={handleClose}>\r\n                             {translate(\"GENERAL.CANCEL\")}\r\n                        </Button>\r\n                    </Form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}