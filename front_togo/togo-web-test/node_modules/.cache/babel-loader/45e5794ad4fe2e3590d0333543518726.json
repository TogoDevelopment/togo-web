{"ast":null,"code":"import React, { useState, useEffect, useRef, useMemo, useCallback, useImperativeHandle } from 'react';\nimport bindElementResize from 'element-resize-event';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport helper from '../DOMHelper';\nimport positionUtils from './positionUtils';\nimport { getDOMNode } from '../utils';\nimport { useUpdateEffect } from '../utils';\nvar defaultProps = {\n  containerPadding: 0,\n  placement: 'right'\n};\n\nvar usePosition = function usePosition(props, ref) {\n  var placement = props.placement,\n      preventOverflow = props.preventOverflow,\n      containerPadding = props.containerPadding,\n      container = props.container,\n      triggerTarget = props.triggerTarget;\n  var containerRef = useRef();\n  var lastTargetRef = useRef();\n  var defaultPosition = {\n    positionLeft: 0,\n    positionTop: 0,\n    arrowOffsetLeft: null,\n    arrowOffsetTop: null\n  };\n\n  var _useState = useState(defaultPosition),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var utils = useMemo(function () {\n    return positionUtils({\n      placement: placement,\n      preventOverflow: preventOverflow,\n      padding: containerPadding\n    });\n  }, [placement, preventOverflow, containerPadding]);\n  var updatePosition = useCallback(\n  /**\n   * @param placementChanged  Whether the placement has changed\n   * @param forceUpdateDOM Whether to update the DOM directly\n   * @returns void\n   */\n  function (placementChanged, forceUpdateDOM) {\n    if (placementChanged === void 0) {\n      placementChanged = true;\n    }\n\n    if (!(triggerTarget !== null && triggerTarget !== void 0 && triggerTarget.current)) {\n      return;\n    }\n\n    var targetElement = getDOMNode(triggerTarget);\n\n    if (!helper.isElement(targetElement)) {\n      throw new Error('`target` should return an HTMLElement');\n    } //  If the target and placement do not change, the position is not updated.\n\n\n    if (targetElement === lastTargetRef.current && !placementChanged) {\n      return;\n    }\n\n    var overlay = getDOMNode(ref.current);\n    var containerElement = helper.getContainer(typeof container === 'function' ? container() : container, helper.ownerDocument(ref.current).body);\n    var posi = utils.calcOverlayPosition(overlay, targetElement, containerElement);\n\n    if (forceUpdateDOM && overlay) {\n      var _overlay$className, _overlay$className$ma;\n\n      var preClassName = overlay === null || overlay === void 0 ? void 0 : (_overlay$className = overlay.className) === null || _overlay$className === void 0 ? void 0 : (_overlay$className$ma = _overlay$className.match(/(placement-\\S+)/)) === null || _overlay$className$ma === void 0 ? void 0 : _overlay$className$ma[0];\n      helper.removeClass(overlay, preClassName);\n      helper.addClass(overlay, posi.positionClassName);\n      helper.addStyle(overlay, {\n        left: posi.positionLeft + \"px\",\n        top: posi.positionTop + \"px\"\n      });\n    } else {\n      setPosition(posi);\n    }\n\n    containerRef.current = containerElement;\n    lastTargetRef.current = targetElement;\n  }, [container, ref, triggerTarget, utils]);\n  useEffect(function () {\n    updatePosition(false);\n    var overlay = getDOMNode(ref.current);\n    var containerScrollListener;\n\n    if (containerRef.current && preventOverflow) {\n      var _containerRef$current; // Update the overlay position when the container scroll bar is scrolling\n\n\n      containerScrollListener = helper.on(((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.tagName) === 'BODY' ? window : containerRef.current, 'scroll', function () {\n        return updatePosition(true, true);\n      });\n    } // Update the position when the window size changes\n\n\n    var resizeListener = helper.on(window, 'resize', function () {\n      return updatePosition(true, true);\n    });\n\n    if (overlay) {\n      // Update the position when the size of the overlay changes\n      bindElementResize(overlay, function () {\n        return updatePosition(true, true);\n      });\n    }\n\n    return function () {\n      var _containerScrollListe;\n\n      lastTargetRef.current = null;\n      (_containerScrollListe = containerScrollListener) === null || _containerScrollListe === void 0 ? void 0 : _containerScrollListe.off();\n      resizeListener === null || resizeListener === void 0 ? void 0 : resizeListener.off();\n    };\n  }, [preventOverflow, ref, updatePosition]);\n  useUpdateEffect(function () {\n    return updatePosition();\n  }, [updatePosition, placement]);\n  return [position, updatePosition];\n};\n\nvar Position = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className;\n  var childRef = React.useRef();\n\n  var _usePosition = usePosition(props, childRef),\n      position = _usePosition[0],\n      updatePosition = _usePosition[1];\n\n  var positionClassName = position.positionClassName,\n      arrowOffsetLeft = position.arrowOffsetLeft,\n      arrowOffsetTop = position.arrowOffsetTop,\n      positionLeft = position.positionLeft,\n      positionTop = position.positionTop;\n  useImperativeHandle(ref, function () {\n    return {\n      get child() {\n        return childRef.current;\n      },\n\n      updatePosition: updatePosition\n    };\n  });\n\n  if (typeof children === 'function') {\n    var childProps = {\n      className: classNames(className, positionClassName),\n      arrowOffsetLeft: arrowOffsetLeft,\n      arrowOffsetTop: arrowOffsetTop,\n      left: positionLeft,\n      top: positionTop\n    };\n    return children(childProps, childRef);\n  }\n\n  return children;\n});\nPosition.displayName = 'Position';\nPosition.defaultProps = defaultProps;\nPosition.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.func,\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.any]),\n  containerPadding: PropTypes.number,\n  placement: PropTypes.any,\n  preventOverflow: PropTypes.bool,\n  triggerTarget: PropTypes.any\n};\nexport default Position;","map":{"version":3,"sources":["/home/system/togo-web-test/node_modules/rsuite/esm/Overlay/Position.js"],"names":["React","useState","useEffect","useRef","useMemo","useCallback","useImperativeHandle","bindElementResize","PropTypes","classNames","helper","positionUtils","getDOMNode","useUpdateEffect","defaultProps","containerPadding","placement","usePosition","props","ref","preventOverflow","container","triggerTarget","containerRef","lastTargetRef","defaultPosition","positionLeft","positionTop","arrowOffsetLeft","arrowOffsetTop","_useState","position","setPosition","utils","padding","updatePosition","placementChanged","forceUpdateDOM","current","targetElement","isElement","Error","overlay","containerElement","getContainer","ownerDocument","body","posi","calcOverlayPosition","_overlay$className","_overlay$className$ma","preClassName","className","match","removeClass","addClass","positionClassName","addStyle","left","top","containerScrollListener","_containerRef$current","on","tagName","window","resizeListener","_containerScrollListe","off","Position","forwardRef","children","childRef","_usePosition","child","childProps","displayName","propTypes","string","func","oneOfType","any","number","bool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useMemo, useCallback, useImperativeHandle } from 'react';\nimport bindElementResize from 'element-resize-event';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport helper from '../DOMHelper';\nimport positionUtils from './positionUtils';\nimport { getDOMNode } from '../utils';\nimport { useUpdateEffect } from '../utils';\nvar defaultProps = {\n  containerPadding: 0,\n  placement: 'right'\n};\n\nvar usePosition = function usePosition(props, ref) {\n  var placement = props.placement,\n      preventOverflow = props.preventOverflow,\n      containerPadding = props.containerPadding,\n      container = props.container,\n      triggerTarget = props.triggerTarget;\n  var containerRef = useRef();\n  var lastTargetRef = useRef();\n  var defaultPosition = {\n    positionLeft: 0,\n    positionTop: 0,\n    arrowOffsetLeft: null,\n    arrowOffsetTop: null\n  };\n\n  var _useState = useState(defaultPosition),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var utils = useMemo(function () {\n    return positionUtils({\n      placement: placement,\n      preventOverflow: preventOverflow,\n      padding: containerPadding\n    });\n  }, [placement, preventOverflow, containerPadding]);\n  var updatePosition = useCallback(\n  /**\n   * @param placementChanged  Whether the placement has changed\n   * @param forceUpdateDOM Whether to update the DOM directly\n   * @returns void\n   */\n  function (placementChanged, forceUpdateDOM) {\n    if (placementChanged === void 0) {\n      placementChanged = true;\n    }\n\n    if (!(triggerTarget !== null && triggerTarget !== void 0 && triggerTarget.current)) {\n      return;\n    }\n\n    var targetElement = getDOMNode(triggerTarget);\n\n    if (!helper.isElement(targetElement)) {\n      throw new Error('`target` should return an HTMLElement');\n    } //  If the target and placement do not change, the position is not updated.\n\n\n    if (targetElement === lastTargetRef.current && !placementChanged) {\n      return;\n    }\n\n    var overlay = getDOMNode(ref.current);\n    var containerElement = helper.getContainer(typeof container === 'function' ? container() : container, helper.ownerDocument(ref.current).body);\n    var posi = utils.calcOverlayPosition(overlay, targetElement, containerElement);\n\n    if (forceUpdateDOM && overlay) {\n      var _overlay$className, _overlay$className$ma;\n\n      var preClassName = overlay === null || overlay === void 0 ? void 0 : (_overlay$className = overlay.className) === null || _overlay$className === void 0 ? void 0 : (_overlay$className$ma = _overlay$className.match(/(placement-\\S+)/)) === null || _overlay$className$ma === void 0 ? void 0 : _overlay$className$ma[0];\n      helper.removeClass(overlay, preClassName);\n      helper.addClass(overlay, posi.positionClassName);\n      helper.addStyle(overlay, {\n        left: posi.positionLeft + \"px\",\n        top: posi.positionTop + \"px\"\n      });\n    } else {\n      setPosition(posi);\n    }\n\n    containerRef.current = containerElement;\n    lastTargetRef.current = targetElement;\n  }, [container, ref, triggerTarget, utils]);\n  useEffect(function () {\n    updatePosition(false);\n    var overlay = getDOMNode(ref.current);\n    var containerScrollListener;\n\n    if (containerRef.current && preventOverflow) {\n      var _containerRef$current;\n\n      // Update the overlay position when the container scroll bar is scrolling\n      containerScrollListener = helper.on(((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.tagName) === 'BODY' ? window : containerRef.current, 'scroll', function () {\n        return updatePosition(true, true);\n      });\n    } // Update the position when the window size changes\n\n\n    var resizeListener = helper.on(window, 'resize', function () {\n      return updatePosition(true, true);\n    });\n\n    if (overlay) {\n      // Update the position when the size of the overlay changes\n      bindElementResize(overlay, function () {\n        return updatePosition(true, true);\n      });\n    }\n\n    return function () {\n      var _containerScrollListe;\n\n      lastTargetRef.current = null;\n      (_containerScrollListe = containerScrollListener) === null || _containerScrollListe === void 0 ? void 0 : _containerScrollListe.off();\n      resizeListener === null || resizeListener === void 0 ? void 0 : resizeListener.off();\n    };\n  }, [preventOverflow, ref, updatePosition]);\n  useUpdateEffect(function () {\n    return updatePosition();\n  }, [updatePosition, placement]);\n  return [position, updatePosition];\n};\n\nvar Position = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className;\n  var childRef = React.useRef();\n\n  var _usePosition = usePosition(props, childRef),\n      position = _usePosition[0],\n      updatePosition = _usePosition[1];\n\n  var positionClassName = position.positionClassName,\n      arrowOffsetLeft = position.arrowOffsetLeft,\n      arrowOffsetTop = position.arrowOffsetTop,\n      positionLeft = position.positionLeft,\n      positionTop = position.positionTop;\n  useImperativeHandle(ref, function () {\n    return {\n      get child() {\n        return childRef.current;\n      },\n\n      updatePosition: updatePosition\n    };\n  });\n\n  if (typeof children === 'function') {\n    var childProps = {\n      className: classNames(className, positionClassName),\n      arrowOffsetLeft: arrowOffsetLeft,\n      arrowOffsetTop: arrowOffsetTop,\n      left: positionLeft,\n      top: positionTop\n    };\n    return children(childProps, childRef);\n  }\n\n  return children;\n});\nPosition.displayName = 'Position';\nPosition.defaultProps = defaultProps;\nPosition.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.func,\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.any]),\n  containerPadding: PropTypes.number,\n  placement: PropTypes.any,\n  preventOverflow: PropTypes.bool,\n  triggerTarget: PropTypes.any\n};\nexport default Position;"]},"metadata":{},"sourceType":"module"}