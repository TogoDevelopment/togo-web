{"ast":null,"code":"import _classCallCheck from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/QRCodeGenerator/QRCodeGenerator.jsx\";\nimport React, { Component } from \"react\";\nimport \"./QRCodeGenerator.css\";\nimport { getAuthenticationQR } from \"../APIs/AuthenticationAPIs\";\nimport { checkAccess as _checkAccess } from \"../../Actions/authenticationActions\";\nimport { connect } from \"react-redux\";\nimport whiteLogo from '../../assets/whiteLogo.png';\n\nvar QRCode = require(\"qrcode.react\");\n\nvar QRCodeGenerator = /*#__PURE__*/function (_Component) {\n  _inherits(QRCodeGenerator, _Component);\n\n  var _super = _createSuper(QRCodeGenerator);\n\n  function QRCodeGenerator() {\n    var _this;\n\n    _classCallCheck(this, QRCodeGenerator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      qrUUID: null\n    };\n\n    _this.getAuthenticationQR = function () {\n      getAuthenticationQR().then(function (qrUUID) {\n        _this.setState({\n          qrUUID: qrUUID\n        });\n      });\n    };\n\n    _this.componentDidMount = function () {\n      var _this$props = _this.props,\n          history = _this$props.history,\n          checkAccess = _this$props.checkAccess;\n\n      _this.getAuthenticationQR();\n\n      _this.qrCodeGeneratorInterval = setInterval(_this.getAuthenticationQR, 300000000);\n      _this.checkSuccessInterval = setInterval(function () {\n        checkAccess(_this.state.qrUUID).then(function (res) {\n          res && history.push(\"/account/main/\");\n        });\n      }, 5000);\n    };\n\n    _this.componentWillUnmount = function () {\n      clearInterval(_this.qrCodeGeneratorInterval);\n      clearInterval(_this.checkSuccessInterval);\n    };\n\n    return _this;\n  }\n\n  _createClass(QRCodeGenerator, [{\n    key: \"render\",\n    value: function render() {\n      var qrUUID = this.state.qrUUID;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, qrUUID && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"qr-code-canvas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(QRCode, {\n        value: qrUUID,\n        size: 256 //fgColor=\"green\"\n        ,\n        imageSettings: {\n          //src: whiteLogo,\n          height: 30 * 256 / 100,\n          width: 30 * 256 / 100,\n          excavate: false\n        } //includeMargin={true}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      })));\n    }\n  }]);\n\n  return QRCodeGenerator;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkAccess: function checkAccess(qrUUID) {\n      return dispatch(_checkAccess(qrUUID));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeGenerator);","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/QRCodeGenerator/QRCodeGenerator.jsx"],"names":["React","Component","getAuthenticationQR","checkAccess","connect","whiteLogo","QRCode","require","QRCodeGenerator","state","qrUUID","then","setState","componentDidMount","props","history","qrCodeGeneratorInterval","setInterval","checkSuccessInterval","res","push","componentWillUnmount","clearInterval","height","width","excavate","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,uBAAP;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;AAEA,SAAQC,WAAW,IAAXA,YAAR,QAA0B,qCAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,cAAD,CAApB;;IAEMC,e;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAACC,MAAAA,MAAM,EAAE;AAAT,K;;UAERR,mB,GAAsB,YAAM;AACxBA,MAAAA,mBAAmB,GAAGS,IAAtB,CAA2B,UAACD,MAAD,EAAY;AACnC,cAAKE,QAAL,CAAc;AACVF,UAAAA,MAAM,EAANA;AADU,SAAd;AAGH,OAJD;AAKH,K;;UAEDG,iB,GAAoB,YAAM;AACtB,wBAA6B,MAAKC,KAAlC;AAAA,UAAKC,OAAL,eAAKA,OAAL;AAAA,UAAcZ,WAAd,eAAcA,WAAd;;AAEA,YAAKD,mBAAL;;AACA,YAAKc,uBAAL,GAA+BC,WAAW,CACtC,MAAKf,mBADiC,EAEtC,SAFsC,CAA1C;AAIA,YAAKgB,oBAAL,GAA4BD,WAAW,CAAC,YAAM;AAC1Cd,QAAAA,WAAW,CAAC,MAAKM,KAAL,CAAWC,MAAZ,CAAX,CAA+BC,IAA/B,CAAoC,UAACQ,GAAD,EAAS;AACzCA,UAAAA,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,gBAAb,CAAP;AACH,SAFD;AAGH,OAJsC,EAIpC,IAJoC,CAAvC;AAKH,K;;UAEDC,oB,GAAuB,YAAM;AACzBC,MAAAA,aAAa,CAAC,MAAKN,uBAAN,CAAb;AACAM,MAAAA,aAAa,CAAC,MAAKJ,oBAAN,CAAb;AACH,K;;;;;;;WAED,kBAAS;AACL,UAAKR,MAAL,GAAe,KAAKD,KAApB,CAAKC,MAAL;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,MAAM,iBACH;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAEA,MADX;AAEI,QAAA,IAAI,EAAE,GAFV,CAGI;AAHJ;AAII,QAAA,aAAa,EAAE;AACX;AACAa,UAAAA,MAAM,EAAE,KAAK,GAAL,GAAW,GAFR;AAGXC,UAAAA,KAAK,EAAE,KAAK,GAAL,GAAW,GAHP;AAIXC,UAAAA,QAAQ,EAAE;AAJC,SAJnB,CAUI;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,CADJ;AAoBH;;;;EArDyBxB,S;;AAwD9B,IAAMyB,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,KAAD;AAAA,SAAY,EAAZ;AAAA,CAAxB;;AAEA,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCzB,IAAAA,WAAW,EAAE,qBAACO,MAAD;AAAA,aAAYkB,QAAQ,CAACzB,YAAW,CAACO,MAAD,CAAZ,CAApB;AAAA;AADyB,GAAf;AAAA,CAA3B;;AAIA,eAAeN,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,eAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./QRCodeGenerator.css\";\r\nimport {getAuthenticationQR} from \"../APIs/AuthenticationAPIs\";\r\n\r\nimport {checkAccess} from \"../../Actions/authenticationActions\";\r\nimport {connect} from \"react-redux\";\r\nimport whiteLogo from '../../assets/whiteLogo.png';\r\nvar QRCode = require(\"qrcode.react\");\r\n\r\nclass QRCodeGenerator extends Component {\r\n    state = {qrUUID: null};\r\n\r\n    getAuthenticationQR = () => {\r\n        getAuthenticationQR().then((qrUUID) => {\r\n            this.setState({\r\n                qrUUID,\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        let {history, checkAccess} = this.props;\r\n\r\n        this.getAuthenticationQR();\r\n        this.qrCodeGeneratorInterval = setInterval(\r\n            this.getAuthenticationQR,\r\n            300000000\r\n        );\r\n        this.checkSuccessInterval = setInterval(() => {\r\n            checkAccess(this.state.qrUUID).then((res) => {\r\n                res && history.push(\"/account/main/\");\r\n            });\r\n        }, 5000);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.qrCodeGeneratorInterval);\r\n        clearInterval(this.checkSuccessInterval);\r\n    };\r\n\r\n    render() {\r\n        let {qrUUID} = this.state;\r\n        return (\r\n            <div>\r\n                {qrUUID && (\r\n                    <div className=\"qr-code-canvas\">\r\n                        <QRCode\r\n                            value={qrUUID}\r\n                            size={256}\r\n                            //fgColor=\"green\"\r\n                            imageSettings={{\r\n                                //src: whiteLogo,\r\n                                height: 30 * 256 / 100,\r\n                                width: 30 * 256 / 100, \r\n                                excavate: false\r\n                            }}\r\n                            //includeMargin={true}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    checkAccess: (qrUUID) => dispatch(checkAccess(qrUUID))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeGenerator);\r\n"]},"metadata":{},"sourceType":"module"}