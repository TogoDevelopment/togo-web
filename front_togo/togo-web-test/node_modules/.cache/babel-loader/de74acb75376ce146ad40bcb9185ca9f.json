{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/UploadImage/UploadAndEditImage.jsx\";\nimport React, { useRef, useState } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport AvatarEditor from 'react-avatar-editor';\nimport { Modal, Button, Form } from 'react-bootstrap';\nexport default function UploadAndEditImage(_ref) {\n  var _this = this;\n\n  var currentImage = _ref.currentImage,\n      setImage = _ref.setImage,\n      setImageToUpload = _ref.setImageToUpload,\n      imageBorderRadius = _ref.imageBorderRadius,\n      imageHeight = _ref.imageHeight,\n      imageWidth = _ref.imageWidth;\n\n  // console.log(currentImage)\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var maxNumber = 1;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rotate = _useState6[0],\n      setRotate = _useState6[1];\n\n  var _useState7 = useState(1.0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      size = _useState8[0],\n      setSize = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      borderRadius = _useState10[0],\n      setBorderRadius = _useState10[1];\n\n  var editor = useRef(null);\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var onChange = function onChange(image) {\n    setImages(image);\n  };\n\n  var handleRotate = function handleRotate(event) {\n    setRotate(parseInt(event.target.value));\n  };\n\n  var handleSize = function handleSize(event) {\n    setSize(parseFloat(event.target.value));\n  };\n\n  var handleBorderRadius = function handleBorderRadius(event) {\n    setBorderRadius(parseInt(event.target.value));\n  };\n\n  var getImageUrl = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var dataUrl, result, blob, urlCreator, imageUrl;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dataUrl = editor.current.getImage().toDataURL();\n              _context.next = 3;\n              return fetch(dataUrl);\n\n            case 3:\n              result = _context.sent;\n              _context.next = 6;\n              return result.blob();\n\n            case 6:\n              blob = _context.sent;\n              urlCreator = window.URL || window.webkitURL;\n              imageUrl = urlCreator.createObjectURL(blob);\n              return _context.abrupt(\"return\", imageUrl);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getImageUrl() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getImageUrlToUpload = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var dataUrl, result, blob, data, _iterator, _step, key;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dataUrl = editor.current.getImage().toDataURL();\n              _context2.next = 3;\n              return fetch(dataUrl);\n\n            case 3:\n              result = _context2.sent;\n              _context2.next = 6;\n              return result.blob();\n\n            case 6:\n              blob = _context2.sent;\n              data = new FormData();\n              data.append('image', blob, 'image.png');\n              _iterator = _createForOfIteratorHelper(data.entries());\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  key = _step.value;\n                  console.log(key[0] + ', ' + key[1]);\n                } // console.log(data.entries())\n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              return _context2.abrupt(\"return\", data);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getImageUrlToUpload() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      handleShow();\n      setImages([{\n        \"data_url\": currentImage\n      }]);\n    },\n    className: \"btn-grad-circle\",\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: 0,\n      height: \"50px\",\n      width: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-pencil-fill h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    style: {\n      backgroundColor: \"rgba(0, 0, 0, 0.7)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Upload Image\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImageUploading, {\n    multiple: true,\n    value: images,\n    onChange: onChange,\n    maxNumber: maxNumber,\n    dataURLKey: \"data_url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, function (_ref4) {\n    var imageList = _ref4.imageList,\n        onImageUpload = _ref4.onImageUpload,\n        onImageUpdate = _ref4.onImageUpdate,\n        onImageRemove = _ref4.onImageRemove,\n        isDragging = _ref4.isDragging,\n        dragProps = _ref4.dragProps;\n    return (\n      /*#__PURE__*/\n      // write your building UI\n      React.createElement(\"div\", {\n        className: \"upload__image-wrapper\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }\n      }, images.length == 0 && /*#__PURE__*/React.createElement(Button, Object.assign({\n        className: \"w-100\",\n        style: {\n          height: \"300px\"\n        },\n        variant: isDragging ? \"secondary\" : \"outline-secondary\",\n        onClick: onImageUpload\n      }, dragProps, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 56\n        }\n      }), \"Click or Drop here \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"bi bi-card-image ms-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 56\n        }\n      })), imageList.map(function (image, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"image-item\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"image-item__btn-wrapper w-100 d-flex justify-content-center mb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outline-primary\",\n          className: \"w-25 me-1 rounded-pill\",\n          onClick: function onClick() {\n            return onImageUpdate(index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 45\n          }\n        }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"outline-danger\",\n          className: \"w-25 rounded-pill\",\n          onClick: function onClick() {\n            return onImageRemove(index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 45\n          }\n        }, \"Remove\")), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(AvatarEditor, {\n          ref: editor,\n          image: image['data_url'],\n          width: imageWidth,\n          height: imageHeight,\n          border: 50,\n          borderRadius: imageBorderRadius,\n          scale: size,\n          rotate: rotate,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Form.Label, {\n          className: \"mt-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 45\n          }\n        }, \"Rotate: \", rotate, \"\\xB0\"), /*#__PURE__*/React.createElement(Form.Range, {\n          value: rotate,\n          min: \"-180\",\n          max: \"180\",\n          step: \"1\",\n          onChange: handleRotate,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Form.Label, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 45\n          }\n        }, \"Size: \", size), /*#__PURE__*/React.createElement(Form.Range, {\n          value: size,\n          min: \"1\",\n          max: \"10\",\n          step: \"0.1\",\n          onChange: handleSize,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 45\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          onClick: function onClick() {\n            setRotate(0);\n            setSize(1);\n            setBorderRadius(0);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 45\n          }\n        }, \"Reset\")));\n      }))\n    );\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Cancel \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var imageURL, imageToUpload;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              handleClose();\n\n              if (!editor) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 4;\n              return getImageUrl();\n\n            case 4:\n              imageURL = _context3.sent;\n              setImage(imageURL);\n              _context3.next = 8;\n              return getImageUrlToUpload();\n\n            case 8:\n              imageToUpload = _context3.sent;\n              setImageToUpload(imageToUpload); // console.log(getImageUrl());\n              // If you want the image resized to the canvas size (also a HTMLCanvasElement)\n              // const canvasScaled = editor.current.getImageScaledToCanvas()\n              // console.log(canvasScaled)\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Save \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-check-all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 30\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/UploadImage/UploadAndEditImage.jsx"],"names":["React","useRef","useState","ImageUploading","AvatarEditor","Modal","Button","Form","UploadAndEditImage","currentImage","setImage","setImageToUpload","imageBorderRadius","imageHeight","imageWidth","images","setImages","maxNumber","show","setShow","rotate","setRotate","size","setSize","borderRadius","setBorderRadius","editor","handleClose","handleShow","onChange","image","handleRotate","event","parseInt","target","value","handleSize","parseFloat","handleBorderRadius","getImageUrl","dataUrl","current","getImage","toDataURL","fetch","result","blob","urlCreator","window","URL","webkitURL","imageUrl","createObjectURL","getImageUrlToUpload","data","FormData","append","entries","key","console","log","position","right","bottom","height","width","backgroundColor","imageList","onImageUpload","onImageUpdate","onImageRemove","isDragging","dragProps","length","map","index","imageURL","imageToUpload"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\n\r\nexport default function UploadAndEditImage({ currentImage, setImage, setImageToUpload, imageBorderRadius, imageHeight, imageWidth }) {\r\n\r\n    // console.log(currentImage)\r\n\r\n    const [images, setImages] = useState([]);\r\n    const maxNumber = 1;\r\n    const [show, setShow] = useState(false);\r\n    const [rotate, setRotate] = useState(0);\r\n    const [size, setSize] = useState(1.0);\r\n    const [borderRadius, setBorderRadius] = useState(0);\r\n    const editor = useRef(null);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const onChange = (image) => {\r\n        setImages(image);\r\n    };\r\n\r\n    const handleRotate = (event) => {\r\n        setRotate(parseInt(event.target.value));\r\n    };\r\n\r\n    const handleSize = (event) => {\r\n        setSize(parseFloat(event.target.value));\r\n    };\r\n\r\n    const handleBorderRadius = (event) => {\r\n        setBorderRadius(parseInt(event.target.value));\r\n    };\r\n\r\n    const getImageUrl = async () => {\r\n        const dataUrl = editor.current.getImage().toDataURL()\r\n        const result = await fetch(dataUrl);\r\n        const blob = await result.blob();\r\n\r\n        const urlCreator = window.URL || window.webkitURL;\r\n        const imageUrl = urlCreator.createObjectURL(blob);\r\n\r\n        return imageUrl;\r\n    }\r\n\r\n    const getImageUrlToUpload = async () => {\r\n        const dataUrl = editor.current.getImage().toDataURL()\r\n        const result = await fetch(dataUrl);\r\n        const blob = await result.blob();\r\n\r\n        let data = new FormData();\r\n        data.append('image', blob, 'image.png');\r\n\r\n        for (var key of data.entries()) {\r\n            console.log(key[0] + ', ' + key[1]);\r\n        }\r\n\r\n        // console.log(data.entries())\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"primary\" onClick={() => { handleShow(); setImages([{ \"data_url\": currentImage }]) }} className=\"btn-grad-circle\" style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                height: \"50px\",\r\n                width: \"50px\",\r\n            }}>\r\n                <i className=\"bi bi-pencil-fill h4\"></i>\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose} style={{ backgroundColor: \"rgba(0, 0, 0, 0.7)\" }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Upload Image</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <ImageUploading\r\n                        multiple\r\n                        value={images}\r\n                        onChange={onChange}\r\n                        maxNumber={maxNumber}\r\n                        dataURLKey=\"data_url\"\r\n                    >\r\n                        {({\r\n                            imageList,\r\n                            onImageUpload,\r\n                            // onImageRemoveAll,\r\n                            onImageUpdate,\r\n                            onImageRemove,\r\n                            isDragging,\r\n                            dragProps,\r\n                        }) => (\r\n                            // write your building UI\r\n                            <div className=\"upload__image-wrapper\">\r\n                                {images.length == 0 && <Button\r\n                                    className='w-100'\r\n                                    style={{ height: \"300px\" }}\r\n                                    variant={isDragging ? \"secondary\" : \"outline-secondary\"}\r\n                                    onClick={onImageUpload}\r\n                                    {...dragProps}\r\n                                >\r\n                                    Click or Drop here <i className=\"bi bi-card-image ms-2\"></i>\r\n                                </Button>}\r\n                                {imageList.map((image, index) => (\r\n                                    <div key={index} className=\"image-item\">\r\n                                        <div className=\"image-item__btn-wrapper w-100 d-flex justify-content-center mb-2\">\r\n                                            <Button variant=\"outline-primary\" className='w-25 me-1 rounded-pill' onClick={() => onImageUpdate(index)}>Update</Button>\r\n                                            <Button variant=\"outline-danger\" className='w-25 rounded-pill' onClick={() => onImageRemove(index)}>Remove</Button>\r\n                                        </div>\r\n                                        <div>\r\n                                            <AvatarEditor\r\n                                                ref={editor}\r\n                                                image={image['data_url']}\r\n                                                width={imageWidth}\r\n                                                height={imageHeight}\r\n                                                border={50}\r\n                                                borderRadius={imageBorderRadius}\r\n                                                scale={size}\r\n                                                rotate={rotate}\r\n                                            />\r\n                                            <Form.Label className=\"mt-2\">Rotate: {rotate}°</Form.Label>\r\n                                            <Form.Range value={rotate} min=\"-180\" max=\"180\" step=\"1\" onChange={handleRotate} />\r\n                                            <Form.Label>Size: {size}</Form.Label>\r\n                                            <Form.Range value={size} min=\"1\" max=\"10\" step=\"0.1\" onChange={handleSize} />\r\n                                            {/* <Form.Label>Border Radius: {borderRadius}</Form.Label>\r\n                                            <Form.Range value={borderRadius} min=\"0\" max=\"250\" step=\"1\" onChange={handleBorderRadius} /> */}\r\n                                            <Button onClick={() => { setRotate(0); setSize(1); setBorderRadius(0) }}>Reset</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </ImageUploading>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                        Cancel <i className=\"bi bi-x\"></i>\r\n                    </Button>\r\n                    <Button variant=\"outline-success\" onClick={async () => {\r\n                        handleClose();\r\n                        if (editor) {\r\n                            // This returns a HTMLCanvasElement, it can be made into a data URL or a blob,\r\n                            // drawn on another canvas, or added to the DOM.\r\n\r\n                            // const canvas = editor.current.getImage()\r\n                            // console.log(editor.current.state.image.resource.currentSrc)\r\n\r\n                            // console.log(\"------------------------\")\r\n\r\n                            // setImage(editor.current.state.image.resource.currentSrc);\r\n                            const imageURL = await getImageUrl();\r\n                            setImage(imageURL);\r\n\r\n                            const imageToUpload = await getImageUrlToUpload();\r\n                            setImageToUpload(imageToUpload);\r\n\r\n                            // console.log(getImageUrl());\r\n\r\n                            // If you want the image resized to the canvas size (also a HTMLCanvasElement)\r\n\r\n                            // const canvasScaled = editor.current.getImageScaledToCanvas()\r\n                            // console.log(canvasScaled)\r\n                        }\r\n                    }}>\r\n                        Save <i className=\"bi bi-check-all\"></i>\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}