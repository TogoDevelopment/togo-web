{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup, FloatingLabel, Badge } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses, GetCitiesArea, getClientDefaultAddress, setClientDefaultAddress, getClientTempAddress, getPrivateAddresses, sendCustomNotification } from \"../../APIs/OrdersAPIs\";\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\";\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/attachment.svg\";\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\nimport ClientDropdown from \"../ClientDropdown\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nimport { isTransporter } from \"../../Util\";\nimport \"../CreateNewOrder.css\";\nimport { useHistory } from \"react-router\";\nimport CreateAddress from \"../CreateAddress\";\nimport { imgBaseUrl } from \"../../Constants/GeneralCont\";\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport default function CreateNewOrder(props) {\n  var _this = this;\n\n  var history = useHistory();\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-35px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.2rem\"\n    }\n  };\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refresh = _useState2[0],\n      setRefresh = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showError = _useState4[0],\n      setShowError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openConf = _useState6[0],\n      setOpenConf = _useState6[1];\n\n  var _useState7 = useState(\"2\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      packageType = _useState8[0],\n      setPackageType = _useState8[1];\n\n  var _useState9 = useState(\"2\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deliveryType = _useState10[0],\n      setDeliveryType = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      inputValue = _useState12[0],\n      setInputValue = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      clientInputValue = _useState14[0],\n      setClientInputValue = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      deliverAddresses = _useState16[0],\n      setDeliverAddresses = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      clientAddresses = _useState18[0],\n      setClientAddresses = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      allClients = _useState20[0],\n      setAllClients = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      pickUpAddress = _useState22[0],\n      setPickUpAddress = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedClient = _useState24[0],\n      setSelectedClient = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      loading = _useState26[0],\n      setLoading = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      loadingSubmit = _useState28[0],\n      setLoadingSubmit = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      loadingSetDefault = _useState30[0],\n      setLoadingSetDefault = _useState30[1];\n\n  var _useState31 = useState([{\n    name: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    type: \"2\",\n    active: \"active\"\n  }, {\n    name: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    type: \"1\",\n    active: \"\"\n  }]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      deliverTypeArr = _useState32[0],\n      setDeliverTypeArr = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      showPickupAddressModal = _useState34[0],\n      setShowPickupAddressModal = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      showReceiverAddressModal = _useState36[0],\n      setShowReceiverAddressModal = _useState36[1];\n\n  var deliveryCostRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var intl = useIntl();\n  useEffect(function () {\n    if (!isTransporter()) {\n      getClientDefaultAddress().then(function (res) {\n        if (res.data != null) {\n          setPickUpAddress(res.data);\n        }\n      });\n    }\n  }, [refresh]);\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      setLoading(true);\n      GetTransporterClients().then(function (res) {\n        setLoading(false);\n        setAllClients(res.data.membersData.filter(function (client) {\n          return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n        }));\n      });\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, refresh]);\n  useEffect(function () {\n    getClientAddresses();\n    getDeliveryAddresses();\n  }, [refresh, inputValue]);\n\n  var getClientAddresses = function getClientAddresses() {\n    getPrivateAddresses(inputValue).then(function (res) {\n      setLoading(false);\n      setClientAddresses(res.data);\n    });\n  };\n\n  var getDeliveryAddresses = function getDeliveryAddresses() {\n    GetDefinedAddresses(inputValue).then(function (res) {\n      setLoading(false);\n      setDeliverAddresses(res.data);\n    });\n  };\n\n  var handleDeliveryTypeClick = function handleDeliveryTypeClick(index, type) {\n    setDeliveryType(type);\n\n    var tempArr = _toConsumableArray(deliverTypeArr);\n\n    for (var i = 0; i < tempArr.length; i++) {\n      tempArr[i].active = \"\";\n    }\n\n    tempArr[index].active = \"active\";\n    setDeliverTypeArr(tempArr);\n  };\n\n  var createOrderHandler = function createOrderHandler(DeliveryParams, CreatedBy, AddressClint) {\n    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy, JSON.stringify(AddressClint), isNewAddress ? \"1\" : \"0\").then(function (res) {\n      /* edited (test data) */\n      // console.log(res.data); // {\"server_response\":[{\"OrderId\":\"936\"}]}\n\n      /* to be edited (to print order by returned id) */\n      // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;   // <--------------------------------------------------------------------------- to test\n      //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n\n      /*  if (res.data == \"Blocked\") {\r\n           dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n       } */\n      // let orderId = res.data.split('OrderId\":\"')[1].split('\"')[0];\n      var orderId = res.data.server_response.OrderId; // setOpenConf(true);\n\n      if (!isTransporter()) {\n        history.push(\"/account/Order/\" + orderId);\n      }\n\n      setLoadingSubmit(false);\n      sendCustomNotification(\"createOrder\", orderId).then(function (res) {\n        console.log(res.data);\n      });\n      /* if (isTransporter()) {\r\n          history.push(\"/account/Order/\" + orderId);\r\n      } */\n    });\n  };\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      validated = _useState38[0],\n      setValidated = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      provinces = _useState40[0],\n      setProvinces = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      governorates = _useState42[0],\n      setGovernorates = _useState42[1];\n\n  var _useState43 = useState([]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      cities = _useState44[0],\n      setCities = _useState44[1];\n\n  var _useState45 = useState([]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      areas = _useState46[0],\n      setAreas = _useState46[1];\n\n  var _useState47 = useState(true),\n      _useState48 = _slicedToArray(_useState47, 2),\n      isNewAddress = _useState48[0],\n      setIsNewAddress = _useState48[1];\n\n  var _useState49 = useState(),\n      _useState50 = _slicedToArray(_useState49, 2),\n      dileveryAddress = _useState50[0],\n      setDileveryAddress = _useState50[1];\n\n  var getProvences = function getProvences() {\n    GetCitiesArea(\"provinces\", -1).then(function (res) {\n      setProvinces(res.data.server_response);\n    });\n  };\n\n  var updateSubLevel = function updateSubLevel(type, superId) {\n    GetCitiesArea(type, superId, 1).then(function (res) {\n      if (type === \"governorates\") {\n        setGovernorates([]);\n        setCities([]);\n        setAreas([]);\n        setGovernorates(res.data.server_response);\n      } else if (type === \"cities\") {\n        setCities([]);\n        setAreas([]);\n        setCities(res.data.server_response);\n      } else {\n        setAreas([]);\n        setAreas(res.data.server_response);\n      }\n    });\n  };\n\n  var setDefaultAddressHandler = function setDefaultAddressHandler(addressId) {\n    setLoadingSetDefault(true);\n    setClientDefaultAddress(addressId).then(function (res) {\n      if (res.data === \"previousDefaultUpdateError!\" || res.data === \"newDefaultUpdateError!\") {\n        dispatch(toastNotification(\"Error\", res.data, \"error\"));\n      } else {\n        setShowPickupAddressModal(false);\n        setRefresh(!refresh);\n      }\n\n      setLoadingSetDefault(false);\n    });\n  };\n\n  var setTempAddressHandler = function setTempAddressHandler(addressId) {\n    setLoadingSetDefault(true);\n    getClientTempAddress(addressId).then(function (res) {\n      console.log(res.data);\n\n      if (res.data != null) {\n        setPickUpAddress(res.data);\n        setShowPickupAddressModal(false);\n        setLoadingSetDefault(false);\n      }\n    });\n  };\n\n  var setDeliverAddressHandler = function setDeliverAddressHandler(selectedAddress) {\n    console.log(selectedAddress);\n    setDileveryAddress(selectedAddress);\n    setIsNewAddress(false);\n    setShowReceiverAddressModal(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upperBackground\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainContainer\",\n    style: {\n      height: \"80%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"pb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"h2 d-flex justify-content-center\",\n    style: {\n      marginTop: \"80px\",\n      marginBottom: \"0px\",\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, translate(\"CREATE_NEW_ORDER.CREATE_ORDER\")), isTransporter() && /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"rounded-3 shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 37\n    }\n  }, translate(\"TEMP.MY_CLIENTS\"))), /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"mb-3 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown, {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    style: {\n      marginTop: \"9px\"\n    },\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.DELIVERY_COST\"\n    }),\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 45\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"orderForm\",\n    validated: validated,\n    noValidate: true,\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var formData = new FormData(event.target),\n          formDataObj = Object.fromEntries(formData.entries()); // console.log(formDataObj);\n\n      var form = event.currentTarget;\n\n      if (form.checkValidity() === true) {\n        // if all set, create order here: (get data from formDataObj)\n        var CreatedBy = \"\";\n        var DeliveryParams = {\n          deliveryWay: deliveryType,\n          TypeLoad: packageType,\n          CostLoad: formDataObj.codAmount != undefined ? formDataObj.codAmount : \"\",\n          DetailsLoad: formDataObj.notes != undefined ? formDataObj.notes : \"\",\n          LengthLoad: formDataObj.length != undefined ? formDataObj.length : \"\",\n          WidthLoad: formDataObj.width != undefined ? formDataObj.width : \"\",\n          HeightLoad: formDataObj.height != undefined ? formDataObj.height : \"\",\n          WeightLoad: formDataObj.weight != undefined ? formDataObj.weight : \"\",\n          qrCode: \"\"\n        };\n        var AddressClint = {};\n\n        if (isNewAddress) {\n          AddressClint = {\n            IdCity: pickUpAddress.cityId,\n            IdArea: pickUpAddress.areaId,\n            IdGov: pickUpAddress.governoratId,\n            IdProv: pickUpAddress.provinceId,\n            OtherDetails: pickUpAddress.details,\n            LatSender: pickUpAddress.latitude,\n            LongSender: pickUpAddress.longitude,\n            SenderAddressId: pickUpAddress.id,\n            IdCityDes: formDataObj.city,\n            IdAreaDes: formDataObj.area,\n            IdGovDes: formDataObj.governorate,\n            IdProvDes: formDataObj.province,\n            OtherDetailsDes: formDataObj.address != undefined ? formDataObj.address : \"\",\n            addressName: formDataObj.placeName != undefined ? formDataObj.placeName : \"\",\n            LatReciver: \"\",\n            LongReciver: \"\",\n            ReceiverAddressNum: formDataObj.receiverPhone,\n            zipCode: \"00000\",\n            country: \"Palestine\",\n            isShared: \"false\",\n            additionalInfo: formDataObj.addressinfo != undefined ? formDataObj.addressinfo : \"\"\n          };\n        } else {\n          AddressClint = {\n            IdCity: pickUpAddress.cityId,\n            IdArea: pickUpAddress.areaId,\n            IdGov: pickUpAddress.governoratId,\n            IdProv: pickUpAddress.provinceId,\n            OtherDetails: pickUpAddress.details,\n            LatSender: pickUpAddress.latitude,\n            LongSender: pickUpAddress.longitude,\n            SenderAddressId: pickUpAddress.id,\n            IdCityDes: dileveryAddress.cityId,\n            IdAreaDes: dileveryAddress.areaId,\n            OtherDetailsDes: dileveryAddress.details,\n            LatReciver: dileveryAddress.latitude,\n            LongReciver: dileveryAddress.longitude,\n            ReciverAddressId: dileveryAddress.id,\n            ReceiverAddressNum: dileveryAddress.phone_number\n          };\n        } // console.log(AddressClint);\n\n\n        if (isTransporter()) {\n          setLoadingSubmit(true);\n          CreatedBy = \"Transporter\";\n          DeliveryParams.ClientMobileNumber = selectedClient.PhoneNumber;\n          DeliveryParams.DeliveryPrice = deliveryCostRef.current.value;\n          createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\n        } else {\n          setLoadingSubmit(true);\n          CreatedBy = \"ClientNew\"; // console.log(DeliveryParams);\n          // console.log(AddressClint);\n\n          createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\n        }\n\n        setShowError(false);\n      } else {\n        setShowError(true);\n      }\n\n      setValidated(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    className: \"mt-5 customListGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 49\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"togo-dropdown shadow\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 57\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 61\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 65\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3]))))), packageType !== \"1\" && packageType !== \"2\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    style: {\n      marginTop: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 96\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"height\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.HEIGHT\"\n    }),\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1f8379\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 61\n    }\n  }, \"(\", translate(\"CREATE_NEW_ORDER.OPTIONAL\"), \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"width\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WIDTH\"\n    }),\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1f8379\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 61\n    }\n  }, \"(\", translate(\"CREATE_NEW_ORDER.OPTIONAL\"), \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"length\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.LENGTH\"\n    }),\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1f8379\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 61\n    }\n  }, \"(\", translate(\"CREATE_NEW_ORDER.OPTIONAL\"), \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"weight\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WEIGHT\"\n    }),\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1f8379\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 61\n    }\n  }, \"(\", translate(\"CREATE_NEW_ORDER.OPTIONAL\"), \")\"))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-3 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 49\n    }\n  }), translate(\"CREATE_NEW_ORDER.SELECT_DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggleButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 53\n    }\n  }, deliverTypeArr.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\"),\n      onClick: function onClick() {\n        handleDeliveryTypeClick(index, item.type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"innerRadio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 92\n      }\n    })), \" \", item.name);\n  }), deliveryType === \"2\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      left: \"230px\",\n      top: \"68px\",\n      width: \"180px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 82\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    name: \"codAmount\",\n    min: \"1\",\n    type: \"number\",\n    className: \"rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 61\n    }\n  }))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 53\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 65\n    }\n  }, translate(\"CREATE_NEW_ORDER.NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"50%\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 65\n    }\n  }, translate(\"CREATE_NEW_ORDER.ADDRESS\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 65\n    }\n  }, translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 65\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: true,\n    placeholder: pickUpAddress.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: true,\n    placeholder: pickUpAddress.details + \", \" + pickUpAddress.areaName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    readOnly: true,\n    placeholder: pickUpAddress.phone_number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad-circle\",\n    style: {\n      height: \"50px\"\n    },\n    onClick: function onClick() {\n      setShowPickupAddressModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-arrow-repeat h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 73\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: showPickupAddressModal,\n    onHide: function onHide() {\n      setShowPickupAddressModal(false);\n      setInputValue(\"\");\n    },\n    centered: true,\n    animation: true,\n    size: \"xl\",\n    style: {\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 77\n    }\n  }, translate(\"CREATE_NEW_ORDER.CHANGE_PICKUP_ADDRESS\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 89\n    }\n  }, translate(\"CREATE_NEW_ORDER.SET_DAFAULT_ADDRESS\"), \":\")), /*#__PURE__*/React.createElement(Col, {\n    lg: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(CreateAddress, {\n    onSuccess: function onSuccess() {\n      setRefresh(!refresh);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"btn-grad p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 97\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 93\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"25%\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 97\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-2\",\n    controlId: \"addressName\",\n    label: translate(\"CREATE_NEW_ORDER.NAME\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 105\n    }\n  }))), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"25%\",\n      paddingBottom: \"30px\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 97\n    }\n  }, translate(\"CREATE_NEW_ORDER.ADDRESS\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"20%\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 97\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-2\",\n    controlId: \"addressName\",\n    label: translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 101\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 105\n    }\n  }))), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"30%\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 97\n    }\n  }, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"300px\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 85\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 89\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 93\n    }\n  }, clientAddresses.map(function (address, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 112\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"25%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 109\n      }\n    }, address.name), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"25%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 109\n      }\n    }, address.details + \", \" + address.cityName), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"20%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 109\n      }\n    }, address.phone_number), address.is_default == \"0\" ? /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"30%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 138\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: loadingSetDefault ? true : false,\n      className: \"btn-grad\",\n      onClick: function onClick() {\n        setDefaultAddressHandler(address.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 113\n      }\n    }, loadingSetDefault && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 139\n      }\n    }), translate(\"CREATE_NEW_ORDER.SET_DEFAULT\")), /*#__PURE__*/React.createElement(Button, {\n      disabled: loadingSetDefault ? true : false,\n      className: \"btn-grad mx-2\",\n      onClick: function onClick() {\n        setTempAddressHandler(address.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 113\n      }\n    }, loadingSetDefault && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 139\n      }\n    }), translate(\"CREATE_NEW_ORDER.SET_FOR_NOW\"))) : /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 117\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: true,\n      variant: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 113\n      }\n    }, translate(\"CREATE_NEW_ORDER.DEFAULT_ADDRESS\"))));\n  })))))))))))))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-11 d-flex align-items-center h5 mb-3\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 49\n    }\n  }, isNewAddress ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 61\n    }\n  }), translate(\"CREATE_NEW_ORDER.SET_NEW_ADDRESS\"), \" \\xA0 \", /*#__PURE__*/React.createElement(Badge, {\n    className: \"custome-link rounded-pill\",\n    onClick: function onClick() {\n      setShowReceiverAddressModal(true);\n      setInputValue(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 116\n    }\n  }, translate(\"CREATE_NEW_ORDER.OR_CHOOSE_FROM_LIST\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 116\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(Badge, {\n    className: \"custome-link rounded-pill\",\n    onClick: function onClick() {\n      setIsNewAddress(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 61\n    }\n  }, translate(\"CREATE_NEW_ORDER.SET_NEW_ADDRESS\")), \" \\xA0 \", /*#__PURE__*/React.createElement(Badge, {\n    className: \"custome-link rounded-pill\",\n    onClick: function onClick() {\n      setShowReceiverAddressModal(true);\n      setInputValue(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 127\n    }\n  }, translate(\"CREATE_NEW_ORDER.CHANGE_FROM_LIST\"), \" \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-arrow-repeat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 113\n    }\n  })))), /*#__PURE__*/React.createElement(Modal, {\n    show: showReceiverAddressModal,\n    onHide: function onHide() {\n      setShowReceiverAddressModal(false);\n      setInputValue(\"\");\n    },\n    centered: true,\n    animation: true,\n    size: \"xl\",\n    style: {\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.CHOOSE_DELIVERY_ADDRESS\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 69\n    }\n  }, translate(\"CREATE_NEW_ORDER.SELECT_DELIVERY_ADDRESS_FROM_LIST\"), \":\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"30%\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-2\",\n    controlId: \"addressName\",\n    label: translate(\"CREATE_NEW_ORDER.NAME\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 85\n    }\n  }))), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"35%\",\n      paddingBottom: \"30px\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 77\n    }\n  }, translate(\"CREATE_NEW_ORDER.ADDRESS\")), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"20%\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-2\",\n    controlId: \"addressName\",\n    label: translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 85\n    }\n  }))), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      width: \"15%\"\n    },\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 77\n    }\n  }, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"300px\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 65\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 73\n    }\n  }, deliverAddresses.map(function (address, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 92\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"30%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 89\n      }\n    }, address.name), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"35%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 89\n      }\n    }, address.details + \", \" + address.cityName), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"20%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 89\n      }\n    }, address.phone_number), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"15%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: loadingSetDefault ? true : false,\n      className: \"btn-grad\",\n      onClick: function onClick() {\n        setDeliverAddressHandler(address);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 93\n      }\n    }, loadingSetDefault && /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      size: \"sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 119\n      }\n    }), translate(\"CREATE_NEW_ORDER.SELECT\"))));\n  }))))))))), isNewAddress == true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"placeName\",\n    label: translate(\"CREATE_NEW_ORDER.NAME\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"placeName\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 65\n    }\n  }, translate(\"CREATE_NEW_ORDER.PLEASE_ADD_PLACE_NAME\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"mb-3\",\n    controlId: \"userPhone\",\n    label: translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"tel\",\n    placeholder: \"...\",\n    name: \"receiverPhone\",\n    pattern: \"^05[0-9]{8}?$\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 65\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 65\n    }\n  }, translate(\"CREATE_NEW_ORDER.PLEASE_ENTER_VALID_NUMBER\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.PROVINCE\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"province\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    onClick: function onClick() {\n      getProvences();\n    },\n    onChange: function onChange(e) {\n      updateSubLevel(\"governorates\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 61\n    }\n  }, intl.formatMessage({\n    id: \"CREATE_NEW_ORDER.SELECT_PROVINCE\"\n  })), provinces.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 76\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.GOVERNORATE\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"governorate\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    onChange: function onChange(e) {\n      updateSubLevel(\"cities\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 61\n    }\n  }, intl.formatMessage({\n    id: \"CREATE_NEW_ORDER.SELECT_GOVERNORATE\"\n  })), governorates.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 76\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.CITY\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"city\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    onChange: function onChange(e) {\n      updateSubLevel(\"areas\", e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 61\n    }\n  }, intl.formatMessage({\n    id: \"CREATE_NEW_ORDER.SELECT_CITY\"\n  })), cities.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 76\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.AREA\"), \" \", \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"shadow\",\n    name: \"area\",\n    required: true,\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    style: {\n      color: \"lightgray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 61\n    }\n  }, intl.formatMessage({\n    id: \"CREATE_NEW_ORDER.SELECT_AREA\"\n  })), areas.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 76\n      }\n    }, item.name);\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"\",\n    controlId: \"userAddress\",\n    label: translate(\"CREATE_NEW_ORDER.ADDRESS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1f8379\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 61\n    }\n  }, \"(\", translate(\"CREATE_NEW_ORDER.OPTIONAL\"), \")\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    className: \"\",\n    controlId: \"addressInfo\",\n    label: translate(\"CREATE_NEW_ORDER.ADDRESS_INFO\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: \"...\",\n    name: \"addressinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 65\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1f8379\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 61\n    }\n  }, \"(\", translate(\"CREATE_NEW_ORDER.OPTIONAL\"), \")\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-1 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.NAME\")), /*#__PURE__*/React.createElement(Form.Control, {\n    disabled: true,\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: dileveryAddress.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\")), /*#__PURE__*/React.createElement(Form.Control, {\n    disabled: true,\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"tel\",\n    placeholder: dileveryAddress.phone_number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.PROVINCE\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    disabled: true,\n    className: \"shadow\",\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 61\n    }\n  }, dileveryAddress.provName))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.GOVERNORATE\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    disabled: true,\n    className: \"shadow\",\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 61\n    }\n  }, dileveryAddress.govName))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.CITY\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    disabled: true,\n    className: \"shadow\",\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 61\n    }\n  }, dileveryAddress.cityName))), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.AREA\"), \":\"), /*#__PURE__*/React.createElement(Form.Select, {\n    disabled: true,\n    className: \"shadow\",\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 61\n    }\n  }, dileveryAddress.areaName)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.ADDRESS\")), /*#__PURE__*/React.createElement(Form.Control, {\n    disabled: true,\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: dileveryAddress.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 57\n    }\n  }, translate(\"CREATE_NEW_ORDER.ADDRESS_INFO\")), /*#__PURE__*/React.createElement(Form.Control, {\n    disabled: true,\n    className: \"rounded-22 input-inner-shadow\",\n    type: \"text\",\n    placeholder: dileveryAddress.additional_info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 57\n    }\n  })))))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-3 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 49\n    }\n  }), translate(\"CREATE_NEW_ORDER.ATTACHMENTS_LABEL\")), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"notes\",\n    type: \"text\",\n    className: \"mt-2 rounded-22 input-inner-shadow\",\n    placeholder: intl.formatMessage({\n      id: \"CREATE_NEW_ORDER.NOTES\"\n    }),\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#1f8379\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 45\n    }\n  }, \"(\", translate(\"CREATE_NEW_ORDER.OPTIONAL\"), \")\"))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"py-4\",\n    style: {\n      backgroundColor: \"#ededed\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 41\n    }\n  }, showError && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#d9534f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-info-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 49\n    }\n  }), \" \", translate(\"CREATE_NEW_ORDER.REQUIRED_ERROR\")), true ? /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"30%\",\n      float: \"right\"\n    },\n    disabled: loadingSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 53\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 67\n    }\n  }), isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"CREATE_NEW_ORDER.SUBMIT_ORDER\")) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"h6\",\n    style: {\n      color: \"#26a69a\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 57\n    }\n  }, isTransporter() ? translate(\"TEMP.SUCCISSFULLY_PUBLISHED\") : translate(\"TEMP.SUCCISSFULLY_PUBLISHED_CLIENT\")))))))))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrderComponent/CreateNewOrderCo.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","Table","Card","Container","Row","Col","ListGroup","FloatingLabel","Badge","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","GetCitiesArea","getClientDefaultAddress","setClientDefaultAddress","getClientTempAddress","getPrivateAddresses","sendCustomNotification","GetTransporterClients","DeliveryTypes","PackageTypes","ClientDropdown","AddIcon","useIntl","useDispatch","toastNotification","isTransporter","useHistory","CreateAddress","imgBaseUrl","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","history","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","dispatch","refresh","setRefresh","showError","setShowError","openConf","setOpenConf","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","clientInputValue","setClientInputValue","deliverAddresses","setDeliverAddresses","clientAddresses","setClientAddresses","allClients","setAllClients","pickUpAddress","setPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","loadingSetDefault","setLoadingSetDefault","name","type","active","deliverTypeArr","setDeliverTypeArr","showPickupAddressModal","setShowPickupAddressModal","showReceiverAddressModal","setShowReceiverAddressModal","deliveryCostRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","intl","then","res","data","timer","setTimeout","membersData","filter","client","FullName","toLowerCase","replaceAll","includes","clearTimeout","getClientAddresses","getDeliveryAddresses","handleDeliveryTypeClick","index","tempArr","i","length","createOrderHandler","DeliveryParams","CreatedBy","AddressClint","JSON","stringify","isNewAddress","orderId","server_response","OrderId","push","console","log","validated","setValidated","provinces","setProvinces","governorates","setGovernorates","cities","setCities","areas","setAreas","setIsNewAddress","dileveryAddress","setDileveryAddress","getProvences","updateSubLevel","superId","setDefaultAddressHandler","addressId","setTempAddressHandler","setDeliverAddressHandler","selectedAddress","height","marginTop","marginBottom","formatMessage","id","event","preventDefault","stopPropagation","formData","FormData","target","formDataObj","Object","fromEntries","entries","form","currentTarget","checkValidity","deliveryWay","TypeLoad","CostLoad","codAmount","undefined","DetailsLoad","notes","LengthLoad","WidthLoad","width","HeightLoad","WeightLoad","weight","qrCode","IdCity","cityId","IdArea","areaId","IdGov","governoratId","IdProv","provinceId","OtherDetails","details","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","city","IdAreaDes","area","IdGovDes","governorate","IdProvDes","province","OtherDetailsDes","address","addressName","placeName","LatReciver","LongReciver","ReceiverAddressNum","receiverPhone","zipCode","country","isShared","additionalInfo","addressinfo","ReciverAddressId","phone_number","ClientMobileNumber","PhoneNumber","DeliveryPrice","current","value","eve","createElement","style","className","backgroundColor","map","item","localStorage","getItem","areaName","cursor","e","paddingBottom","overflowY","cityName","is_default","provName","govName","additional_info","float"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner, Table, Card, Container, Row, Col, ListGroup, FloatingLabel, Badge } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { ReactComponent as SendIcon } from \"../../assets/images/send.svg\";\r\nimport {\r\n    CreateNewOrderReq,\r\n    GetDefinedAddresses,\r\n    GetCitiesArea,\r\n    getClientDefaultAddress,\r\n    setClientDefaultAddress,\r\n    getClientTempAddress,\r\n    getPrivateAddresses,\r\n    sendCustomNotification\r\n} from \"../../APIs/OrdersAPIs\";\r\nimport { GetTransporterClients } from \"../../APIs/OrdersAPIs\"\r\nimport { ReactComponent as FoodIcon } from \"../../assets/images/food.svg\";\r\nimport { ReactComponent as SmBoxIcon } from \"../../assets/images/smallBox.svg\";\r\nimport { ReactComponent as MedBoxIcon } from \"../../assets/images/medbox.svg\";\r\nimport { ReactComponent as BigBoxIcon } from \"../../assets/images/largebox.svg\";\r\nimport { ReactComponent as DeliveryTruckIcon } from \"../../assets/images/deliveryTruck.svg\";\r\nimport { ReactComponent as LocationIcon } from \"../../assets/images/location.svg\";\r\nimport { ReactComponent as AttachmentIcon } from \"../../assets/images/attachment.svg\";\r\nimport { DeliveryTypes, PackageTypes } from \"../Orders/OrdersTabularView\";\r\nimport ClientDropdown from \"../ClientDropdown\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\nimport { isTransporter } from \"../../Util\";\r\nimport \"../CreateNewOrder.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport CreateAddress from \"../CreateAddress\";\r\nimport { imgBaseUrl } from \"../../Constants/GeneralCont\";\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport default function CreateNewOrder(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-35px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.2rem\"\r\n        },\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [showError, setShowError] = useState(false);\r\n\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const [packageType, setPackageType] = useState(\"2\");\r\n    const [deliveryType, setDeliveryType] = useState(\"2\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState('');\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [clientAddresses, setClientAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]);\r\n    const [pickUpAddress, setPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const [loadingSetDefault, setLoadingSetDefault] = useState(false);\r\n\r\n    const [deliverTypeArr, setDeliverTypeArr] = useState([{ name: translate(\"ORDERS.\" + DeliveryTypes[2]), type: \"2\", active: \"active\" }, { name: translate(\"ORDERS.\" + DeliveryTypes[1]), type: \"1\", active: \"\" }]);\r\n\r\n\r\n    const [showPickupAddressModal, setShowPickupAddressModal] = useState(false);\r\n    const [showReceiverAddressModal, setShowReceiverAddressModal] = useState(false);\r\n\r\n    const deliveryCostRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n        if (!isTransporter()) {\r\n            getClientDefaultAddress().then((res) => {\r\n                if (res.data != null) {\r\n                    setPickUpAddress(res.data);\r\n                }\r\n            })\r\n        }\r\n    }, [refresh]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setLoading(true);\r\n\r\n            GetTransporterClients().then((res) => {\r\n                setLoading(false);\r\n\r\n                setAllClients(res.data.membersData.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n            });\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, refresh]);\r\n\r\n    useEffect(() => {\r\n        getClientAddresses();\r\n        getDeliveryAddresses();\r\n    }, [refresh, inputValue])\r\n\r\n    const getClientAddresses = () => {\r\n        getPrivateAddresses(inputValue).then((res) => {\r\n            setLoading(false);\r\n            setClientAddresses(res.data);\r\n        });\r\n    }\r\n\r\n    const getDeliveryAddresses = () => {\r\n        GetDefinedAddresses(inputValue).then((res) => {\r\n            setLoading(false);\r\n            setDeliverAddresses(res.data);\r\n        });\r\n    }\r\n\r\n    const handleDeliveryTypeClick = (index, type) => {\r\n        setDeliveryType(type);\r\n\r\n        let tempArr = [...deliverTypeArr];\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            tempArr[i].active = \"\";\r\n        }\r\n\r\n        tempArr[index].active = \"active\";\r\n\r\n        setDeliverTypeArr(tempArr);\r\n    }\r\n\r\n    const createOrderHandler = (DeliveryParams, CreatedBy, AddressClint) => {\r\n        CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy, JSON.stringify(AddressClint), isNewAddress ? \"1\" : \"0\").then((res) => {\r\n            /* edited (test data) */\r\n            // console.log(res.data); // {\"server_response\":[{\"OrderId\":\"936\"}]}\r\n\r\n            /* to be edited (to print order by returned id) */\r\n\r\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;   // <--------------------------------------------------------------------------- to test\r\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n            /*  if (res.data == \"Blocked\") {\r\n                 dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n             } */\r\n\r\n            // let orderId = res.data.split('OrderId\":\"')[1].split('\"')[0];\r\n            let orderId = res.data.server_response.OrderId;\r\n\r\n            // setOpenConf(true);\r\n\r\n            if (!isTransporter()) {\r\n                history.push(\"/account/Order/\" + orderId);\r\n            }\r\n\r\n            setLoadingSubmit(false);\r\n\r\n            sendCustomNotification(\"createOrder\", orderId).then(res => {\r\n                console.log(res.data);\r\n            });\r\n\r\n            /* if (isTransporter()) {\r\n                history.push(\"/account/Order/\" + orderId);\r\n            } */\r\n            \r\n        });\r\n    }\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [governorates, setGovernorates] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [areas, setAreas] = useState([]);\r\n\r\n    const [isNewAddress, setIsNewAddress] = useState(true);\r\n    const [dileveryAddress, setDileveryAddress] = useState();\r\n\r\n    const getProvences = () => {\r\n        GetCitiesArea(\"provinces\", -1).then((res) => {\r\n            setProvinces(res.data.server_response);\r\n        })\r\n    }\r\n\r\n    const updateSubLevel = (type, superId) => {\r\n        GetCitiesArea(type, superId, 1).then((res) => {\r\n            if (type === \"governorates\") {\r\n                setGovernorates([]);\r\n                setCities([]);\r\n                setAreas([]);\r\n                setGovernorates(res.data.server_response);\r\n            } else if (type === \"cities\") {\r\n                setCities([]);\r\n                setAreas([]);\r\n                setCities(res.data.server_response);\r\n            } else {\r\n                setAreas([]);\r\n                setAreas(res.data.server_response);\r\n            }\r\n        })\r\n    }\r\n\r\n    const setDefaultAddressHandler = (addressId) => {\r\n        setLoadingSetDefault(true);\r\n\r\n        setClientDefaultAddress(addressId).then((res) => {\r\n            if (res.data === \"previousDefaultUpdateError!\" || res.data === \"newDefaultUpdateError!\") {\r\n                dispatch(toastNotification(\"Error\", res.data, \"error\"));\r\n            } else {\r\n                setShowPickupAddressModal(false);\r\n                setRefresh(!refresh);\r\n            }\r\n\r\n            setLoadingSetDefault(false);\r\n        })\r\n    }\r\n\r\n    const setTempAddressHandler = (addressId) => {\r\n        setLoadingSetDefault(true);\r\n\r\n        getClientTempAddress(addressId).then((res) => {\r\n            console.log(res.data);\r\n            if (res.data != null) {\r\n                setPickUpAddress(res.data);\r\n\r\n                setShowPickupAddressModal(false);\r\n                setLoadingSetDefault(false);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    const setDeliverAddressHandler = (selectedAddress) => {\r\n        console.log(selectedAddress);\r\n\r\n        setDileveryAddress(selectedAddress);\r\n        setIsNewAddress(false);\r\n        setShowReceiverAddressModal(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* upper background */}\r\n            <div className=\"upperBackground\">\r\n            </div>\r\n\r\n            <div className=\"mainContainer\" style={{ height: \"80%\" }}>\r\n                <Container fluid className=\"pb-5\">\r\n                    <Row className=\"h2 d-flex justify-content-center\" style={{ marginTop: \"80px\", marginBottom: \"0px\", fontWeight: \"bold\", color: \"white\" }}>\r\n                        {translate(\"CREATE_NEW_ORDER.CREATE_ORDER\")}\r\n                    </Row>\r\n\r\n                    {/* ------------------( transporter clients )------------------ */}\r\n                    {isTransporter() && <Row className=\"mb-5\">\r\n                        <Col>\r\n                            <Card className=\"rounded-3 shadow\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-1\">{translate(\"TEMP.MY_CLIENTS\")}</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className=\"mb-3 mt-5\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-9\">\r\n\r\n                                            <ClientDropdown\r\n                                                loading={loading}\r\n                                                clients={allClients}\r\n                                                onSearch={setClientInputValue}\r\n                                                onSelect={setSelectedClient}\r\n                                                selectedClient={selectedClient}\r\n                                            />\r\n\r\n                                            {/*  {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>} */}\r\n\r\n                                        </div>\r\n                                        <div className=\"col-lg-3\">\r\n                                            <Form.Control type=\"number\" style={{ marginTop: \"9px\" }} className=\"rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.DELIVERY_COST\" })} ref={deliveryCostRef} />\r\n\r\n                                            {/* {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>} */}\r\n                                        </div>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>}\r\n\r\n                    {/* ------------------( order info )------------------ */}\r\n                    <Row className=\"mb-5\">\r\n                        <Col>\r\n                            {/* <Card className=\"rounded-3 shadow\"> */}\r\n                            {/*  <Card.Header style={styles.cardHeaderLg}>\r\n                                    <Card.Title className=\"mt-2\">{translate(\"CREATE_NEW_ORDER.ORDER_INFO\")}</Card.Title>\r\n                                </Card.Header> */}\r\n\r\n                            <Form id=\"orderForm\" validated={validated} noValidate onSubmit={(event) => {\r\n                                event.preventDefault();\r\n                                event.stopPropagation();\r\n\r\n                                const formData = new FormData(event.target), formDataObj = Object.fromEntries(formData.entries());\r\n\r\n                                // console.log(formDataObj);\r\n\r\n                                const form = event.currentTarget;\r\n                                if (form.checkValidity() === true) {\r\n                                    // if all set, create order here: (get data from formDataObj)\r\n\r\n                                    let CreatedBy = \"\";\r\n\r\n                                    let DeliveryParams = {\r\n                                        deliveryWay: deliveryType,\r\n                                        TypeLoad: packageType,\r\n                                        CostLoad: formDataObj.codAmount != undefined ? formDataObj.codAmount : \"\",\r\n                                        DetailsLoad: formDataObj.notes != undefined ? formDataObj.notes : \"\",\r\n                                        LengthLoad: formDataObj.length != undefined ? formDataObj.length : \"\",\r\n                                        WidthLoad: formDataObj.width != undefined ? formDataObj.width : \"\",\r\n                                        HeightLoad: formDataObj.height != undefined ? formDataObj.height : \"\",\r\n                                        WeightLoad: formDataObj.weight != undefined ? formDataObj.weight : \"\",\r\n                                        qrCode: \"\"\r\n                                    };\r\n\r\n                                    let AddressClint = {};\r\n\r\n                                    if (isNewAddress) {\r\n                                        AddressClint = {\r\n                                            IdCity: pickUpAddress.cityId,\r\n                                            IdArea: pickUpAddress.areaId,\r\n                                            IdGov: pickUpAddress.governoratId,\r\n                                            IdProv: pickUpAddress.provinceId,\r\n                                            OtherDetails: pickUpAddress.details,\r\n                                            LatSender: pickUpAddress.latitude,\r\n                                            LongSender: pickUpAddress.longitude,\r\n                                            SenderAddressId: pickUpAddress.id,\r\n\r\n                                            IdCityDes: formDataObj.city,\r\n                                            IdAreaDes: formDataObj.area,\r\n                                            IdGovDes: formDataObj.governorate,\r\n                                            IdProvDes: formDataObj.province,\r\n                                            OtherDetailsDes: formDataObj.address != undefined ? formDataObj.address : \"\",\r\n                                            addressName: formDataObj.placeName != undefined ? formDataObj.placeName : \"\",\r\n                                            LatReciver: \"\",\r\n                                            LongReciver: \"\",\r\n                                            ReceiverAddressNum: formDataObj.receiverPhone,\r\n                                            zipCode: \"00000\",\r\n                                            country: \"Palestine\",\r\n                                            isShared: \"false\",\r\n                                            additionalInfo: formDataObj.addressinfo != undefined ? formDataObj.addressinfo : \"\",\r\n                                        };\r\n                                    } else {\r\n                                        AddressClint = {\r\n                                            IdCity: pickUpAddress.cityId,\r\n                                            IdArea: pickUpAddress.areaId,\r\n                                            IdGov: pickUpAddress.governoratId,\r\n                                            IdProv: pickUpAddress.provinceId,\r\n                                            OtherDetails: pickUpAddress.details,\r\n                                            LatSender: pickUpAddress.latitude,\r\n                                            LongSender: pickUpAddress.longitude,\r\n                                            SenderAddressId: pickUpAddress.id,\r\n\r\n                                            IdCityDes: dileveryAddress.cityId,\r\n                                            IdAreaDes: dileveryAddress.areaId,\r\n                                            OtherDetailsDes: dileveryAddress.details,\r\n                                            LatReciver: dileveryAddress.latitude,\r\n                                            LongReciver: dileveryAddress.longitude,\r\n                                            ReciverAddressId: dileveryAddress.id,\r\n                                            ReceiverAddressNum: dileveryAddress.phone_number\r\n                                        };\r\n                                    }\r\n\r\n                                    // console.log(AddressClint);\r\n\r\n                                    if (isTransporter()) {\r\n                                        setLoadingSubmit(true);\r\n\r\n                                        CreatedBy = \"Transporter\";\r\n\r\n                                        DeliveryParams.ClientMobileNumber = selectedClient.PhoneNumber;\r\n                                        DeliveryParams.DeliveryPrice = deliveryCostRef.current.value;\r\n\r\n                                        createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\r\n                                    } else {\r\n                                        setLoadingSubmit(true);\r\n\r\n                                        CreatedBy = \"ClientNew\";\r\n\r\n                                        // console.log(DeliveryParams);\r\n                                        // console.log(AddressClint);\r\n\r\n                                        createOrderHandler(DeliveryParams, CreatedBy, AddressClint);\r\n                                    }\r\n\r\n                                    setShowError(false);\r\n                                } else {\r\n                                    setShowError(true);\r\n                                }\r\n\r\n                                setValidated(true);\r\n                            }}>\r\n                                <ListGroup variant=\"flush\" className=\"mt-5 customListGroup\">\r\n\r\n                                    {/* ------------------( package types )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"mb-3 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                    {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                                                </div>\r\n\r\n                                                <div className=\"col-lg-4\">\r\n                                                    <Dropdown\r\n                                                        style={{ width: \"100%\" }}\r\n                                                        className=\"togo-dropdown shadow\"\r\n                                                        onSelect={(eve) => {\r\n                                                            setPackageType(eve);\r\n                                                        }}>\r\n                                                        <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                                                            {React.createElement(PackageTypesIcons[packageType], { style: { width: \"20px\", height: \"20px\" }, className: \"me-1\" })}\r\n                                                            <div style={{ width: \"97%\" }}>\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                                                            </div>\r\n                                                        </Dropdown.Toggle>\r\n\r\n                                                        <Dropdown.Menu className=\"w-100\">\r\n                                                            <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                                                <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                                                <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                                                <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                                                            </Dropdown.Item>\r\n                                                            {/* temp comment food choice */}\r\n                                                            {/* <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                                                <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                                {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                                                            </Dropdown.Item> */}\r\n                                                        </Dropdown.Menu>\r\n                                                    </Dropdown>\r\n                                                </div>\r\n\r\n                                                {packageType !== \"1\" && packageType !== \"2\" && <div className=\"col-lg-8\" style={{ marginTop: \"2px\" }}>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Group>\r\n                                                                <Form.Control\r\n                                                                    name=\"height\"\r\n                                                                    type=\"number\"\r\n                                                                    className=\"rounded-22 input-inner-shadow\"\r\n                                                                    placeholder={intl.formatMessage({ id: \"TEMP.HEIGHT\" })}\r\n                                                                    ref={heightRef}\r\n                                                                />\r\n                                                            </Form.Group>\r\n                                                            <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                name=\"width\"\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 input-inner-shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.WIDTH\" })}\r\n                                                                ref={widthRef}\r\n                                                            />\r\n                                                            <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                name=\"length\"\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 input-inner-shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.LENGTH\" })}\r\n                                                                ref={lengthRef}\r\n                                                            />\r\n                                                            <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span>\r\n                                                        </div>\r\n                                                        <div className=\"col-md-3\">\r\n                                                            <Form.Control\r\n                                                                name=\"weight\"\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 input-inner-shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"TEMP.WEIGHT\" })}\r\n                                                                ref={weightRef}\r\n                                                            />\r\n                                                            <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>}\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( delivery type )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex align-items-center mb-3 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                {translate(\"CREATE_NEW_ORDER.SELECT_DELIVERY_TYPE\")}\r\n                                            </div>\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-12\">\r\n                                                    <div className={\"toggleButtonsContainer\"}>\r\n                                                        {\r\n                                                            deliverTypeArr.map((item, index) => {\r\n                                                                return <div key={index} className={\"toggleButton \" + item.active + ((localStorage.getItem(\"Language\") || \"en\") === \"en\" ? \" me-2\" : \" ms-2\")} onClick={() => { handleDeliveryTypeClick(index, item.type) }}>\r\n                                                                    <div className=\"radio\"><div className=\"innerRadio\"></div></div> {item.name}\r\n                                                                </div>\r\n                                                            })\r\n                                                        }\r\n                                                        {deliveryType === \"2\" && <div style={{ position: \"absolute\", left: \"230px\", top: \"68px\", width: \"180px\" }}>\r\n                                                            <Form.Control\r\n                                                                required={true}\r\n                                                                name=\"codAmount\"\r\n                                                                min=\"1\"\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 input-inner-shadow\"\r\n                                                                placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                                                ref={codAmountRef}\r\n                                                            />\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* <div className=\"col-lg-2\">\r\n                                                        {deliveryType === \"2\" && <>\r\n                                                            <Form.Control\r\n                                                                required={true}\r\n                                                                name=\"codAmount\"\r\n                                                                min=\"3\"\r\n                                                                type=\"number\"\r\n                                                                className=\"rounded-22 input-inner-shadow\" style={{ width: \"100%\" }}\r\n                                                                placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                                                ref={codAmountRef}\r\n                                                            />\r\n                                                        </>}\r\n                                                    </div> */}\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( addresses )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                    <LocationIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                    {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-12\">\r\n\r\n                                                    <Table>\r\n                                                        <thead>\r\n                                                            <tr>\r\n                                                                <th scope=\"col\">{translate(\"CREATE_NEW_ORDER.NAME\")}</th>\r\n                                                                <th style={{ width: \"50%\" }} scope=\"col\">{translate(\"CREATE_NEW_ORDER.ADDRESS\")}</th>\r\n                                                                <th scope=\"col\">{translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\")}</th>\r\n                                                                <th scope=\"col\"></th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td><Form.Control readOnly placeholder={pickUpAddress.name} /></td>\r\n                                                                <td><Form.Control readOnly placeholder={pickUpAddress.details + \", \" + pickUpAddress.areaName} /></td>\r\n                                                                <td><Form.Control readOnly placeholder={pickUpAddress.phone_number} /></td>\r\n                                                                <td>\r\n                                                                    <Button\r\n                                                                        className=\"btn-grad-circle\"\r\n                                                                        style={{ height: \"50px\" }}\r\n                                                                        onClick={() => {\r\n                                                                            setShowPickupAddressModal(true);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <i className=\"bi bi-arrow-repeat h3\"></i>\r\n                                                                    </Button>\r\n                                                                    <Modal\r\n                                                                        show={showPickupAddressModal}\r\n                                                                        onHide={() => { setShowPickupAddressModal(false); setInputValue(\"\") }}\r\n                                                                        centered\r\n                                                                        animation={true}\r\n                                                                        size=\"xl\"\r\n\r\n                                                                        style={{ backgroundColor: \"rgba(0,0,0,0.5)\", }}\r\n                                                                    >\r\n                                                                        <Modal.Header closeButton style={styles.cardHeaderLg}>\r\n                                                                            <Modal.Title>{translate(\"CREATE_NEW_ORDER.CHANGE_PICKUP_ADDRESS\")}</Modal.Title>\r\n                                                                        </Modal.Header>\r\n                                                                        <Modal.Body className=\"mt-5\">\r\n                                                                            <Container fluid>\r\n                                                                                <Row className=\"mb-2\">\r\n                                                                                    <Col lg={11}>\r\n                                                                                        <span className=\"h4\">{translate(\"CREATE_NEW_ORDER.SET_DAFAULT_ADDRESS\")}:</span>\r\n                                                                                    </Col>\r\n                                                                                    <Col lg={1}>\r\n                                                                                        <CreateAddress onSuccess={() => { setRefresh(!refresh) }}>\r\n                                                                                            <Button style={{ cursor: \"pointer\" }} className=\"btn-grad p-2\">\r\n                                                                                                <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                                                                                            </Button>\r\n                                                                                        </CreateAddress>\r\n                                                                                    </Col>\r\n                                                                                </Row>\r\n                                                                                <Row>\r\n                                                                                    <Table >\r\n                                                                                        <thead>\r\n                                                                                            <tr>\r\n                                                                                                <th style={{ width: \"25%\" }} scope=\"col\">\r\n                                                                                                    <FloatingLabel className=\"mb-2\" controlId=\"addressName\" label={translate(\"CREATE_NEW_ORDER.NAME\")}>\r\n                                                                                                        <Form.Control className=\"input-inner-shadow\" type=\"text\" placeholder=\"...\" onChange={(e) => {\r\n                                                                                                            setInputValue(e.target.value);\r\n                                                                                                        }} />\r\n                                                                                                    </FloatingLabel>\r\n                                                                                                </th>\r\n                                                                                                <th style={{ width: \"25%\", paddingBottom: \"30px\" }} scope=\"col\">{translate(\"CREATE_NEW_ORDER.ADDRESS\")}</th>\r\n                                                                                                <th style={{ width: \"20%\" }} scope=\"col\">\r\n                                                                                                    <FloatingLabel className=\"mb-2\" controlId=\"addressName\" label={translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\")}>\r\n                                                                                                        <Form.Control className=\"input-inner-shadow\" type=\"text\" placeholder=\"...\" onChange={(e) => {\r\n                                                                                                            setInputValue(e.target.value);\r\n                                                                                                        }} />\r\n                                                                                                    </FloatingLabel>\r\n                                                                                                </th>\r\n                                                                                                <th style={{ width: \"30%\" }} scope=\"col\"> </th>\r\n                                                                                            </tr>\r\n                                                                                        </thead>\r\n                                                                                    </Table>\r\n                                                                                    <div style={{ height: \"300px\", overflowY: \"scroll\" }}>\r\n                                                                                        <Table>\r\n                                                                                            <tbody>\r\n                                                                                                {\r\n                                                                                                    clientAddresses.map((address, index) => {\r\n                                                                                                        return <tr key={index}>\r\n                                                                                                            <td style={{ width: \"25%\" }}>{address.name}</td>\r\n                                                                                                            <td style={{ width: \"25%\" }}>{address.details + \", \" + address.cityName}</td>\r\n                                                                                                            <td style={{ width: \"20%\" }}>{address.phone_number}</td>\r\n                                                                                                            {address.is_default == \"0\" ? <td style={{ width: \"30%\" }}>\r\n                                                                                                                <Button disabled={loadingSetDefault ? true : false} className=\"btn-grad\" onClick={() => {\r\n                                                                                                                    setDefaultAddressHandler(address.id);\r\n                                                                                                                }}>\r\n                                                                                                                    {loadingSetDefault && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                                                                                                    {translate(\"CREATE_NEW_ORDER.SET_DEFAULT\")}\r\n                                                                                                                </Button>\r\n                                                                                                                <Button disabled={loadingSetDefault ? true : false} className=\"btn-grad mx-2\" onClick={() => {\r\n                                                                                                                    setTempAddressHandler(address.id);\r\n                                                                                                                }}>\r\n                                                                                                                    {loadingSetDefault && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                                                                                                    {translate(\"CREATE_NEW_ORDER.SET_FOR_NOW\")}\r\n                                                                                                                </Button>\r\n                                                                                                            </td> : <td>\r\n                                                                                                                <Button disabled variant=\"danger\">\r\n                                                                                                                    {translate(\"CREATE_NEW_ORDER.DEFAULT_ADDRESS\")}\r\n                                                                                                                </Button>\r\n                                                                                                            </td>}\r\n                                                                                                        </tr>\r\n                                                                                                    })\r\n                                                                                                }\r\n                                                                                            </tbody>\r\n                                                                                        </Table>\r\n                                                                                    </div>\r\n                                                                                </Row>\r\n                                                                            </Container>\r\n                                                                        </Modal.Body>\r\n                                                                    </Modal>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </Table>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( receiver address )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                        <div className=\"container-fluid\">\r\n                                            {/* nono */}\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-lg-11 d-flex align-items-center h5 mb-3\" style={{ color: \"#26a69a\" }}>\r\n                                                    {\r\n                                                        isNewAddress ? <>\r\n                                                            <SendIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                            {translate(\"CREATE_NEW_ORDER.SET_NEW_ADDRESS\")} &nbsp; <Badge className=\"custome-link rounded-pill\" onClick={() => {\r\n                                                                setShowReceiverAddressModal(true);\r\n                                                                setInputValue(\"\");\r\n                                                            }}>{translate(\"CREATE_NEW_ORDER.OR_CHOOSE_FROM_LIST\")} <i className=\"bi bi-list\"></i></Badge>\r\n                                                        </> : <>\r\n                                                            <SendIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                            <Badge className=\"custome-link rounded-pill\" onClick={() => {\r\n                                                                setIsNewAddress(true);\r\n                                                            }}>{translate(\"CREATE_NEW_ORDER.SET_NEW_ADDRESS\")}</Badge> &nbsp; <Badge className=\"custome-link rounded-pill\" onClick={() => {\r\n                                                                setShowReceiverAddressModal(true);\r\n                                                                setInputValue(\"\");\r\n                                                            }}>{translate(\"CREATE_NEW_ORDER.CHANGE_FROM_LIST\")} <i className=\"bi bi-arrow-repeat\"></i></Badge>\r\n                                                        </>\r\n                                                    }\r\n                                                </div>\r\n\r\n                                                <Modal\r\n                                                    show={showReceiverAddressModal}\r\n                                                    onHide={() => { setShowReceiverAddressModal(false); setInputValue(\"\") }}\r\n                                                    centered\r\n                                                    animation={true}\r\n                                                    size=\"xl\"\r\n\r\n                                                    style={{ backgroundColor: \"rgba(0,0,0,0.5)\", }}\r\n                                                >\r\n                                                    <Modal.Header closeButton style={styles.cardHeaderLg}>\r\n                                                        <Modal.Title>{translate(\"CREATE_NEW_ORDER.CHOOSE_DELIVERY_ADDRESS\")}</Modal.Title>\r\n                                                    </Modal.Header>\r\n                                                    <Modal.Body className=\"mt-5\">\r\n                                                        <Container fluid>\r\n                                                            <Row className=\"mb-2\">\r\n                                                                <Col lg={11}>\r\n                                                                    <span className=\"h4\">{translate(\"CREATE_NEW_ORDER.SELECT_DELIVERY_ADDRESS_FROM_LIST\")}:</span>\r\n                                                                </Col>\r\n                                                                {/* <Col lg={1}>\r\n                                                                    <CreateAddress onSuccess={() => { setRefresh(!refresh) }}>\r\n                                                                        <Button style={{ cursor: \"pointer\" }} className=\"btn-grad p-2\">\r\n                                                                            <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                                                                        </Button>\r\n                                                                    </CreateAddress>\r\n                                                                </Col> */}\r\n                                                            </Row>\r\n                                                            <Row>\r\n                                                                <Table>\r\n                                                                    <thead>\r\n                                                                        <tr>\r\n                                                                            <th style={{ width: \"30%\" }} scope=\"col\">\r\n                                                                                <FloatingLabel className=\"mb-2\" controlId=\"addressName\" label={translate(\"CREATE_NEW_ORDER.NAME\")}>\r\n                                                                                    <Form.Control className=\"input-inner-shadow\" type=\"text\" placeholder=\"...\" onChange={(e) => {\r\n                                                                                        setInputValue(e.target.value);\r\n                                                                                    }} />\r\n                                                                                </FloatingLabel>\r\n                                                                            </th>\r\n                                                                            <th style={{ width: \"35%\", paddingBottom: \"30px\" }} scope=\"col\">{translate(\"CREATE_NEW_ORDER.ADDRESS\")}</th>\r\n                                                                            <th style={{ width: \"20%\" }} scope=\"col\">\r\n                                                                                <FloatingLabel className=\"mb-2\" controlId=\"addressName\" label={translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\")}>\r\n                                                                                    <Form.Control className=\"input-inner-shadow\" type=\"text\" placeholder=\"...\" onChange={(e) => {\r\n                                                                                        setInputValue(e.target.value);\r\n                                                                                    }} />\r\n                                                                                </FloatingLabel>\r\n                                                                            </th>\r\n                                                                            <th style={{ width: \"15%\" }} scope=\"col\"> </th>\r\n                                                                        </tr>\r\n                                                                    </thead>\r\n                                                                </Table>\r\n                                                                <div style={{ height: \"300px\", overflowY: \"scroll\" }}>\r\n                                                                    <Table>\r\n                                                                        <tbody>\r\n                                                                            {\r\n                                                                                deliverAddresses.map((address, index) => {\r\n                                                                                    return <tr key={index}>\r\n                                                                                        <td style={{ width: \"30%\" }}>{address.name}</td>\r\n                                                                                        <td style={{ width: \"35%\" }}>{address.details + \", \" + address.cityName}</td>\r\n                                                                                        <td style={{ width: \"20%\" }}>{address.phone_number}</td>\r\n                                                                                        <td style={{ width: \"15%\" }}>\r\n                                                                                            <Button disabled={loadingSetDefault ? true : false} className=\"btn-grad\" onClick={() => {\r\n                                                                                                setDeliverAddressHandler(address);\r\n                                                                                            }}>\r\n                                                                                                {loadingSetDefault && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                                                                                {translate(\"CREATE_NEW_ORDER.SELECT\")}\r\n                                                                                            </Button>\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n                                                                                })\r\n                                                                            }\r\n                                                                        </tbody>\r\n                                                                    </Table>\r\n                                                                </div>\r\n                                                            </Row>\r\n                                                        </Container>\r\n                                                    </Modal.Body>\r\n                                                </Modal>\r\n                                            </div>\r\n\r\n                                            {isNewAddress == true ? <>\r\n                                                <div className=\"row mt-1\">\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"mb-3\" controlId=\"placeName\" label={translate(\"CREATE_NEW_ORDER.NAME\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder=\"...\" name=\"placeName\" required />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {translate(\"CREATE_NEW_ORDER.PLEASE_ADD_PLACE_NAME\")}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </FloatingLabel>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"mb-3\" controlId=\"userPhone\" label={translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"tel\" placeholder=\"...\" name=\"receiverPhone\" pattern=\"^05[0-9]{8}?$\" required />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {translate(\"CREATE_NEW_ORDER.PLEASE_ENTER_VALID_NUMBER\")}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </FloatingLabel>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.PROVINCE\")}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"province\" required aria-label=\"Default select example\"\r\n                                                            onClick={() => {\r\n                                                                getProvences();\r\n                                                            }}\r\n                                                            onChange={(e) => {\r\n                                                                updateSubLevel(\"governorates\", e.target.value)\r\n                                                            }}>\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>{intl.formatMessage({ id: \"CREATE_NEW_ORDER.SELECT_PROVINCE\" })}</option>\r\n                                                            {\r\n                                                                provinces.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.GOVERNORATE\")}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"governorate\" required aria-label=\"Default select example\" onChange={(e) => {\r\n                                                            updateSubLevel(\"cities\", e.target.value)\r\n                                                        }}>\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>{intl.formatMessage({ id: \"CREATE_NEW_ORDER.SELECT_GOVERNORATE\" })}</option>\r\n                                                            {\r\n                                                                governorates.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.CITY\")}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"city\" required aria-label=\"Default select example\" onChange={(e) => {\r\n                                                            updateSubLevel(\"areas\", e.target.value)\r\n                                                        }}>\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>{intl.formatMessage({ id: \"CREATE_NEW_ORDER.SELECT_CITY\" })}</option>\r\n                                                            {\r\n                                                                cities.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.AREA\")} {/* <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span> */}:</Form.Label>\r\n                                                        <Form.Select style={{ cursor: \"pointer\" }} className=\"shadow\" name=\"area\" required aria-label=\"Default select example\">\r\n                                                            <option value={\"\"} style={{ color: \"lightgray\" }}>{intl.formatMessage({ id: \"CREATE_NEW_ORDER.SELECT_AREA\" })}</option>\r\n                                                            {\r\n                                                                areas.map((item, index) => {\r\n                                                                    return <option key={index} value={item.id}>{item.name}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"\" controlId=\"userAddress\" label={translate(\"CREATE_NEW_ORDER.ADDRESS\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder=\"...\" name=\"address\" />\r\n                                                            </FloatingLabel>\r\n                                                            <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <Form.Group>\r\n                                                            <FloatingLabel className=\"\" controlId=\"addressInfo\" label={translate(\"CREATE_NEW_ORDER.ADDRESS_INFO\")}>\r\n                                                                <Form.Control className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder=\"...\" name=\"addressinfo\" />\r\n                                                            </FloatingLabel>\r\n                                                            <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span>\r\n                                                        </Form.Group>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* ------------------------------------------------------------------------------- */}\r\n                                            </> : <>\r\n                                                <div className=\"row mt-1 mb-3\">\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <label>{translate(\"CREATE_NEW_ORDER.NAME\")}</label>\r\n                                                        <Form.Control disabled className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder={dileveryAddress.name} />\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <label>{translate(\"CREATE_NEW_ORDER.MOBILE_NUMBER\")}</label>\r\n                                                        <Form.Control disabled className=\"rounded-22 input-inner-shadow\" type=\"tel\" placeholder={dileveryAddress.phone_number} />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.PROVINCE\")}:</Form.Label>\r\n                                                        <Form.Select disabled className=\"shadow\" aria-label=\"Default select example\">\r\n                                                            <option>{dileveryAddress.provName}</option>\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.GOVERNORATE\")}:</Form.Label>\r\n                                                        <Form.Select disabled className=\"shadow\" aria-label=\"Default select example\">\r\n                                                            <option>{dileveryAddress.govName}</option>\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"mb-4\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.CITY\")}:</Form.Label>\r\n                                                        <Form.Select disabled className=\"shadow\" aria-label=\"Default select example\">\r\n                                                            <option>{dileveryAddress.cityName}</option>\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                    <Col lg={3} className=\"\">\r\n                                                        <Form.Label>{translate(\"CREATE_NEW_ORDER.AREA\")}:</Form.Label>\r\n                                                        <Form.Select disabled className=\"shadow\" aria-label=\"Default select example\">\r\n                                                            <option>{dileveryAddress.areaName}</option>\r\n                                                        </Form.Select>\r\n                                                    </Col>\r\n                                                </div>\r\n\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <label>{translate(\"CREATE_NEW_ORDER.ADDRESS\")}</label>\r\n                                                        <Form.Control disabled className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder={dileveryAddress.details} />\r\n                                                    </div>\r\n                                                    <div className=\"col-lg-6\">\r\n                                                        <label>{translate(\"CREATE_NEW_ORDER.ADDRESS_INFO\")}</label>\r\n                                                        <Form.Control disabled className=\"rounded-22 input-inner-shadow\" type=\"text\" placeholder={dileveryAddress.additional_info} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>}\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( order notes )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\">\r\n                                        <div className=\"container-fluid\">\r\n                                            <div className=\"d-flex align-items-center mb-3 h5\" style={{ color: \"#26a69a\" }}>\r\n                                                <AttachmentIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                                {translate(\"CREATE_NEW_ORDER.ATTACHMENTS_LABEL\")}\r\n                                            </div>\r\n\r\n                                            <Form.Control name=\"notes\" type=\"text\" className=\"mt-2 rounded-22 input-inner-shadow\" placeholder={intl.formatMessage({ id: \"CREATE_NEW_ORDER.NOTES\" })} ref={notesRef} />\r\n                                            <span style={{ color: \"#1f8379\" }}>({translate(\"CREATE_NEW_ORDER.OPTIONAL\")})</span>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* ------------------( order notes )------------------ */}\r\n                                    <ListGroup.Item className=\"py-4\" style={{ backgroundColor: \"#ededed\" }}>\r\n                                        <div className=\"container-fluid\">\r\n                                            {showError && <span style={{ color: \"#d9534f\" }}>\r\n                                                <i className=\"bi bi-info-circle\"></i>{\" \"}\r\n                                                {translate(\"CREATE_NEW_ORDER.REQUIRED_ERROR\")}\r\n                                            </span>}\r\n                                            {true ? <Button\r\n                                                className=\"btn-grad\"\r\n                                                style={{ width: \"30%\", float: \"right\" }}\r\n                                                disabled={loadingSubmit}\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                                {isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"CREATE_NEW_ORDER.SUBMIT_ORDER\")}\r\n                                            </Button> : <span className=\"h6\" style={{ color: \"#26a69a\", float: \"right\" }}>{isTransporter() ? translate(\"TEMP.SUCCISSFULLY_PUBLISHED\") : translate(\"TEMP.SUCCISSFULLY_PUBLISHED_CLIENT\")}</span>}\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Form>\r\n                            {/* </Card> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* <Modal\r\n                        show={openConf}\r\n                        onHide={() => {\r\n\r\n                            setOpenConf(false);\r\n                        }}\r\n                        animation={false}\r\n                        backdrop=\"static\"\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Confirmation</Modal.Title>\r\n                        </Modal.Header>\r\n\r\n                        <Modal.Body>\r\n                            <p>Would you like to print a waybill ?</p>\r\n                        </Modal.Body>\r\n\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                }}\r\n                            >\r\n                                No\r\n                            </Button>\r\n\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() => {\r\n                                    setOpenConf(false);\r\n                                    window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                                }}\r\n                            >\r\n                                Yes\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal> */}\r\n\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}