{"ast":null,"code":"import _defineProperty from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from\"react\";import{Button,Form,FormControl,Modal,Spinner}from\"react-bootstrap\";import{SetWorkingHours}from\"./APIs/LoginAPIs\";import{GetCityRegion}from\"./APIs/OrdersAPIs\";import locationImg from\"../assets/locationn.png\";var DAYS=['Saturday','Sunday','Monday','Tuesday','Wednesday','Thursday','Friday'];function FromToFields(_ref){var id=_ref.id,children=_ref.children,time=_ref.time,onChangeStartTime=_ref.onChangeStartTime,onChangeEndTime=_ref.onChangeEndTime;return/*#__PURE__*/React.createElement(\"div\",{className:\"align-items-center d-flex\"},children,/*#__PURE__*/React.createElement(\"p\",{className:\"me-2\"},\"From\"),/*#__PURE__*/React.createElement(FormControl,{type:\"time\",className:\"bg-white rounded-22 w-auto\",name:\"from\",value:time.from,onChange:onChangeStartTime}),/*#__PURE__*/React.createElement(\"p\",{className:\"me-2\"},\"to\"),/*#__PURE__*/React.createElement(FormControl,{type:\"time\",className:\"bg-white rounded-22 w-auto\",name:\"to\",value:time.to,onChange:onChangeEndTime}));}export default function WorkInfo(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loadingSubmit=_useState2[0],setLoadingSubmit=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),cities=_useState6[0],setCities=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),selectedCities=_useState8[0],setSelectedCities=_useState8[1];var _useState9=useState(\"1\"),_useState10=_slicedToArray(_useState9,2),isAllTime=_useState10[0],setIsAllTime=_useState10[1];var _useState11=useState(DAYS),_useState12=_slicedToArray(_useState11,2),selectedDays=_useState12[0],setSelectedDays=_useState12[1];var _useState13=useState(\"1\"),_useState14=_slicedToArray(_useState13,2),selectedTimeRange=_useState14[0],setSelectedTimeRange=_useState14[1];var _useState15=useState({from:\"\",to:\"\"}),_useState16=_slicedToArray(_useState15,2),time=_useState16[0],setTime=_useState16[1];var handleChangeEndTime=function handleChangeEndTime(e){setTime({from:time.from,to:e.target.value});};var handleChangeStartTime=function handleChangeStartTime(e){setTime({from:e.target.value,to:time.to});};var formRef=useRef();useEffect(function(){GetCityRegion().then(function(res){setCities(res.data.server_response);});},[]);var getTime={Saturday:{SatTimeStart:\"\",SatTimeFinish:\"\"},Sunday:{SunTimeStart:\"\",SunTimeFinish:\"\"},Monday:{MonTimeStart:\"\",MonTimeFinish:\"\"},Tuesday:{TueTimeStart:\"\",TueTimeFinish:\"\"},Wednesday:{WenTimeStart:\"\",WenTimeFinish:\"\"},Thursday:{ThuTimeStart:\"\",ThuTimeFinish:\"\"},Friday:{FriTimeStart:\"\",FriTimeFinish:\"\"}};useEffect(function(){var data=DAYS.map(function(day){return _objectSpread({day:day,isChecked:false},getTime[day]);});setSelectedDays(data);},[]);var locationsArray=Array.from(selectedCities,function(item){return _objectSpread({},item[1]);});return/*#__PURE__*/React.createElement(\"div\",{className:\"mainbg\"},/*#__PURE__*/React.createElement(\"div\",{className:\"h1 p-3 text-center togo-button\"},\"Create account / transporter\"),/*#__PURE__*/React.createElement(Form,{className:\"m-auto w-75\",onSubmit:function onSubmit(event){event.preventDefault();var result=selectedDays.reduce(function(obj,cur){return _objectSpread(_objectSpread({},obj),cur);},{});delete result.day;delete result.isChecked;var requestTime=_objectSpread(_objectSpread({},result),{},{AllTimeFlag:isAllTime});var requestAllTime={AllTimeFlag:isAllTime,AllTimeStart:time.from,AllTimeFinish:time.to};var request=isAllTime===\"0\"?requestTime:requestAllTime;SetWorkingHours(locationsArray,request);//console.log(event.target);\n// console.log(event.target[0].value)\n// console.log(event.target.elements.FirstName.value)\n// console.log(event.target.FirstName.value)\n},onChange:function onChange(event){console.log(event.target);if(event.target.name){setSelectedTimeRange(event.target.value);}}},/*#__PURE__*/React.createElement(\"p\",{className:\"text-center togo-border h4\"},\"Work information\"),/*#__PURE__*/React.createElement(\"p\",null,\"Work area\"),/*#__PURE__*/React.createElement(\"div\",{className:\"togo-outling\",onClick:function onClick(){setOpen(true);}},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex text-center bg-white rounded-22\"},/*#__PURE__*/React.createElement(\"img\",{src:locationImg,style:{width:\"24px\",height:\"24px\"},className:\"me-1\",alt:\"worldicon\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"flex-grow-1\"},\"Select Work areas\"))),/*#__PURE__*/React.createElement(\"p\",null,\"Select working time\"),/*#__PURE__*/React.createElement(FromToFields,{time:time,onChangeStartTime:handleChangeStartTime,onChangeEndTime:handleChangeEndTime},/*#__PURE__*/React.createElement(Form.Check,{label:\"All Days\",type:\"radio\",id:\"allDays\",name:\"time\",value:\"1\",checked:isAllTime===\"1\",onChange:function onChange(e){return setIsAllTime(e.target.value);},className:\"togo-checkbox flex-grow-1\"// defaultChecked\n})),/*#__PURE__*/React.createElement(Form.Check,{label:\"Days of the week\",type:\"radio\",id:\"someDays\",name:\"time\",value:\"0\",checked:isAllTime===\"0\",onChange:function onChange(e){return setIsAllTime(e.target.value);},className:\"togo-checkbox\"}),isAllTime===\"0\"&&/*#__PURE__*/React.createElement(\"div\",null,selectedDays.map(function(day){return/*#__PURE__*/React.createElement(\"div\",{className:\"align-items-center d-flex\",key:day.day},/*#__PURE__*/React.createElement(Form.Check,{label:day.day,type:\"checkbox\",id:\"\".concat(day.day,\"someDays\"),name:\"\".concat(day.day,\"time\"),checked:day.isChecked,onChange:function onChange(e){var newData=selectedDays.map(function(selectedDay){return(selectedDay===null||selectedDay===void 0?void 0:selectedDay.day)===day.day?_objectSpread(_objectSpread({},day),{},{isChecked:e.target.checked}):selectedDay;});setSelectedDays(newData);},className:\"togo-checkbox flex-grow-1\"}),/*#__PURE__*/React.createElement(\"p\",{className:\"me-2\"},\"From\"),/*#__PURE__*/React.createElement(FormControl,{type:\"time\",className:\"bg-white rounded-22 w-auto\",name:day.day&&Object.keys(getTime[day.day])[0]// value={day.day && Object.values(getTime[day.day])?.[0]}\n,onChange:function onChange(e){var newData=selectedDays.map(function(selectedDay){return(selectedDay===null||selectedDay===void 0?void 0:selectedDay.day)===day.day?_objectSpread(_objectSpread({},day),{},_defineProperty({},Object.keys(getTime[day.day])[0],e.target.value)):selectedDay;});setSelectedDays(newData);},disabled:!day.isChecked}),/*#__PURE__*/React.createElement(\"p\",{className:\"me-2\"},\"to\"),/*#__PURE__*/React.createElement(FormControl,{type:\"time\",className:\"bg-white rounded-22 w-auto\",name:day.day&&Object.keys(getTime[day.day])[1]// value={day.day && Object.values(getTime[day.day])?.[1]}\n,onChange:function onChange(e){var newData=selectedDays.map(function(selectedDay){return(selectedDay===null||selectedDay===void 0?void 0:selectedDay.day)===day.day?_objectSpread(_objectSpread({},day),{},_defineProperty({},Object.keys(getTime[day.day])[1],e.target.value)):selectedDay;});setSelectedDays(newData);},disabled:!day.isChecked}));})),/*#__PURE__*/React.createElement(Button,{variant:\"\",type:\"submit\",className:\"d-block m-auto rounded-22 togo-button w-25\",disabled:loadingSubmit// onClick={(event)=>{\n//     setLoadingSubmit(true);\n//     // SetTransporterPersonalInfo(\n//     // ).then((res) => {\n//     //     setLoadingSubmit(false);\n//     //     history.push(\"/business-info\")\n//     // });\n// }}\n},loadingSubmit&&/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",size:\"sm\"}),\"Accept\")),/*#__PURE__*/React.createElement(Modal,{show:open,onHide:function onHide(){setOpen(false);}},/*#__PURE__*/React.createElement(Modal.Header,null,/*#__PURE__*/React.createElement(Modal.Title,null,\"Select areas\")),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Form,{ref:formRef},cities.map(function(city){var _selectedCities$get;return/*#__PURE__*/React.createElement(Form.Check,{label:city.Name,type:\"checkbox\",id:\"\".concat(city.Name,\"-someDays\"),name:city.Name,key:city.IdCity,value:city.IdCity,className:\"togo-checkbox\",defaultChecked:selectedCities===null||selectedCities===void 0?void 0:(_selectedCities$get=selectedCities.get)===null||_selectedCities$get===void 0?void 0:_selectedCities$get.call(selectedCities,city.IdCity)});}))),/*#__PURE__*/React.createElement(Modal.Footer,null,/*#__PURE__*/React.createElement(Button,{variant:\"secondary\",onClick:function onClick(){setOpen(false);}},\"Close\"),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:function onClick(){var selected=new Map();Array.from(formRef.current.elements).forEach(function(elem){if(elem.checked){selected.set(elem.value,{IdCity:elem.value});}});setSelectedCities(selected);setOpen(false);}},\"Save Changes\"))));}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/WorkInfo.jsx"],"names":["React","useEffect","useRef","useState","Button","Form","FormControl","Modal","Spinner","SetWorkingHours","GetCityRegion","locationImg","DAYS","FromToFields","id","children","time","onChangeStartTime","onChangeEndTime","from","to","WorkInfo","loadingSubmit","setLoadingSubmit","open","setOpen","cities","setCities","selectedCities","setSelectedCities","isAllTime","setIsAllTime","selectedDays","setSelectedDays","selectedTimeRange","setSelectedTimeRange","setTime","handleChangeEndTime","e","target","value","handleChangeStartTime","formRef","then","res","data","server_response","getTime","Saturday","SatTimeStart","SatTimeFinish","Sunday","SunTimeStart","SunTimeFinish","Monday","MonTimeStart","MonTimeFinish","Tuesday","TueTimeStart","TueTimeFinish","Wednesday","WenTimeStart","WenTimeFinish","Thursday","ThuTimeStart","ThuTimeFinish","Friday","FriTimeStart","FriTimeFinish","map","day","isChecked","locationsArray","Array","item","event","preventDefault","result","reduce","obj","cur","requestTime","AllTimeFlag","requestAllTime","AllTimeStart","AllTimeFinish","request","console","log","name","width","height","newData","selectedDay","checked","Object","keys","city","Name","IdCity","get","selected","Map","current","elements","forEach","elem","set"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Form, FormControl, Modal, Spinner} from \"react-bootstrap\";\r\nimport {SetWorkingHours} from \"./APIs/LoginAPIs\";\r\nimport {GetCityRegion} from \"./APIs/OrdersAPIs\";\r\nimport locationImg from \"../assets/locationn.png\";\r\n\r\nvar DAYS = ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n\r\nfunction FromToFields({id, children, time, onChangeStartTime, onChangeEndTime}) {\r\n\r\n    return (\r\n        <div className=\"align-items-center d-flex\">\r\n            {children}\r\n            <p className=\"me-2\">From</p>\r\n            <FormControl\r\n                type=\"time\"\r\n                className=\"bg-white rounded-22 w-auto\"\r\n                name=\"from\"\r\n                value={time.from}\r\n                onChange={onChangeStartTime}\r\n            />\r\n            <p className=\"me-2\">to</p>\r\n            <FormControl\r\n                type=\"time\"\r\n                className=\"bg-white rounded-22 w-auto\"\r\n                name=\"to\"\r\n                value={time.to}\r\n                onChange={onChangeEndTime}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function WorkInfo() {\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n    const [isAllTime, setIsAllTime] = useState(\"1\")\r\n    const [selectedDays, setSelectedDays] = useState(DAYS)\r\n    const [selectedTimeRange, setSelectedTimeRange] = useState(\"1\");\r\n    const [time, setTime] = useState({\r\n        from: \"\",\r\n        to: \"\",\r\n    })\r\n    const handleChangeEndTime = e => {\r\n        setTime({\r\n            from: time.from, to: e.target.value,\r\n        })\r\n    }\r\n    const handleChangeStartTime = e => {\r\n        setTime({\r\n            from: e.target.value, to: time.to,\r\n        })\r\n    }\r\n    const formRef = useRef();\r\n    useEffect(() => {\r\n        GetCityRegion().then((res) => {\r\n            setCities(res.data.server_response);\r\n        });\r\n    }, [])\r\n    const getTime = {\r\n        Saturday: {SatTimeStart: \"\", SatTimeFinish: \"\"},\r\n        Sunday: {SunTimeStart: \"\", SunTimeFinish: \"\"},\r\n        Monday: {MonTimeStart: \"\", MonTimeFinish: \"\"},\r\n        Tuesday: {TueTimeStart: \"\", TueTimeFinish: \"\"},\r\n        Wednesday: {WenTimeStart: \"\", WenTimeFinish: \"\"},\r\n        Thursday: {ThuTimeStart: \"\", ThuTimeFinish: \"\"},\r\n        Friday: {FriTimeStart: \"\", FriTimeFinish: \"\"}\r\n    }\r\n    useEffect(() => {\r\n        const data = DAYS.map(day => ({day, isChecked: false, ...getTime[day]}));\r\n        setSelectedDays(data);\r\n    }, []);\r\n\r\n    let locationsArray = Array.from(selectedCities, item => ({...item[1]}))\r\n    return (\r\n        <div className=\"mainbg\">\r\n            <div className=\"h1 p-3 text-center togo-button\">\r\n                Create account / transporter\r\n            </div>\r\n            <Form\r\n                className=\"m-auto w-75\"\r\n                onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    const result = selectedDays.reduce((obj, cur) => ({...obj, ...cur}), {});\r\n                    delete result.day;\r\n                    delete result.isChecked;\r\n                    const requestTime = {\r\n                        ...result,\r\n                        AllTimeFlag: isAllTime,\r\n                    }\r\n                    const requestAllTime = {\r\n                        AllTimeFlag: isAllTime,\r\n                        AllTimeStart: time.from,\r\n                        AllTimeFinish: time.to,\r\n                    }\r\n                    const request = isAllTime === \"0\" ? requestTime : requestAllTime;\r\n                    SetWorkingHours(locationsArray, request);\r\n                    //console.log(event.target);\r\n                    // console.log(event.target[0].value)\r\n                    // console.log(event.target.elements.FirstName.value)\r\n                    // console.log(event.target.FirstName.value)\r\n\r\n                }}\r\n                onChange={(event) => {\r\n                    console.log(event.target);\r\n                    if (event.target.name) {\r\n                        setSelectedTimeRange(event.target.value);\r\n                    }\r\n                }}\r\n            >\r\n                <p className=\"text-center togo-border h4\">Work information</p>\r\n                <p>Work area</p>\r\n                <div className=\"togo-outling\" onClick={() => {\r\n                    setOpen(true);\r\n                }}>\r\n                    <div className=\"d-flex text-center bg-white rounded-22\">\r\n                        <img src={locationImg} style={{width: \"24px\", height: \"24px\"}} className=\"me-1\"\r\n                             alt=\"worldicon\"/>\r\n                        <span className=\"flex-grow-1\">Select Work areas</span>\r\n                    </div>\r\n                </div>\r\n                <p>Select working time</p>\r\n                <FromToFields time={time} onChangeStartTime={handleChangeStartTime}\r\n                              onChangeEndTime={handleChangeEndTime}>\r\n                    <Form.Check\r\n                        label=\"All Days\"\r\n                        type=\"radio\"\r\n                        id=\"allDays\"\r\n                        name=\"time\"\r\n                        value={\"1\"}\r\n                        checked={isAllTime === \"1\"}\r\n                        onChange={(e) => setIsAllTime(e.target.value)}\r\n                        className=\"togo-checkbox flex-grow-1\"\r\n                        // defaultChecked\r\n                    />\r\n                </FromToFields>\r\n\r\n                <Form.Check\r\n                    label=\"Days of the week\"\r\n                    type=\"radio\"\r\n                    id={`someDays`}\r\n                    name=\"time\"\r\n                    value={\"0\"}\r\n                    checked={isAllTime === \"0\"}\r\n                    onChange={(e) => setIsAllTime(e.target.value)}\r\n                    className=\"togo-checkbox\"\r\n                />\r\n                {isAllTime === \"0\" && <div>\r\n                    {\r\n                        selectedDays.map((day) => {\r\n                            return (\r\n                                <div className=\"align-items-center d-flex\" key={day.day}>\r\n                                    <Form.Check\r\n                                        label={day.day}\r\n                                        type=\"checkbox\"\r\n                                        id={`${day.day}someDays`}\r\n                                        name={`${day.day}time`}\r\n                                        checked={day.isChecked}\r\n                                        onChange={e => {\r\n                                            const newData = selectedDays.map(selectedDay => selectedDay?.day === day.day ? ({\r\n                                                ...day,\r\n                                                isChecked: e.target.checked\r\n                                            }) : selectedDay);\r\n                                            setSelectedDays(newData);\r\n                                        }}\r\n                                        className=\"togo-checkbox flex-grow-1\"\r\n                                    />\r\n\r\n                                    <p className=\"me-2\">From</p>\r\n                                    <FormControl\r\n                                        type=\"time\"\r\n                                        className=\"bg-white rounded-22 w-auto\"\r\n                                        name={day.day && Object.keys(getTime[day.day])[0]}\r\n                                        // value={day.day && Object.values(getTime[day.day])?.[0]}\r\n                                        onChange={e => {\r\n                                            const newData = selectedDays.map(selectedDay => selectedDay?.day === day.day ? ({\r\n                                                ...day,\r\n                                                [Object.keys(getTime[day.day])[0]]: e.target.value\r\n                                            }) : selectedDay);\r\n                                            setSelectedDays(newData);\r\n                                        }}\r\n                                        disabled={!day.isChecked}\r\n                                    />\r\n                                    <p className=\"me-2\">to</p>\r\n                                    <FormControl\r\n                                        type=\"time\"\r\n                                        className=\"bg-white rounded-22 w-auto\"\r\n                                        name={day.day && Object.keys(getTime[day.day])[1]}\r\n                                        // value={day.day && Object.values(getTime[day.day])?.[1]}\r\n                                        onChange={e => {\r\n                                            const newData = selectedDays.map(selectedDay => selectedDay?.day === day.day ? ({\r\n                                                ...day,\r\n                                                [Object.keys(getTime[day.day])[1]]: e.target.value\r\n                                            }) : selectedDay);\r\n\r\n                                            setSelectedDays(newData);\r\n                                        }}\r\n                                        disabled={!day.isChecked}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>}\r\n                <Button\r\n                    variant=\"\"\r\n                    type=\"submit\"\r\n                    className=\"d-block m-auto rounded-22 togo-button w-25\"\r\n                    disabled={loadingSubmit}\r\n                    // onClick={(event)=>{\r\n                    //     setLoadingSubmit(true);\r\n                    //     // SetTransporterPersonalInfo(\r\n                    //     // ).then((res) => {\r\n                    //     //     setLoadingSubmit(false);\r\n                    //     //     history.push(\"/business-info\")\r\n                    //     // });\r\n                    // }}\r\n                >\r\n                    {loadingSubmit && <Spinner animation=\"border\" size=\"sm\"/>}\r\n                    Accept\r\n                </Button>\r\n            </Form>\r\n            <Modal show={open} onHide={() => {\r\n                setOpen(false);\r\n            }}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Select areas</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form ref={formRef}>\r\n                        {cities.map((city) => {\r\n                            return (\r\n                                <Form.Check\r\n                                    label={city.Name}\r\n                                    type=\"checkbox\"\r\n                                    id={`${city.Name}-someDays`}\r\n                                    name={city.Name}\r\n                                    key={city.IdCity}\r\n                                    value={city.IdCity}\r\n                                    className=\"togo-checkbox\"\r\n                                    defaultChecked={selectedCities?.get?.(city.IdCity)}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        setOpen(false);\r\n                    }}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        let selected = new Map();\r\n                        Array.from(formRef.current.elements).forEach((elem) => {\r\n                            if (elem.checked) {\r\n                                selected.set(elem.value, {\r\n                                    IdCity: elem.value\r\n                                });\r\n                            }\r\n                        })\r\n                        setSelectedCities(selected);\r\n                        setOpen(false);\r\n                    }}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}