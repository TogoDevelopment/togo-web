{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/Address/Map.jsx\";\n\nimport React, { Component, useState } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Address.css\";\nimport PhoneIcon from \"../../assets/images/phone-call.png\";\nimport AddressIcon from \"../../assets/images/address.png\";\nimport translate from \"../../i18n/translate\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport RoutingMachine from \"./RoutingMachine\";\nvar DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n/* class Address extends Component {\r\n    state = {\r\n        isDisplayed: true\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Address\">\r\n            this.props.address.lat !== undefined && \r\n                    <MapContainer \r\n                    key={JSON.stringify([this.props.address.lat, this.props.address.long])}\r\n                    center={[this.props.address.lat, this.props.address.long]} \r\n                    zoom={15} \r\n                    style={{height: \"300px\"}}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={L.latLng(this.props.address.lat, this.props.address.long)}>\r\n                            <Popup>\r\n                                {this.props.address.otherDetails}\r\n                            </Popup>\r\n                        </Marker>\r\n                        \r\n                </MapContainer>\r\n                <div className=\"\">\r\n                    <img src={PhoneIcon} className=\"m-inline-e-2\" alt=\"phone\" />\r\n                    <div className=\"flex-grow-1\">{translate(\"ORDER_DETAILS.PHONE_NUMBER\")}</div>\r\n                    <div>{this.props.address.phoneCustomer}</div>\r\n                </div>\r\n                <div>\r\n                    <img src={AddressIcon} className=\"m-inline-e-2\" alt=\"address\" />\r\n                    <div className=\"flex-grow-1\">{translate(\"ORDER_DETAILS.OTHER_DETAILS\")}</div>\r\n                    {this.props.address.otherDetails}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} */\n\nvar Map = function Map(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, props.address1.lat !== undefined && props.address2.lat !== undefined && /*#__PURE__*/React.createElement(MapContainer, {\n    key: JSON.stringify([props.address1.lat, props.address1.long]),\n    id: \"mapId\",\n    center: [(parseFloat(props.address1.lat) + parseFloat(props.address2.lat)) / 2, (parseFloat(props.address1.long) + parseFloat(props.address2.long)) / 2],\n    zoom: 15,\n    style: {\n      height: \"300px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: L.latLng(props.address1.lat, props.address1.long),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, props.address1.otherDetails)), /*#__PURE__*/React.createElement(Marker, {\n    position: L.latLng(props.address2.lat, props.address2.long),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, props.address2.otherDetails)))));\n};\n\nexport default Map;\n/* export Map; */","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Address/Map.jsx"],"names":["React","Component","useState","PhoneIcon","AddressIcon","translate","MapContainer","Marker","Popup","TileLayer","L","icon","iconShadow","Button","Modal","RoutingMachine","DefaultIcon","iconUrl","shadowUrl","prototype","options","Map","props","address1","lat","undefined","address2","JSON","stringify","long","parseFloat","height","latLng","otherDetails"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"./Address.css\";\r\nimport PhoneIcon from \"../../assets/images/phone-call.png\";\r\nimport AddressIcon from \"../../assets/images/address.png\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport L from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nimport RoutingMachine from \"./RoutingMachine\";\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n/* class Address extends Component {\r\n    state = {\r\n        isDisplayed: true\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Address\">\r\n            this.props.address.lat !== undefined && \r\n                    <MapContainer \r\n                    key={JSON.stringify([this.props.address.lat, this.props.address.long])}\r\n                    center={[this.props.address.lat, this.props.address.long]} \r\n                    zoom={15} \r\n                    style={{height: \"300px\"}}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={L.latLng(this.props.address.lat, this.props.address.long)}>\r\n                            <Popup>\r\n                                {this.props.address.otherDetails}\r\n                            </Popup>\r\n                        </Marker>\r\n                        \r\n                </MapContainer>\r\n                <div className=\"\">\r\n                    <img src={PhoneIcon} className=\"m-inline-e-2\" alt=\"phone\" />\r\n                    <div className=\"flex-grow-1\">{translate(\"ORDER_DETAILS.PHONE_NUMBER\")}</div>\r\n                    <div>{this.props.address.phoneCustomer}</div>\r\n                </div>\r\n                <div>\r\n                    <img src={AddressIcon} className=\"m-inline-e-2\" alt=\"address\" />\r\n                    <div className=\"flex-grow-1\">{translate(\"ORDER_DETAILS.OTHER_DETAILS\")}</div>\r\n                    {this.props.address.otherDetails}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} */\r\n\r\n\r\nconst Map = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Address\">\r\n                {props.address1.lat !== undefined && props.address2.lat !== undefined &&\r\n                    <MapContainer\r\n                        key={JSON.stringify([props.address1.lat, props.address1.long])}\r\n                        id=\"mapId\"\r\n                        center={[(parseFloat(props.address1.lat) + parseFloat(props.address2.lat))/2, (parseFloat(props.address1.long) + parseFloat(props.address2.long))/2]}\r\n                        zoom={15}\r\n                        style={{ height: \"300px\" }}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        \r\n                        <Marker position={L.latLng(props.address1.lat, props.address1.long)}>\r\n                            <Popup>\r\n                                {props.address1.otherDetails}\r\n                            </Popup>\r\n                        </Marker>\r\n\r\n                        <Marker position={L.latLng(props.address2.lat, props.address2.long)}>\r\n                            <Popup>\r\n                                {props.address2.otherDetails}\r\n                            </Popup>\r\n                        </Marker>\r\n\r\n                        {/* <RoutingMachine lat1={props.address1.lat} lat2={props.address1.long} long1={props.address2.lat} long2={props.address2.long} /> */}\r\n\r\n                    </MapContainer>}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Map;\r\n\r\n/* export Map; */\r\n"]},"metadata":{},"sourceType":"module"}