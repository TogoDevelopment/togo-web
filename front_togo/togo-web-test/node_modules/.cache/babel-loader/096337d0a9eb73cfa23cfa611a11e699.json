{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTime = parseTime;\nexports.parseMeridiem = parseMeridiem;\nexports.composeTime = composeTime;\nvar TIME_PARSE_MERIDIEM = new RegExp(/^(\\d{1,2}?):(\\d{2}?)\\s?(am|pm)$/i);\nvar TIME_PARSE_24 = new RegExp(/^(\\d{1,2}?):(\\d{2}?)$/);\nvar defaultTime = {\n  hour: 12,\n  minute: 30 // parse and normalize time to 24h\n\n};\n\nfunction parseTime(time) {\n  if (time == null) {\n    return defaultTime;\n  }\n\n  var hour = 0;\n  var minute = 0;\n  var meridiem = null; // parse basic numbers from string or object\n\n  if (typeof time === 'string') {\n    // if is string\n    var match = time.match(TIME_PARSE_MERIDIEM);\n\n    if (match) {\n      // 12 hr string\n      hour = parseInt(match[1], 10);\n      minute = parseInt(match[2], 10);\n      meridiem = match[3].toLowerCase();\n    } else {\n      // 24 hr string\n      match = time.match(TIME_PARSE_24);\n\n      if (!match) {\n        throw new Error('Could not parse time (string)');\n      }\n\n      hour = parseInt(match[1], 10);\n      minute = parseInt(match[2], 10);\n    }\n  } else if (typeof time === 'object') {\n    // if is object\n    if (!Number.isInteger(time.hour) || !Number.isInteger(time.minute)) {\n      throw new Error('Time and minute must both be valid integers');\n    }\n\n    hour = time.hour;\n    minute = time.minute;\n\n    if ('meridiem' in time) {\n      meridiem = time.meridiem.toLowerCase();\n    }\n  }\n\n  if (minute > 60) {\n    throw new Error('Minute out of range (> 60)');\n  } // normalize hours\n\n\n  if (meridiem != null) {\n    if (hour > 12) {\n      throw new Error('Hour out of range (> 12)');\n    } // handling the 12 hr conversion\n\n\n    if (meridiem === 'pm' && hour !== 12) {\n      hour += 12;\n    } else if (meridiem === 'am' && hour === 12) {\n      hour = 0;\n    }\n  } else {\n    // handling the 24 hour conversion\n    if (hour > 24) {\n      throw new Error('Hour out of range (> 24)');\n    }\n\n    if (hour === 24) {\n      hour = 0;\n    }\n  }\n\n  return {\n    hour: hour,\n    minute: minute\n  };\n}\n\nfunction parseMeridiem(time) {\n  var parsed = parseTime(time); // assumes time is 0 -> 23, where 0 is midnight\n\n  return parsed.hour >= 12 ? 'pm' : 'am';\n} // formats time output to poss to parent\n\n\nfunction composeTime(hour, minute) {\n  var paddedMinute = ('0' + minute).slice(-2);\n  var hour24 = hour === 24 ? 0 : hour;\n  var meridiem = hour >= 12 ? 'pm' : 'am';\n  var hour12 = hour;\n\n  if (hour > 12) {\n    hour12 = hour - 12;\n  } else if (hour === 0) {\n    hour12 = hour = 12;\n  }\n\n  return {\n    formatted24: \"\".concat(hour24, \":\").concat(paddedMinute),\n    formatted12: \"\".concat(hour12, \":\").concat(paddedMinute, \" \").concat(meridiem),\n    formattedSimple: \"\".concat(hour12, \":\").concat(paddedMinute),\n    hour: hour24,\n    hour12: hour12,\n    minute: minute,\n    meridiem: meridiem\n  };\n}","map":null,"metadata":{},"sourceType":"script"}