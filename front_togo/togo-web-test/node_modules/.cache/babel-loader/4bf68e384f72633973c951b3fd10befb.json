{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _slicedToArray = require(\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.embedDashboard = embedDashboard;\nvar _const = require(\"./const\");\nvar _switchboard = require(\"@superset-ui/switchboard\");\nvar _guestTokenRefresh = require(\"./guestTokenRefresh\");\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// We can swap this out for the actual switchboard package once it gets published\n\n/**\n * Embeds a Superset dashboard into the page using an iframe.\n */\nfunction embedDashboard(_x) {\n  return _embedDashboard.apply(this, arguments);\n}\nfunction _embedDashboard() {\n  _embedDashboard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n    var id, supersetDomain, mountPoint, fetchGuestToken, dashboardUiConfig, _ref$debug, debug, log, calculateConfig, mountIframe, _mountIframe, _yield$Promise$all, _yield$Promise$all2, guestToken, ourPort, refreshGuestToken, _refreshGuestToken, unmount, getScrollSize;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            unmount = function _unmount() {\n              log('unmounting');\n              mountPoint.replaceChildren();\n            };\n            _refreshGuestToken = function _refreshGuestToken3() {\n              _refreshGuestToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                var newGuestToken;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return fetchGuestToken();\n                      case 2:\n                        newGuestToken = _context2.sent;\n                        ourPort.emit('guestToken', {\n                          guestToken: newGuestToken\n                        });\n                        setTimeout(refreshGuestToken, (0, _guestTokenRefresh.getGuestTokenRefreshTiming)(newGuestToken));\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _refreshGuestToken.apply(this, arguments);\n            };\n            refreshGuestToken = function _refreshGuestToken2() {\n              return _refreshGuestToken.apply(this, arguments);\n            };\n            _mountIframe = function _mountIframe3() {\n              _mountIframe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", new Promise(function (resolve) {\n                          var iframe = document.createElement('iframe');\n                          var dashboardConfig = dashboardUiConfig ? \"?uiConfig=\".concat(calculateConfig()) : \"\"; // setup the iframe's sandbox configuration\n\n                          iframe.sandbox.add(\"allow-same-origin\"); // needed for postMessage to work\n\n                          iframe.sandbox.add(\"allow-scripts\"); // obviously the iframe needs scripts\n\n                          iframe.sandbox.add(\"allow-presentation\"); // for fullscreen charts\n\n                          iframe.sandbox.add(\"allow-downloads\"); // for downloading charts as image\n                          // add these ones if it turns out we need them:\n                          // iframe.sandbox.add(\"allow-top-navigation\");\n                          // iframe.sandbox.add(\"allow-forms\");\n                          // add the event listener before setting src, to be 100% sure that we capture the load event\n\n                          iframe.addEventListener('load', function () {\n                            // MessageChannel allows us to send and receive messages smoothly between our window and the iframe\n                            // See https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API\n                            var commsChannel = new MessageChannel();\n                            var ourPort = commsChannel.port1;\n                            var theirPort = commsChannel.port2; // Send one of the message channel ports to the iframe to initialize embedded comms\n                            // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n                            // we know the content window isn't null because we are in the load event handler.\n\n                            iframe.contentWindow.postMessage({\n                              type: _const.IFRAME_COMMS_MESSAGE_TYPE,\n                              handshake: \"port transfer\"\n                            }, supersetDomain, [theirPort]);\n                            log('sent message channel to the iframe'); // return our port from the promise\n\n                            resolve(new _switchboard.Switchboard({\n                              port: ourPort,\n                              name: 'superset-embedded-sdk',\n                              debug: debug\n                            }));\n                          });\n                          iframe.src = \"\".concat(supersetDomain, \"/embedded/\").concat(id).concat(dashboardConfig);\n                          mountPoint.replaceChildren(iframe);\n                          log('placed the iframe');\n                        }));\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _mountIframe.apply(this, arguments);\n            };\n            mountIframe = function _mountIframe2() {\n              return _mountIframe.apply(this, arguments);\n            };\n            calculateConfig = function _calculateConfig() {\n              var configNumber = 0;\n              if (dashboardUiConfig) {\n                if (dashboardUiConfig.hideTitle) {\n                  configNumber += 1;\n                }\n                if (dashboardUiConfig.hideTab) {\n                  configNumber += 2;\n                }\n                if (dashboardUiConfig.hideChartControls) {\n                  configNumber += 8;\n                }\n              }\n              return configNumber;\n            };\n            log = function _log() {\n              if (debug) {\n                var _console;\n                for (var _len = arguments.length, info = new Array(_len), _key = 0; _key < _len; _key++) {\n                  info[_key] = arguments[_key];\n                }\n                (_console = console).debug.apply(_console, [\"[superset-embedded-sdk][dashboard \".concat(id, \"]\")].concat(info));\n              }\n            };\n            id = _ref.id, supersetDomain = _ref.supersetDomain, mountPoint = _ref.mountPoint, fetchGuestToken = _ref.fetchGuestToken, dashboardUiConfig = _ref.dashboardUiConfig, _ref$debug = _ref.debug, debug = _ref$debug === void 0 ? false : _ref$debug;\n            log('embedding');\n            _context3.next = 11;\n            return Promise.all([fetchGuestToken(), mountIframe()]);\n          case 11:\n            _yield$Promise$all = _context3.sent;\n            _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n            guestToken = _yield$Promise$all2[0];\n            ourPort = _yield$Promise$all2[1];\n            ourPort.emit('guestToken', {\n              guestToken: guestToken\n            });\n            log('sent guest token');\n            setTimeout(refreshGuestToken, (0, _guestTokenRefresh.getGuestTokenRefreshTiming)(guestToken));\n            getScrollSize = function getScrollSize() {\n              return ourPort.get('getScrollSize');\n            };\n            return _context3.abrupt(\"return\", {\n              getScrollSize: getScrollSize,\n              unmount: unmount\n            });\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _embedDashboard.apply(this, arguments);\n}","map":{"version":3,"names":["_regeneratorRuntime","require","_slicedToArray","_asyncToGenerator","Object","defineProperty","exports","value","embedDashboard","_const","_switchboard","_guestTokenRefresh","_x","_embedDashboard","apply","arguments","mark","_callee3","_ref","id","supersetDomain","mountPoint","fetchGuestToken","dashboardUiConfig","_ref$debug","debug","log","calculateConfig","mountIframe","_mountIframe","_yield$Promise$all","_yield$Promise$all2","guestToken","ourPort","refreshGuestToken","_refreshGuestToken","unmount","getScrollSize","wrap","_callee3$","_context3","prev","next","_unmount","replaceChildren","_refreshGuestToken3","_callee2","newGuestToken","_callee2$","_context2","sent","emit","setTimeout","getGuestTokenRefreshTiming","stop","_refreshGuestToken2","_mountIframe3","_callee","_callee$","_context","abrupt","Promise","resolve","iframe","document","createElement","dashboardConfig","concat","sandbox","add","addEventListener","commsChannel","MessageChannel","port1","theirPort","port2","contentWindow","postMessage","type","IFRAME_COMMS_MESSAGE_TYPE","handshake","Switchboard","port","name","src","_mountIframe2","_calculateConfig","configNumber","hideTitle","hideTab","hideChartControls","_log","_console","_len","length","info","Array","_key","console","all","get"],"sources":["/home/system/togo-web-test/node_modules/@superset-ui/embedded-sdk/lib/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.embedDashboard = embedDashboard;\n\nvar _const = require(\"./const\");\n\nvar _switchboard = require(\"@superset-ui/switchboard\");\n\nvar _guestTokenRefresh = require(\"./guestTokenRefresh\");\n\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// We can swap this out for the actual switchboard package once it gets published\n\n/**\n * Embeds a Superset dashboard into the page using an iframe.\n */\nasync function embedDashboard(_ref) {\n  let {\n    id,\n    supersetDomain,\n    mountPoint,\n    fetchGuestToken,\n    dashboardUiConfig,\n    debug = false\n  } = _ref;\n\n  function log() {\n    if (debug) {\n      for (var _len = arguments.length, info = new Array(_len), _key = 0; _key < _len; _key++) {\n        info[_key] = arguments[_key];\n      }\n\n      console.debug(`[superset-embedded-sdk][dashboard ${id}]`, ...info);\n    }\n  }\n\n  log('embedding');\n\n  function calculateConfig() {\n    let configNumber = 0;\n\n    if (dashboardUiConfig) {\n      if (dashboardUiConfig.hideTitle) {\n        configNumber += 1;\n      }\n\n      if (dashboardUiConfig.hideTab) {\n        configNumber += 2;\n      }\n\n      if (dashboardUiConfig.hideChartControls) {\n        configNumber += 8;\n      }\n    }\n\n    return configNumber;\n  }\n\n  async function mountIframe() {\n    return new Promise(resolve => {\n      const iframe = document.createElement('iframe');\n      const dashboardConfig = dashboardUiConfig ? `?uiConfig=${calculateConfig()}` : \"\"; // setup the iframe's sandbox configuration\n\n      iframe.sandbox.add(\"allow-same-origin\"); // needed for postMessage to work\n\n      iframe.sandbox.add(\"allow-scripts\"); // obviously the iframe needs scripts\n\n      iframe.sandbox.add(\"allow-presentation\"); // for fullscreen charts\n\n      iframe.sandbox.add(\"allow-downloads\"); // for downloading charts as image\n      // add these ones if it turns out we need them:\n      // iframe.sandbox.add(\"allow-top-navigation\");\n      // iframe.sandbox.add(\"allow-forms\");\n      // add the event listener before setting src, to be 100% sure that we capture the load event\n\n      iframe.addEventListener('load', () => {\n        // MessageChannel allows us to send and receive messages smoothly between our window and the iframe\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API\n        const commsChannel = new MessageChannel();\n        const ourPort = commsChannel.port1;\n        const theirPort = commsChannel.port2; // Send one of the message channel ports to the iframe to initialize embedded comms\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        // we know the content window isn't null because we are in the load event handler.\n\n        iframe.contentWindow.postMessage({\n          type: _const.IFRAME_COMMS_MESSAGE_TYPE,\n          handshake: \"port transfer\"\n        }, supersetDomain, [theirPort]);\n        log('sent message channel to the iframe'); // return our port from the promise\n\n        resolve(new _switchboard.Switchboard({\n          port: ourPort,\n          name: 'superset-embedded-sdk',\n          debug\n        }));\n      });\n      iframe.src = `${supersetDomain}/embedded/${id}${dashboardConfig}`;\n      mountPoint.replaceChildren(iframe);\n      log('placed the iframe');\n    });\n  }\n\n  const [guestToken, ourPort] = await Promise.all([fetchGuestToken(), mountIframe()]);\n  ourPort.emit('guestToken', {\n    guestToken\n  });\n  log('sent guest token');\n\n  async function refreshGuestToken() {\n    const newGuestToken = await fetchGuestToken();\n    ourPort.emit('guestToken', {\n      guestToken: newGuestToken\n    });\n    setTimeout(refreshGuestToken, (0, _guestTokenRefresh.getGuestTokenRefreshTiming)(newGuestToken));\n  }\n\n  setTimeout(refreshGuestToken, (0, _guestTokenRefresh.getGuestTokenRefreshTiming)(guestToken));\n\n  function unmount() {\n    log('unmounting');\n    mountPoint.replaceChildren();\n  }\n\n  const getScrollSize = () => ourPort.get('getScrollSize');\n\n  return {\n    getScrollSize,\n    unmount\n  };\n}"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA;AAAA,IAAAC,cAAA,GAAAD,OAAA;AAAA,IAAAE,iBAAA,GAAAF,OAAA;AAEbG,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,cAAc,GAAGA,cAAc;AAEvC,IAAIC,MAAM,GAAGR,OAAO,CAAC,SAAS,CAAC;AAE/B,IAAIS,YAAY,GAAGT,OAAO,CAAC,0BAA0B,CAAC;AAEtD,IAAIU,kBAAkB,GAAGV,OAAO,CAAC,qBAAqB,CAAC;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA,SAGeO,cAAcA,CAAAI,EAAA;EAAA,OAAAC,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,gBAAA;EAAAA,eAAA,GAAAV,iBAAA,eAAAH,mBAAA,CAAAgB,IAAA,CAA7B,SAAAC,SAA8BC,IAAI;IAAA,IAAAC,EAAA,EAAAC,cAAA,EAAAC,UAAA,EAAAC,eAAA,EAAAC,iBAAA,EAAAC,UAAA,EAAAC,KAAA,EAUvBC,GAAG,EAYHC,eAAe,EAoBTC,WAAW,EAAAC,YAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,UAAA,EAAAC,OAAA,EAkDXC,iBAAiB,EAAAC,kBAAA,EAUvBC,OAAO,EAAAC,aAAA;IAAA,OAAArC,mBAAA,CAAAsC,IAAA,UAAAC,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;UAAA;YAAPN,OAAO,YAAAO,SAAA,EAAG;cACjBjB,GAAG,CAAC,YAAY,CAAC;cACjBL,UAAU,CAACuB,eAAe,CAAC,CAAC;YAC9B,CAAC;YAAAT,kBAAA,YAAAU,oBAAA;cAAAV,kBAAA,GAAAhC,iBAAA,eAAAH,mBAAA,CAAAgB,IAAA,CAbD,SAAA8B,SAAA;gBAAA,IAAAC,aAAA;gBAAA,OAAA/C,mBAAA,CAAAsC,IAAA,UAAAU,UAAAC,SAAA;kBAAA;oBAAA,QAAAA,SAAA,CAAAR,IAAA,GAAAQ,SAAA,CAAAP,IAAA;sBAAA;wBAAAO,SAAA,CAAAP,IAAA;wBAAA,OAC8BpB,eAAe,CAAC,CAAC;sBAAA;wBAAvCyB,aAAa,GAAAE,SAAA,CAAAC,IAAA;wBACnBjB,OAAO,CAACkB,IAAI,CAAC,YAAY,EAAE;0BACzBnB,UAAU,EAAEe;wBACd,CAAC,CAAC;wBACFK,UAAU,CAAClB,iBAAiB,EAAE,CAAC,CAAC,EAAEvB,kBAAkB,CAAC0C,0BAA0B,EAAEN,aAAa,CAAC,CAAC;sBAAC;sBAAA;wBAAA,OAAAE,SAAA,CAAAK,IAAA;oBAAA;kBAAA;gBAAA,GAAAR,QAAA;cAAA,CAClG;cAAA,OAAAX,kBAAA,CAAArB,KAAA,OAAAC,SAAA;YAAA;YANcmB,iBAAiB,YAAAqB,oBAAA;cAAA,OAAApB,kBAAA,CAAArB,KAAA,OAAAC,SAAA;YAAA;YAAAc,YAAA,YAAA2B,cAAA;cAAA3B,YAAA,GAAA1B,iBAAA,eAAAH,mBAAA,CAAAgB,IAAA,CAlDhC,SAAAyC,QAAA;gBAAA,OAAAzD,mBAAA,CAAAsC,IAAA,UAAAoB,SAAAC,QAAA;kBAAA;oBAAA,QAAAA,QAAA,CAAAlB,IAAA,GAAAkB,QAAA,CAAAjB,IAAA;sBAAA;wBAAA,OAAAiB,QAAA,CAAAC,MAAA,WACS,IAAIC,OAAO,CAAC,UAAAC,OAAO,EAAI;0BAC5B,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;0BAC/C,IAAMC,eAAe,GAAG3C,iBAAiB,gBAAA4C,MAAA,CAAgBxC,eAAe,CAAC,CAAC,IAAK,EAAE,CAAC,CAAC;;0BAEnFoC,MAAM,CAACK,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;;0BAEzCN,MAAM,CAACK,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;;0BAErCN,MAAM,CAACK,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAC,CAAC;;0BAE1CN,MAAM,CAACK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC;0BACvC;0BACA;0BACA;0BACA;;0BAEAN,MAAM,CAACO,gBAAgB,CAAC,MAAM,EAAE,YAAM;4BACpC;4BACA;4BACA,IAAMC,YAAY,GAAG,IAAIC,cAAc,CAAC,CAAC;4BACzC,IAAMvC,OAAO,GAAGsC,YAAY,CAACE,KAAK;4BAClC,IAAMC,SAAS,GAAGH,YAAY,CAACI,KAAK,CAAC,CAAC;4BACtC;4BACA;;4BAEAZ,MAAM,CAACa,aAAa,CAACC,WAAW,CAAC;8BAC/BC,IAAI,EAAErE,MAAM,CAACsE,yBAAyB;8BACtCC,SAAS,EAAE;4BACb,CAAC,EAAE5D,cAAc,EAAE,CAACsD,SAAS,CAAC,CAAC;4BAC/BhD,GAAG,CAAC,oCAAoC,CAAC,CAAC,CAAC;;4BAE3CoC,OAAO,CAAC,IAAIpD,YAAY,CAACuE,WAAW,CAAC;8BACnCC,IAAI,EAAEjD,OAAO;8BACbkD,IAAI,EAAE,uBAAuB;8BAC7B1D,KAAK,EAALA;4BACF,CAAC,CAAC,CAAC;0BACL,CAAC,CAAC;0BACFsC,MAAM,CAACqB,GAAG,MAAAjB,MAAA,CAAM/C,cAAc,gBAAA+C,MAAA,CAAahD,EAAE,EAAAgD,MAAA,CAAGD,eAAe,CAAE;0BACjE7C,UAAU,CAACuB,eAAe,CAACmB,MAAM,CAAC;0BAClCrC,GAAG,CAAC,mBAAmB,CAAC;wBAC1B,CAAC,CAAC;sBAAA;sBAAA;wBAAA,OAAAiC,QAAA,CAAAL,IAAA;oBAAA;kBAAA;gBAAA,GAAAG,OAAA;cAAA,CACH;cAAA,OAAA5B,YAAA,CAAAf,KAAA,OAAAC,SAAA;YAAA;YA1Cca,WAAW,YAAAyD,cAAA;cAAA,OAAAxD,YAAA,CAAAf,KAAA,OAAAC,SAAA;YAAA;YApBjBY,eAAe,YAAA2D,iBAAA,EAAG;cACzB,IAAIC,YAAY,GAAG,CAAC;cAEpB,IAAIhE,iBAAiB,EAAE;gBACrB,IAAIA,iBAAiB,CAACiE,SAAS,EAAE;kBAC/BD,YAAY,IAAI,CAAC;gBACnB;gBAEA,IAAIhE,iBAAiB,CAACkE,OAAO,EAAE;kBAC7BF,YAAY,IAAI,CAAC;gBACnB;gBAEA,IAAIhE,iBAAiB,CAACmE,iBAAiB,EAAE;kBACvCH,YAAY,IAAI,CAAC;gBACnB;cACF;cAEA,OAAOA,YAAY;YACrB,CAAC;YA9BQ7D,GAAG,YAAAiE,KAAA,EAAG;cACb,IAAIlE,KAAK,EAAE;gBAAA,IAAAmE,QAAA;gBACT,KAAK,IAAIC,IAAI,GAAG9E,SAAS,CAAC+E,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACH,IAAI,CAAC,EAAEI,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGJ,IAAI,EAAEI,IAAI,EAAE,EAAE;kBACvFF,IAAI,CAACE,IAAI,CAAC,GAAGlF,SAAS,CAACkF,IAAI,CAAC;gBAC9B;gBAEA,CAAAL,QAAA,GAAAM,OAAO,EAACzE,KAAK,CAAAX,KAAA,CAAA8E,QAAA,wCAAAzB,MAAA,CAAsChD,EAAE,QAAAgD,MAAA,CAAQ4B,IAAI,EAAC;cACpE;YACF,CAAC;YAhBC5E,EAAE,GAMAD,IAAI,CANNC,EAAE,EACFC,cAAc,GAKZF,IAAI,CALNE,cAAc,EACdC,UAAU,GAIRH,IAAI,CAJNG,UAAU,EACVC,eAAe,GAGbJ,IAAI,CAHNI,eAAe,EACfC,iBAAiB,GAEfL,IAAI,CAFNK,iBAAiB,EAAAC,UAAA,GAEfN,IAAI,CADNO,KAAK,EAALA,KAAK,GAAAD,UAAA,cAAG,KAAK,GAAAA,UAAA;YAafE,GAAG,CAAC,WAAW,CAAC;YAACc,SAAA,CAAAE,IAAA;YAAA,OAkEmBmB,OAAO,CAACsC,GAAG,CAAC,CAAC7E,eAAe,CAAC,CAAC,EAAEM,WAAW,CAAC,CAAC,CAAC,CAAC;UAAA;YAAAE,kBAAA,GAAAU,SAAA,CAAAU,IAAA;YAAAnB,mBAAA,GAAA7B,cAAA,CAAA4B,kBAAA;YAA5EE,UAAU,GAAAD,mBAAA;YAAEE,OAAO,GAAAF,mBAAA;YAC1BE,OAAO,CAACkB,IAAI,CAAC,YAAY,EAAE;cACzBnB,UAAU,EAAVA;YACF,CAAC,CAAC;YACFN,GAAG,CAAC,kBAAkB,CAAC;YAUvB0B,UAAU,CAAClB,iBAAiB,EAAE,CAAC,CAAC,EAAEvB,kBAAkB,CAAC0C,0BAA0B,EAAErB,UAAU,CAAC,CAAC;YAOvFK,aAAa,GAAG,SAAhBA,aAAaA,CAAA;cAAA,OAASJ,OAAO,CAACmE,GAAG,CAAC,eAAe,CAAC;YAAA;YAAA,OAAA5D,SAAA,CAAAoB,MAAA,WAEjD;cACLvB,aAAa,EAAbA,aAAa;cACbD,OAAO,EAAPA;YACF,CAAC;UAAA;UAAA;YAAA,OAAAI,SAAA,CAAAc,IAAA;QAAA;MAAA;IAAA,GAAArC,QAAA;EAAA,CACF;EAAA,OAAAJ,eAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"script"}