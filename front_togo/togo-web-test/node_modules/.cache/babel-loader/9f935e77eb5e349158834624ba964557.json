{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/TestComponent.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Form, Row, Col, Container, Button, ListGroup } from 'react-bootstrap';\nimport { tempAddCity, tempGetCities } from '../APIs/LoginAPIs';\nexport default function TestComponent() {\n  var _this = this;\n\n  /* const textRef = useRef();\r\n    const [listAreas, setListAreas] = useState([]);\r\n    const cleanHandler = () => {\r\n      let tempStr = textRef.current.value;\r\n        let tempArr = tempStr.split(\"<option value=\\\"\\\">\")[1].split(\"</option>\");\r\n        let resArr = [];\r\n        for (let i = 1; i < tempArr.length - 1; i++) {\r\n          let tempNumber = tempArr[i].split(\"\\\">\")[0].split(\"\\\"\")[1];\r\n          let tempName = tempArr[i].split(\"\\\">\")[1];\r\n          resArr.push({ number: tempNumber, name: tempName });\r\n            tempAddCity(tempNumber, tempName).then((res) => {\r\n              if (res.data != \"enable editing!\")\r\n                  console.log(res.data);\r\n          })\r\n      }\r\n        setListAreas(resArr);\r\n  } */\n  var _useState = useState([{\n    id: 1,\n    name: \"a\"\n  }, {\n    id: 2,\n    name: \"b\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      provinces = _useState2[0],\n      setProvinces = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      governorate = _useState4[0],\n      setGovernorate = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cities = _useState6[0],\n      setCities = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      areas = _useState8[0],\n      setAreas = _useState8[1];\n\n  useEffect(function () {\n    // provinces, governorates, cities, areas\n    tempGetCities(\"provinces\", -1, 1).then(function (res) {\n      // console.log(res.data.server_response);\n      setProvinces(res.data.server_response);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"m-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Provinces:\"), /*#__PURE__*/React.createElement(Form.Select, {\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Select Provice\"), provinces.map(function (item, index) {\n    /*#__PURE__*/\n    React.createElement(\"option\", {\n      key: index,\n      value: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Governorates:\"), /*#__PURE__*/React.createElement(Form.Select, {\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Select Governorate\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"One\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Two\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Three\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Cities:\"), /*#__PURE__*/React.createElement(Form.Select, {\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Select City\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \"One\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Two\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Three\"))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Areas:\"), /*#__PURE__*/React.createElement(Form.Select, {\n    \"aria-label\": \"Default select example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"Select Area\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"One\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, \"Two\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, \"Three\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/TestComponent.jsx"],"names":["React","useEffect","useRef","useState","Form","Row","Col","Container","Button","ListGroup","tempAddCity","tempGetCities","TestComponent","id","name","provinces","setProvinces","governorate","setGovernorate","cities","setCities","areas","setAreas","then","res","data","server_response","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Form, Row, Col, Container, Button, ListGroup } from 'react-bootstrap';\r\nimport { tempAddCity, tempGetCities } from '../APIs/LoginAPIs';\r\n\r\nexport default function TestComponent() {\r\n\r\n    /* const textRef = useRef();\r\n\r\n    const [listAreas, setListAreas] = useState([]);\r\n\r\n    const cleanHandler = () => {\r\n        let tempStr = textRef.current.value;\r\n\r\n        let tempArr = tempStr.split(\"<option value=\\\"\\\">\")[1].split(\"</option>\");\r\n\r\n        let resArr = [];\r\n\r\n        for (let i = 1; i < tempArr.length - 1; i++) {\r\n            let tempNumber = tempArr[i].split(\"\\\">\")[0].split(\"\\\"\")[1];\r\n            let tempName = tempArr[i].split(\"\\\">\")[1];\r\n            resArr.push({ number: tempNumber, name: tempName });\r\n\r\n            tempAddCity(tempNumber, tempName).then((res) => {\r\n                if (res.data != \"enable editing!\")\r\n                    console.log(res.data);\r\n            })\r\n        }\r\n\r\n        setListAreas(resArr);\r\n    } */\r\n\r\n    const [provinces, setProvinces] = useState([{id: 1, name: \"a\"}, {id: 2, name: \"b\"}]);\r\n    const [governorate, setGovernorate] = useState([]);\r\n    const [cities, setCities] = useState([]);\r\n    const [areas, setAreas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // provinces, governorates, cities, areas\r\n        tempGetCities(\"provinces\", -1, 1).then((res) => {\r\n            // console.log(res.data.server_response);\r\n            setProvinces(res.data.server_response);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Container fluid className=\"m-5\">\r\n            {/* <Row>\r\n                <Col className=\"d-flex justify-content-center\"><span className=\"h1\">This is a test component!</span></Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Enter options to clear:</Form.Label>\r\n                        <Form.Control style={{ height: \"300px\", overflowY: \"scroll\" }} as=\"textarea\" rows={100} ref={textRef} />\r\n                    </Form.Group>\r\n                </Col>\r\n\r\n                <Col lg={1}>\r\n                    <Button className=\"mt-5\" onClick={cleanHandler}>\r\n                        clean\r\n                    </Button>\r\n                </Col>\r\n\r\n                <Col lg={5}>\r\n                    <ListGroup className=\"mt-4\">\r\n                        {\r\n                            listAreas.map((item, index) => {\r\n                                return <ListGroup.Item key={index}>{item.number + \" - \" + item.name}</ListGroup.Item>\r\n                            })\r\n                        }\r\n                    </ListGroup>\r\n                </Col>\r\n            </Row> */}\r\n            <Row>\r\n                <Col>\r\n                    <Form.Label>Provinces:</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\">\r\n                        <option>Select Provice</option>\r\n                        {\r\n                            provinces.map((item, index) => {\r\n                                <option key={index} value={item.id}>{item.name}</option>\r\n                            })\r\n                        }\r\n                    </Form.Select>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Governorates:</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\">\r\n                        <option>Select Governorate</option>\r\n                        <option value=\"1\">One</option>\r\n                        <option value=\"2\">Two</option>\r\n                        <option value=\"3\">Three</option>\r\n                    </Form.Select>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Cities:</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\">\r\n                        <option>Select City</option>\r\n                        <option value=\"1\">One</option>\r\n                        <option value=\"2\">Two</option>\r\n                        <option value=\"3\">Three</option>\r\n                    </Form.Select>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Label>Areas:</Form.Label>\r\n                    <Form.Select aria-label=\"Default select example\">\r\n                        <option>Select Area</option>\r\n                        <option value=\"1\">One</option>\r\n                        <option value=\"2\">Two</option>\r\n                        <option value=\"3\">Three</option>\r\n                    </Form.Select>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}