{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormControl}from\"react-bootstrap\";import translate from\"../i18n/translate\";import React,{useCallback,useEffect,useRef,useState}from\"react\";import Button from\"react-bootstrap/Button\";import{AddTeamMember,CreateTeam,DeleteMember,DeleteTeam,GetTeam,GetTransporterTeam,UpdateTeam}from\"./APIs/OrdersAPIs\";import{useIntl}from\"react-intl\";import{Box}from\"@chakra-ui/layout\";import DynamicTable from\"./DynamicTable/DynamicTable\";import DeleteTeamDialog from\"./DeleteTeam\";import TransferBtn from\"./TransferBtn\";import{EditTeamDialog}from\"./EditTeamDialog\";import{getWallet}from\"../APIs/ProfileAPIs\";import{setWallet}from\"../Actions/GeneralActions\";import{useDispatch}from\"react-redux\";export default function AdminBoard(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),teams=_useState2[0],setTeams=_useState2[1];var _useState3=useState([//{FullName: \"test\", PhoneNumber: \"sdfsdf\", TeamStatus: \"sdf\", TransporterId: \"44\"}\n]),_useState4=_slicedToArray(_useState3,2),members=_useState4[0],setMembers=_useState4[1];var _useState5=useState(-1),_useState6=_slicedToArray(_useState5,2),selected=_useState6[0],setSelected=_useState6[1];var intl=useIntl();var createRef=useRef();var ref=useRef();var getTrans=useCallback(function(){return GetTransporterTeam().then(function(res){setTeams(res.data.server_response);return res.data.server_response;});},[]);var getMembers=useCallback(function(){var _teams$selected;return GetTeam((_teams$selected=teams[selected])===null||_teams$selected===void 0?void 0:_teams$selected.id).then(function(res){setMembers(res.data.server_response);return res.data.server_response;});},[teams,selected]);var columns=[{label:translate(\"ADMIN.TEAM_NAME\"),key:\"Name\"},{label:\"\",key:\"id\",format:function format(_ref){var id=_ref.id,Name=_ref.Name;return/*#__PURE__*/React.createElement(DeleteTeamDialog,{teamName:Name,onConfirm:function onConfirm(){DeleteTeam(id).then(function(){getTrans();});}});}},{label:\"\",key:\"id\",format:function format(_ref2){var id=_ref2.id,Name=_ref2.Name;return/*#__PURE__*/React.createElement(EditTeamDialog,{teamName:Name,onConfirm:function onConfirm(teamName){UpdateTeam(teamName,id).then(function(){getTrans();});}});}}];var dispatch=useDispatch();var membersColumns=[{label:translate(\"ADMIN.MEMBER_NAME\"),key:\"FullName\"},{label:translate(\"ADMIN.MOBILE_NUMBER\"),key:\"PhoneNumber\"},{label:translate(\"ADMIN.STATUS\"),key:\"TeamStatus\"},//{label: translate(\"ADMIN.BALANCE\"), key: \"Balance\"},\n{label:\"\",key:\"TransporterId\",format:function format(_ref3){var TransporterId=_ref3.TransporterId,FullName=_ref3.FullName;return/*#__PURE__*/React.createElement(DeleteTeamDialog,{teamName:FullName,onConfirm:function onConfirm(){DeleteMember(TransporterId).then(function(){getMembers();});}});}},{label:\"\",key:\"TransporterId\",format:function format(_ref4){var TransporterId=_ref4.TransporterId;return/*#__PURE__*/React.createElement(TransferBtn,{TransporterId:TransporterId,onSuccess:function onSuccess(){getMembers().then(function(){getWallet().then(function(_ref5){var server_response=_ref5.data.server_response;dispatch(setWallet(server_response[0].TransporterBalance));});});}});}}];useEffect(function(){getTrans().then(function(server_response){setSelected(server_response.length?0:-1);});},[]);useEffect(function(){if(selected!==-1){getMembers();}},[selected]);return/*#__PURE__*/React.createElement(\"div\",{style:{display:\"block\",width:\"90%\",margin:\"0 auto\"}},/*#__PURE__*/React.createElement(Box,{w:\"40%\",d:\"inline-block\",borderInlineEnd:\"1px solid #dee2e6\",paddingInlineEnd:\"1%\"},/*#__PURE__*/React.createElement(Box,{d:\"flex\",borderBottom:\"1px solid #dee2e6\",pb:\"10px\",mb:\"10px\"},/*#__PURE__*/React.createElement(FormControl,{ref:createRef,defaultValue:\"\",style:{flex:\"1\",marginInlineEnd:\"10px\"},placeholder:intl.formatMessage({id:\"ADMIN.ENTER_TEAM_NAME\"})}),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:function onClick(){if(createRef.current.value.trim()===\"\"){return;}CreateTeam(createRef.current.value).then(function(){GetTransporterTeam().then(function(res){setTeams(res.data.server_response);createRef.current.value=\"\";});});}},translate(\"ADMIN.CREATE_TEAM\"))),/*#__PURE__*/React.createElement(DynamicTable,{columns:columns,data:teams,onRowSelect:function onRowSelect(info,selectedIdx){setSelected(selectedIdx);},selected:selected})),/*#__PURE__*/React.createElement(Box,{w:\"59%\",d:\"inline-block\",verticalAlign:\"top\",marginInlineStart:\"1%\"},/*#__PURE__*/React.createElement(Box,{d:\"flex\",borderBottom:\"1px solid #dee2e6\",pb:\"10px\",mb:\"10px\"},/*#__PURE__*/React.createElement(FormControl,{ref:ref,defaultValue:\"\",style:{flex:\"1\",marginInlineEnd:\"10px\"},placeholder:intl.formatMessage({id:\"ADMIN.ENTER_MEMBER_NAME\"}),disabled:selected===-1}),/*#__PURE__*/React.createElement(Button,{variant:\"primary\",onClick:function onClick(){if(ref.current.value.trim()===\"\"){return;}AddTeamMember(teams[selected].id,ref.current.value).then(function(){GetTeam(teams[selected].id).then(function(res){setMembers(res.data.server_response);});});ref.current.value=\"\";},disabled:selected===-1},translate(\"ADMIN.ADD_MEMBER\"))),/*#__PURE__*/React.createElement(DynamicTable,{columns:membersColumns,data:members})));}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/AdminBoard.jsx"],"names":["FormControl","translate","React","useCallback","useEffect","useRef","useState","Button","AddTeamMember","CreateTeam","DeleteMember","DeleteTeam","GetTeam","GetTransporterTeam","UpdateTeam","useIntl","Box","DynamicTable","DeleteTeamDialog","TransferBtn","EditTeamDialog","getWallet","setWallet","useDispatch","AdminBoard","teams","setTeams","members","setMembers","selected","setSelected","intl","createRef","ref","getTrans","then","res","data","server_response","getMembers","id","columns","label","key","format","Name","teamName","dispatch","membersColumns","TransporterId","FullName","TransporterBalance","length","display","width","margin","flex","marginInlineEnd","formatMessage","current","value","trim","info","selectedIdx"],"mappings":"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","sourcesContent":["import { FormControl } from \"react-bootstrap\";\r\nimport translate from \"../i18n/translate\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { AddTeamMember, CreateTeam, DeleteMember, DeleteTeam, GetTeam, GetTransporterTeam, UpdateTeam } from \"./APIs/OrdersAPIs\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport DynamicTable from \"./DynamicTable/DynamicTable\";\r\nimport DeleteTeamDialog from \"./DeleteTeam\";\r\nimport TransferBtn from \"./TransferBtn\";\r\nimport { EditTeamDialog } from \"./EditTeamDialog\";\r\nimport { getWallet } from \"../APIs/ProfileAPIs\";\r\nimport { setWallet } from \"../Actions/GeneralActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function AdminBoard(){\r\n    const [teams, setTeams] = useState([]);\r\n    const [members, setMembers] = useState([\r\n        //{FullName: \"test\", PhoneNumber: \"sdfsdf\", TeamStatus: \"sdf\", TransporterId: \"44\"}\r\n    ]);\r\n    const [selected, setSelected] = useState(-1);\r\n    const intl = useIntl();\r\n    const createRef = useRef();\r\n    const ref = useRef();\r\n    const getTrans = useCallback(()=>{\r\n        return GetTransporterTeam().then((res)=>{\r\n            setTeams(res.data.server_response);\r\n            return res.data.server_response;\r\n        });\r\n    }, []);\r\n    const getMembers = useCallback(()=>{\r\n        return GetTeam(teams[selected]?.id).then((res) => {\r\n            setMembers(res.data.server_response);\r\n            return res.data.server_response;\r\n        });\r\n    }, [teams, selected]);\r\n    const columns = [\r\n        {label: translate(\"ADMIN.TEAM_NAME\"), key: \"Name\"},\r\n        {label: \"\", key: \"id\", format: ({id, Name}) => {\r\n            return <DeleteTeamDialog teamName={Name} onConfirm={()=>{\r\n                DeleteTeam(id).then(()=>{\r\n                     getTrans();\r\n                });}\r\n            } \r\n            />\r\n        }},\r\n        {label: \"\", key: \"id\", format: ({id, Name})=>{\r\n            return (\r\n            <EditTeamDialog teamName={Name} onConfirm={(teamName)=>{\r\n                UpdateTeam(teamName, id).then(()=>{\r\n                    getTrans();\r\n                });\r\n            }} />\r\n            )\r\n        }}\r\n    ];\r\n    const dispatch = useDispatch();\r\n    const membersColumns = [\r\n        {label: translate(\"ADMIN.MEMBER_NAME\"), key: \"FullName\"},\r\n        {label: translate(\"ADMIN.MOBILE_NUMBER\"), key: \"PhoneNumber\"}, \r\n        {label: translate(\"ADMIN.STATUS\"), key: \"TeamStatus\"},\r\n        //{label: translate(\"ADMIN.BALANCE\"), key: \"Balance\"},\r\n        {label: \"\", key: \"TransporterId\", format: ({TransporterId, FullName})=>{\r\n            return <DeleteTeamDialog teamName={FullName} onConfirm={()=>{\r\n                DeleteMember(TransporterId).then(()=>{\r\n                    getMembers();\r\n                });\r\n            }}\r\n            />\r\n        }},\r\n        {label: \"\", key: \"TransporterId\", format: ({TransporterId})=>{\r\n            return <TransferBtn TransporterId={TransporterId} onSuccess={()=>{\r\n                getMembers().then(()=>{\r\n                    getWallet().then(({data: {server_response}}) => {\r\n                        dispatch(setWallet(server_response[0].TransporterBalance));\r\n                    })\r\n                })\r\n            }} />\r\n        }}\r\n    ];\r\n    \r\n    useEffect(()=>{\r\n        getTrans().then((server_response)=>{\r\n            setSelected(server_response.length ? 0 : -1);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(selected !== -1){\r\n            getMembers();\r\n        }\r\n    }, [selected]);\r\n\r\n    return (\r\n        <div style={{display: \"block\", width: \"90%\", margin: \"0 auto\"}}>\r\n            <Box w=\"40%\" d=\"inline-block\" borderInlineEnd=\"1px solid #dee2e6\" paddingInlineEnd=\"1%\">\r\n                <Box d=\"flex\" borderBottom=\"1px solid #dee2e6\" pb=\"10px\" mb=\"10px\">\r\n                    <FormControl\r\n                        ref={createRef}\r\n                        defaultValue=\"\"\r\n                        style={{flex: \"1\", marginInlineEnd: \"10px\"}}\r\n                        placeholder={intl.formatMessage({id:\"ADMIN.ENTER_TEAM_NAME\"})}\r\n                    />\r\n                    \r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            if(createRef.current.value.trim() === \"\"){\r\n                                return;\r\n                            }\r\n                            CreateTeam(createRef.current.value).then(()=>{\r\n                                GetTransporterTeam().then((res)=>{\r\n                                    setTeams(res.data.server_response);\r\n                                    createRef.current.value = \"\";\r\n                                });\r\n                            });\r\n                        }}\r\n                    >\r\n                        {translate(\"ADMIN.CREATE_TEAM\")}\r\n                    </Button>\r\n                </Box>\r\n                <DynamicTable \r\n                    columns={columns} \r\n                    data={teams} \r\n                    onRowSelect={(info, selectedIdx)=>{\r\n                        setSelected(selectedIdx);\r\n                    }}\r\n                    selected={selected}\r\n                />\r\n            </Box>\r\n            <Box w=\"59%\" d=\"inline-block\" verticalAlign=\"top\" marginInlineStart=\"1%\">\r\n                <Box d=\"flex\" borderBottom=\"1px solid #dee2e6\" pb=\"10px\" mb=\"10px\">\r\n                    <FormControl\r\n                        ref={ref}\r\n                        defaultValue=\"\"\r\n                        style={{flex: \"1\", marginInlineEnd: \"10px\"}}\r\n                        placeholder={intl.formatMessage({id:\"ADMIN.ENTER_MEMBER_NAME\"})}\r\n                        disabled={selected === -1}\r\n                    />\r\n                    \r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={()=>{\r\n                            if(ref.current.value.trim() === \"\"){\r\n                                return;\r\n                            }\r\n                            AddTeamMember(teams[selected].id, ref.current.value).then(() => {\r\n                                GetTeam(teams[selected].id).then((res) => {\r\n                                    setMembers(res.data.server_response);\r\n                                });\r\n                            });\r\n                            ref.current.value = \"\";\r\n                        }}\r\n                        disabled={selected === -1}\r\n                    >\r\n                        {translate(\"ADMIN.ADD_MEMBER\")}\r\n                    </Button>\r\n                </Box>\r\n                <DynamicTable columns={membersColumns} data={members} />\r\n            </Box>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}