{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from\"react\";import'./OrdersTabularView.css';import translate from\"../../i18n/translate\";import{Link}from\"react-router-dom\";import{CancelOrder}from\"../OrdersManager/CancelOrder\";import DynamicTable from\"../DynamicTable/DynamicTable\";import{isTransporter,isTransporterMaster}from\"../../Util\";export var PackageTypes={\"1\":\"FOOD\",\"2\":\"SMALL_PACKAGE_AND_ENVELOPS\",\"3\":\"MEDIUM_PACKAGE\",\"4\":\"LARGE_PACKAGE\"};export var DeliveryTypes={\"1\":\"DELIVERY\",\"2\":\"COD\",\"3\":\"PICKUP\",\"4\":\"PAP\"};export var deliverFormatter=function deliverFormatter(data){if(DeliveryTypes[parseInt(data.DeliveryWays)]){return translate(\"ORDERS.\"+DeliveryTypes[parseInt(data.DeliveryWays)]);}return\"\";};export var packageFormatter=function packageFormatter(data){if(PackageTypes[parseInt(data.PackageType)]){return translate(\"ORDERS.\"+PackageTypes[parseInt(data.PackageType)]);}return\"\";};export var OrdersTabularView=function OrdersTabularView(_ref){var orders=_ref.orders,currentPage=_ref.currentPage,update=_ref.update;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),columns=_useState2[0],setColumns=_useState2[1];var showDetailsButton=useCallback(function(orderId){return/*#__PURE__*/React.createElement(Link,{to:{pathname:\"/account/Order/\".concat(orderId),state:{currentPage:currentPage}},style:{paddingRight:\"20%\",paddingLeft:\"20%\",border:\"none\",width:\"100%\",textAlign:\"center\"},className:\"btn btn-primary btn-rounded btn-grad\"},translate(\"ORDERS.SHOW\"));},[currentPage]);useEffect(function(){var newColumns=[{label:translate(\"ORDERS.ORDER_NUM\"),key:\"idOrder\"},{label:translate(\"ORDERS.DELIVERY_TYPE\"),key:\"DeliveryWays\",format:deliverFormatter},{label:translate(\"ORDERS.PACKAGE_TYPE\"),key:\"PackageType\",format:packageFormatter},{label:translate(\"ORDERS.ORDER_STATUS\"),key:\"OrderStatus\"},{label:translate(\"ORDERS.ORDER_DATE\"),key:\"DateOrder\"},{label:translate(\"ORDERS.ORDER_TIME\"),key:\"TimeOrder\"},{label:translate(\"ORDERS.FROM_CITY\"),key:\"FromAddress\"},{label:translate(\"ORDERS.TO_CITY\"),key:\"ToAddress\"},{label:translate(\"ORDERS.FULL_DETAILS\"),key:\"idOrder\",format:function format(_ref2){var idOrder=_ref2.idOrder;return showDetailsButton(idOrder);}}];if(!isTransporter()&&currentPage===\"all-orders\"){newColumns.push({label:\"\",key:\"\",format:function format(_ref3){var idOrder=_ref3.idOrder;return/*#__PURE__*/React.createElement(CancelOrder,{className:\"w-100\",orderId:idOrder,onSuccess:update});}});}if(currentPage===\"current-orders\"){//TODO:: key to be changed\nnewColumns.splice(3,0,{label:translate(\"ORDERS.PRICE\"),key:\"CostLoad\"});if(isTransporterMaster()){newColumns.splice(newColumns.length-1,0,{label:translate(\"ORDER_DETAILS.ASSIGNED\"),key:\"AssignedMemberName\"});}}/* else if (currentPage === \"previous-orders\") {\r\n            newColumns.push({\r\n                label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                key: \"idOrder\",\r\n                format: ({IsFinished, IsDeleted}) => IsFinished ? translate(\"ORDERS.COMPLETED\") : IsDeleted ? translate(\"ORDERS.CANCELED\") : null\r\n            })\r\n        } */setColumns(newColumns);},[currentPage,showDetailsButton]);return/*#__PURE__*/React.createElement(DynamicTable,{columns:columns,data:orders});};","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Orders/OrdersTabularView.jsx"],"names":["React","useCallback","useEffect","useState","translate","Link","CancelOrder","DynamicTable","isTransporter","isTransporterMaster","PackageTypes","DeliveryTypes","deliverFormatter","data","parseInt","DeliveryWays","packageFormatter","PackageType","OrdersTabularView","orders","currentPage","update","columns","setColumns","showDetailsButton","orderId","pathname","state","paddingRight","paddingLeft","border","width","textAlign","newColumns","label","key","format","idOrder","push","splice","length"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport './OrdersTabularView.css';\r\nimport translate from \"../../i18n/translate\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CancelOrder} from \"../OrdersManager/CancelOrder\";\r\nimport DynamicTable from \"../DynamicTable/DynamicTable\";\r\nimport { isTransporter, isTransporterMaster } from \"../../Util\";\r\n\r\nexport const PackageTypes = {\r\n    \"1\": \"FOOD\",\r\n    \"2\": \"SMALL_PACKAGE_AND_ENVELOPS\",\r\n    \"3\": \"MEDIUM_PACKAGE\",\r\n    \"4\": \"LARGE_PACKAGE\"\r\n};\r\n\r\nexport const DeliveryTypes = {\r\n    \"1\": \"DELIVERY\",\r\n    \"2\": \"COD\",\r\n    \"3\": \"PICKUP\",\r\n    \"4\": \"PAP\"\r\n};\r\n\r\nexport const deliverFormatter = (data) => {\r\n    if(DeliveryTypes[parseInt(data.DeliveryWays)]){\r\n        return translate(\"ORDERS.\" + DeliveryTypes[parseInt(data.DeliveryWays)])\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport const packageFormatter = (data) => {\r\n    if(PackageTypes[parseInt(data.PackageType)]){\r\n        return translate(\"ORDERS.\" + PackageTypes[parseInt(data.PackageType)])\r\n    }\r\n    return \"\";\r\n}\r\n\r\nexport const OrdersTabularView = ({orders, currentPage, update}) => {\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    const showDetailsButton = useCallback((orderId) =>\r\n        <Link\r\n            to={{\r\n                pathname: `/account/Order/${orderId}`,\r\n                state: {currentPage: currentPage},\r\n            }}\r\n            style={{\r\n                paddingRight: \"20%\",\r\n                paddingLeft: \"20%\",\r\n                border: \"none\",\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n            }}\r\n            className=\"btn btn-primary btn-rounded btn-grad\"\r\n        >\r\n            {translate(\"ORDERS.SHOW\")}\r\n        </Link>, [currentPage]);\r\n\r\n    useEffect(() => {\r\n        const newColumns = [\r\n            {\r\n                label: translate(\"ORDERS.ORDER_NUM\"),\r\n                key: \"idOrder\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.DELIVERY_TYPE\"),\r\n                key: \"DeliveryWays\",\r\n                format: deliverFormatter\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.PACKAGE_TYPE\"),\r\n                key: \"PackageType\",\r\n                format: packageFormatter\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                key: \"OrderStatus\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.ORDER_DATE\"),\r\n                key: \"DateOrder\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.ORDER_TIME\"),\r\n                key: \"TimeOrder\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.FROM_CITY\"),\r\n                key: \"FromAddress\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.TO_CITY\"),\r\n                key: \"ToAddress\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.FULL_DETAILS\"),\r\n                key: \"idOrder\",\r\n                format: ({idOrder}) => showDetailsButton(idOrder)\r\n            }\r\n        ];\r\n        \r\n        if(!isTransporter() && currentPage === \"all-orders\"){ \r\n            newColumns.push({\r\n                label: \"\",\r\n                key: \"\",\r\n                format: ({idOrder}) => <CancelOrder className=\"w-100\" orderId={idOrder} onSuccess={update} />\r\n            });\r\n        }\r\n\r\n        if (currentPage === \"current-orders\") {\r\n            //TODO:: key to be changed\r\n\r\n            newColumns.splice(3, 0, {\r\n                label: translate(\"ORDERS.PRICE\"),\r\n                key: \"CostLoad\"\r\n            });\r\n            \r\n            if(isTransporterMaster()){\r\n                newColumns.splice(newColumns.length - 1, 0,{\r\n                    label: translate(\"ORDER_DETAILS.ASSIGNED\"),\r\n                    key: \"AssignedMemberName\",\r\n                });\r\n            }\r\n        } /* else if (currentPage === \"previous-orders\") {\r\n            newColumns.push({\r\n                label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                key: \"idOrder\",\r\n                format: ({IsFinished, IsDeleted}) => IsFinished ? translate(\"ORDERS.COMPLETED\") : IsDeleted ? translate(\"ORDERS.CANCELED\") : null\r\n            })\r\n        } */\r\n\r\n        setColumns(newColumns);\r\n    }, [currentPage, showDetailsButton]);\r\n\r\n    return <DynamicTable columns={columns} data={orders}/>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}