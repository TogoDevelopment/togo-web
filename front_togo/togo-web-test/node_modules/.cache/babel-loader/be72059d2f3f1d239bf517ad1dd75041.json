{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/Orders/OrdersTabularView.jsx\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport './OrdersTabularView.css';\nimport translate from \"../../i18n/translate\";\nimport { Link } from \"react-router-dom\";\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\nimport DynamicTable from \"../DynamicTable/DynamicTable\";\nvar PackageTypes = [\"FOOD\", \"SMALL_PACKAGE_AND_ENVELOPS\", \"MEDIUM_PACKAGE\", \"LARGE_PACKAGE\"];\nexport var OrdersTabularView = function OrdersTabularView(_ref) {\n  var orders = _ref.orders,\n      currentPage = _ref.currentPage;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      columns = _useState2[0],\n      setColumns = _useState2[1];\n\n  var packageFormatter = function packageFormatter(data) {\n    if (PackageTypes[parseInt(data.PackageType)]) {\n      return translate(\"ORDERS.\" + PackageTypes[parseInt(data.PackageType)]);\n    }\n\n    return \"\";\n  };\n\n  var deliverFormatter = function deliverFormatter(value) {\n    var deliverType = \"\";\n\n    switch (value.DeliveryWays) {\n      case \"1\":\n        deliverType = translate(\"ORDERS.DELIVERY\");\n        break;\n\n      case \"2\":\n        deliverType = translate(\"ORDERS.COD\");\n        break;\n\n      case \"3\":\n        deliverType = translate(\"ORDERS.PICKUP\");\n        break;\n\n      case \"4\":\n        deliverType = translate(\"ORDERS.PAP\");\n        break;\n\n      default:\n    }\n\n    return deliverType;\n  };\n\n  var showDetailsButton = useCallback(function (orderId) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/account/Order/\".concat(orderId),\n        state: {\n          currentPage: currentPage\n        }\n      },\n      style: {\n        float: \"center\",\n        paddingRight: \"20%\",\n        paddingLeft: \"20%\",\n        border: \"none\",\n        width: \"100%\",\n        textAlign: \"center\"\n      },\n      className: \"btn btn-primary btn-rounded btn-grad\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, translate(\"ORDERS.SHOW\"));\n  }, [currentPage]);\n  useEffect(function () {\n    var newColumns = [{\n      label: translate(\"ORDERS.ORDER_NUM\"),\n      key: \"idOrder\"\n    }, {\n      label: translate(\"ORDERS.DELIVERY_TYPE\"),\n      key: \"DeliveryWays\",\n      format: deliverFormatter\n    }, {\n      label: translate(\"ORDERS.PACKAGE_TYPE\"),\n      key: \"PackageType\",\n      format: packageFormatter\n    }, {\n      label: translate(\"ORDERS.ORDER_DATE\"),\n      key: \"DateOrder\"\n    }, {\n      label: translate(\"ORDERS.ORDER_TIME\"),\n      key: \"TimeOrder\"\n    }, {\n      label: translate(\"ORDERS.FROM_CITY\"),\n      key: \"FromCity\"\n    }, {\n      label: translate(\"ORDERS.TO_CITY\"),\n      key: \"ToCity\"\n    }, {\n      label: translate(\"ORDERS.FULL_DETAILS\"),\n      key: \"idOrder\",\n      format: function format(_ref2) {\n        var idOrder = _ref2.idOrder;\n        return showDetailsButton(idOrder);\n      }\n    }];\n\n    if (currentPage === \"current-orders\") {\n      //TODO:: key to be changed\n      newColumns.splice(3, 0, {\n        label: translate(\"ORDERS.PRICE\"),\n        key: \"CostLoad\"\n      });\n      newColumns.push({\n        label: \"\",\n        key: \"\",\n        format: function format(_ref3) {\n          var idOrder = _ref3.idOrder;\n          return /*#__PURE__*/React.createElement(CancelOrder, {\n            style: {\n              w: \"100%\"\n            },\n            orderId: idOrder,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 40\n            }\n          });\n        }\n      });\n    } else if (currentPage === \"previous-orders\") {\n      newColumns.push({\n        label: translate(\"ORDERS.ORDER_STATUS\"),\n        key: \"idOrder\",\n        format: function format(_ref4) {\n          var IsFinished = _ref4.IsFinished,\n              IsDeleted = _ref4.IsDeleted;\n          return IsFinished ? translate(\"ORDERS.COMPLETED\") : IsDeleted ? translate(\"ORDERS.CANCELED\") : null;\n        }\n      });\n    }\n\n    setColumns(newColumns);\n  }, [currentPage, showDetailsButton]);\n  return /*#__PURE__*/React.createElement(DynamicTable, {\n    columns: columns,\n    data: orders,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }\n  });\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Orders/OrdersTabularView.jsx"],"names":["React","useCallback","useEffect","useState","translate","Link","CancelOrder","DynamicTable","PackageTypes","OrdersTabularView","orders","currentPage","columns","setColumns","packageFormatter","data","parseInt","PackageType","deliverFormatter","value","deliverType","DeliveryWays","showDetailsButton","orderId","pathname","state","float","paddingRight","paddingLeft","border","width","textAlign","newColumns","label","key","format","idOrder","splice","push","w","IsFinished","IsDeleted"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAO,yBAAP;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,IAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,4BAAT,EAAuC,gBAAvC,EAAyD,eAAzD,CAArB;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA2B;AAAA,MAAzBC,MAAyB,QAAzBA,MAAyB;AAAA,MAAjBC,WAAiB,QAAjBA,WAAiB;;AACxD,kBAA8BR,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAU;AAC/B,QAAGP,YAAY,CAACQ,QAAQ,CAACD,IAAI,CAACE,WAAN,CAAT,CAAf,EAA4C;AACxC,aAAOb,SAAS,CAAC,YAAYI,YAAY,CAACQ,QAAQ,CAACD,IAAI,CAACE,WAAN,CAAT,CAAzB,CAAhB;AACH;;AACD,WAAO,EAAP;AACH,GALD;;AAMA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAChC,QAAIC,WAAW,GAAG,EAAlB;;AACA,YAAOD,KAAK,CAACE,YAAb;AAEI,WAAK,GAAL;AACID,QAAAA,WAAW,GAAGhB,SAAS,CAAC,iBAAD,CAAvB;AACA;;AACJ,WAAK,GAAL;AACIgB,QAAAA,WAAW,GAAGhB,SAAS,CAAC,YAAD,CAAvB;AACA;;AACJ,WAAK,GAAL;AACIgB,QAAAA,WAAW,GAAGhB,SAAS,CAAC,eAAD,CAAvB;AACA;;AACJ,WAAK,GAAL;AACIgB,QAAAA,WAAW,GAAGhB,SAAS,CAAC,YAAD,CAAvB;AACA;;AACJ;AAdJ;;AAgBA,WAAOgB,WAAP;AACH,GAnBD;;AAqBA,MAAME,iBAAiB,GAAGrB,WAAW,CAAC,UAACsB,OAAD;AAAA,wBAClC,oBAAC,IAAD;AACI,MAAA,EAAE,EAAE;AACAC,QAAAA,QAAQ,2BAAoBD,OAApB,CADR;AAEAE,QAAAA,KAAK,EAAE;AAACd,UAAAA,WAAW,EAAEA;AAAd;AAFP,OADR;AAKI,MAAA,KAAK,EAAE;AACHe,QAAAA,KAAK,EAAE,QADJ;AAEHC,QAAAA,YAAY,EAAE,KAFX;AAGHC,QAAAA,WAAW,EAAE,KAHV;AAIHC,QAAAA,MAAM,EAAE,MAJL;AAKHC,QAAAA,KAAK,EAAE,MALJ;AAMHC,QAAAA,SAAS,EAAE;AANR,OALX;AAaI,MAAA,SAAS,EAAC,sCAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeK3B,SAAS,CAAC,aAAD,CAfd,CADkC;AAAA,GAAD,EAiBxB,CAACO,WAAD,CAjBwB,CAArC;AAmBAT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAM8B,UAAU,GAAG,CACf;AACIC,MAAAA,KAAK,EAAE7B,SAAS,CAAC,kBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE;AAFT,KADe,EAKf;AACID,MAAAA,KAAK,EAAE7B,SAAS,CAAC,sBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE,cAFT;AAGIC,MAAAA,MAAM,EAAEjB;AAHZ,KALe,EAUf;AACIe,MAAAA,KAAK,EAAE7B,SAAS,CAAC,qBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE,aAFT;AAGIC,MAAAA,MAAM,EAAErB;AAHZ,KAVe,EAef;AACImB,MAAAA,KAAK,EAAE7B,SAAS,CAAC,mBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE;AAFT,KAfe,EAmBf;AACID,MAAAA,KAAK,EAAE7B,SAAS,CAAC,mBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE;AAFT,KAnBe,EAuBf;AACID,MAAAA,KAAK,EAAE7B,SAAS,CAAC,kBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE;AAFT,KAvBe,EA2Bf;AACID,MAAAA,KAAK,EAAE7B,SAAS,CAAC,gBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE;AAFT,KA3Be,EA+Bf;AACID,MAAAA,KAAK,EAAE7B,SAAS,CAAC,qBAAD,CADpB;AAEI8B,MAAAA,GAAG,EAAE,SAFT;AAGIC,MAAAA,MAAM,EAAE;AAAA,YAAEC,OAAF,SAAEA,OAAF;AAAA,eAAed,iBAAiB,CAACc,OAAD,CAAhC;AAAA;AAHZ,KA/Be,CAAnB;;AAqCA,QAAIzB,WAAW,KAAK,gBAApB,EAAsC;AAClC;AAEAqB,MAAAA,UAAU,CAACK,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwB;AACpBJ,QAAAA,KAAK,EAAE7B,SAAS,CAAC,cAAD,CADI;AAEpB8B,QAAAA,GAAG,EAAE;AAFe,OAAxB;AAKAF,MAAAA,UAAU,CAACM,IAAX,CAAgB;AACZL,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,GAAG,EAAE,EAFO;AAGZC,QAAAA,MAAM,EAAE;AAAA,cAAEC,OAAF,SAAEA,OAAF;AAAA,8BAAe,oBAAC,WAAD;AAAa,YAAA,KAAK,EAAE;AAACG,cAAAA,CAAC,EAAE;AAAJ,aAApB;AAAiC,YAAA,OAAO,EAAEH,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AAAA;AAHI,OAAhB;AAKH,KAbD,MAaO,IAAIzB,WAAW,KAAK,iBAApB,EAAuC;AAC1CqB,MAAAA,UAAU,CAACM,IAAX,CAAgB;AACZL,QAAAA,KAAK,EAAE7B,SAAS,CAAC,qBAAD,CADJ;AAEZ8B,QAAAA,GAAG,EAAE,SAFO;AAGZC,QAAAA,MAAM,EAAE;AAAA,cAAEK,UAAF,SAAEA,UAAF;AAAA,cAAcC,SAAd,SAAcA,SAAd;AAAA,iBAA6BD,UAAU,GAAGpC,SAAS,CAAC,kBAAD,CAAZ,GAAmCqC,SAAS,GAAGrC,SAAS,CAAC,iBAAD,CAAZ,GAAkC,IAArH;AAAA;AAHI,OAAhB;AAKH;;AAEDS,IAAAA,UAAU,CAACmB,UAAD,CAAV;AACH,GA5DQ,EA4DN,CAACrB,WAAD,EAAcW,iBAAd,CA5DM,CAAT;AA8DA,sBAAO,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEV,OAAvB;AAAgC,IAAA,IAAI,EAAEF,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAhHM","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport './OrdersTabularView.css';\r\nimport translate from \"../../i18n/translate\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CancelOrder} from \"../OrdersManager/CancelOrder\";\r\nimport DynamicTable from \"../DynamicTable/DynamicTable\";\r\n\r\nconst PackageTypes = [\"FOOD\", \"SMALL_PACKAGE_AND_ENVELOPS\", \"MEDIUM_PACKAGE\", \"LARGE_PACKAGE\"];\r\nexport const OrdersTabularView = ({orders, currentPage}) => {\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    const packageFormatter = (data) => {\r\n        if(PackageTypes[parseInt(data.PackageType)]){\r\n            return translate(\"ORDERS.\" + PackageTypes[parseInt(data.PackageType)])\r\n        }\r\n        return \"\";\r\n    }\r\n    const deliverFormatter = (value) => {\r\n        let deliverType = \"\";\r\n        switch(value.DeliveryWays){\r\n            \r\n            case \"1\":\r\n                deliverType = translate(\"ORDERS.DELIVERY\")\r\n                break;\r\n            case \"2\":\r\n                deliverType = translate(\"ORDERS.COD\")\r\n                break;\r\n            case \"3\":\r\n                deliverType = translate(\"ORDERS.PICKUP\")\r\n                break;\r\n            case \"4\":\r\n                deliverType = translate(\"ORDERS.PAP\")\r\n                break;\r\n            default:\r\n        }\r\n        return deliverType;\r\n    }\r\n\r\n    const showDetailsButton = useCallback((orderId) =>\r\n        <Link\r\n            to={{\r\n                pathname: `/account/Order/${orderId}`,\r\n                state: {currentPage: currentPage},\r\n            }}\r\n            style={{\r\n                float: \"center\",\r\n                paddingRight: \"20%\",\r\n                paddingLeft: \"20%\",\r\n                border: \"none\",\r\n                width: \"100%\",\r\n                textAlign: \"center\",\r\n            }}\r\n            className=\"btn btn-primary btn-rounded btn-grad\"\r\n        >\r\n            {translate(\"ORDERS.SHOW\")}\r\n        </Link>, [currentPage]);\r\n\r\n    useEffect(() => {\r\n        const newColumns = [\r\n            {\r\n                label: translate(\"ORDERS.ORDER_NUM\"),\r\n                key: \"idOrder\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.DELIVERY_TYPE\"),\r\n                key: \"DeliveryWays\",\r\n                format: deliverFormatter\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.PACKAGE_TYPE\"),\r\n                key: \"PackageType\",\r\n                format: packageFormatter\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.ORDER_DATE\"),\r\n                key: \"DateOrder\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.ORDER_TIME\"),\r\n                key: \"TimeOrder\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.FROM_CITY\"),\r\n                key: \"FromCity\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.TO_CITY\"),\r\n                key: \"ToCity\"\r\n            },\r\n            {\r\n                label: translate(\"ORDERS.FULL_DETAILS\"),\r\n                key: \"idOrder\",\r\n                format: ({idOrder}) => showDetailsButton(idOrder)\r\n            }\r\n        ];\r\n        if (currentPage === \"current-orders\") {\r\n            //TODO:: key to be changed\r\n\r\n            newColumns.splice(3, 0, {\r\n                label: translate(\"ORDERS.PRICE\"),\r\n                key: \"CostLoad\"\r\n            });\r\n\r\n            newColumns.push({\r\n                label: \"\",\r\n                key: \"\",\r\n                format: ({idOrder}) => <CancelOrder style={{w: \"100%\"}} orderId={idOrder}/>\r\n            });\r\n        } else if (currentPage === \"previous-orders\") {\r\n            newColumns.push({\r\n                label: translate(\"ORDERS.ORDER_STATUS\"),\r\n                key: \"idOrder\",\r\n                format: ({IsFinished, IsDeleted}) => IsFinished ? translate(\"ORDERS.COMPLETED\") : IsDeleted ? translate(\"ORDERS.CANCELED\") : null\r\n            })\r\n        }\r\n\r\n        setColumns(newColumns);\r\n    }, [currentPage, showDetailsButton]);\r\n\r\n    return <DynamicTable columns={columns} data={orders}/>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}