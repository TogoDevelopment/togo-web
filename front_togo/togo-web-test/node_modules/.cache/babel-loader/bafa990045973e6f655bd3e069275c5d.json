{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\nfunction Dropdown(_ref) {\n  var defaultShow = _ref.defaultShow,\n    rawShow = _ref.show,\n    onSelect = _ref.onSelect,\n    rawOnToggle = _ref.onToggle,\n    _ref$itemSelector = _ref.itemSelector,\n    itemSelector = _ref$itemSelector === void 0 ? \"* [\".concat(dataAttr('dropdown-item'), \"]\") : _ref$itemSelector,\n    focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n    _ref$placement = _ref.placement,\n    placement = _ref$placement === void 0 ? 'bottom-start' : _ref$placement,\n    children = _ref.children;\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n    _useUncontrolledProp2 = _slicedToArray(_useUncontrolledProp, 2),\n    show = _useUncontrolledProp2[0],\n    onToggle = _useUncontrolledProp2[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n    _useRefWithUpdate2 = _slicedToArray(_useRefWithUpdate, 2),\n    menuRef = _useRefWithUpdate2[0],\n    setMenu = _useRefWithUpdate2[1];\n  var menuElement = menuRef.current;\n  var _useRefWithUpdate3 = useRefWithUpdate(),\n    _useRefWithUpdate4 = _slicedToArray(_useRefWithUpdate3, 2),\n    toggleRef = _useRefWithUpdate4[0],\n    setToggle = _useRefWithUpdate4[1];\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var onSelectCtx = useContext(SelectableContext);\n  var toggle = useCallback(function (nextShow, event) {\n    var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : event == null ? void 0 : event.type;\n    onToggle(nextShow, {\n      originalEvent: event,\n      source: source\n    });\n  }, [onToggle]);\n  var handleSelect = useEventCallback(function (key, event) {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      placement: placement,\n      show: show,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n    lastSourceEvent.current = event.type;\n    var meta = {\n      originalEvent: event,\n      source: event.type\n    };\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n      case 'ArrowDown':\n        event.preventDefault();\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n          if (_next && _next.focus) _next.focus();\n        }\n        return;\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          var _menuRef$current2;\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        onToggle(false, meta);\n        break;\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;","map":{"version":3,"names":["qsa","addEventListener","useCallback","useRef","useEffect","useMemo","useContext","React","useUncontrolledProp","usePrevious","useForceUpdate","useGlobalListener","useEventCallback","DropdownContext","DropdownMenu","DropdownToggle","isRoleMenu","DropdownItem","SelectableContext","dataAttr","jsx","_jsx","useRefWithUpdate","forceUpdate","ref","attachRef","element","current","Dropdown","_ref","defaultShow","rawShow","show","onSelect","rawOnToggle","onToggle","_ref$itemSelector","itemSelector","concat","focusFirstItemOnShow","_ref$placement","placement","children","_useUncontrolledProp","_useUncontrolledProp2","_slicedToArray","_useRefWithUpdate","_useRefWithUpdate2","menuRef","setMenu","menuElement","_useRefWithUpdate3","_useRefWithUpdate4","toggleRef","setToggle","toggleElement","lastShow","lastSourceEvent","focusInDropdown","onSelectCtx","toggle","nextShow","event","source","arguments","length","undefined","type","originalEvent","handleSelect","key","isPropagationStopped","context","contains","document","activeElement","focusToggle","focus","maybeFocusFirst","focusType","test","first","getNextFocusedChild","offset","items","index","indexOf","Math","max","min","_menuRef$current","_toggleRef$current","target","fromMenu","fromToggle","isInput","tagName","meta","next","preventDefault","e","_menuRef$current2","once","stopPropagation","Provider","value","displayName","Menu","Toggle","Item"],"sources":["/home/system/togo-web-test/node_modules/@restart/ui/esm/Dropdown.js"],"sourcesContent":["import qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport { useCallback, useRef, useEffect, useMemo, useContext } from 'react';\nimport * as React from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle, { isRoleMenu } from './DropdownToggle';\nimport DropdownItem from './DropdownItem';\nimport SelectableContext from './SelectableContext';\nimport { dataAttr } from './DataKey';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useRefWithUpdate() {\n  const forceUpdate = useForceUpdate();\n  const ref = useRef(null);\n  const attachRef = useCallback(element => {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown({\n  defaultShow,\n  show: rawShow,\n  onSelect,\n  onToggle: rawOnToggle,\n  itemSelector = `* [${dataAttr('dropdown-item')}]`,\n  focusFirstItemOnShow,\n  placement = 'bottom-start',\n  children\n}) {\n  const [show, onToggle] = useUncontrolledProp(rawShow, defaultShow, rawOnToggle); // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n  const [menuRef, setMenu] = useRefWithUpdate();\n  const menuElement = menuRef.current;\n  const [toggleRef, setToggle] = useRefWithUpdate();\n  const toggleElement = toggleRef.current;\n  const lastShow = usePrevious(show);\n  const lastSourceEvent = useRef(null);\n  const focusInDropdown = useRef(false);\n  const onSelectCtx = useContext(SelectableContext);\n  const toggle = useCallback((nextShow, event, source = event == null ? void 0 : event.type) => {\n    onToggle(nextShow, {\n      originalEvent: event,\n      source\n    });\n  }, [onToggle]);\n  const handleSelect = useEventCallback((key, event) => {\n    onSelect == null ? void 0 : onSelect(key, event);\n    toggle(false, event, 'select');\n\n    if (!event.isPropagationStopped()) {\n      onSelectCtx == null ? void 0 : onSelectCtx(key, event);\n    }\n  });\n  const context = useMemo(() => ({\n    toggle,\n    placement,\n    show,\n    menuElement,\n    toggleElement,\n    setMenu,\n    setToggle\n  }), [toggle, placement, show, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  const focusToggle = useEventCallback(() => {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  const maybeFocusFirst = useEventCallback(() => {\n    const type = lastSourceEvent.current;\n    let focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && isRoleMenu(menuRef.current) ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    const first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(() => {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(() => {\n    lastSourceEvent.current = null;\n  });\n\n  const getNextFocusedChild = (current, offset) => {\n    if (!menuRef.current) return null;\n    const items = qsa(menuRef.current, itemSelector);\n    let index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', event => {\n    var _menuRef$current, _toggleRef$current;\n\n    const {\n      key\n    } = event;\n    const target = event.target;\n    const fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    const fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    const isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (key === 'Tab' && (!menuRef.current || !show)) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n    const meta = {\n      originalEvent: event,\n      source: event.type\n    };\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          const next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, meta);\n        } else {\n          const next = getNextFocusedChild(target, 1);\n          if (next && next.focus) next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', e => {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, meta);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        if (key === 'Escape') {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        onToggle(false, meta);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(DropdownContext.Provider, {\n      value: context,\n      children: children\n    })\n  });\n}\n\nDropdown.displayName = 'Dropdown';\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nDropdown.Item = DropdownItem;\nexport default Dropdown;"],"mappings":"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"},"metadata":{},"sourceType":"module"}