{"ast":null,"code":"import _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/Orders/Main.jsx\";\n\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { getFunctions, getClientDeliveredTotalAmounts, getClientActiveTotalAmounts, getClientNewTotalAmounts, getTransporterNewTotalAmounts, getTransporterActiveTotalAmounts, getTransporterDeliveredTotalAmounts } from \"../../APIs/OrdersAPIs\";\nimport { OrdersTabularView } from \"./OrdersTabularView\";\nimport { Box } from \"@chakra-ui/react\";\nimport { isTeamMember, isTransporter } from \"../../Util\";\nimport Loader from \"../Loader/Loader\";\nimport { toastMessage } from \"../../Actions/GeneralActions\";\nimport { useDispatch } from \"react-redux\";\nimport translate from \"../../i18n/translate\";\nimport { useHistory } from \"react-router-dom\";\nimport PaginateComp from \"../Pagination/Pagination\";\nimport newproduct from \"../../assets/images/new-product.png\";\nimport processingOrder from \"../../assets/images/processing-time.png\";\nimport receipt from \"../../assets/images/receipt.png\";\nimport processedOrder from \"../../assets/images/order-processed.png\";\nimport reviewedOrder from \"../../assets/images/order-reviewed.png\";\nimport { CreateNewOrder } from \"../CreateNewOrder\";\nimport \"./Main.css\";\nimport CreateAddress from \"../CreateAddress\";\nimport { Form, FloatingLabel, Spinner, Button } from 'react-bootstrap';\nimport { PAGE_SIZE } from \"../../APIs/AuthenticationAPIs\";\nimport Transactions from \"../FinancialTransactions/FinancialTransactions\";\nimport AssignToDialog from \"../AssignToDialog\";\nimport * as FileSaver from 'file-saver';\nimport XLSX from 'sheetjs-style';\nvar styles = {\n  navImg: {\n    width: \"30px\",\n    height: \"30px\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\"\n  },\n  navLal: {\n    display: \"inline-block\",\n    margin: \"0 5px\",\n    verticalAlign: \"middle\",\n    color: \"var(--bs-dark)\"\n  }\n};\n\nvar getCurrentPage = function getCurrentPage(history) {\n  var pathname = history.location.pathname;\n  return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n};\n\nvar Main = function Main(_ref) {\n  var _getCurrentPage;\n\n  var socket = _ref.socket,\n      token = _ref.token;\n  var history = useHistory();\n\n  var _useState = useState((_getCurrentPage = getCurrentPage(history)) !== null && _getCurrentPage !== void 0 ? _getCurrentPage : \"all-orders\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orders = _useState4[0],\n      setOrders = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalNumOfRecs = _useState6[0],\n      setTotalNumberOfRecs = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      activePage = _useState8[0],\n      setActivePage = _useState8[1]; // const [transactions, setTransactions] = useState([]);\n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      refresh = _useState12[0],\n      setRefresh = _useState12[1];\n\n  var dispatch = useDispatch();\n\n  var cleanUp = function cleanUp() {\n    setOrders([]); // setTransactions([]);\n  };\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      assignedIds = _useState14[0],\n      setAssignedIds = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      ordersSelected = _useState16[0],\n      setOrdersSelected = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      totalCODNew = _useState18[0],\n      setTotalCODNew = _useState18[1];\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      totalCOD = _useState20[0],\n      setTotalCOD = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      totalComission = _useState22[0],\n      setTotalComission = _useState22[1];\n\n  var _useState23 = useState(0),\n      _useState24 = _slicedToArray(_useState23, 2),\n      totalDeliveryCost = _useState24[0],\n      setTotalDeliveryCost = _useState24[1];\n\n  var _useState25 = useState(0),\n      _useState26 = _slicedToArray(_useState25, 2),\n      totalCODActive = _useState26[0],\n      setTotalCODActive = _useState26[1];\n\n  var _useState27 = useState(0),\n      _useState28 = _slicedToArray(_useState27, 2),\n      totalDeliveryCostActive = _useState28[0],\n      setTotalDeliveryCostActive = _useState28[1];\n\n  var _useState29 = useState(0),\n      _useState30 = _slicedToArray(_useState29, 2),\n      totalCODNewTrans = _useState30[0],\n      setTotalCODNewTrans = _useState30[1];\n\n  var _useState31 = useState(0),\n      _useState32 = _slicedToArray(_useState31, 2),\n      totalCODTrans = _useState32[0],\n      setTotalCODTrans = _useState32[1];\n\n  var _useState33 = useState(0),\n      _useState34 = _slicedToArray(_useState33, 2),\n      totalComissionTrans = _useState34[0],\n      setTotalComissionTrans = _useState34[1];\n\n  var _useState35 = useState(0),\n      _useState36 = _slicedToArray(_useState35, 2),\n      totalDeliveryCostTrans = _useState36[0],\n      setTotalDeliveryCostTrans = _useState36[1];\n\n  var _useState37 = useState(0),\n      _useState38 = _slicedToArray(_useState37, 2),\n      totalCODActiveTrans = _useState38[0],\n      setTotalCODActiveTrans = _useState38[1];\n\n  var _useState39 = useState(0),\n      _useState40 = _slicedToArray(_useState39, 2),\n      totalDeliveryCostActiveTrans = _useState40[0],\n      setTotalDeliveryCostActiveTrans = _useState40[1];\n\n  var _useState41 = useState(\"\"),\n      _useState42 = _slicedToArray(_useState41, 2),\n      searchStr = _useState42[0],\n      setSearchStr = _useState42[1];\n\n  useEffect(function () {\n    var currentPage = getCurrentPage(history);\n\n    if (!currentPage || currentPage === '/main') {\n      currentPage = \"all-orders\";\n      var currentPagePath = \"/account/main/\".concat(currentPage);\n      history.push(currentPagePath);\n    }\n\n    setCurrentPage(currentPage);\n    var historyUnListen = history.listen(function (location) {\n      var pathname = location.pathname;\n      var currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n\n      if (!currentPageTmp) {\n        currentPageTmp = \"all-orders\";\n\n        var _currentPagePath = \"account/main/\".concat(currentPageTmp);\n\n        history.push(_currentPagePath);\n      }\n\n      setCurrentPage(currentPageTmp);\n    });\n    return function () {\n      historyUnListen();\n      cleanUp();\n    };\n  }, [history]);\n  var fetchData = useCallback(function (functionType, stateKey) {\n    setLoading(true); // transporter orders filter variable initialized\n\n    var transporterFunctionfilter = \"none\";\n    /* \r\n    set transporter orders function by filter:\r\n        - NEW_ORDERS -> to get all new orders\r\n        - MY_ORDERS -> to get all in process orders\r\n        - DELIVERED -> to get all finished orders\r\n    */\n\n    if (functionType === \"TransporterGetOrder\" || functionType === \"TransporterOrderCurrent\" || functionType === \"TransporterHistoryOrder\" || functionType === \"TransporterReviewedOrder\") {\n      switch (functionType) {\n        case 'TransporterGetOrder':\n          transporterFunctionfilter = \"NEW_ORDERS\";\n          break;\n\n        case 'TransporterOrderCurrent':\n          transporterFunctionfilter = \"MY_ORDERS\";\n          break;\n\n        case 'TransporterHistoryOrder':\n          transporterFunctionfilter = \"DELIVERED\";\n          break;\n\n        case 'TransporterReviewedOrder':\n          transporterFunctionfilter = \"REVIEWED\";\n          break;\n\n        default:\n          transporterFunctionfilter = \"none\";\n          break;\n      } // transporter orders function type\n\n\n      functionType = \"getTransporterRelatedOrdersByPage\";\n    }\n\n    getFunctions(functionType, activePage, transporterFunctionfilter, searchStr).then(function (resp) {\n      console.log(resp.data); // temp test\n\n      if (resp === 'NotActiveNow') {\n        dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\n      } else {\n        var _resp$data = resp.data,\n            server_response = _resp$data.server_response,\n            total_orders = _resp$data.total_orders;\n\n        switch (stateKey) {\n          case 'orders':\n            setTotalNumberOfRecs(total_orders);\n            setOrders(server_response);\n            break;\n\n          /*case 'transactions':  edited (add transactions case) \r\n              console.log(\"Transactions: \");\r\n              console.log(server_response);\r\n              setTransactions(server_response);*/\n\n          default:\n            setTotalNumberOfRecs(0);\n            break;\n        }\n      }\n    }).catch(function (err) {\n      dispatch(toastMessage(err));\n    }).finally(function () {\n      setLoading(false);\n      setSearching(false);\n    });\n  }, [dispatch, activePage, searchStr]);\n  useEffect(function () {\n    if (!isTransporter()) {\n      // get total cod, total comission, and total delivery price for delivered orders\n      getClientDeliveredTotalAmounts().then(function (res) {\n        // console.log(res.data);\n        setTotalCOD(res.data.sum_cods);\n        setTotalComission(res.data.sum_commission);\n        setTotalDeliveryCost(res.data.sum_deliveryCosts);\n      }); // get total cod and total delivery price for active orders\n\n      getClientActiveTotalAmounts().then(function (res) {\n        // console.log(res.data);\n        setTotalCODActive(res.data.sum_cods);\n        setTotalDeliveryCostActive(res.data.sum_deliveryCosts);\n      }); // get total cod for new orders\n\n      getClientNewTotalAmounts().then(function (res) {\n        // console.log(res.data);\n        setTotalCODNew(res.data.sum_cods);\n      });\n    } else {\n      // get total cod, total comission, and total delivery price for delivered orders\n      getTransporterDeliveredTotalAmounts().then(function (res) {\n        // console.log(res.data);\n        setTotalCODTrans(res.data.sum_cods);\n        setTotalComissionTrans(res.data.sum_commission);\n        setTotalDeliveryCostTrans(res.data.sum_deliveryCosts);\n      }); // get total cod and total delivery price for active orders\n\n      getTransporterActiveTotalAmounts().then(function (res) {\n        // console.log(res.data);\n        setTotalCODActiveTrans(res.data.sum_cods);\n        setTotalDeliveryCostActiveTrans(res.data.sum_deliveryCosts);\n      }); // get total cod for new orders\n\n      getTransporterNewTotalAmounts().then(function (res) {\n        // console.log(res.data);\n        setTotalCODNewTrans(res.data.sum_cods);\n      });\n    }\n  }, [refresh]);\n  useEffect(function () {\n    var stateKey,\n        functionType = null;\n    cleanUp();\n    /* in the following switch statement there are three cases: all-orders, current-orders, and previous-orders\r\n        * all-orders -> all related new orders\r\n        * current-orders -> all related in-process orders\r\n        * previous-orders -. all related finished/deleted orders\r\n       --------------------------------------------\r\n       for transporter there are three functions types: TransporterGetOrder, TransporterOrderCurrent, and TransporterHistoryOrder\r\n       all of them will refer to one function type -> getTransporterRelatedOrdersByPage . (function type -> api function name)\r\n       --------------------------------------------\r\n       as for the client, there are also three functions types: ShowClientOrder, ClientShowBidRequistsAccepted, and ClientHistoryOrder\r\n       each will call a function type with the same name. (function type -> api function name)\r\n    */\n\n    switch (currentPage) {\n      case \"all-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\n        break;\n\n      case \"current-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\n        break;\n\n      case \"previous-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\n        break;\n\n      case \"reviewed-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterReviewedOrder\" : \"ClientReviewedOrder\";\n        break;\n\n      /* case \"transactions\":\r\n          stateKey = \"transactions\";\r\n          functionType = isTransporter() ? \"TeamMemberTransaction\" : null;\r\n          break; */\n\n      default:\n        break;\n    }\n\n    if (functionType) {\n      fetchData(functionType, stateKey);\n    }\n  }, [currentPage, fetchData, refresh]);\n  /* --------------------- search --------------------- */\n\n  var _useState43 = useState(false),\n      _useState44 = _slicedToArray(_useState43, 2),\n      searching = _useState44[0],\n      setSearching = _useState44[1];\n\n  var searchRef = useRef();\n\n  var searchOrdersHandler = function searchOrdersHandler() {\n    if (!!!searchRef.current.value) {\n      setSearchStr(\"\");\n    } else {\n      setSearchStr(searchRef.current.value);\n    }\n\n    setSearching(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between py-2 px-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }\n  }, localStorage.getItem(\"userId\") != 97 && /*#__PURE__*/React.createElement(React.Fragment, null, !isTransporter() ? currentPage == \"previous-orders\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, \"Delivered Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 57\n    }\n  }, totalCOD), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, \"Delivered Orders Total Comission: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 63\n    }\n  }, totalComission), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, \"Delivered Orders Total Delivey Cost: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 66\n    }\n  }, totalDeliveryCost), \" NIS\")) : currentPage == \"current-orders\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 64\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }, \"Active Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 54\n    }\n  }, totalCODActive), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 25\n    }\n  }, \"Active Orders Total Delivey Cost: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 63\n    }\n  }, totalDeliveryCostActive), \" NIS\")) : currentPage == \"all-orders\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 60\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, \"New Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 51\n    }\n  }, totalCODNew), \" NIS\")) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"41px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 30\n    }\n  }) : currentPage == \"previous-orders\" || currentPage == \"reviewed-orders\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 97\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }, \"Delivered Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 61\n    }\n  }, totalCODTrans), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }, \"Delivered Orders Total Comission (including VAT): \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 83\n    }\n  }, totalComissionTrans), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  }, \"Delivered Orders Total Delivey Cost: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 70\n    }\n  }, totalDeliveryCostTrans), \" NIS\")) : currentPage == \"current-orders\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 68\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 me-1\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 29\n    }\n  }, \"Active Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 58\n    }\n  }, totalCODActiveTrans), \" NIS\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, \"Active Orders Total Delivey Cost: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 67\n    }\n  }, totalDeliveryCostActiveTrans), \" NIS\")) : currentPage == \"all-orders\" && false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex jsutify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 73\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2\",\n    style: {\n      border: \"2px solid #69d4a5\",\n      borderRadius: \"5px\",\n      color: \"#26a69a\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 29\n    }\n  }, \"New Orders Total COD: \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 55\n    }\n  }, totalCODNewTrans), \" NIS\")) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"41px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 34\n    }\n  })), /*#__PURE__*/React.createElement(ExportExcel, {\n    excelData: JSON.stringify(orders),\n    fileName: currentPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CreateNewOrder, {\n    onSuccess: function onSuccess() {\n      // console.log()\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 17\n    }\n  })), currentPage === \"current-orders\" && isTransporter() && ordersSelected && /*#__PURE__*/React.createElement(Box, {\n    style: {\n      position: \"absolute\",\n      left: \"10px\",\n      top: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 87\n    }\n  }, /*#__PURE__*/React.createElement(AssignToDialog, {\n    ordersIds: assignedIds,\n    onSuccess: function onSuccess() {\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 17\n    }\n  })), currentPage != \"transactions\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"50%\",\n      margin: \"20px auto\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(FloatingLabel, {\n    label: \"Search...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    id: \"searchText\",\n    type: \"text\",\n    placeholder: \"...\",\n    className: \"rounded-22 mb-4 mt-1\",\n    ref: searchRef,\n    onKeyPress: function onKeyPress(e) {\n      if (e.charCode === 13) {\n        searchOrdersHandler();\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad-circle\",\n    style: {\n      position: \"absolute\",\n      right: \"20px\",\n      top: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 21\n    }\n  }, searching ? /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 131\n    }\n  }) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-search\",\n    onClick: function onClick() {\n      searchOrdersHandler();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 174\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    justify: true,\n    variant: \"tabs\",\n    defaultActiveKey: currentPage,\n    activeKey: currentPage,\n    onSelect: function onSelect(eventKey) {\n      history.push(\"/account/main/\".concat(eventKey));\n      setActivePage(0);\n      setSearchStr(\"\");\n      currentPage != \"transactions\" && (document.getElementById(\"searchText\").value = \"\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"all-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: newproduct,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.NEW_ORDERS\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"current-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: processingOrder,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.IN_PROCESS_ORDER\")))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"previous-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: processedOrder,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.COMPLETED_OR_CANCELED_ORDER\")))),\n  /*#__PURE__*/\n\n  /* !isTransporter() && */\n  React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"reviewed-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: reviewedOrder,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.REVIEWED_ORDER\")))), \" \", /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"transactions\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: receipt,\n    alt: \"new\",\n    style: styles.navImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.navLal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.FINANCIAL_TRANSACTIONS\")))))), /*#__PURE__*/React.createElement(Box, {\n    height: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, !!orders && currentPage.indexOf(\"orders\") !== -1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OrdersTabularView, {\n    socket: socket,\n    orders: orders,\n    currentPage: currentPage,\n    assignOrders: function assignOrders(ordersIds) {\n      setAssignedIds(ordersIds);\n      ordersIds.length > 0 ? setOrdersSelected(true) : setOrdersSelected(false);\n    },\n    update: function update() {\n      setRefresh(!refresh);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(PaginateComp, {\n    totalNumOfRecs: totalNumOfRecs,\n    pageSize: PAGE_SIZE,\n    activePage: activePage,\n    setActive: setActivePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 33\n    }\n  })), currentPage === \"transactions\" && /*#__PURE__*/React.createElement(Transactions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 60\n    }\n  }))));\n};\n\nvar ExportExcel = function ExportExcel(_ref2) {\n  var excelData = _ref2.excelData,\n      fileName = _ref2.fileName;\n  var fileType = 'application/vnd.openxmlformats-officedocment.spreadsheetml.sheet;charset=UTF-8';\n  var fileExtension = '.xlsx';\n\n  var exportToExcel = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(excelData);\n              /* const ws = XLSX.utils.json_to_sheet(excelData);\r\n              const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n              const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n              const data = new Blob([excelBuffer], { type: fileType });\r\n              FileSaver.saveAs(data, fileName + fileExtension); */\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function exportToExcel() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: exportToExcel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 13\n    }\n  }, \"Export to Excel\"));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Orders/Main.jsx"],"names":["React","useCallback","useEffect","useState","useRef","Nav","getFunctions","getClientDeliveredTotalAmounts","getClientActiveTotalAmounts","getClientNewTotalAmounts","getTransporterNewTotalAmounts","getTransporterActiveTotalAmounts","getTransporterDeliveredTotalAmounts","OrdersTabularView","Box","isTeamMember","isTransporter","Loader","toastMessage","useDispatch","translate","useHistory","PaginateComp","newproduct","processingOrder","receipt","processedOrder","reviewedOrder","CreateNewOrder","CreateAddress","Form","FloatingLabel","Spinner","Button","PAGE_SIZE","Transactions","AssignToDialog","FileSaver","XLSX","styles","navImg","width","height","display","verticalAlign","navLal","margin","color","getCurrentPage","history","pathname","location","substr","lastIndexOf","length","Main","socket","token","currentPage","setCurrentPage","orders","setOrders","totalNumOfRecs","setTotalNumberOfRecs","activePage","setActivePage","loading","setLoading","refresh","setRefresh","dispatch","cleanUp","assignedIds","setAssignedIds","ordersSelected","setOrdersSelected","totalCODNew","setTotalCODNew","totalCOD","setTotalCOD","totalComission","setTotalComission","totalDeliveryCost","setTotalDeliveryCost","totalCODActive","setTotalCODActive","totalDeliveryCostActive","setTotalDeliveryCostActive","totalCODNewTrans","setTotalCODNewTrans","totalCODTrans","setTotalCODTrans","totalComissionTrans","setTotalComissionTrans","totalDeliveryCostTrans","setTotalDeliveryCostTrans","totalCODActiveTrans","setTotalCODActiveTrans","totalDeliveryCostActiveTrans","setTotalDeliveryCostActiveTrans","searchStr","setSearchStr","currentPagePath","push","historyUnListen","listen","currentPageTmp","fetchData","functionType","stateKey","transporterFunctionfilter","then","resp","console","log","data","server_response","total_orders","catch","err","finally","setSearching","res","sum_cods","sum_commission","sum_deliveryCosts","searching","searchRef","searchOrdersHandler","current","value","position","localStorage","getItem","border","borderRadius","JSON","stringify","left","top","e","charCode","right","eventKey","document","getElementById","indexOf","ordersIds","ExportExcel","excelData","fileName","fileType","fileExtension","exportToExcel"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport {\r\n    getFunctions,\r\n    getClientDeliveredTotalAmounts,\r\n    getClientActiveTotalAmounts,\r\n    getClientNewTotalAmounts,\r\n    getTransporterNewTotalAmounts,\r\n    getTransporterActiveTotalAmounts,\r\n    getTransporterDeliveredTotalAmounts\r\n} from \"../../APIs/OrdersAPIs\";\r\nimport { OrdersTabularView } from \"./OrdersTabularView\";\r\nimport { Box } from \"@chakra-ui/react\";\r\nimport { isTeamMember, isTransporter } from \"../../Util\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { toastMessage } from \"../../Actions/GeneralActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PaginateComp from \"../Pagination/Pagination\";\r\nimport newproduct from \"../../assets/images/new-product.png\";\r\nimport processingOrder from \"../../assets/images/processing-time.png\";\r\nimport receipt from \"../../assets/images/receipt.png\";\r\nimport processedOrder from \"../../assets/images/order-processed.png\";\r\nimport reviewedOrder from \"../../assets/images/order-reviewed.png\";\r\nimport { CreateNewOrder } from \"../CreateNewOrder\";\r\nimport \"./Main.css\";\r\nimport CreateAddress from \"../CreateAddress\";\r\nimport { Form, FloatingLabel, Spinner, Button } from 'react-bootstrap';\r\nimport { PAGE_SIZE } from \"../../APIs/AuthenticationAPIs\";\r\nimport Transactions from \"../FinancialTransactions/FinancialTransactions\";\r\nimport AssignToDialog from \"../AssignToDialog\";\r\n\r\nimport * as FileSaver from 'file-saver';\r\nimport XLSX from 'sheetjs-style';\r\n\r\nconst styles = {\r\n    navImg: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n        display: \"inline-block\",\r\n\r\n        verticalAlign: \"middle\",\r\n    },\r\n    navLal: {\r\n        display: \"inline-block\",\r\n        margin: \"0 5px\",\r\n        verticalAlign: \"middle\",\r\n        color: \"var(--bs-dark)\"\r\n    }\r\n};\r\n\r\nconst getCurrentPage = (history) => {\r\n    const pathname = history.location.pathname;\r\n    return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n}\r\n\r\nconst Main = ({ socket, token }) => {\r\n\r\n    let history = useHistory();\r\n\r\n    const [currentPage, setCurrentPage] = useState(getCurrentPage(history) ?? (\"all-orders\"));\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalNumOfRecs, setTotalNumberOfRecs] = useState(0);\r\n    const [activePage, setActivePage] = useState(0);\r\n    // const [transactions, setTransactions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const cleanUp = () => {\r\n        setOrders([]);\r\n        // setTransactions([]);\r\n    };\r\n\r\n    const [assignedIds, setAssignedIds] = useState([]);\r\n    const [ordersSelected, setOrdersSelected] = useState(false);\r\n\r\n    const [totalCODNew, setTotalCODNew] = useState(0);\r\n    const [totalCOD, setTotalCOD] = useState(0);\r\n    const [totalComission, setTotalComission] = useState(0);\r\n    const [totalDeliveryCost, setTotalDeliveryCost] = useState(0);\r\n    const [totalCODActive, setTotalCODActive] = useState(0);\r\n    const [totalDeliveryCostActive, setTotalDeliveryCostActive] = useState(0);\r\n\r\n    const [totalCODNewTrans, setTotalCODNewTrans] = useState(0);\r\n    const [totalCODTrans, setTotalCODTrans] = useState(0);\r\n    const [totalComissionTrans, setTotalComissionTrans] = useState(0);\r\n    const [totalDeliveryCostTrans, setTotalDeliveryCostTrans] = useState(0);\r\n    const [totalCODActiveTrans, setTotalCODActiveTrans] = useState(0);\r\n    const [totalDeliveryCostActiveTrans, setTotalDeliveryCostActiveTrans] = useState(0);\r\n\r\n    const [searchStr, setSearchStr] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        let currentPage = getCurrentPage(history);\r\n        if (!currentPage || currentPage === '/main') {\r\n            currentPage = \"all-orders\";\r\n            let currentPagePath = `/account/main/${currentPage}`;\r\n            history.push(currentPagePath);\r\n        }\r\n\r\n        setCurrentPage(currentPage);\r\n\r\n        let historyUnListen = history.listen(location => {\r\n            const pathname = location.pathname;\r\n            let currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n            if (!currentPageTmp) {\r\n                currentPageTmp = \"all-orders\";\r\n                let currentPagePath = `account/main/${currentPageTmp}`;\r\n                history.push(currentPagePath);\r\n            }\r\n            setCurrentPage(currentPageTmp);\r\n        });\r\n\r\n        return () => {\r\n            historyUnListen();\r\n            cleanUp();\r\n        }\r\n    }, [history]);\r\n\r\n    const fetchData = useCallback((functionType, stateKey) => {\r\n        setLoading(true);\r\n\r\n        // transporter orders filter variable initialized\r\n        let transporterFunctionfilter = \"none\";\r\n\r\n        /* \r\n        set transporter orders function by filter:\r\n            - NEW_ORDERS -> to get all new orders\r\n            - MY_ORDERS -> to get all in process orders\r\n            - DELIVERED -> to get all finished orders\r\n        */\r\n        if (functionType === \"TransporterGetOrder\" || functionType === \"TransporterOrderCurrent\" || functionType === \"TransporterHistoryOrder\" || functionType === \"TransporterReviewedOrder\") {\r\n\r\n            switch (functionType) {\r\n                case 'TransporterGetOrder':\r\n                    transporterFunctionfilter = \"NEW_ORDERS\";\r\n                    break;\r\n                case 'TransporterOrderCurrent':\r\n                    transporterFunctionfilter = \"MY_ORDERS\";\r\n                    break;\r\n                case 'TransporterHistoryOrder':\r\n                    transporterFunctionfilter = \"DELIVERED\";\r\n                    break;\r\n                case 'TransporterReviewedOrder':\r\n                    transporterFunctionfilter = \"REVIEWED\";\r\n                    break;\r\n                default:\r\n                    transporterFunctionfilter = \"none\";\r\n                    break;\r\n            }\r\n\r\n            // transporter orders function type\r\n            functionType = \"getTransporterRelatedOrdersByPage\";\r\n        }\r\n\r\n        getFunctions(functionType, activePage, transporterFunctionfilter, searchStr)\r\n            .then(resp => {\r\n                console.log(resp.data) // temp test\r\n                if (resp === 'NotActiveNow') {\r\n                    dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\r\n                } else {\r\n                    const { data: { server_response, total_orders } } = resp;\r\n                    switch (stateKey) {\r\n                        case 'orders':\r\n                            setTotalNumberOfRecs(total_orders);\r\n                            setOrders(server_response);\r\n                            break;\r\n                        /*case 'transactions':  edited (add transactions case) \r\n                            console.log(\"Transactions: \");\r\n                            console.log(server_response);\r\n                            setTransactions(server_response);*/\r\n                        default:\r\n                            setTotalNumberOfRecs(0);\r\n                            break;\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(toastMessage(err));\r\n            }).finally(() => {\r\n                setLoading(false);\r\n\r\n                setSearching(false);\r\n            });\r\n\r\n    }, [dispatch, activePage, searchStr]);\r\n\r\n    useEffect(() => {\r\n        if (!isTransporter()) {\r\n            // get total cod, total comission, and total delivery price for delivered orders\r\n            getClientDeliveredTotalAmounts().then((res) => {\r\n                // console.log(res.data);\r\n                setTotalCOD(res.data.sum_cods);\r\n                setTotalComission(res.data.sum_commission);\r\n                setTotalDeliveryCost(res.data.sum_deliveryCosts);\r\n            })\r\n\r\n            // get total cod and total delivery price for active orders\r\n            getClientActiveTotalAmounts().then((res) => {\r\n                // console.log(res.data);\r\n                setTotalCODActive(res.data.sum_cods);\r\n                setTotalDeliveryCostActive(res.data.sum_deliveryCosts);\r\n            })\r\n\r\n            // get total cod for new orders\r\n            getClientNewTotalAmounts().then((res) => {\r\n                // console.log(res.data);\r\n                setTotalCODNew(res.data.sum_cods);\r\n            })\r\n        } else {\r\n            // get total cod, total comission, and total delivery price for delivered orders\r\n            getTransporterDeliveredTotalAmounts().then((res) => {\r\n                // console.log(res.data);\r\n                setTotalCODTrans(res.data.sum_cods);\r\n                setTotalComissionTrans(res.data.sum_commission);\r\n                setTotalDeliveryCostTrans(res.data.sum_deliveryCosts);\r\n            })\r\n\r\n            // get total cod and total delivery price for active orders\r\n            getTransporterActiveTotalAmounts().then((res) => {\r\n                // console.log(res.data);\r\n                setTotalCODActiveTrans(res.data.sum_cods);\r\n                setTotalDeliveryCostActiveTrans(res.data.sum_deliveryCosts);\r\n            })\r\n\r\n            // get total cod for new orders\r\n            getTransporterNewTotalAmounts().then((res) => {\r\n                // console.log(res.data);\r\n                setTotalCODNewTrans(res.data.sum_cods);\r\n            })\r\n        }\r\n\r\n    }, [refresh])\r\n\r\n    useEffect(() => {\r\n        let stateKey, functionType = null;\r\n        cleanUp();\r\n\r\n        /* in the following switch statement there are three cases: all-orders, current-orders, and previous-orders\r\n            * all-orders -> all related new orders\r\n            * current-orders -> all related in-process orders\r\n            * previous-orders -. all related finished/deleted orders\r\n           --------------------------------------------\r\n           for transporter there are three functions types: TransporterGetOrder, TransporterOrderCurrent, and TransporterHistoryOrder\r\n           all of them will refer to one function type -> getTransporterRelatedOrdersByPage . (function type -> api function name)\r\n           --------------------------------------------\r\n           as for the client, there are also three functions types: ShowClientOrder, ClientShowBidRequistsAccepted, and ClientHistoryOrder\r\n           each will call a function type with the same name. (function type -> api function name)\r\n        */\r\n\r\n        switch (currentPage) {\r\n            case \"all-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\r\n                break;\r\n            case \"current-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\r\n                break;\r\n            case \"previous-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\r\n                break;\r\n            case \"reviewed-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterReviewedOrder\" : \"ClientReviewedOrder\";\r\n                break;\r\n            /* case \"transactions\":\r\n                stateKey = \"transactions\";\r\n                functionType = isTransporter() ? \"TeamMemberTransaction\" : null;\r\n                break; */\r\n            default:\r\n                break;\r\n        }\r\n        if (functionType) {\r\n            fetchData(functionType, stateKey);\r\n        }\r\n    }, [currentPage, fetchData, refresh]);\r\n\r\n    /* --------------------- search --------------------- */\r\n\r\n    const [searching, setSearching] = useState(false);\r\n\r\n    const searchRef = useRef();\r\n\r\n    const searchOrdersHandler = () => {\r\n\r\n        if (!!!searchRef.current.value) {\r\n            setSearchStr(\"\");\r\n        } else {\r\n            setSearchStr(searchRef.current.value);\r\n        }\r\n\r\n        setSearching(true);\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ position: \"relative\" }}>\r\n\r\n            {/* <button style={{ color: \"white\" }} onClick={() => {\r\n                testFunction().then((res) => {\r\n                    console.log(res.data);\r\n                });\r\n            }}>\r\n                test\r\n            </button> */}\r\n\r\n            {/* add new address, create new order buttons */}\r\n            <div className=\"d-flex justify-content-between py-2 px-3\">\r\n                {/* show add new address button only for client */}\r\n                {/* {!isTransporter() && <div className=\"m-inline-e-2\">\r\n                    <CreateAddress onSuccess={() => {  }}>\r\n                        <Button\r\n                            className=\"font-weight-bold btn-grad text-white\"\r\n                            variant=\"\"\r\n                        >\r\n                            {translate(\"ORDERS.ADD_ADDRESS\")}\r\n                        </Button>\r\n                    </CreateAddress>\r\n                </div>} */}\r\n                {localStorage.getItem(\"userId\") != 97 && <>\r\n                    {!isTransporter() ? (currentPage == \"previous-orders\" ? <div className=\"d-flex jsutify-content-between\">\r\n                        <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                            Delivered Orders Total COD: <span style={{ color: \"red\" }}>{totalCOD}</span> NIS\r\n                        </div>\r\n\r\n                        <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                            Delivered Orders Total Comission: <span style={{ color: \"red\" }}>{totalComission}</span> NIS\r\n                        </div>\r\n\r\n                        <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                            Delivered Orders Total Delivey Cost: <span style={{ color: \"red\" }}>{totalDeliveryCost}</span> NIS\r\n                        </div>\r\n                    </div> : currentPage == \"current-orders\" ? <div className=\"d-flex jsutify-content-between\">\r\n                        <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                            Active Orders Total COD: <span style={{ color: \"red\" }}>{totalCODActive}</span> NIS\r\n                        </div>\r\n\r\n                        <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                            Active Orders Total Delivey Cost: <span style={{ color: \"red\" }}>{totalDeliveryCostActive}</span> NIS\r\n                        </div>\r\n                    </div> : currentPage == \"all-orders\" ? <div className=\"d-flex jsutify-content-between\">\r\n                        <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                            New Orders Total COD: <span style={{ color: \"red\" }}>{totalCODNew}</span> NIS\r\n                        </div>\r\n                    </div> : <div style={{ height: \"41px\" }}></div>) : \r\n                        (currentPage == \"previous-orders\" || currentPage == \"reviewed-orders\" ? <div className=\"d-flex jsutify-content-between\">\r\n                            <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                                Delivered Orders Total COD: <span style={{ color: \"red\" }}>{totalCODTrans}</span> NIS\r\n                            </div>\r\n\r\n                            <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                                Delivered Orders Total Comission (including VAT): <span style={{ color: \"red\" }}>{totalComissionTrans}</span> NIS\r\n                            </div>\r\n\r\n                            <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                                Delivered Orders Total Delivey Cost: <span style={{ color: \"red\" }}>{totalDeliveryCostTrans}</span> NIS\r\n                            </div>\r\n                        </div> : currentPage == \"current-orders\" ? <div className=\"d-flex jsutify-content-between\">\r\n                            <div className=\"p-2 me-1\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                                Active Orders Total COD: <span style={{ color: \"red\" }}>{totalCODActiveTrans}</span> NIS\r\n                            </div>\r\n\r\n                            <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                                Active Orders Total Delivey Cost: <span style={{ color: \"red\" }}>{totalDeliveryCostActiveTrans}</span> NIS\r\n                            </div>\r\n                        </div> : currentPage == \"all-orders\" && false ? <div className=\"d-flex jsutify-content-between\">\r\n                            <div className=\"p-2\" style={{ border: \"2px solid #69d4a5\", borderRadius: \"5px\", color: \"#26a69a\" }}>\r\n                                New Orders Total COD: <span style={{ color: \"red\" }}>{totalCODNewTrans}</span> NIS\r\n                            </div>\r\n                        </div> : <div style={{ height: \"41px\" }}></div>)\r\n                    }\r\n                </>\r\n                }\r\n\r\n                <ExportExcel excelData={ JSON.stringify(orders)} fileName={currentPage} />\r\n\r\n                <CreateNewOrder onSuccess={() => {\r\n                    // console.log()\r\n                    setRefresh(!refresh);\r\n                }} />\r\n            </div>\r\n\r\n            {/* {!isTransporter() && currentPage == \"previous-orders\" &&\r\n                <div>\r\n                    {\"Total COD: \" + totalCOD};\r\n                </div>\r\n            } */}\r\n\r\n            {/* assign to my network button (dialog), it will apear only if there are selected orders to be assigned (in in-process orders) */}\r\n            {currentPage === \"current-orders\" && isTransporter() && ordersSelected && <Box style={{ position: \"absolute\", left: \"10px\", top: \"10px\" }}>\r\n\r\n                <AssignToDialog ordersIds={assignedIds} onSuccess={() => {\r\n                    setRefresh(!refresh);\r\n                }} />\r\n\r\n            </Box>}\r\n\r\n            {currentPage != \"transactions\" && <div style={{ width: \"50%\", margin: \"20px auto\" }}>\r\n                <FloatingLabel label=\"Search...\">\r\n                    <Form.Control id=\"searchText\" type=\"text\" placeholder=\"...\" className=\"rounded-22 mb-4 mt-1\" ref={searchRef} onKeyPress={(e) => { if (e.charCode === 13) { searchOrdersHandler() } }} />\r\n                    <Button className=\"btn-grad-circle\" style={{ position: \"absolute\", right: \"20px\", top: \"10px\" }}>{searching ? <Spinner animation=\"border\" size=\"sm\" /> : <i className=\"bi bi-search\" onClick={() => { searchOrdersHandler() }}></i>}</Button>\r\n                </FloatingLabel>\r\n            </div>}\r\n\r\n            <div>\r\n                <Nav\r\n                    justify\r\n                    variant=\"tabs\"\r\n                    defaultActiveKey={currentPage}\r\n                    activeKey={currentPage}\r\n                    onSelect={(eventKey) => { history.push(`/account/main/${eventKey}`); setActivePage(0); setSearchStr(\"\"); currentPage != \"transactions\" && (document.getElementById(\"searchText\").value = \"\") }}\r\n                >\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"all-orders\">\r\n                            <img src={newproduct} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>{translate(\"ORDERS.NEW_ORDERS\")}</div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"current-orders\">\r\n                            <img src={processingOrder} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>{translate(\"ORDERS.IN_PROCESS_ORDER\")}</div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"previous-orders\">\r\n                            <img src={processedOrder} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.COMPLETED_OR_CANCELED_ORDER\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                    {/* !isTransporter() && */ <Nav.Item>\r\n                        <Nav.Link eventKey=\"reviewed-orders\">\r\n                            <img src={reviewedOrder} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.REVIEWED_ORDER\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>}\r\n\r\n                    {/* for this tab, Transactions component will be called directly by currentPage name -> \"transactions\", not like the other tabs (temporarly) */} {/* to be edited */}\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"transactions\">\r\n                            <img src={receipt} alt=\"new\" style={styles.navImg} />\r\n                            <div style={styles.navLal}>\r\n                                {translate(\"ORDERS.FINANCIAL_TRANSACTIONS\")}\r\n                            </div>\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n\r\n            {/* table display */}\r\n            <Box height=\"400px\">\r\n                {loading ? <Loader /> : (\r\n                    <>\r\n                        {!!orders && currentPage.indexOf(\"orders\") !== -1 &&\r\n                            <>\r\n                                <OrdersTabularView\r\n                                    socket={socket}\r\n                                    orders={orders}\r\n                                    currentPage={currentPage}\r\n                                    assignOrders={(ordersIds) => { setAssignedIds(ordersIds); ordersIds.length > 0 ? setOrdersSelected(true) : setOrdersSelected(false) }}\r\n                                    update={() => {\r\n                                        setRefresh(!refresh);\r\n                                    }}\r\n                                />\r\n                                <PaginateComp\r\n                                    totalNumOfRecs={totalNumOfRecs}\r\n                                    pageSize={PAGE_SIZE}\r\n                                    activePage={activePage}\r\n                                    setActive={setActivePage}\r\n                                />\r\n                            </>\r\n                        }\r\n\r\n                        {currentPage === \"transactions\" && <Transactions />}\r\n                    </>\r\n                )}\r\n            </Box>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ExportExcel = ({ excelData, fileName }) => {\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocment.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const exportToExcel = async () => {\r\n\r\n        console.log(excelData);\r\n\r\n        /* const ws = XLSX.utils.json_to_sheet(excelData);\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], { type: fileType });\r\n        FileSaver.saveAs(data, fileName + fileExtension); */\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={exportToExcel}>Export to Excel</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}