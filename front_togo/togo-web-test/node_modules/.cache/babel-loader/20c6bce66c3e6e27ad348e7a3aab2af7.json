{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nimport { getAuth } from 'firebase/auth'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\n  authDomain: \"togo-7f889.firebaseapp.com\",\n  projectId: \"togo-7f889\",\n  storageBucket: \"togo-7f889.appspot.com\",\n  messagingSenderId: \"861859089841\",\n  appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\n  measurementId: \"G-4DSC9GYT3S\" // databaseURL: \"https://DATABASE_NAME.firebaseio.com\",\n\n}; // Initialize Firebase\n\nvar firebaseApp = initializeApp(firebaseConfig);\nvar auth = getAuth(firebaseApp);\n/* const messaging = getMessaging(firebaseApp)\r\nconst { REACT_APP_VAPID_KEY } = process.env\r\nconst publicKey = REACT_APP_VAPID_KEY;\r\n\r\nconsole.log(publicKey);\r\n\r\nexport const getUserToken = async (setTokenFound) => {\r\n    let currentToken = '';\r\n    try {\r\n        currentToken = await getToken(messaging, { vapidKey: publicKey });\r\n        if (currentToken) {\r\n            setTokenFound(true);\r\n        } else {\r\n            setTokenFound(false);\r\n        }\r\n    } catch (error) {\r\n        console.log('An error occurred while retrieving token.', error);\r\n    }\r\n    return currentToken;\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n    new Promise((resolve) => {\r\n        onMessage(messaging, (payload) => {\r\n            console.log(payload);\r\n            resolve(payload);\r\n        });\r\n    }); */\n\nexport var test = function test() {\n  console.log(\"test\");\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/firebase.js"],"names":["initializeApp","getMessaging","getToken","onMessage","getAuth","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","auth","test","console","log"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAkD,oBAAlD;AACA,SAASC,OAAT,QAAwB,eAAxB,C,CACA;AACA;AAEA;AACA;;AACA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,4BAFO;AAGnBC,EAAAA,SAAS,EAAE,YAHQ;AAInBC,EAAAA,aAAa,EAAE,wBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE,cAPI,CAQnB;;AARmB,CAAvB,C,CAWA;;AACA,IAAMC,WAAW,GAAGb,aAAa,CAACK,cAAD,CAAjC;AACA,IAAMS,IAAI,GAAGV,OAAO,CAACS,WAAD,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,CAFM","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\nimport { getAuth } from 'firebase/auth';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\r\n    authDomain: \"togo-7f889.firebaseapp.com\",\r\n    projectId: \"togo-7f889\",\r\n    storageBucket: \"togo-7f889.appspot.com\",\r\n    messagingSenderId: \"861859089841\",\r\n    appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\r\n    measurementId: \"G-4DSC9GYT3S\"\r\n    // databaseURL: \"https://DATABASE_NAME.firebaseio.com\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst auth = getAuth(firebaseApp);\r\n/* const messaging = getMessaging(firebaseApp)\r\nconst { REACT_APP_VAPID_KEY } = process.env\r\nconst publicKey = REACT_APP_VAPID_KEY;\r\n\r\nconsole.log(publicKey);\r\n\r\nexport const getUserToken = async (setTokenFound) => {\r\n    let currentToken = '';\r\n    try {\r\n        currentToken = await getToken(messaging, { vapidKey: publicKey });\r\n        if (currentToken) {\r\n            setTokenFound(true);\r\n        } else {\r\n            setTokenFound(false);\r\n        }\r\n    } catch (error) {\r\n        console.log('An error occurred while retrieving token.', error);\r\n    }\r\n    return currentToken;\r\n};\r\n\r\nexport const onMessageListener = () =>\r\n    new Promise((resolve) => {\r\n        onMessage(messaging, (payload) => {\r\n            console.log(payload);\r\n            resolve(payload);\r\n        });\r\n    }); */\r\n\r\nexport const test = () => {\r\n    console.log(\"test\")\r\n}"]},"metadata":{},"sourceType":"module"}