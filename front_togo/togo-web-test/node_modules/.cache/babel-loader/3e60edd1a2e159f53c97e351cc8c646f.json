{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/SubmitAndAssignDialog.jsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\nimport translate from \"../i18n/translate\";\nimport { getClientNetwork } from \"../APIs/OrdersAPIs\";\nimport MyNetworkDropDown from \"./MyNetworkDropDown\";\nexport default function SubmitAndAssignDialog(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      myNetwork = _useState6[0],\n      setMyNetwork = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      networkInputValue = _useState8[0],\n      setNetworkInputValue = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedMember = _useState10[0],\n      setSelectedMember = _useState10[1];\n\n  var assignedDeliveryCostRef = useRef();\n  useEffect(function () {\n    getClientNetwork().then(function (res) {\n      console.log(res.data); // setMyNetwork()\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    size: \"md\",\n    show: open,\n    onHide: function onHide() {\n      setOpen(false);\n    },\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    style: {\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, translate(\"ORDER_DETAILS.ASSIGN\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MyNetworkDropDown, {\n    loading: loading,\n    network: myNetwork,\n    onSearch: setNetworkInputValue,\n    onSelect: setSelectedMember,\n    selectedMember: selectedMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"\",\n    placeholder: \"Delivery Cost\",\n    ref: assignedDeliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      // props.setStartLoadingSubmit()\n      props.onSuccess();\n      props.setCloseMainDialog();\n      props.setStopLoadingSubmit();\n      props.setCloseAssignDialog(false);\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, props.loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 49\n    }\n  }), translate(\"ORDERS.SUBMIT\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: function onClick() {\n      props.setCloseAssignDialog();\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, translate(\"GENERAL.CANCEL\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/SubmitAndAssignDialog.jsx"],"names":["React","useEffect","useState","useRef","Button","Dropdown","Form","Modal","Spinner","translate","getClientNetwork","MyNetworkDropDown","SubmitAndAssignDialog","props","open","setOpen","loading","setLoading","myNetwork","setMyNetwork","networkInputValue","setNetworkInputValue","selectedMember","setSelectedMember","assignedDeliveryCostRef","then","res","console","log","data","backgroundColor","onSuccess","setCloseMainDialog","setStopLoadingSubmit","setCloseAssignDialog","loadingSubmit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\r\nimport translate from \"../i18n/translate\";\r\nimport { getClientNetwork } from \"../APIs/OrdersAPIs\";\r\nimport MyNetworkDropDown from \"./MyNetworkDropDown\";\r\n\r\nexport default function SubmitAndAssignDialog(props) {\r\n    const [open, setOpen] = useState(true);\r\n    const [loading, setLoading] = useState(false);\r\n    const [myNetwork, setMyNetwork] = useState([]);\r\n    const [networkInputValue, setNetworkInputValue] = useState('');\r\n    const [selectedMember, setSelectedMember] = useState(\"\");\r\n\r\n    const assignedDeliveryCostRef = useRef();\r\n\r\n    useEffect(() => {\r\n        getClientNetwork().then((res) => {\r\n            console.log(res.data);\r\n            // setMyNetwork()\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Modal size=\"md\" show={open} onHide={() => { setOpen(false) }} centered animation={true} backdrop=\"static\" style={{ backgroundColor: \"rgba(0,0,0,0.5)\" }}>\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDER_DETAILS.ASSIGN\")}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n\r\n                    <MyNetworkDropDown\r\n                        loading={loading}\r\n                        network={myNetwork}\r\n                        onSearch={setNetworkInputValue}\r\n                        onSelect={setSelectedMember}\r\n                        selectedMember={selectedMember}\r\n                    />\r\n                    <Form.Control type=\"text\" className=\"\" placeholder=\"Delivery Cost\" ref={assignedDeliveryCostRef} />\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-center\">\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            // props.setStartLoadingSubmit()\r\n\r\n                            props.onSuccess();\r\n                            props.setCloseMainDialog();\r\n                            props.setStopLoadingSubmit();\r\n                            props.setCloseAssignDialog(false);\r\n                            setOpen(false);\r\n                        }\r\n                        }\r\n                    >\r\n                        {props.loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                        {translate(\"ORDERS.SUBMIT\")}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                            props.setCloseAssignDialog();\r\n                            setOpen(false);\r\n                        }\r\n                        }\r\n                    >\r\n                        {translate(\"GENERAL.CANCEL\")}\r\n                    </Button>\r\n\r\n\r\n                </Modal.Footer>\r\n\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}