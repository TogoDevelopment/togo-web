{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _defineProperty from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _PLATFORM_LOG_STRING, _ERRORS;\nimport { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PlatformLoggerServiceImpl = /*#__PURE__*/function () {\n  function PlatformLoggerServiceImpl(container) {\n    _classCallCheck(this, PlatformLoggerServiceImpl);\n    this.container = container;\n  }\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  _createClass(PlatformLoggerServiceImpl, [{\n    key: \"getPlatformInfoString\",\n    value: function getPlatformInfoString() {\n      var providers = this.container.getProviders();\n      // Loop through providers and get library/version pairs from any that are\n      // version components.\n      return providers.map(function (provider) {\n        if (isVersionServiceProvider(provider)) {\n          var service = provider.getImmediate();\n          return \"\".concat(service.library, \"/\").concat(service.version);\n        } else {\n          return null;\n        }\n      }).filter(function (logString) {\n        return logString;\n      }).join(' ');\n    }\n  }]);\n  return PlatformLoggerServiceImpl;\n}();\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\nfunction isVersionServiceProvider(provider) {\n  var component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\n}\n\nvar name$o = \"@firebase/app\";\nvar version$1 = \"0.7.29\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar logger = new Logger('@firebase/app');\nvar name$n = \"@firebase/app-compat\";\nvar name$m = \"@firebase/analytics-compat\";\nvar name$l = \"@firebase/analytics\";\nvar name$k = \"@firebase/app-check-compat\";\nvar name$j = \"@firebase/app-check\";\nvar name$i = \"@firebase/auth\";\nvar name$h = \"@firebase/auth-compat\";\nvar name$g = \"@firebase/database\";\nvar name$f = \"@firebase/database-compat\";\nvar name$e = \"@firebase/functions\";\nvar name$d = \"@firebase/functions-compat\";\nvar name$c = \"@firebase/installations\";\nvar name$b = \"@firebase/installations-compat\";\nvar name$a = \"@firebase/messaging\";\nvar name$9 = \"@firebase/messaging-compat\";\nvar name$8 = \"@firebase/performance\";\nvar name$7 = \"@firebase/performance-compat\";\nvar name$6 = \"@firebase/remote-config\";\nvar name$5 = \"@firebase/remote-config-compat\";\nvar name$4 = \"@firebase/storage\";\nvar name$3 = \"@firebase/storage-compat\";\nvar name$2 = \"@firebase/firestore\";\nvar name$1 = \"@firebase/firestore-compat\";\nvar name = \"firebase\";\nvar version = \"9.9.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\nvar PLATFORM_LOG_STRING = (_PLATFORM_LOG_STRING = {}, _defineProperty(_PLATFORM_LOG_STRING, name$o, 'fire-core'), _defineProperty(_PLATFORM_LOG_STRING, name$n, 'fire-core-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$l, 'fire-analytics'), _defineProperty(_PLATFORM_LOG_STRING, name$m, 'fire-analytics-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$j, 'fire-app-check'), _defineProperty(_PLATFORM_LOG_STRING, name$k, 'fire-app-check-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$i, 'fire-auth'), _defineProperty(_PLATFORM_LOG_STRING, name$h, 'fire-auth-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$g, 'fire-rtdb'), _defineProperty(_PLATFORM_LOG_STRING, name$f, 'fire-rtdb-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$e, 'fire-fn'), _defineProperty(_PLATFORM_LOG_STRING, name$d, 'fire-fn-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$c, 'fire-iid'), _defineProperty(_PLATFORM_LOG_STRING, name$b, 'fire-iid-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$a, 'fire-fcm'), _defineProperty(_PLATFORM_LOG_STRING, name$9, 'fire-fcm-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$8, 'fire-perf'), _defineProperty(_PLATFORM_LOG_STRING, name$7, 'fire-perf-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$6, 'fire-rc'), _defineProperty(_PLATFORM_LOG_STRING, name$5, 'fire-rc-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$4, 'fire-gcs'), _defineProperty(_PLATFORM_LOG_STRING, name$3, 'fire-gcs-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$2, 'fire-fst'), _defineProperty(_PLATFORM_LOG_STRING, name$1, 'fire-fst-compat'), _defineProperty(_PLATFORM_LOG_STRING, 'fire-js', 'fire-js'), _defineProperty(_PLATFORM_LOG_STRING, name, 'fire-js-all'), _PLATFORM_LOG_STRING);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @internal\r\n */\nvar _apps = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar _components = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(\"Component \".concat(component.name, \" failed to register with FirebaseApp \").concat(app.name), e);\n  }\n}\n/**\r\n *\r\n * @internal\r\n */\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\nfunction _registerComponent(component) {\n  var componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\"There were multiple attempts to register component \".concat(componentName, \".\"));\n    return false;\n  }\n  _components.set(componentName, component);\n  // add the component to existing app instances\n  var _iterator = _createForOfIteratorHelper(_apps.values()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var app = _step.value;\n      _addComponent(app, component);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\nfunction _getProvider(app, name) {\n  var heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n    optional: true\n  });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\nfunction _removeServiceInstance(app, name) {\n  var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ENTRY_NAME;\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\nfunction _clearComponents() {\n  _components.clear();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ERRORS = (_ERRORS = {}, _defineProperty(_ERRORS, \"no-app\" /* NO_APP */, \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()'), _defineProperty(_ERRORS, \"bad-app-name\" /* BAD_APP_NAME */, \"Illegal App name: '{$appName}\"), _defineProperty(_ERRORS, \"duplicate-app\" /* DUPLICATE_APP */, \"Firebase App named '{$appName}' already exists with different options or config\"), _defineProperty(_ERRORS, \"app-deleted\" /* APP_DELETED */, \"Firebase App named '{$appName}' already deleted\"), _defineProperty(_ERRORS, \"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'), _defineProperty(_ERRORS, \"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */, 'First argument to `onLog` must be null or a function.'), _defineProperty(_ERRORS, \"storage-open\" /* STORAGE_OPEN */, 'Error thrown when opening storage. Original error: {$originalErrorMessage}.'), _defineProperty(_ERRORS, \"storage-get\" /* STORAGE_GET */, 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.'), _defineProperty(_ERRORS, \"storage-set\" /* STORAGE_WRITE */, 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.'), _defineProperty(_ERRORS, \"storage-delete\" /* STORAGE_DELETE */, 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'), _ERRORS);\nvar ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FirebaseAppImpl = /*#__PURE__*/function () {\n  function FirebaseAppImpl(options, config, container) {\n    var _this = this;\n    _classCallCheck(this, FirebaseAppImpl);\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new Component('app', function () {\n      return _this;\n    }, \"PUBLIC\" /* PUBLIC */));\n  }\n  _createClass(FirebaseAppImpl, [{\n    key: \"automaticDataCollectionEnabled\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._automaticDataCollectionEnabled;\n    },\n    set: function set(val) {\n      this.checkDestroyed();\n      this._automaticDataCollectionEnabled = val;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._name;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._options;\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._config;\n    }\n  }, {\n    key: \"container\",\n    get: function get() {\n      return this._container;\n    }\n  }, {\n    key: \"isDeleted\",\n    get: function get() {\n      return this._isDeleted;\n    },\n    set: function set(val) {\n      this._isDeleted = val;\n    }\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\n  }, {\n    key: \"checkDestroyed\",\n    value: function checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, {\n          appName: this._name\n        });\n      }\n    }\n  }]);\n  return FirebaseAppImpl;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\nvar SDK_VERSION = version;\nfunction initializeApp(options) {\n  var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof rawConfig !== 'object') {\n    var _name = rawConfig;\n    rawConfig = {\n      name: _name\n    };\n  }\n  var config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  var name = config.name;\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\n      appName: String(name)\n    });\n  }\n  var existingApp = _apps.get(name);\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, {\n        appName: name\n      });\n    }\n  }\n  var container = new ComponentContainer(name);\n  var _iterator2 = _createForOfIteratorHelper(_components.values()),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var component = _step2.value;\n      container.addComponent(component);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  var newApp = new FirebaseAppImpl(options, config, container);\n  _apps.set(name, newApp);\n  return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\nfunction getApp() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n  var app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, {\n      appName: name\n    });\n  }\n  return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\nfunction getApps() {\n  return Array.from(_apps.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\nfunction deleteApp(_x) {\n  return _deleteApp.apply(this, arguments);\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\nfunction _deleteApp() {\n  _deleteApp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(app) {\n    var name;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            name = app.name;\n            if (!_apps.has(name)) {\n              _context7.next = 6;\n              break;\n            }\n            _apps.delete(name);\n            _context7.next = 5;\n            return Promise.all(app.container.getProviders().map(function (provider) {\n              return provider.delete();\n            }));\n          case 5:\n            app.isDeleted = true;\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _deleteApp.apply(this, arguments);\n}\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a;\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n  if (variant) {\n    library += \"-\".concat(variant);\n  }\n  var libraryMismatch = library.match(/\\s|\\//);\n  var versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    var warning = [\"Unable to register library \\\"\".concat(library, \"\\\" with version \\\"\").concat(version, \"\\\":\")];\n    if (libraryMismatch) {\n      warning.push(\"library name \\\"\".concat(library, \"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\"version name \\\"\".concat(version, \"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(new Component(\"\".concat(library, \"-version\"), function () {\n    return {\n      library: library,\n      version: version\n    };\n  }, \"VERSION\" /* VERSION */));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\n  }\n\n  setUserLogHandler(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\nfunction setLogLevel(logLevel) {\n  setLogLevel$1(logLevel);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DB_NAME = 'firebase-heartbeat-database';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'firebase-heartbeat-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DB_NAME, DB_VERSION, {\n      upgrade: function upgrade(db, oldVersion) {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(function (e) {\n      throw ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\nfunction readHeartbeatsFromIndexedDB(_x2) {\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction _readHeartbeatsFromIndexedDB() {\n  _readHeartbeatsFromIndexedDB = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(app) {\n    var _a, db;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return getDbPromise();\n          case 3:\n            db = _context8.sent;\n            return _context8.abrupt(\"return\", db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app)));\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](0);\n            throw ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\n              originalErrorMessage: (_a = _context8.t0) === null || _a === void 0 ? void 0 : _a.message\n            });\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 7]]);\n  }));\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\nfunction writeHeartbeatsToIndexedDB(_x3, _x4) {\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction _writeHeartbeatsToIndexedDB() {\n  _writeHeartbeatsToIndexedDB = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(app, heartbeatObject) {\n    var _a, db, tx, objectStore;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return getDbPromise();\n          case 3:\n            db = _context9.sent;\n            tx = db.transaction(STORE_NAME, 'readwrite');\n            objectStore = tx.objectStore(STORE_NAME);\n            _context9.next = 8;\n            return objectStore.put(heartbeatObject, computeKey(app));\n          case 8:\n            return _context9.abrupt(\"return\", tx.done);\n          case 11:\n            _context9.prev = 11;\n            _context9.t0 = _context9[\"catch\"](0);\n            throw ERROR_FACTORY.create(\"storage-set\" /* STORAGE_WRITE */, {\n              originalErrorMessage: (_a = _context9.t0) === null || _a === void 0 ? void 0 : _a.message\n            });\n          case 14:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 11]]);\n  }));\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\nfunction computeKey(app) {\n  return \"\".concat(app.name, \"!\").concat(app.options.appId);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_HEADER_BYTES = 1024;\n// 30 days\nvar STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\nvar HeartbeatServiceImpl = /*#__PURE__*/function () {\n  function HeartbeatServiceImpl(container) {\n    var _this2 = this;\n    _classCallCheck(this, HeartbeatServiceImpl);\n    this.container = container;\n    /**\r\n     * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n     * the header string.\r\n     * Stores one record per date. This will be consolidated into the standard\r\n     * format of one record per user agent string before being sent as a header.\r\n     * Populated from indexedDB when the controller is instantiated and should\r\n     * be kept in sync with indexedDB.\r\n     * Leave public for easier testing.\r\n     */\n    this._heartbeatsCache = null;\n    var app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(function (result) {\n      _this2._heartbeatsCache = result;\n      return result;\n    });\n  }\n  /**\r\n   * Called to report a heartbeat. The function will generate\r\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n   * to IndexedDB.\r\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n   * already logged, subsequent calls to this function in the same day will be ignored.\r\n   */\n  _createClass(HeartbeatServiceImpl, [{\n    key: \"triggerHeartbeat\",\n    value: function () {\n      var _triggerHeartbeat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var platformLogger, agent, date;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                platformLogger = this.container.getProvider('platform-logger').getImmediate(); // This is the \"Firebase user agent\" string from the platform logger\n                // service, not the browser user agent.\n                agent = platformLogger.getPlatformInfoString();\n                date = getUTCDateString();\n                if (!(this._heartbeatsCache === null)) {\n                  _context.next = 7;\n                  break;\n                }\n                _context.next = 6;\n                return this._heartbeatsCachePromise;\n              case 6:\n                this._heartbeatsCache = _context.sent;\n              case 7:\n                if (!(this._heartbeatsCache.lastSentHeartbeatDate === date || this._heartbeatsCache.heartbeats.some(function (singleDateHeartbeat) {\n                  return singleDateHeartbeat.date === date;\n                }))) {\n                  _context.next = 11;\n                  break;\n                }\n                return _context.abrupt(\"return\");\n              case 11:\n                // There is no entry for this date. Create one.\n                this._heartbeatsCache.heartbeats.push({\n                  date: date,\n                  agent: agent\n                });\n              case 12:\n                // Remove entries older than 30 days.\n                this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(function (singleDateHeartbeat) {\n                  var hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n                  var now = Date.now();\n                  return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n                });\n                return _context.abrupt(\"return\", this._storage.overwrite(this._heartbeatsCache));\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function triggerHeartbeat() {\n        return _triggerHeartbeat.apply(this, arguments);\n      }\n      return triggerHeartbeat;\n    }()\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\n  }, {\n    key: \"getHeartbeatsHeader\",\n    value: function () {\n      var _getHeartbeatsHeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var date, _extractHeartbeatsFor, heartbeatsToSend, unsentEntries, headerString;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this._heartbeatsCache === null)) {\n                  _context2.next = 3;\n                  break;\n                }\n                _context2.next = 3;\n                return this._heartbeatsCachePromise;\n              case 3:\n                if (!(this._heartbeatsCache === null || this._heartbeatsCache.heartbeats.length === 0)) {\n                  _context2.next = 5;\n                  break;\n                }\n                return _context2.abrupt(\"return\", '');\n              case 5:\n                date = getUTCDateString(); // Extract as many heartbeats from the cache as will fit under the size limit.\n                _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats), heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend, unsentEntries = _extractHeartbeatsFor.unsentEntries;\n                headerString = base64urlEncodeWithoutPadding(JSON.stringify({\n                  version: 2,\n                  heartbeats: heartbeatsToSend\n                })); // Store last sent date to prevent another being logged/sent for the same day.\n                this._heartbeatsCache.lastSentHeartbeatDate = date;\n                if (!(unsentEntries.length > 0)) {\n                  _context2.next = 15;\n                  break;\n                }\n                // Store any unsent entries if they exist.\n                this._heartbeatsCache.heartbeats = unsentEntries;\n                // This seems more likely than emptying the array (below) to lead to some odd state\n                // since the cache isn't empty and this will be called again on the next request,\n                // and is probably safest if we await it.\n                _context2.next = 13;\n                return this._storage.overwrite(this._heartbeatsCache);\n              case 13:\n                _context2.next = 17;\n                break;\n              case 15:\n                this._heartbeatsCache.heartbeats = [];\n                // Do not wait for this, to reduce latency.\n                void this._storage.overwrite(this._heartbeatsCache);\n              case 17:\n                return _context2.abrupt(\"return\", headerString);\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function getHeartbeatsHeader() {\n        return _getHeartbeatsHeader.apply(this, arguments);\n      }\n      return getHeartbeatsHeader;\n    }()\n  }]);\n  return HeartbeatServiceImpl;\n}();\nfunction getUTCDateString() {\n  var today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\nfunction extractHeartbeatsForHeader(heartbeatsCache) {\n  var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  var heartbeatsToSend = [];\n  // Single date format heartbeats that are not sent.\n  var unsentEntries = heartbeatsCache.slice();\n  var _iterator3 = _createForOfIteratorHelper(heartbeatsCache),\n    _step3;\n  try {\n    var _loop = function _loop() {\n      var singleDateHeartbeat = _step3.value;\n      // Look for an existing entry with the same user agent.\n      var heartbeatEntry = heartbeatsToSend.find(function (hb) {\n        return hb.agent === singleDateHeartbeat.agent;\n      });\n      if (!heartbeatEntry) {\n        // If no entry for this user agent exists, create one.\n        heartbeatsToSend.push({\n          agent: singleDateHeartbeat.agent,\n          dates: [singleDateHeartbeat.date]\n        });\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          // If the header would exceed max size, remove the added heartbeat\n          // entry and stop adding to the header.\n          heartbeatsToSend.pop();\n          return \"break\";\n        }\n      } else {\n        heartbeatEntry.dates.push(singleDateHeartbeat.date);\n        // If the header would exceed max size, remove the added date\n        // and stop adding to the header.\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          heartbeatEntry.dates.pop();\n          return \"break\";\n        }\n      }\n      // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n      // quota and the loop breaks early.)\n      unsentEntries = unsentEntries.slice(1);\n    };\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _ret = _loop();\n      if (_ret === \"break\") break;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return {\n    heartbeatsToSend: heartbeatsToSend,\n    unsentEntries: unsentEntries\n  };\n}\nvar HeartbeatStorageImpl = /*#__PURE__*/function () {\n  function HeartbeatStorageImpl(app) {\n    _classCallCheck(this, HeartbeatStorageImpl);\n    this.app = app;\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  _createClass(HeartbeatStorageImpl, [{\n    key: \"runIndexedDBEnvironmentCheck\",\n    value: function () {\n      var _runIndexedDBEnvironmentCheck = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (isIndexedDBAvailable()) {\n                  _context3.next = 4;\n                  break;\n                }\n                return _context3.abrupt(\"return\", false);\n              case 4:\n                return _context3.abrupt(\"return\", validateIndexedDBOpenable().then(function () {\n                  return true;\n                }).catch(function () {\n                  return false;\n                }));\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      function runIndexedDBEnvironmentCheck() {\n        return _runIndexedDBEnvironmentCheck.apply(this, arguments);\n      }\n      return runIndexedDBEnvironmentCheck;\n    }()\n    /**\r\n     * Read all heartbeats.\r\n     */\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var canUseIndexedDB, idbHeartbeatObject;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._canUseIndexedDBPromise;\n              case 2:\n                canUseIndexedDB = _context4.sent;\n                if (canUseIndexedDB) {\n                  _context4.next = 7;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {\n                  heartbeats: []\n                });\n              case 7:\n                _context4.next = 9;\n                return readHeartbeatsFromIndexedDB(this.app);\n              case 9:\n                idbHeartbeatObject = _context4.sent;\n                return _context4.abrupt(\"return\", idbHeartbeatObject || {\n                  heartbeats: []\n                });\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function read() {\n        return _read.apply(this, arguments);\n      }\n      return read;\n    }() // overwrite the storage with the provided heartbeats\n  }, {\n    key: \"overwrite\",\n    value: function () {\n      var _overwrite = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(heartbeatsObject) {\n        var _a, canUseIndexedDB, existingHeartbeatsObject;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._canUseIndexedDBPromise;\n              case 2:\n                canUseIndexedDB = _context5.sent;\n                if (canUseIndexedDB) {\n                  _context5.next = 7;\n                  break;\n                }\n                return _context5.abrupt(\"return\");\n              case 7:\n                _context5.next = 9;\n                return this.read();\n              case 9:\n                existingHeartbeatsObject = _context5.sent;\n                return _context5.abrupt(\"return\", writeHeartbeatsToIndexedDB(this.app, {\n                  lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                  heartbeats: heartbeatsObject.heartbeats\n                }));\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function overwrite(_x5) {\n        return _overwrite.apply(this, arguments);\n      }\n      return overwrite;\n    }() // add heartbeats\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(heartbeatsObject) {\n        var _a, canUseIndexedDB, existingHeartbeatsObject;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this._canUseIndexedDBPromise;\n              case 2:\n                canUseIndexedDB = _context6.sent;\n                if (canUseIndexedDB) {\n                  _context6.next = 7;\n                  break;\n                }\n                return _context6.abrupt(\"return\");\n              case 7:\n                _context6.next = 9;\n                return this.read();\n              case 9:\n                existingHeartbeatsObject = _context6.sent;\n                return _context6.abrupt(\"return\", writeHeartbeatsToIndexedDB(this.app, {\n                  lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\n                  heartbeats: [].concat(_toConsumableArray(existingHeartbeatsObject.heartbeats), _toConsumableArray(heartbeatsObject.heartbeats))\n                }));\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function add(_x6) {\n        return _add.apply(this, arguments);\n      }\n      return add;\n    }()\n  }]);\n  return HeartbeatStorageImpl;\n}();\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\nfunction countBytes(heartbeatsCache) {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n  // heartbeatsCache wrapper properties\n  JSON.stringify({\n    version: 2,\n    heartbeats: heartbeatsCache\n  })).length;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerCoreComponents(variant) {\n  _registerComponent(new Component('platform-logger', function (container) {\n    return new PlatformLoggerServiceImpl(container);\n  }, \"PRIVATE\" /* PRIVATE */));\n  _registerComponent(new Component('heartbeat', function (container) {\n    return new HeartbeatServiceImpl(container);\n  }, \"PRIVATE\" /* PRIVATE */));\n  // Register `app` package.\n  registerVersion(name$o, version$1, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name$o, version$1, 'esm2017');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\nregisterCoreComponents('');\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };","map":{"version":3,"names":["PlatformLoggerServiceImpl","container","_classCallCheck","getPlatformInfoString","providers","getProviders","map","provider","isVersionServiceProvider","service","getImmediate","concat","library","version","filter","logString","join","component","getComponent","type","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_PLATFORM_LOG_STRING","_defineProperty","name$o","name$n","name$l","name$m","name$j","name$k","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","name","_apps","Map","_components","_addComponent","app","addComponent","e","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","values","_step","_iterator","s","n","done","value","err","f","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","arguments","length","undefined","clearInstance","_clearComponents","clear","ERRORS","_ERRORS","ERROR_FACTORY","ErrorFactory","FirebaseAppImpl","options","config","_this","_isDeleted","_options","Object","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","_createClass","key","get","checkDestroyed","val","isDeleted","create","appName","SDK_VERSION","initializeApp","rawConfig","String","existingApp","deepEqual","ComponentContainer","_iterator2","_createForOfIteratorHelper","_step2","newApp","getApp","getApps","Array","from","deleteApp","_x","_deleteApp","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee7","wrap","_callee7$","_context7","prev","next","delete","Promise","all","stop","registerVersion","libraryKeyOrName","variant","_a","libraryMismatch","match","versionMismatch","warning","push","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevel$1","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","catch","originalErrorMessage","message","readHeartbeatsFromIndexedDB","_x2","_readHeartbeatsFromIndexedDB","_callee8","_callee8$","_context8","sent","abrupt","transaction","objectStore","computeKey","t0","writeHeartbeatsToIndexedDB","_x3","_x4","_writeHeartbeatsToIndexedDB","_callee9","heartbeatObject","tx","_callee9$","_context9","put","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_this2","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","then","result","_triggerHeartbeat","_callee","platformLogger","agent","date","_callee$","_context","getUTCDateString","lastSentHeartbeatDate","heartbeats","some","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","_getHeartbeatsHeader","_callee2","_extractHeartbeatsFor","heartbeatsToSend","unsentEntries","headerString","_callee2$","_context2","extractHeartbeatsForHeader","base64urlEncodeWithoutPadding","JSON","stringify","getHeartbeatsHeader","today","toISOString","substring","heartbeatsCache","maxSize","slice","_iterator3","_step3","_loop","heartbeatEntry","find","hb","dates","countBytes","pop","_ret","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","_runIndexedDBEnvironmentCheck","_callee3","_callee3$","_context3","isIndexedDBAvailable","validateIndexedDBOpenable","_read","_callee4","canUseIndexedDB","idbHeartbeatObject","_callee4$","_context4","_callee5","heartbeatsObject","existingHeartbeatsObject","_callee5$","_context5","_x5","_overwrite","_callee6","_callee6$","_context6","_toConsumableArray","add","_x6","_add","registerCoreComponents","version$1"],"sources":["../../src/platformLoggerService.ts","../../src/logger.ts","../../src/constants.ts","../../src/internal.ts","../../src/errors.ts","../../src/firebaseApp.ts","../../src/api.ts","../../src/indexeddb.ts","../../src/heartbeatService.ts","../../src/registerCoreComponents.ts","../../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_WRITE = 'storage-set',\n  STORAGE_DELETE = 'storage-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_WRITE]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.STORAGE_OPEN]: { originalErrorMessage?: string };\n  [AppError.STORAGE_GET]: { originalErrorMessage?: string };\n  [AppError.STORAGE_WRITE]: { originalErrorMessage?: string };\n  [AppError.STORAGE_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.STORAGE_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_GET, {\n      originalErrorMessage: (e as Error)?.message\n    });\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_WRITE, {\n      originalErrorMessage: (e as Error)?.message\n    });\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;AAeG;AAfH,IAyBaA,yBAAyB;EACpC,SAAAA,0BAA6BC,SAA6B;IAAAC,eAAA,OAAAF,yBAAA;IAA7B,IAAS,CAAAC,SAAA,GAATA,SAAS;;;;;;WAGtC,SAAAE,sBAAA,EAAqB;MACnB,IAAMC,SAAS,GAAG,IAAI,CAACH,SAAS,CAACI,YAAY,EAAE;;;MAG/C,OAAOD,SAAS,CACbE,GAAG,CAAC,UAAAC,QAAQ,EAAG;QACd,IAAIC,wBAAwB,CAACD,QAAQ,CAAC,EAAE;UACtC,IAAME,OAAO,GAAGF,QAAQ,CAACG,YAAY,EAAoB;UACzD,UAAAC,MAAA,CAAUF,OAAO,CAACG,OAAO,OAAAD,MAAA,CAAIF,OAAO,CAACI,OAAO;QAC7C,OAAM;UACL,OAAO,IAAI;QACZ;MACH,CAAC,CAAC,CACDC,MAAM,CAAC,UAAAC,SAAS;QAAA,OAAIA,SAAS;MAAA,EAAC,CAC9BC,IAAI,CAAC,GAAG,CAAC;;EACb;EAAA,OAAAhB,yBAAA;AAAA;AAEH;;;;;;;AAOG;AACH,SAASQ,wBAAwBA,CAACD,QAAwB;EACxD,IAAMU,SAAS,GAAGV,QAAQ,CAACW,YAAY,EAAE;EACzC,OAAO,CAAAD,SAAS,KAAT,QAAAA,SAAS,uBAATA,SAAS,CAAEE,IAAI;AACxB;;;;;ACzDA;;;;;;;;;;;;;;;AAeG;AAII,IAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBjD;;;;;;;;;;;;;;;AAeG;AA4BH;;;;AAIG;AACI,IAAMC,kBAAkB,GAAG;AAE3B,IAAMC,mBAAmB,IAAAC,oBAAA,OAAAC,eAAA,CAAAD,oBAAA,EAC7BE,MAAO,EAAG,WAAW,GAAAD,eAAA,CAAAD,oBAAA,EACrBG,MAAa,EAAG,kBAAkB,GAAAF,eAAA,CAAAD,oBAAA,EAClCI,MAAa,EAAG,gBAAgB,GAAAH,eAAA,CAAAD,oBAAA,EAChCK,MAAmB,EAAG,uBAAuB,GAAAJ,eAAA,CAAAD,oBAAA,EAC7CM,MAAY,EAAG,gBAAgB,GAAAL,eAAA,CAAAD,oBAAA,EAC/BO,MAAkB,EAAG,uBAAuB,GAAAN,eAAA,CAAAD,oBAAA,EAC5CQ,MAAQ,EAAG,WAAW,GAAAP,eAAA,CAAAD,oBAAA,EACtBS,MAAc,EAAG,kBAAkB,GAAAR,eAAA,CAAAD,oBAAA,EACnCU,MAAY,EAAG,WAAW,GAAAT,eAAA,CAAAD,oBAAA,EAC1BW,MAAkB,EAAG,kBAAkB,GAAAV,eAAA,CAAAD,oBAAA,EACvCY,MAAa,EAAG,SAAS,GAAAX,eAAA,CAAAD,oBAAA,EACzBa,MAAmB,EAAG,gBAAgB,GAAAZ,eAAA,CAAAD,oBAAA,EACtCc,MAAiB,EAAG,UAAU,GAAAb,eAAA,CAAAD,oBAAA,EAC9Be,MAAuB,EAAG,iBAAiB,GAAAd,eAAA,CAAAD,oBAAA,EAC3CgB,MAAa,EAAG,UAAU,GAAAf,eAAA,CAAAD,oBAAA,EAC1BiB,MAAmB,EAAG,iBAAiB,GAAAhB,eAAA,CAAAD,oBAAA,EACvCkB,MAAe,EAAG,WAAW,GAAAjB,eAAA,CAAAD,oBAAA,EAC7BmB,MAAqB,EAAG,kBAAkB,GAAAlB,eAAA,CAAAD,oBAAA,EAC1CoB,MAAgB,EAAG,SAAS,GAAAnB,eAAA,CAAAD,oBAAA,EAC5BqB,MAAsB,EAAG,gBAAgB,GAAApB,eAAA,CAAAD,oBAAA,EACzCsB,MAAW,EAAG,UAAU,GAAArB,eAAA,CAAAD,oBAAA,EACxBuB,MAAiB,EAAG,iBAAiB,GAAAtB,eAAA,CAAAD,oBAAA,EACrCwB,MAAa,EAAG,UAAU,GAAAvB,eAAA,CAAAD,oBAAA,EAC1ByB,MAAmB,EAAG,iBAAiB,GAAAxB,eAAA,CAAAD,oBAAA,EACxC,SAAS,EAAE,SAAS,GAAAC,eAAA,CAAAD,oBAAA,EACnB0B,IAAW,EAAG,aAAa,GAAA1B,oBAAA,CACpB;;AC7EV;;;;;;;;;;;;;;;AAeG;AAQH;;AAEG;AACU,IAAA2B,KAAK,GAAG,IAAIC,GAAG;AAE5B;;;;AAIG;AACH;AACa,IAAAC,WAAW,GAAG,IAAID,GAAG;AAElC;;;;AAIG;AACa,SAAAE,aAAaA,CAC3BC,GAAgB,EAChBtC,SAAuB;EAEvB,IAAI;IACDsC,GAAuB,CAACtD,SAAS,CAACuD,YAAY,CAACvC,SAAS,CAAC;EAC3D,EAAC,OAAOwC,CAAC,EAAE;IACVrC,MAAM,CAACsC,KAAK,cAAA/C,MAAA,CACGM,SAAS,CAACiC,IAAI,2CAAAvC,MAAA,CAAwC4C,GAAG,CAACL,IAAI,GAC3EO,CAAC,CACF;EACF;AACH;AAEA;;;AAGG;AACa,SAAAE,wBAAwBA,CACtCJ,GAAgB,EAChBtC,SAAoB;EAEnBsC,GAAuB,CAACtD,SAAS,CAAC2D,uBAAuB,CAAC3C,SAAS,CAAC;AACvE;AAEA;;;;;;AAMG;AACG,SAAU4C,kBAAkBA,CAChC5C,SAAuB;EAEvB,IAAM6C,aAAa,GAAG7C,SAAS,CAACiC,IAAI;EACpC,IAAIG,WAAW,CAACU,GAAG,CAACD,aAAa,CAAC,EAAE;IAClC1C,MAAM,CAACsC,KAAK,uDAAA/C,MAAA,CAC4CmD,aAAa,MAAG,CACvE;IAED,OAAO,KAAK;EACb;EAEDT,WAAW,CAACW,GAAG,CAACF,aAAa,EAAE7C,SAAS,CAAC;;6CAGvBkC,KAAK,CAACc,MAAM,EAAE;IAAAC,KAAA;EAAA;IAAhC,KAAAC,SAAA,CAAAC,CAAA,MAAAF,KAAA,GAAAC,SAAA,CAAAE,CAAA,IAAAC,IAAA,GAAkC;MAAA,IAAvBf,GAAG,GAAAW,KAAA,CAAAK,KAAA;MACZjB,aAAa,CAACC,GAAsB,EAAEtC,SAAS,CAAC;IACjD;EAAA,SAAAuD,GAAA;IAAAL,SAAA,CAAAV,CAAA,CAAAe,GAAA;EAAA;IAAAL,SAAA,CAAAM,CAAA;EAAA;EAED,OAAO,IAAI;AACb;AAEA;;;;;;;;AAQG;AACa,SAAAC,YAAYA,CAC1BnB,GAAgB,EAChBL,IAAO;EAEP,IAAMyB,mBAAmB,GAAIpB,GAAuB,CAACtD,SAAS,CAC3D2E,WAAW,CAAC,WAAW,CAAC,CACxBlE,YAAY,CAAC;IAAEmE,QAAQ,EAAE;EAAI,CAAE,CAAC;EACnC,IAAIF,mBAAmB,EAAE;IACvB,KAAKA,mBAAmB,CAACG,gBAAgB,EAAE;EAC5C;EACD,OAAQvB,GAAuB,CAACtD,SAAS,CAAC2E,WAAW,CAAC1B,IAAI,CAAC;AAC7D;AAEA;;;;;;;AAOG;AACG,SAAU6B,sBAAsBA,CACpCxB,GAAgB,EAChBL,IAAO,EACwC;EAAA,IAA/C8B,kBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA6B3D,kBAAkB;EAE/CoD,YAAY,CAACnB,GAAG,EAAEL,IAAI,CAAC,CAACkC,aAAa,CAACJ,kBAAkB,CAAC;AAC3D;AAEA;;;;AAIG;SACaK,gBAAgBA,CAAA;EAC9BhC,WAAW,CAACiC,KAAK,EAAE;AACrB;;AC5IA;;;;;;;;;;;;;;;AAeG;AAiBH,IAAMC,MAAM,IAAAC,OAAA,OAAA/D,eAAA,CAAA+D,OAAA,EACV,uBACE,kDAAkD,GAClD,mCAAmC,GAAA/D,eAAA,CAAA+D,OAAA,EACrC,mCAAyB,+BAA+B,GAAA/D,eAAA,CAAA+D,OAAA,EACxD,qCACE,iFAAiF,GAAA/D,eAAA,CAAA+D,OAAA,EACnF,iCAAwB,iDAAiD,GAAA/D,eAAA,CAAA+D,OAAA,EACzE,mDACE,sDAAsD,GACtD,wBAAwB,GAAA/D,eAAA,CAAA+D,OAAA,EAC1B,mDACE,uDAAuD,GAAA/D,eAAA,CAAA+D,OAAA,EACzD,mCACE,6EAA6E,GAAA/D,eAAA,CAAA+D,OAAA,EAC/E,iCACE,kFAAkF,GAAA/D,eAAA,CAAA+D,OAAA,EACpF,mCACE,gFAAgF,GAAA/D,eAAA,CAAA+D,OAAA,EAClF,uCACE,mFAAmF,GAAAA,OAAA,CACtF;AAcM,IAAMC,aAAa,GAAG,IAAIC,YAAY,CAC3C,KAAK,EACL,UAAU,EACVH,MAAM,CACP;;ACvED;;;;;;;;;;;;;;;AAeG;AAfH,IA6BaI,eAAe;EAc1B,SAAAA,gBACEC,OAAwB,EACxBC,MAAqC,EACrC5F,SAA6B;IAAA,IAAA6F,KAAA;IAAA5F,eAAA,OAAAyF,eAAA;IANvB,IAAU,CAAAI,UAAA,GAAG,KAAK;IAQxB,IAAI,CAACC,QAAQ,GAAQC,MAAA,CAAAC,MAAA,KAAAN,OAAO,CAAE;IAC9B,IAAI,CAACO,OAAO,GAAQF,MAAA,CAAAC,MAAA,KAAAL,MAAM,CAAE;IAC5B,IAAI,CAACO,KAAK,GAAGP,MAAM,CAAC3C,IAAI;IACxB,IAAI,CAACmD,+BAA+B,GAClCR,MAAM,CAACS,8BAA8B;IACvC,IAAI,CAACC,UAAU,GAAGtG,SAAS;IAC3B,IAAI,CAACA,SAAS,CAACuD,YAAY,CACzB,IAAIgD,SAAS,CAAC,KAAK,EAAE;MAAA,OAAMV,KAAI;IAAA,yBAAuB,CACvD;;EACFW,YAAA,CAAAd,eAAA;IAAAe,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAkC;MAChC,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACP,+BAA+B;KAC5C;IAAArC,GAAA,EAED,SAAAA,IAAmC6C,GAAY;MAC7C,IAAI,CAACD,cAAc,EAAE;MACrB,IAAI,CAACP,+BAA+B,GAAGQ,GAAG;;EAC3C;IAAAH,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAQ;MACN,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACR,KAAK;;EAClB;IAAAM,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAW;MACT,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACZ,QAAQ;;EACrB;IAAAU,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,IAAI,CAACC,cAAc,EAAE;MACrB,OAAO,IAAI,CAACT,OAAO;;EACpB;IAAAO,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAACJ,UAAU;;EACvB;IAAAG,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAa;MACX,OAAO,IAAI,CAACZ,UAAU;KACvB;IAAA/B,GAAA,EAED,SAAAA,IAAc6C,GAAY;MACxB,IAAI,CAACd,UAAU,GAAGc,GAAG;;IAGvB;;;AAGG;EAHH;IAAAH,GAAA;IAAAnC,KAAA,EAIQ,SAAAqC,eAAA,EAAc;MACpB,IAAI,IAAI,CAACE,SAAS,EAAE;QAClB,MAAMrB,aAAa,CAACsB,MAAM,kCAAuB;UAAEC,OAAO,EAAE,IAAI,CAACZ;QAAK,CAAE,CAAC;MAC1E;;EACF;EAAA,OAAAT,eAAA;AAAA;ACxGH;;;;;;;;;;;;;;;AAeG;AA8BH;;;;AAIG;AACI,IAAMsB,WAAW,GAAGpG,OAAA;SA8DXqG,aAAaA,CAC3BtB,OAAwB,EACV;EAAA,IAAduB,SAAS,GAAAlC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAEd,IAAI,OAAOkC,SAAS,KAAK,QAAQ,EAAE;IACjC,IAAMjE,KAAI,GAAGiE,SAAS;IACtBA,SAAS,GAAG;MAAEjE,IAAI,EAAJA;IAAI,CAAE;EACrB;EAED,IAAM2C,MAAM,GAAAI,MAAA,CAAAC,MAAA;IACVhD,IAAI,EAAE5B,kBAAkB;IACxBgF,8BAA8B,EAAE;EAAK,GAClCa,SAAS,CACb;EACD,IAAMjE,IAAI,GAAG2C,MAAM,CAAC3C,IAAI;EAExB,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACA,IAAI,EAAE;IACrC,MAAMuC,aAAa,CAACsB,MAAM,CAAwB;MAChDC,OAAO,EAAEI,MAAM,CAAClE,IAAI;IACrB,EAAC;EACH;EAED,IAAMmE,WAAW,GAAGlE,KAAK,CAACwD,GAAG,CAACzD,IAAI,CAAoB;EACtD,IAAImE,WAAW,EAAE;;IAEf,IACEC,SAAS,CAAC1B,OAAO,EAAEyB,WAAW,CAACzB,OAAO,CAAC,IACvC0B,SAAS,CAACzB,MAAM,EAAEwB,WAAW,CAACxB,MAAM,CAAC,EACrC;MACA,OAAOwB,WAAW;IACnB,OAAM;MACL,MAAM5B,aAAa,CAACsB,MAAM,CAAyB;QAAEC,OAAO,EAAE9D;MAAI,CAAE,CAAC;IACtE;EACF;EAED,IAAMjD,SAAS,GAAG,IAAIsH,kBAAkB,CAACrE,IAAI,CAAC;EAAC,IAAAsE,UAAA,GAAAC,0BAAA,CACvBpE,WAAW,CAACY,MAAM,EAAE;IAAAyD,MAAA;EAAA;IAA5C,KAAAF,UAAA,CAAApD,CAAA,MAAAsD,MAAA,GAAAF,UAAA,CAAAnD,CAAA,IAAAC,IAAA,GAA8C;MAAA,IAAnCrD,SAAS,GAAAyG,MAAA,CAAAnD,KAAA;MAClBtE,SAAS,CAACuD,YAAY,CAACvC,SAAS,CAAC;IAClC;EAAA,SAAAuD,GAAA;IAAAgD,UAAA,CAAA/D,CAAA,CAAAe,GAAA;EAAA;IAAAgD,UAAA,CAAA/C,CAAA;EAAA;EAED,IAAMkD,MAAM,GAAG,IAAIhC,eAAe,CAACC,OAAO,EAAEC,MAAM,EAAE5F,SAAS,CAAC;EAE9DkD,KAAK,CAACa,GAAG,CAACd,IAAI,EAAEyE,MAAM,CAAC;EAEvB,OAAOA,MAAM;AACf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BG;AACa,SAAAC,MAAMA,CAAA,EAAkC;EAAA,IAAjC1E,IAAA,GAAA+B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAe3D,kBAAkB;EACtD,IAAMiC,GAAG,GAAGJ,KAAK,CAACwD,GAAG,CAACzD,IAAI,CAAC;EAC3B,IAAI,CAACK,GAAG,EAAE;IACR,MAAMkC,aAAa,CAACsB,MAAM,CAAkB;MAAEC,OAAO,EAAE9D;IAAI,CAAE,CAAC;EAC/D;EAED,OAAOK,GAAG;AACZ;AAEA;;;AAGG;SACasE,OAAOA,CAAA;EACrB,OAAOC,KAAK,CAACC,IAAI,CAAC5E,KAAK,CAACc,MAAM,EAAE,CAAC;AACnC;AAEA;;;;;;;;;;;;;;;;AAgBG;AAhBH,SAiBsB+D,SAASA,CAAAC,EAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAlD,SAAA;AAAA;AAa/B;;;;;;;AAOG;AAPH,SAAAiD,WAAA;EAAAA,UAAA,GAAAE,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAbO,SAAAC,SAAyBhF,GAAgB;IAAA,IAAAL,IAAA;IAAA,OAAAmF,mBAAA,CAAAG,IAAA,UAAAC,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;UAAA;YACxC1F,IAAI,GAAGK,GAAG,CAACL,IAAI;YAAA,KACjBC,KAAK,CAACY,GAAG,CAACb,IAAI,CAAC;cAAAwF,SAAA,CAAAE,IAAA;cAAA;YAAA;YACjBzF,KAAK,CAAC0F,MAAM,CAAC3F,IAAI,CAAC;YAACwF,SAAA,CAAAE,IAAA;YAAA,OACbE,OAAO,CAACC,GAAG,CACdxF,GAAuB,CAACtD,SAAS,CAC/BI,YAAY,EAAE,CACdC,GAAG,CAAC,UAAAC,QAAQ;cAAA,OAAIA,QAAQ,CAACsI,MAAM,EAAE;YAAA,EAAC,CACtC;UAAA;YACAtF,GAAuB,CAACuD,SAAS,GAAG,IAAI;UAAC;UAAA;YAAA,OAAA4B,SAAA,CAAAM,IAAA;QAAA;MAAA;IAAA,GAAAT,QAAA;EAAA,CAE7C;EAAA,OAAAL,UAAA,CAAAC,KAAA,OAAAlD,SAAA;AAAA;SAUegE,eAAeA,CAC7BC,gBAAwB,EACxBrI,OAAe,EACfsI,OAAgB;;;;EAIhB,IAAIvI,OAAO,GAAG,CAAAwI,EAAA,GAAA7H,mBAAmB,CAAC2H,gBAAgB,CAAC,MAAI,QAAAE,EAAA,cAAAA,EAAA,GAAAF,gBAAgB;EACvE,IAAIC,OAAO,EAAE;IACXvI,OAAO,QAAAD,MAAA,CAAQwI,OAAO,CAAE;EACzB;EACD,IAAME,eAAe,GAAGzI,OAAO,CAAC0I,KAAK,CAAC,OAAO,CAAC;EAC9C,IAAMC,eAAe,GAAG1I,OAAO,CAACyI,KAAK,CAAC,OAAO,CAAC;EAC9C,IAAID,eAAe,IAAIE,eAAe,EAAE;IACtC,IAAMC,OAAO,GAAG,iCAAA7I,MAAA,CACiBC,OAAO,wBAAAD,MAAA,CAAmBE,OAAO,SACjE;IACD,IAAIwI,eAAe,EAAE;MACnBG,OAAO,CAACC,IAAI,mBAAA9I,MAAA,CACOC,OAAO,yDAAmD,CAC5E;IACF;IACD,IAAIyI,eAAe,IAAIE,eAAe,EAAE;MACtCC,OAAO,CAACC,IAAI,CAAC,KAAK,CAAC;IACpB;IACD,IAAIF,eAAe,EAAE;MACnBC,OAAO,CAACC,IAAI,mBAAA9I,MAAA,CACOE,OAAO,yDAAmD,CAC5E;IACF;IACDO,MAAM,CAACsI,IAAI,CAACF,OAAO,CAACxI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B;EACD;EACD6C,kBAAkB,CAChB,IAAI2C,SAAS,IAAA7F,MAAA,CACRC,OAAO,eACV;IAAA,OAAO;MAAEA,OAAO,EAAPA,OAAO;MAAEC,OAAO,EAAPA;IAAO,CAAE;EAAA,CAAC,0BAE7B,CACF;AACH;AAEA;;;;;;AAMG;AACa,SAAA8I,KAAKA,CACnBC,WAA+B,EAC/BhE,OAAoB;EAEpB,IAAIgE,WAAW,KAAK,IAAI,IAAI,OAAOA,WAAW,KAAK,UAAU,EAAE;IAC7D,MAAMnE,aAAa,CAACsB,MAAM,mDAA+B;EAC1D;;EACD8C,iBAAiB,CAACD,WAAW,EAAEhE,OAAO,CAAC;AACzC;AAEA;;;;;;;;AAQG;AACG,SAAUkE,WAAWA,CAACC,QAAwB;EAClDC,aAAe,CAACD,QAAQ,CAAC;AAC3B;;ACzTA;;;;;;;;;;;;;;;AAeG;AAOH,IAAME,OAAO,GAAG,6BAA6B;AAC7C,IAAMC,UAAU,GAAG,CAAC;AACpB,IAAMC,UAAU,GAAG,0BAA0B;AAS7C,IAAIC,SAAS,GAAwC,IAAI;AACzD,SAASC,YAAYA,CAAA;EACnB,IAAI,CAACD,SAAS,EAAE;IACdA,SAAS,GAAGE,MAAM,CAAQL,OAAO,EAAEC,UAAU,EAAE;MAC7CK,OAAO,EAAE,SAAAA,QAACC,EAAE,EAAEC,UAAU,EAAI;;;;;;QAM1B,QAAQA,UAAU;UAChB,KAAK,CAAC;YACJD,EAAE,CAACE,iBAAiB,CAACP,UAAU,CAAC;QACnC;;IAEJ,EAAC,CAACQ,KAAK,CAAC,UAAAlH,CAAC,EAAG;MACX,MAAMgC,aAAa,CAACsB,MAAM,CAAwB;QAChD6D,oBAAoB,EAAEnH,CAAC,CAACoH;MACzB,EAAC;IACJ,CAAC,CAAC;EACH;EACD,OAAOT,SAAS;AAClB;AAAC,SAEqBU,2BAA2BA,CAAAC,GAAA;EAAA,OAAAC,4BAAA,CAAA7C,KAAA,OAAAlD,SAAA;AAAA;AAAA,SAAA+F,6BAAA;EAAAA,4BAAA,GAAA5C,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAA1C,SAAA2C,SACL1H,GAAgB;IAAA,IAAA6F,EAAA,EAAAoB,EAAA;IAAA,OAAAnC,mBAAA,CAAAG,IAAA,UAAA0C,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAxC,IAAA,GAAAwC,SAAA,CAAAvC,IAAA;UAAA;YAAAuC,SAAA,CAAAxC,IAAA;YAAAwC,SAAA,CAAAvC,IAAA;YAAA,OAGGyB,YAAY,EAAE;UAAA;YAAzBG,EAAE,GAAAW,SAAA,CAAAC,IAAA;YAAA,OAAAD,SAAA,CAAAE,MAAA,WACDb,EAAE,CACNc,WAAW,CAACnB,UAAU,CAAC,CACvBoB,WAAW,CAACpB,UAAU,CAAC,CACvBxD,GAAG,CAAC6E,UAAU,CAACjI,GAAG,CAAC,CAA+C;UAAA;YAAA4H,SAAA,CAAAxC,IAAA;YAAAwC,SAAA,CAAAM,EAAA,GAAAN,SAAA;YAAA,MAE/D1F,aAAa,CAACsB,MAAM,CAAuB;cAC/C6D,oBAAoB,EAAE,CAAAxB,EAAA,GAAA+B,SAAA,CAAAM,EAAY,cAAArC,EAAA,uBAAAA,EAAA,CAAEyB;YACrC,EAAC;UAAA;UAAA;YAAA,OAAAM,SAAA,CAAAnC,IAAA;QAAA;MAAA;IAAA,GAAAiC,QAAA;EAAA,CAEL;EAAA,OAAAD,4BAAA,CAAA7C,KAAA,OAAAlD,SAAA;AAAA;AAAA,SAEqByG,0BAA0BA,CAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,2BAAA,CAAA1D,KAAA,OAAAlD,SAAA;AAAA;AAAA,SAAA4G,4BAAA;EAAAA,2BAAA,GAAAzD,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAAzC,SAAAwD,SACLvI,GAAgB,EAChBwI,eAAsC;IAAA,IAAA3C,EAAA,EAAAoB,EAAA,EAAAwB,EAAA,EAAAT,WAAA;IAAA,OAAAlD,mBAAA,CAAAG,IAAA,UAAAyD,UAAAC,SAAA;MAAA;QAAA,QAAAA,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAAtD,IAAA;UAAA;YAAAsD,SAAA,CAAAvD,IAAA;YAAAuD,SAAA,CAAAtD,IAAA;YAAA,OAGnByB,YAAY,EAAE;UAAA;YAAzBG,EAAE,GAAA0B,SAAA,CAAAd,IAAA;YACFY,EAAE,GAAGxB,EAAE,CAACc,WAAW,CAACnB,UAAU,EAAE,WAAW,CAAC;YAC5CoB,WAAW,GAAGS,EAAE,CAACT,WAAW,CAACpB,UAAU,CAAC;YAAA+B,SAAA,CAAAtD,IAAA;YAAA,OACxC2C,WAAW,CAACY,GAAG,CAACJ,eAAe,EAAEP,UAAU,CAACjI,GAAG,CAAC,CAAC;UAAA;YAAA,OAAA2I,SAAA,CAAAb,MAAA,WAChDW,EAAE,CAAC1H,IAAI;UAAA;YAAA4H,SAAA,CAAAvD,IAAA;YAAAuD,SAAA,CAAAT,EAAA,GAAAS,SAAA;YAAA,MAERzG,aAAa,CAACsB,MAAM,CAAyB;cACjD6D,oBAAoB,EAAE,CAAAxB,EAAA,GAAA8C,SAAA,CAAAT,EAAY,cAAArC,EAAA,uBAAAA,EAAA,CAAEyB;YACrC,EAAC;UAAA;UAAA;YAAA,OAAAqB,SAAA,CAAAlD,IAAA;QAAA;MAAA;IAAA,GAAA8C,QAAA;EAAA,CAEL;EAAA,OAAAD,2BAAA,CAAA1D,KAAA,OAAAlD,SAAA;AAAA;AAED,SAASuG,UAAUA,CAACjI,GAAgB;EAClC,UAAA5C,MAAA,CAAU4C,GAAG,CAACL,IAAI,OAAAvC,MAAA,CAAI4C,GAAG,CAACqC,OAAO,CAACwG,KAAK;AACzC;;AC5FA;;;;;;;;;;;;;;;AAeG;AAqBH,IAAMC,gBAAgB,GAAG,IAAI;AAC7B;AACA,IAAMC,qCAAqC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;AAAC,IAE1DC,oBAAoB;EAyB/B,SAAAA,qBAA6BtM,SAA6B;IAAA,IAAAuM,MAAA;IAAAtM,eAAA,OAAAqM,oBAAA;IAA7B,IAAS,CAAAtM,SAAA,GAATA,SAAS;IAlBtC;;;;;;;;AAQG;IACH,IAAgB,CAAAwM,gBAAA,GAAiC,IAAI;IAUnD,IAAMlJ,GAAG,GAAG,IAAI,CAACtD,SAAS,CAAC2E,WAAW,CAAC,KAAK,CAAC,CAAClE,YAAY,EAAE;IAC5D,IAAI,CAACgM,QAAQ,GAAG,IAAIC,oBAAoB,CAACpJ,GAAG,CAAC;IAC7C,IAAI,CAACqJ,uBAAuB,GAAG,IAAI,CAACF,QAAQ,CAACG,IAAI,EAAE,CAACC,IAAI,CAAC,UAAAC,MAAM,EAAG;MAChEP,MAAI,CAACC,gBAAgB,GAAGM,MAAM;MAC9B,OAAOA,MAAM;IACf,CAAC,CAAC;;EAGJ;;;;;;AAMG;EANHtG,YAAA,CAAA8F,oBAAA;IAAA7F,GAAA;IAAAnC,KAAA;MAAA,IAAAyI,iBAAA,GAAA5E,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAOA,SAAA2E,QAAA;QAAA,IAAAC,cAAA,EAAAC,KAAA,EAAAC,IAAA;QAAA,OAAA/E,mBAAA,CAAAG,IAAA,UAAA6E,SAAAC,QAAA;UAAA;YAAA,QAAAA,QAAA,CAAA3E,IAAA,GAAA2E,QAAA,CAAA1E,IAAA;cAAA;gBACQsE,cAAc,GAAG,IAAI,CAACjN,SAAS,CAClC2E,WAAW,CAAC,iBAAiB,CAAC,CAC9BlE,YAAY,EAAE,E;;gBAIXyM,KAAK,GAAGD,cAAc,CAAC/M,qBAAqB,EAAE;gBAC9CiN,IAAI,GAAGG,gBAAgB,EAAE;gBAAA,MAC3B,IAAI,CAACd,gBAAgB,KAAK,IAAI;kBAAAa,QAAA,CAAA1E,IAAA;kBAAA;gBAAA;gBAAA0E,QAAA,CAAA1E,IAAA;gBAAA,OACF,IAAI,CAACgE,uBAAuB;cAAA;gBAA1D,IAAI,CAACH,gBAAgB,GAAAa,QAAA,CAAAlC,IAAA;cAAA;gBAAA,MAKrB,IAAI,CAACqB,gBAAgB,CAACe,qBAAqB,KAAKJ,IAAI,IACpD,IAAI,CAACX,gBAAgB,CAACgB,UAAU,CAACC,IAAI,CACnC,UAAAC,mBAAmB;kBAAA,OAAIA,mBAAmB,CAACP,IAAI,KAAKA,IAAI;gBAAA,EACzD;kBAAAE,QAAA,CAAA1E,IAAA;kBAAA;gBAAA;gBAAA,OAAA0E,QAAA,CAAAjC,MAAA;cAAA;;gBAKD,IAAI,CAACoB,gBAAgB,CAACgB,UAAU,CAAChE,IAAI,CAAC;kBAAE2D,IAAI,EAAJA,IAAI;kBAAED,KAAK,EAALA;gBAAK,CAAE,CAAC;cAAC;;gBAGzD,IAAI,CAACV,gBAAgB,CAACgB,UAAU,GAAG,IAAI,CAAChB,gBAAgB,CAACgB,UAAU,CAAC3M,MAAM,CACxE,UAAA6M,mBAAmB,EAAG;kBACpB,IAAMC,WAAW,GAAG,IAAIC,IAAI,CAACF,mBAAmB,CAACP,IAAI,CAAC,CAACU,OAAO,EAAE;kBAChE,IAAMC,GAAG,GAAGF,IAAI,CAACE,GAAG,EAAE;kBACtB,OAAOA,GAAG,GAAGH,WAAW,IAAItB,qCAAqC;gBACnE,CAAC,CACF;gBAAC,OAAAgB,QAAA,CAAAjC,MAAA,WACK,IAAI,CAACqB,QAAQ,CAACsB,SAAS,CAAC,IAAI,CAACvB,gBAAgB,CAAC;cAAA;cAAA;gBAAA,OAAAa,QAAA,CAAAtE,IAAA;YAAA;UAAA;QAAA,GAAAiE,OAAA;MAAA,CACtD;MAAA,SAAAnI,iBAAA;QAAA,OAAAkI,iBAAA,CAAA7E,KAAA,OAAAlD,SAAA;MAAA;MAAA,OAAAH,gBAAA;IAAA;IAED;;;;;;AAMG;EANH;IAAA4B,GAAA;IAAAnC,KAAA;MAAA,IAAA0J,oBAAA,GAAA7F,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAOA,SAAA4F,SAAA;QAAA,IAAAd,IAAA,EAAAe,qBAAA,EAAAC,gBAAA,EAAAC,aAAA,EAAAC,YAAA;QAAA,OAAAjG,mBAAA,CAAAG,IAAA,UAAA+F,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAA7F,IAAA,GAAA6F,SAAA,CAAA5F,IAAA;cAAA;gBAAA,MACM,IAAI,CAAC6D,gBAAgB,KAAK,IAAI;kBAAA+B,SAAA,CAAA5F,IAAA;kBAAA;gBAAA;gBAAA4F,SAAA,CAAA5F,IAAA;gBAAA,OAC1B,IAAI,CAACgE,uBAAuB;cAAA;gBAAA,MAIlC,IAAI,CAACH,gBAAgB,KAAK,IAAI,IAC9B,IAAI,CAACA,gBAAgB,CAACgB,UAAU,CAACvI,MAAM,KAAK,CAAC;kBAAAsJ,SAAA,CAAA5F,IAAA;kBAAA;gBAAA;gBAAA,OAAA4F,SAAA,CAAAnD,MAAA,WAEtC,EAAE;cAAA;gBAEL+B,IAAI,GAAGG,gBAAgB,EAAE,E;wCAEakB,0BAA0B,CACpE,IAAI,CAAChC,gBAAgB,CAACgB,UAAU,CACjC,EAFOW,gBAAgB,GAAAD,qBAAA,CAAhBC,gBAAgB,EAAEC,aAAa,GAAAF,qBAAA,CAAbE,aAAa;gBAGjCC,YAAY,GAAGI,6BAA6B,CAChDC,IAAI,CAACC,SAAS,CAAC;kBAAE/N,OAAO,EAAE,CAAC;kBAAE4M,UAAU,EAAEW;gBAAgB,CAAE,CAAC,CAC7D,E;gBAED,IAAI,CAAC3B,gBAAgB,CAACe,qBAAqB,GAAGJ,IAAI;gBAAC,MAC/CiB,aAAa,CAACnJ,MAAM,GAAG,CAAC;kBAAAsJ,SAAA,CAAA5F,IAAA;kBAAA;gBAAA;;gBAE1B,IAAI,CAAC6D,gBAAgB,CAACgB,UAAU,GAAGY,aAAa;;;;;uBAI1C,IAAI,CAAC3B,QAAQ,CAACsB,SAAS,CAAC,IAAI,CAACvB,gBAAgB,CAAC;cAAA;gBAAA+B,SAAA,CAAA5F,IAAA;gBAAA;cAAA;gBAEpD,IAAI,CAAC6D,gBAAgB,CAACgB,UAAU,GAAG,EAAE;;gBAErC,KAAK,IAAI,CAACf,QAAQ,CAACsB,SAAS,CAAC,IAAI,CAACvB,gBAAgB,CAAC;cAAC;gBAAA,OAAA+B,SAAA,CAAAnD,MAAA,WAE/CiD,YAAY;cAAA;cAAA;gBAAA,OAAAE,SAAA,CAAAxF,IAAA;YAAA;UAAA;QAAA,GAAAkF,QAAA;MAAA,CACpB;MAAA,SAAAW,oBAAA;QAAA,OAAAZ,oBAAA,CAAA9F,KAAA,OAAAlD,SAAA;MAAA;MAAA,OAAA4J,mBAAA;IAAA;EAAA;EAAA,OAAAtC,oBAAA;AAAA;AAGH,SAASgB,gBAAgBA,CAAA;EACvB,IAAMuB,KAAK,GAAG,IAAIjB,IAAI,EAAE;;EAExB,OAAOiB,KAAK,CAACC,WAAW,EAAE,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;AAC7C;SAEgBP,0BAA0BA,CACxCQ,eAAsC,EACZ;EAAA,IAA1BC,OAAO,GAAAjK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGoH,gBAAgB;;;EAO1B,IAAM+B,gBAAgB,GAA4B,EAAE;;EAEpD,IAAIC,aAAa,GAAGY,eAAe,CAACE,KAAK,EAAE;EAAC,IAAAC,UAAA,GAAA3H,0BAAA,CACVwH,eAAe;IAAAI,MAAA;EAAA;IAAA,IAAAC,KAAA,YAAAA,MAAA;MAAA,IAAtC3B,mBAAmB,GAAA0B,MAAA,CAAA9K,KAAA;;MAE5B,IAAMgL,cAAc,GAAGnB,gBAAgB,CAACoB,IAAI,CAC1C,UAAAC,EAAE;QAAA,OAAIA,EAAE,CAACtC,KAAK,KAAKQ,mBAAmB,CAACR,KAAK;MAAA,EAC7C;MACD,IAAI,CAACoC,cAAc,EAAE;;QAEnBnB,gBAAgB,CAAC3E,IAAI,CAAC;UACpB0D,KAAK,EAAEQ,mBAAmB,CAACR,KAAK;UAChCuC,KAAK,EAAE,CAAC/B,mBAAmB,CAACP,IAAI;QACjC,EAAC;QACF,IAAIuC,UAAU,CAACvB,gBAAgB,CAAC,GAAGc,OAAO,EAAE;;;UAG1Cd,gBAAgB,CAACwB,GAAG,EAAE;UACtB;QACD;MACF,OAAM;QACLL,cAAc,CAACG,KAAK,CAACjG,IAAI,CAACkE,mBAAmB,CAACP,IAAI,CAAC;;;QAGnD,IAAIuC,UAAU,CAACvB,gBAAgB,CAAC,GAAGc,OAAO,EAAE;UAC1CK,cAAc,CAACG,KAAK,CAACE,GAAG,EAAE;UAC1B;QACD;MACF;;;MAGDvB,aAAa,GAAGA,aAAa,CAACc,KAAK,CAAC,CAAC,CAAC;IAAC;IA5BzC,KAAAC,UAAA,CAAAhL,CAAA,MAAAiL,MAAA,GAAAD,UAAA,CAAA/K,CAAA,IAAAC,IAAA,GAAmD;MAAA,IAAAuL,IAAA,GAAAP,KAAA;MAAA,IAAAO,IAAA,cAuB7C;IAML;EAAA,SAAArL,GAAA;IAAA4K,UAAA,CAAA3L,CAAA,CAAAe,GAAA;EAAA;IAAA4K,UAAA,CAAA3K,CAAA;EAAA;EACD,OAAO;IACL2J,gBAAgB,EAAhBA,gBAAgB;IAChBC,aAAa,EAAbA;GACD;AACH;AAAC,IAEY1B,oBAAoB;EAE/B,SAAAA,qBAAmBpJ,GAAgB;IAAArD,eAAA,OAAAyM,oBAAA;IAAhB,IAAG,CAAApJ,GAAA,GAAHA,GAAG;IACpB,IAAI,CAACuM,uBAAuB,GAAG,IAAI,CAACC,4BAA4B,EAAE;;EACnEtJ,YAAA,CAAAkG,oBAAA;IAAAjG,GAAA;IAAAnC,KAAA;MAAA,IAAAyL,6BAAA,GAAA5H,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CACD,SAAA2H,SAAA;QAAA,OAAA5H,mBAAA,CAAAG,IAAA,UAAA0H,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAxH,IAAA,GAAAwH,SAAA,CAAAvH,IAAA;cAAA;gBAAA,IACOwH,oBAAoB,EAAE;kBAAAD,SAAA,CAAAvH,IAAA;kBAAA;gBAAA;gBAAA,OAAAuH,SAAA,CAAA9E,MAAA,WAClB,KAAK;cAAA;gBAAA,OAAA8E,SAAA,CAAA9E,MAAA,WAELgF,yBAAyB,EAAE,CAC/BvD,IAAI,CAAC;kBAAA,OAAM,IAAI;gBAAA,EAAC,CAChBnC,KAAK,CAAC;kBAAA,OAAM,KAAK;gBAAA,EAAC;cAAA;cAAA;gBAAA,OAAAwF,SAAA,CAAAnH,IAAA;YAAA;UAAA;QAAA,GAAAiH,QAAA;MAAA,CAExB;MAAA,SAAAF,6BAAA;QAAA,OAAAC,6BAAA,CAAA7H,KAAA,OAAAlD,SAAA;MAAA;MAAA,OAAA8K,4BAAA;IAAA;IACD;;AAEG;EAFH;IAAArJ,GAAA;IAAAnC,KAAA;MAAA,IAAA+L,KAAA,GAAAlI,iBAAA,eAAAC,mBAAA,CAAAC,IAAA,CAGA,SAAAiI,SAAA;QAAA,IAAAC,eAAA,EAAAC,kBAAA;QAAA,OAAApI,mBAAA,CAAAG,IAAA,UAAAkI,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAAhI,IAAA,GAAAgI,SAAA,CAAA/H,IAAA;cAAA;gBAAA+H,SAAA,CAAA/H,IAAA;gBAAA,OACgC,IAAI,CAACkH,uBAAuB;cAAA;gBAApDU,eAAe,GAAAG,SAAA,CAAAvF,IAAA;gBAAA,IAChBoF,eAAe;kBAAAG,SAAA,CAAA/H,IAAA;kBAAA;gBAAA;gBAAA,OAAA+H,SAAA,CAAAtF,MAAA,WACX;kBAAEoC,UAAU,EAAE;gBAAE,CAAE;cAAA;gBAAAkD,SAAA,CAAA/H,IAAA;gBAAA,OAEQkC,2BAA2B,CAAC,IAAI,CAACvH,GAAG,CAAC;cAAA;gBAAhEkN,kBAAkB,GAAAE,SAAA,CAAAvF,IAAA;gBAAA,OAAAuF,SAAA,CAAAtF,MAAA,WACjBoF,kBAAkB,IAAI;kBAAEhD,UAAU,EAAE;gBAAE,CAAE;cAAA;cAAA;gBAAA,OAAAkD,SAAA,CAAA3H,IAAA;YAAA;UAAA;QAAA,GAAAuH,QAAA;MAAA,CAElD;MAAA,SAAA1D,KAAA;QAAA,OAAAyD,KAAA,CAAAnI,KAAA,OAAAlD,SAAA;MAAA;MAAA,OAAA4H,IAAA;IAAA,I;;;;gFAED,SAAA+D,SAAgBC,gBAAuC;QAAA,IAAAzH,EAAA,EAAAoH,eAAA,EAAAM,wBAAA;QAAA,OAAAzI,mBAAA,CAAAG,IAAA,UAAAuI,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAArI,IAAA,GAAAqI,SAAA,CAAApI,IAAA;cAAA;gBAAAoI,SAAA,CAAApI,IAAA;gBAAA,OACvB,IAAI,CAACkH,uBAAuB;cAAA;gBAApDU,eAAe,GAAAQ,SAAA,CAAA5F,IAAA;gBAAA,IAChBoF,eAAe;kBAAAQ,SAAA,CAAApI,IAAA;kBAAA;gBAAA;gBAAA,OAAAoI,SAAA,CAAA3F,MAAA;cAAA;gBAAA2F,SAAA,CAAApI,IAAA;gBAAA,OAGqB,IAAI,CAACiE,IAAI,EAAE;cAAA;gBAA5CiE,wBAAwB,GAAAE,SAAA,CAAA5F,IAAA;gBAAA,OAAA4F,SAAA,CAAA3F,MAAA,WACvBK,0BAA0B,CAAC,IAAI,CAACnI,GAAG,EAAE;kBAC1CiK,qBAAqB,EACnB,CAAApE,EAAA,GAAAyH,gBAAgB,CAACrD,qBAAqB,MACtC,QAAApE,EAAA,cAAAA,EAAA,GAAA0H,wBAAwB,CAACtD,qBAAqB;kBAChDC,UAAU,EAAEoD,gBAAgB,CAACpD;gBAC9B,EAAC;cAAA;cAAA;gBAAA,OAAAuD,SAAA,CAAAhI,IAAA;YAAA;UAAA;QAAA,GAAA4H,QAAA;MAAA,CAEL;MAAA,SAAA5C,UAAAiD,GAAA;QAAA,OAAAC,UAAA,CAAA/I,KAAA,OAAAlD,SAAA;MAAA;MAAA,OAAA+I,SAAA;IAAA,I;;;;0EAED,SAAAmD,SAAUN,gBAAuC;QAAA,IAAAzH,EAAA,EAAAoH,eAAA,EAAAM,wBAAA;QAAA,OAAAzI,mBAAA,CAAAG,IAAA,UAAA4I,UAAAC,SAAA;UAAA;YAAA,QAAAA,SAAA,CAAA1I,IAAA,GAAA0I,SAAA,CAAAzI,IAAA;cAAA;gBAAAyI,SAAA,CAAAzI,IAAA;gBAAA,OACjB,IAAI,CAACkH,uBAAuB;cAAA;gBAApDU,eAAe,GAAAa,SAAA,CAAAjG,IAAA;gBAAA,IAChBoF,eAAe;kBAAAa,SAAA,CAAAzI,IAAA;kBAAA;gBAAA;gBAAA,OAAAyI,SAAA,CAAAhG,MAAA;cAAA;gBAAAgG,SAAA,CAAAzI,IAAA;gBAAA,OAGqB,IAAI,CAACiE,IAAI,EAAE;cAAA;gBAA5CiE,wBAAwB,GAAAO,SAAA,CAAAjG,IAAA;gBAAA,OAAAiG,SAAA,CAAAhG,MAAA,WACvBK,0BAA0B,CAAC,IAAI,CAACnI,GAAG,EAAE;kBAC1CiK,qBAAqB,EACnB,CAAApE,EAAA,GAAAyH,gBAAgB,CAACrD,qBAAqB,MACtC,QAAApE,EAAA,cAAAA,EAAA,GAAA0H,wBAAwB,CAACtD,qBAAqB;kBAChDC,UAAU,KAAA9M,MAAA,CAAA2Q,kBAAA,CACLR,wBAAwB,CAACrD,UAAU,GAAA6D,kBAAA,CACnCT,gBAAgB,CAACpD,UAAU;gBAEjC,EAAC;cAAA;cAAA;gBAAA,OAAA4D,SAAA,CAAArI,IAAA;YAAA;UAAA;QAAA,GAAAmI,QAAA;MAAA,CAEL;MAAA,SAAAI,IAAAC,GAAA;QAAA,OAAAC,IAAA,CAAAtJ,KAAA,OAAAlD,SAAA;MAAA;MAAA,OAAAsM,GAAA;IAAA;EAAA;EAAA,OAAA5E,oBAAA;AAAA;AAGH;;;;AAIG;AACG,SAAUgD,UAAUA,CAACV,eAAwC;;EAEjE,OAAOP,6BAA6B;;EAElCC,IAAI,CAACC,SAAS,CAAC;IAAE/N,OAAO,EAAE,CAAC;IAAE4M,UAAU,EAAEwB;EAAe,CAAE,CAAC,CAC5D,CAAC/J,MAAM;AACV;;AC/RA;;;;;;;;;;;;;;;AAeG;AASG,SAAUwM,sBAAsBA,CAACvI,OAAgB;EACrDtF,kBAAkB,CAChB,IAAI2C,SAAS,CACX,iBAAiB,EACjB,UAAAvG,SAAS;IAAA,OAAI,IAAID,yBAAyB,CAACC,SAAS,CAAC;EAAA,2BAEtD,CACF;EACD4D,kBAAkB,CAChB,IAAI2C,SAAS,CACX,WAAW,EACX,UAAAvG,SAAS;IAAA,OAAI,IAAIsM,oBAAoB,CAACtM,SAAS,CAAC;EAAA,2BAEjD,CACF;;EAGDgJ,eAAe,CAACvH,MAAI,EAAEiQ,SAAO,EAAExI,OAAO,CAAC;;EAEvCF,eAAe,CAACvH,MAAI,EAAEiQ,SAAO,EAAE,SAAkB,CAAC;;EAElD1I,eAAe,CAAC,SAAS,EAAE,EAAE,CAAC;AAChC;;AC9CA;;;;;AAKG;AAyBHyI,sBAAsB,CAAC,EAAiB,CAAC"},"metadata":{},"sourceType":"module"}