{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrder.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"../APIs/OrdersAPIs\"; // import { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import GetAllClients) */\n\nimport { GetTransporterClients } from \"../APIs/OrdersAPIs\";\n/* edited (import GetTransporterClients) */\n\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/attachment.svg\";\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\nimport AddressDropdown from \"./AddressDropdown\";\nimport ClientDropdown from \"./ClientDropdown\";\n/* edited (import ClientDropdown) */\n\nimport CreateAddress from \"./CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../Actions/GeneralActions\";\nimport { isTransporter } from \"../Util\";\n/* edited (new import) */\n\nimport SubmitAndAssignDialog from \"./SubmitAndAssignDialog\";\n/* edited (new import) */\n\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport function CreateNewOrder(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openConf = _useState4[0],\n      setOpenConf = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"1\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientInputValue = _useState12[0],\n      setClientInputValue = _useState12[1];\n  /* edited (clientInputValue added) */\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deliverAddresses = _useState14[0],\n      setDeliverAddresses = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allClients = _useState16[0],\n      setAllClients = _useState16[1];\n  /* edited (setAllClients added) Note: not all clients */\n\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedDeliveryAddress = _useState18[0],\n      setSelectedDeliveryAddress = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedPickUpAddress = _useState20[0],\n      setSelectedPickUpAddress = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedClient = _useState22[0],\n      setSelectedClient = _useState22[1];\n  /* edited (setSelectedClient added) */\n\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loading = _useState24[0],\n      setLoading = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      loadingSubmit = _useState26[0],\n      setLoadingSubmit = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      openAssignDialog = _useState28[0],\n      setOpenAssignDialog = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      assignAddressClint = _useState30[0],\n      setAssignAddressClint = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      assignDeliveryParams = _useState32[0],\n      setAssignDeliveryParams = _useState32[1];\n  /* edited (validation variables) */\n\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      beginValidation = _useState34[0],\n      setBeginValidation = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedClientCheck = _useState36[0],\n      setSelectedClientCheckShow = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      deliveryCostCheck = _useState38[0],\n      setDeliveryCostCheckShow = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      selectedPickUpAddressCheck = _useState40[0],\n      setSelectedPickUpAddressCheckShow = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      selectedDeliveryAddressCheck = _useState42[0],\n      setSelectedDeliveryAddressCheckShow = _useState42[1];\n\n  var deliveryCostRef = useRef();\n  /* edited (deliveryCostRef added) */\n  // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\n\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetDefinedAddresses(inputValue).then(function (res) {\n          setLoading(false);\n          setDeliverAddresses(res.data);\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  /* edited (get all clients) */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetTransporterClients().then(function (res) {\n          setLoading(false);\n          setAllClients(res.data.membersData.filter(function (client) {\n            return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n          }));\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, open]);\n  /* edited (show and hide validation error messages handles) */\n\n  function showValidation() {\n    // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\n    if (isTransporter()) {\n      if (selectedClient) {\n        setSelectedClientCheckShow(false);\n      } else {\n        setSelectedClientCheckShow(true);\n      }\n\n      if (deliveryCostRef && deliveryCostRef.current.value > 0) {\n        setDeliveryCostCheckShow(false);\n      } else {\n        setDeliveryCostCheckShow(true);\n      }\n    }\n\n    if (selectedPickUpAddress) {\n      setSelectedPickUpAddressCheckShow(false);\n    } else {\n      setSelectedPickUpAddressCheckShow(true);\n    }\n\n    if (selectedDeliveryAddress) {\n      setSelectedDeliveryAddressCheckShow(false);\n    } else {\n      setSelectedDeliveryAddressCheckShow(true);\n    } // console.log(\"show validation\");\n\n  }\n\n  function hideValidation() {\n    setBeginValidation(false);\n    setSelectedClientCheckShow(false);\n    setDeliveryCostCheckShow(false);\n    setSelectedPickUpAddressCheckShow(false);\n    setSelectedDeliveryAddressCheckShow(false); // console.log(\"hide validation\");\n  }\n\n  function setCloseAssignDialog() {\n    setOpenAssignDialog(false);\n  }\n\n  function setCloseMainDialog() {\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad text-white\",\n    onClick: function onClick() {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, props.children && props.children, !props.children && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      display: \"inline-block\",\n      width: \"22px\",\n      height: \"22px\",\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      fill: \"currentcolor\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.CREATE_NEW_ORDER\"))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: open,\n    onHide: handleClose,\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, isTransporter() && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown\n  /* fofo */\n  , {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }), beginValidation && selectedClientCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 76\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    style: {\n      marginTop: \"20px\"\n    },\n    className: \"rounded-22\",\n    placeholder: \"Delivery Cost\",\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }), beginValidation && deliveryCostCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 74\n    }\n  }, \"required!\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(Dropdown, {\n    style: {\n      width: \"30%\"\n    },\n    className: \"togo-dropdown\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2])))), /*#__PURE__*/React.createElement(Form.Group, {\n    onChange: function onChange(event) {\n      if (event.target.name === \"DeliveryType\") {\n        setDeliveryType(event.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios1\",\n    value: \"1\",\n    defaultChecked: deliveryType === \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios2\",\n    value: \"2\",\n    defaultChecked: deliveryType === \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }), deliveryType === \"2\" && /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"ms-auto w-25\",\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedPickUpAddress,\n    selectedAddress: selectedPickUpAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedPickUpAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 79\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedDeliveryAddress,\n    selectedAddress: selectedDeliveryAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedDeliveryAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 81\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"btn-grad-circle p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), packageType !== \"1\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.DIMENSIONS_LABEL\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"me-2\",\n    placeholder: \"Height\",\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"me-2\",\n    placeholder: \"Width\",\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"\",\n    placeholder: \"Length\",\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"mt-2\",\n    placeholder: \"Weight\",\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Notes\",\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"45%\"\n    },\n    disabled: loadingSubmit,\n    onClick: function onClick() {\n      setLoadingSubmit(true);\n      setBeginValidation(true);\n      var CreatedBy = \"\";\n      /* edited (CreatedBy variable added) */\n\n      var DeliveryParams = {};\n      /* edited (DeliveryParams as empty object) */\n\n      if (isTransporter()) {\n        if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\n          var _lengthRef$current, _widthRef$current, _heightRef$current, _weightRef$current;\n\n          // console.log(\"true\");\n          hideValidation();\n          CreatedBy = \"Transporter\";\n          DeliveryParams = {\n            deliveryWay: deliveryType,\n            TypeLoad: packageType,\n            // ClientMobileNumber: clientMobileNumberRef.current.value, /* edited (add ClientMobileNumber) */\n            ClientMobileNumber: selectedClient.PhoneNumber,\n\n            /* edited (add ClientMobileNumber from dropdown) */\n            DeliveryPrice: deliveryCostRef.current.value,\n\n            /* edited (add DeliveryPrice) */\n            CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n            // 2 or 4\n            DetailsLoad: notesRef.current.value,\n            LengthLoad: ((_lengthRef$current = lengthRef.current) === null || _lengthRef$current === void 0 ? void 0 : _lengthRef$current.value) || \"\",\n            WidthLoad: ((_widthRef$current = widthRef.current) === null || _widthRef$current === void 0 ? void 0 : _widthRef$current.value) || \"\",\n            HeightLoad: ((_heightRef$current = heightRef.current) === null || _heightRef$current === void 0 ? void 0 : _heightRef$current.value) || \"\",\n            WeightLoad: ((_weightRef$current = weightRef.current) === null || _weightRef$current === void 0 ? void 0 : _weightRef$current.value) || \"\",\n            qrCode: \"\"\n          };\n          /* edited (fix client mobile number intro) */\n\n          if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\n            var firstZero = DeliveryParams.ClientMobileNumber[0];\n            var replaced = DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');\n            DeliveryParams.ClientMobileNumber = replaced;\n          }\n\n          var AddressClint = {\n            IdCity: selectedPickUpAddress.cityId,\n            // from selected pick up address\n            IdArea: selectedPickUpAddress.areaId,\n            // from selected pick up address\n            OtherDetails: selectedPickUpAddress.details,\n            // details from selected pickup address\n            LatSender: selectedPickUpAddress.latitude,\n            // from selected pick up address\n            LongSender: selectedPickUpAddress.longitude,\n            //  from selected pick up address\n            SenderAddressId: selectedPickUpAddress.id,\n            // from selected pick up address\n            IdCityDes: selectedDeliveryAddress.cityId,\n            // from selected delivery to address\n            IdAreaDes: selectedDeliveryAddress.areaId,\n            // from selected delivery to address\n            OtherDetailsDes: selectedDeliveryAddress.details,\n            // details from selected delivery to address\n            LatReciver: selectedDeliveryAddress.latitude,\n            // from selected delivery to address\n            LongReciver: selectedDeliveryAddress.longitude,\n            // from selected delivery to address\n            ReciverAddressId: selectedDeliveryAddress.id,\n            // from selected delivery to address\n            ReceiverAddressNum: selectedDeliveryAddress.phone_number\n          };\n          CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy\n          /* edited (add CreatedBy parameter) */\n          , JSON.stringify(AddressClint)).then(function (res) {\n            /* edited (test data) */\n            // console.log(\"---------------\\nres : \" + res.data);\n\n            /* to be edited (to print order by returned id) */\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n            // setOpenConf(true);\n\n            /* if (res.data == \"Blocked\") {\r\n                dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n            } */\n            setOpen(false);\n            setLoadingSubmit(false);\n            props.onSuccess();\n          });\n        } else {\n          // console.log(\"false\");\n          showValidation();\n        }\n      } else {\n        if (selectedPickUpAddress && selectedDeliveryAddress) {\n          var _lengthRef$current2, _widthRef$current2, _heightRef$current2, _weightRef$current2;\n\n          // console.log(\"true\");\n          hideValidation();\n          CreatedBy = \"Client\";\n          DeliveryParams = {\n            deliveryWay: deliveryType,\n            TypeLoad: packageType,\n            CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n            // 2 or 4\n            DetailsLoad: notesRef.current.value,\n            LengthLoad: ((_lengthRef$current2 = lengthRef.current) === null || _lengthRef$current2 === void 0 ? void 0 : _lengthRef$current2.value) || \"\",\n            WidthLoad: ((_widthRef$current2 = widthRef.current) === null || _widthRef$current2 === void 0 ? void 0 : _widthRef$current2.value) || \"\",\n            HeightLoad: ((_heightRef$current2 = heightRef.current) === null || _heightRef$current2 === void 0 ? void 0 : _heightRef$current2.value) || \"\",\n            WeightLoad: ((_weightRef$current2 = weightRef.current) === null || _weightRef$current2 === void 0 ? void 0 : _weightRef$current2.value) || \"\",\n            qrCode: \"\"\n          };\n          var _AddressClint = {\n            IdCity: selectedPickUpAddress.cityId,\n            // from selected pick up address\n            IdArea: selectedPickUpAddress.areaId,\n            // from selected pick up address\n            OtherDetails: selectedPickUpAddress.details,\n            // details from selected pickup address\n            LatSender: selectedPickUpAddress.latitude,\n            // from selected pick up address\n            LongSender: selectedPickUpAddress.longitude,\n            //  from selected pick up address\n            SenderAddressId: selectedPickUpAddress.id,\n            // from selected pick up address\n            IdCityDes: selectedDeliveryAddress.cityId,\n            // from selected delivery to address\n            IdAreaDes: selectedDeliveryAddress.areaId,\n            // from selected delivery to address\n            OtherDetailsDes: selectedDeliveryAddress.details,\n            // details from selected delivery to address\n            LatReciver: selectedDeliveryAddress.latitude,\n            // from selected delivery to address\n            LongReciver: selectedDeliveryAddress.longitude,\n            // from selected delivery to address\n            ReciverAddressId: selectedDeliveryAddress.id,\n            // from selected delivery to address\n            ReceiverAddressNum: selectedDeliveryAddress.phone_number\n          };\n          CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy\n          /* edited (add CreatedBy parameter) */\n          , JSON.stringify(_AddressClint)).then(function (res) {\n            /* edited (test data) */\n            // console.log(\"---------------\\nres : \" + res.data);\n\n            /* to be edited (to print order by returned id) */\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n            // setOpenConf(true);\n\n            /*  if (res.data == \"Blocked\") {\r\n                 dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n             } */\n            // console.log(res.data)\n            setOpen(false);\n            setLoadingSubmit(false);\n            props.onSuccess();\n          });\n        } else {\n          // console.log(\"false\");\n          showValidation();\n        }\n        /* - deliveryWay \r\n        This one from radio button for delivery type it contains four values \r\n            (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n        - CostLoad   \r\n            This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n        - TypeLoad   \r\n            This one from the list we pick Food or Small/Medium/Large package where \r\n                Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n        - qrCode\r\n            in case of submit with qrcode we will put the value else it will be empty */\n\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 21\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 43\n    }\n  }), translate(\"ORDERS.SUBMIT_ORDER\")), !isTransporter() && /*#__PURE__*/React.createElement(Button\n  /* disabled */\n  , {\n    className: \"btn-grad\",\n    style: {\n      width: \"45%\"\n    },\n    onClick: function onClick() {\n      console.log(\"working!!\");\n      setBeginValidation(true);\n\n      if (selectedPickUpAddress && selectedDeliveryAddress) {\n        var _lengthRef$current3, _widthRef$current3, _heightRef$current3, _weightRef$current3;\n\n        hideValidation();\n        var tempDeliveryParams = {\n          deliveryWay: deliveryType,\n          TypeLoad: packageType,\n          CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n          // 2 or 4\n          DetailsLoad: notesRef.current.value,\n          LengthLoad: ((_lengthRef$current3 = lengthRef.current) === null || _lengthRef$current3 === void 0 ? void 0 : _lengthRef$current3.value) || \"\",\n          WidthLoad: ((_widthRef$current3 = widthRef.current) === null || _widthRef$current3 === void 0 ? void 0 : _widthRef$current3.value) || \"\",\n          HeightLoad: ((_heightRef$current3 = heightRef.current) === null || _heightRef$current3 === void 0 ? void 0 : _heightRef$current3.value) || \"\",\n          WeightLoad: ((_weightRef$current3 = weightRef.current) === null || _weightRef$current3 === void 0 ? void 0 : _weightRef$current3.value) || \"\",\n          qrCode: \"\"\n        };\n        var tempAddressClint = {\n          IdCity: selectedPickUpAddress.cityId,\n          // from selected pick up address\n          IdArea: selectedPickUpAddress.areaId,\n          // from selected pick up address\n          OtherDetails: selectedPickUpAddress.details,\n          // details from selected pickup address\n          LatSender: selectedPickUpAddress.latitude,\n          // from selected pick up address\n          LongSender: selectedPickUpAddress.longitude,\n          //  from selected pick up address\n          SenderAddressId: selectedPickUpAddress.id,\n          // from selected pick up address\n          IdCityDes: selectedDeliveryAddress.cityId,\n          // from selected delivery to address\n          IdAreaDes: selectedDeliveryAddress.areaId,\n          // from selected delivery to address\n          OtherDetailsDes: selectedDeliveryAddress.details,\n          // details from selected delivery to address\n          LatReciver: selectedDeliveryAddress.latitude,\n          // from selected delivery to address\n          LongReciver: selectedDeliveryAddress.longitude,\n          // from selected delivery to address\n          ReciverAddressId: selectedDeliveryAddress.id,\n          // from selected delivery to address\n          ReceiverAddressNum: selectedDeliveryAddress.phone_number\n        }; // console.log(selectedPickUpAddress.areaId + \" -> \" + selectedDeliveryAddress.areaId);\n\n        setAssignDeliveryParams(tempDeliveryParams);\n        setAssignAddressClint(tempAddressClint);\n        setOpenAssignDialog(true);\n      } else {\n        showValidation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 42\n    }\n  }, translate(\"TEMP.SUBMIT_AND_ASSIGN\")))), openAssignDialog && /*#__PURE__*/React.createElement(SubmitAndAssignDialog, {\n    onSuccess: function onSuccess() {\n      return props.onSuccess();\n    },\n    setCloseAssignDialog: setCloseAssignDialog,\n    setCloseMainDialog: setCloseMainDialog,\n    loadingSubmit: loadingSubmit,\n    assignDeliveryParams: assignDeliveryParams,\n    assignAddressClint: assignAddressClint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 21\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 21\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 21\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 21\n    }\n  }, \"Yes\"))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrder.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","GetTransporterClients","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","useDispatch","toastNotification","isTransporter","SubmitAndAssignDialog","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","dispatch","open","setOpen","openConf","setOpenConf","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","clientInputValue","setClientInputValue","deliverAddresses","setDeliverAddresses","allClients","setAllClients","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","openAssignDialog","setOpenAssignDialog","assignAddressClint","setAssignAddressClint","assignDeliveryParams","setAssignDeliveryParams","beginValidation","setBeginValidation","selectedClientCheck","setSelectedClientCheckShow","deliveryCostCheck","setDeliveryCostCheckShow","selectedPickUpAddressCheck","setSelectedPickUpAddressCheckShow","selectedDeliveryAddressCheck","setSelectedDeliveryAddressCheckShow","deliveryCostRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","timer","setTimeout","then","res","data","clearTimeout","membersData","filter","client","FullName","toLowerCase","replaceAll","includes","showValidation","current","value","hideValidation","setCloseAssignDialog","setCloseMainDialog","children","display","width","height","marginRight","marginLeft","fill","color","marginTop","eve","createElement","style","className","event","target","name","formatMessage","id","cursor","CreatedBy","DeliveryParams","deliveryWay","TypeLoad","ClientMobileNumber","PhoneNumber","DeliveryPrice","CostLoad","DetailsLoad","LengthLoad","WidthLoad","HeightLoad","WeightLoad","qrCode","charAt","firstZero","replaced","replace","AddressClint","IdCity","cityId","IdArea","areaId","OtherDetails","details","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","IdAreaDes","OtherDetailsDes","LatReciver","LongReciver","ReciverAddressId","ReceiverAddressNum","phone_number","JSON","stringify","onSuccess","console","log","tempDeliveryParams","tempAddressClint","window"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../i18n/translate\";\r\nimport { ReactComponent as SendIcon } from \"../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"../APIs/OrdersAPIs\";\r\n// import { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import GetAllClients) */\r\nimport { GetTransporterClients } from \"../APIs/OrdersAPIs\"; /* edited (import GetTransporterClients) */\r\nimport { ReactComponent as FoodIcon } from \"../assets/images/food.svg\";\r\nimport { ReactComponent as SmBoxIcon } from \"../assets/images/smallBox.svg\";\r\nimport { ReactComponent as MedBoxIcon } from \"../assets/images/medbox.svg\";\r\nimport { ReactComponent as BigBoxIcon } from \"../assets/images/largebox.svg\";\r\nimport { ReactComponent as DeliveryTruckIcon } from \"../assets/images/deliveryTruck.svg\";\r\nimport { ReactComponent as LocationIcon } from \"../assets/images/location.svg\";\r\nimport { ReactComponent as AttachmentIcon } from \"../assets/images/attachment.svg\";\r\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"./AddressDropdown\";\r\nimport ClientDropdown from \"./ClientDropdown\"; /* edited (import ClientDropdown) */\r\nimport CreateAddress from \"./CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../Actions/GeneralActions\";\r\n\r\nimport { isTransporter } from \"../Util\"; /* edited (new import) */\r\n\r\nimport SubmitAndAssignDialog from \"./SubmitAndAssignDialog\"; /* edited (new import) */\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport function CreateNewOrder(props) {\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState(''); /* edited (clientInputValue added) */\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) Note: not all clients */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const [openAssignDialog, setOpenAssignDialog] = useState(false);\r\n    const [assignAddressClint, setAssignAddressClint] = useState(false);\r\n    const [assignDeliveryParams, setAssignDeliveryParams] = useState(false);\r\n\r\n    /* edited (validation variables) */\r\n\r\n    const [beginValidation, setBeginValidation] = useState(false);\r\n    const [selectedClientCheck, setSelectedClientCheckShow] = useState(false);\r\n    const [deliveryCostCheck, setDeliveryCostCheckShow] = useState(false);\r\n    const [selectedPickUpAddressCheck, setSelectedPickUpAddressCheckShow] = useState(false);\r\n    const [selectedDeliveryAddressCheck, setSelectedDeliveryAddressCheckShow] = useState(false);\r\n\r\n    const deliveryCostRef = useRef(); /* edited (deliveryCostRef added) */\r\n    // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetDefinedAddresses(inputValue).then((res) => {\r\n                    setLoading(false);\r\n                    setDeliverAddresses(res.data);\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetTransporterClients().then((res) => {\r\n                    setLoading(false);\r\n\r\n                    setAllClients(res.data.membersData.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, open]);\r\n\r\n    /* edited (show and hide validation error messages handles) */\r\n\r\n    function showValidation() {\r\n        // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\r\n\r\n        if (isTransporter()) {\r\n            if (selectedClient) {\r\n                setSelectedClientCheckShow(false)\r\n            } else {\r\n                setSelectedClientCheckShow(true)\r\n            }\r\n\r\n            if (deliveryCostRef && deliveryCostRef.current.value > 0) {\r\n                setDeliveryCostCheckShow(false)\r\n            } else {\r\n                setDeliveryCostCheckShow(true)\r\n            }\r\n        }\r\n\r\n        if (selectedPickUpAddress) {\r\n            setSelectedPickUpAddressCheckShow(false)\r\n        } else {\r\n            setSelectedPickUpAddressCheckShow(true)\r\n        }\r\n\r\n        if (selectedDeliveryAddress) {\r\n            setSelectedDeliveryAddressCheckShow(false)\r\n        } else {\r\n            setSelectedDeliveryAddressCheckShow(true)\r\n        }\r\n\r\n        // console.log(\"show validation\");\r\n    }\r\n\r\n    function hideValidation() {\r\n        setBeginValidation(false);\r\n        setSelectedClientCheckShow(false);\r\n        setDeliveryCostCheckShow(false);\r\n        setSelectedPickUpAddressCheckShow(false);\r\n        setSelectedDeliveryAddressCheckShow(false);\r\n\r\n        // console.log(\"hide validation\");\r\n    }\r\n\r\n    function setCloseAssignDialog() {\r\n        setOpenAssignDialog(false);\r\n    }\r\n\r\n    function setCloseMainDialog() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* edited (change button style if the user is transporter) */}\r\n\r\n            {/* edited (on-header button commented) */}\r\n            {/*<Button className={`${props.children ? \"\" : !isTransporter() && \"btn-grad text-white\"}`} variant={isTransporter() && \"outline-light\"} onClick={()=>{\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight:\"5px\", fill:\"currentcolor\"}} />\r\n                        {translate(\"ORDERS.NEW_CUSTOMER_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>*/}\r\n            <Button className={\"btn-grad text-white\"} onClick={() => {\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{ display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight: \"5px\", marginLeft: \"5px\", fill: \"currentcolor\" }} />\r\n                        {translate(\"ORDERS.CREATE_NEW_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>\r\n            <Modal size=\"lg\" show={open} onHide={handleClose} centered animation={true} backdrop=\"static\">\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDERS.CREATE_ORDER\")}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n\r\n                    {/* edited (Client Mobile Number & Delivery Cost Fields added) */}\r\n                    {isTransporter() && <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9\">\r\n                                {/*<Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Client Mobile Number\" ref={clientMobileNumberRef} />*/}\r\n\r\n                                {/* edited (add clients dropdown) */}\r\n\r\n                                <ClientDropdown /* fofo */\r\n                                    loading={loading}\r\n                                    clients={allClients}\r\n                                    onSearch={setClientInputValue}\r\n                                    onSelect={setSelectedClient}\r\n                                    selectedClient={selectedClient}\r\n                                />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <Form.Control type=\"number\" style={{ marginTop: \"20px\" }} className=\"rounded-22\" placeholder=\"Delivery Cost\" ref={deliveryCostRef} />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n                            </div>\r\n                        </div>\r\n                    </>}\r\n\r\n                    <hr className=\"mt-3 mb-3\" />\r\n\r\n                    <div className=\"my-1\">\r\n                        {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                    </div>\r\n\r\n                    <Dropdown\r\n                        style={{ width: \"30%\" }}\r\n                        className=\"togo-dropdown\"\r\n                        onSelect={(eve) => {\r\n                            setPackageType(eve);\r\n                        }}>\r\n                        <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                            {React.createElement(PackageTypesIcons[packageType], { style: { width: \"20px\", height: \"20px\" }, className: \"me-1\" })}\r\n                            <div style={{ width: \"97%\" }}>\r\n                                {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"w-100\">\r\n                            <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Form.Group onChange={(event) => {\r\n                        if (event.target.name === \"DeliveryType\") {\r\n                            setDeliveryType(event.target.value);\r\n                        }\r\n                    }}>\r\n\r\n                        <div className=\"d-flex align-items-center my-1\">\r\n                            <DeliveryTruckIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                            {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                        </div>\r\n\r\n                        <div className=\"d-flex align-items-center\" style={{ height: \"40px\" }}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[1])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios1\"\r\n                                value=\"1\"\r\n                                defaultChecked={deliveryType === \"1\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{ height: \"40px\" }}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[2])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios2\"\r\n                                value=\"2\"\r\n                                defaultChecked={deliveryType === \"2\"}\r\n                            />\r\n                            {deliveryType === \"2\" &&\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    className=\"ms-auto w-25\"\r\n                                    placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                    ref={codAmountRef}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        {/*<div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[3])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios3\"\r\n                                value=\"3\"\r\n                                defaultChecked={deliveryType === \"3\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[4])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios4\"\r\n                                value=\"4\"\r\n                                defaultChecked={deliveryType === \"4\"}\r\n                            />\r\n                            {deliveryType === \"4\" && \r\n                                <Form.Control \r\n                                    ref={pickAmountRef}\r\n                                    type=\"number\"\r\n                                    className=\"ms-auto w-25\"\r\n                                    placeholder={intl.formatMessage({id: \"ORDERS.AMOUNT\"})}\r\n                                />\r\n                            }\r\n                        </div>*/}\r\n                    </Form.Group>\r\n\r\n                    <div className=\"d-flex align-items-end\">\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center my-1\">\r\n                                <LocationIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                            </div>\r\n\r\n                            <AddressDropdown\r\n                                loading={loading}\r\n                                addresses={deliverAddresses}\r\n                                onSearch={setInputValue}\r\n                                onSelect={setSelectedPickUpAddress}\r\n                                selectedAddress={selectedPickUpAddress}\r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedPickUpAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center my-1\">\r\n                                <SendIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                                <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                            </div>\r\n\r\n                            <AddressDropdown\r\n                                loading={loading}\r\n                                addresses={deliverAddresses}\r\n                                onSearch={setInputValue}\r\n                                onSelect={setSelectedDeliveryAddress}\r\n                                selectedAddress={selectedDeliveryAddress}\r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedDeliveryAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n                        <CreateAddress>\r\n                            <div style={{ cursor: \"pointer\" }} className=\"btn-grad-circle p-2\">\r\n                                <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                            </div>\r\n                        </CreateAddress>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <AttachmentIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                        {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                    </div>\r\n\r\n                    {packageType !== \"1\" &&\r\n                        <>\r\n                            <div className=\"my-1\">{translate(\"ORDERS.DIMENSIONS_LABEL\")}</div>\r\n                            <div className=\"d-flex\">\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    className=\"me-2\"\r\n                                    placeholder=\"Height\"\r\n                                    ref={heightRef}\r\n                                />\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    className=\"me-2\"\r\n                                    placeholder=\"Width\"\r\n                                    ref={widthRef}\r\n                                />\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    className=\"\"\r\n                                    placeholder=\"Length\"\r\n                                    ref={lengthRef}\r\n                                />\r\n                            </div>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                className=\"mt-2\"\r\n                                placeholder=\"Weight\"\r\n                                ref={weightRef}\r\n                            />\r\n                        </>\r\n                    }\r\n                    <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Notes\" ref={notesRef} />\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-center\">\r\n\r\n                    {/*<Form.Check type=\"checkbox\" label=\"Only for my network\" />*/}\r\n\r\n                    <Button\r\n                        className=\"btn-grad\"\r\n                        style={{ width: \"45%\" }}\r\n                        disabled={loadingSubmit}\r\n                        onClick={() => {\r\n\r\n                            setLoadingSubmit(true);\r\n\r\n                            setBeginValidation(true);\r\n\r\n                            let CreatedBy = \"\"; /* edited (CreatedBy variable added) */\r\n                            let DeliveryParams = {}; /* edited (DeliveryParams as empty object) */\r\n\r\n                            if (isTransporter()) {\r\n                                if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\r\n                                    // console.log(\"true\");\r\n\r\n                                    hideValidation();\r\n\r\n                                    CreatedBy = \"Transporter\";\r\n\r\n                                    DeliveryParams = {\r\n                                        deliveryWay: deliveryType,\r\n                                        TypeLoad: packageType,\r\n                                        // ClientMobileNumber: clientMobileNumberRef.current.value, /* edited (add ClientMobileNumber) */\r\n                                        ClientMobileNumber: selectedClient.PhoneNumber, /* edited (add ClientMobileNumber from dropdown) */\r\n                                        DeliveryPrice: deliveryCostRef.current.value, /* edited (add DeliveryPrice) */\r\n                                        CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                        DetailsLoad: notesRef.current.value,\r\n                                        LengthLoad: lengthRef.current?.value || \"\",\r\n                                        WidthLoad: widthRef.current?.value || \"\",\r\n                                        HeightLoad: heightRef.current?.value || \"\",\r\n                                        WeightLoad: weightRef.current?.value || \"\",\r\n                                        qrCode: \"\"\r\n                                    };\r\n\r\n                                    /* edited (fix client mobile number intro) */\r\n                                    if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\r\n                                        const firstZero = DeliveryParams.ClientMobileNumber[0];\r\n                                        const replaced = DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');\r\n                                        DeliveryParams.ClientMobileNumber = replaced;\r\n                                    }\r\n\r\n                                    const AddressClint = {\r\n                                        IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                        IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                        OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                        LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                        LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                        SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                        IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                        IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                        OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                        LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                        LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                        ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                        ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                    };\r\n\r\n                                    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then((res) => {\r\n                                        /* edited (test data) */\r\n                                        // console.log(\"---------------\\nres : \" + res.data);\r\n\r\n                                        /* to be edited (to print order by returned id) */\r\n\r\n                                        // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\r\n                                        //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n                                        // setOpenConf(true);\r\n\r\n                                        /* if (res.data == \"Blocked\") {\r\n                                            dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n                                        } */\r\n\r\n                                        setOpen(false);\r\n                                        setLoadingSubmit(false);\r\n                                        props.onSuccess();\r\n                                    });\r\n\r\n                                } else {\r\n                                    // console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n                            } else {\r\n                                if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n                                    // console.log(\"true\");\r\n\r\n                                    hideValidation();\r\n\r\n                                    CreatedBy = \"Client\";\r\n\r\n                                    DeliveryParams = {\r\n                                        deliveryWay: deliveryType,\r\n                                        TypeLoad: packageType,\r\n                                        CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                        DetailsLoad: notesRef.current.value,\r\n                                        LengthLoad: lengthRef.current?.value || \"\",\r\n                                        WidthLoad: widthRef.current?.value || \"\",\r\n                                        HeightLoad: heightRef.current?.value || \"\",\r\n                                        WeightLoad: weightRef.current?.value || \"\",\r\n                                        qrCode: \"\"\r\n                                    };\r\n\r\n                                    const AddressClint = {\r\n                                        IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                        IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                        OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                        LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                        LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                        SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                        IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                        IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                        OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                        LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                        LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                        ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                        ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                    };\r\n\r\n                                    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then((res) => {\r\n                                        /* edited (test data) */\r\n                                        // console.log(\"---------------\\nres : \" + res.data);\r\n\r\n                                        /* to be edited (to print order by returned id) */\r\n\r\n                                        // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\r\n                                        //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n                                        // setOpenConf(true);\r\n\r\n                                        /*  if (res.data == \"Blocked\") {\r\n                                             dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n                                         } */\r\n\r\n                                        // console.log(res.data)\r\n\r\n                                        setOpen(false);\r\n                                        setLoadingSubmit(false);\r\n                                        props.onSuccess();\r\n                                    });\r\n                                } else {\r\n                                    // console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n\r\n                                /* - deliveryWay \r\n                                This one from radio button for delivery type it contains four values \r\n                                    (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n                                - CostLoad   \r\n                                    This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n                                - TypeLoad   \r\n                                    This one from the list we pick Food or Small/Medium/Large package where \r\n                                        Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n                                - qrCode\r\n                                    in case of submit with qrcode we will put the value else it will be empty */\r\n                            }\r\n                        }}\r\n                    >\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                        {translate(\"ORDERS.SUBMIT_ORDER\")}\r\n                    </Button>\r\n\r\n                    {!isTransporter() && <Button\r\n                        /* disabled */\r\n                        className=\"btn-grad\"\r\n                        style={{ width: \"45%\" }}\r\n                        onClick={() => {\r\n                            console.log(\"working!!\")\r\n\r\n                            setBeginValidation(true);\r\n\r\n                            if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n\r\n                                hideValidation();\r\n\r\n                                const tempDeliveryParams = {\r\n                                    deliveryWay: deliveryType,\r\n                                    TypeLoad: packageType,\r\n                                    CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                    DetailsLoad: notesRef.current.value,\r\n                                    LengthLoad: lengthRef.current?.value || \"\",\r\n                                    WidthLoad: widthRef.current?.value || \"\",\r\n                                    HeightLoad: heightRef.current?.value || \"\",\r\n                                    WeightLoad: weightRef.current?.value || \"\",\r\n                                    qrCode: \"\"\r\n                                };\r\n\r\n                                const tempAddressClint = {\r\n                                    IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                    IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                    OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                    LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                    LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                    SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                    IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                    IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                    OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                    LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                    LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                    ReciverAddressId: selectedDeliveryAddress.id, // from selected delivery to address\r\n                                    ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                };\r\n\r\n                                // console.log(selectedPickUpAddress.areaId + \" -> \" + selectedDeliveryAddress.areaId);\r\n\r\n                                setAssignDeliveryParams(tempDeliveryParams);\r\n                                setAssignAddressClint(tempAddressClint);\r\n\r\n                                setOpenAssignDialog(true);\r\n                            } else {\r\n                                showValidation();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {translate(\"TEMP.SUBMIT_AND_ASSIGN\")}\r\n                    </Button>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {openAssignDialog && <SubmitAndAssignDialog\r\n                onSuccess={() => props.onSuccess()}\r\n                setCloseAssignDialog={setCloseAssignDialog}\r\n                setCloseMainDialog={setCloseMainDialog}\r\n                loadingSubmit={loadingSubmit}\r\n                assignDeliveryParams={assignDeliveryParams}\r\n                assignAddressClint={assignAddressClint} />}\r\n\r\n            <Modal\r\n                show={openConf}\r\n                onHide={() => {\r\n\r\n                    setOpenConf(false);\r\n                }}\r\n                animation={false}\r\n                backdrop=\"static\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>Would you like to print a waybill ?</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={() => {\r\n                            setOpenConf(false);\r\n                        }}\r\n                    >\r\n                        No\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            setOpenConf(false);\r\n                            window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}