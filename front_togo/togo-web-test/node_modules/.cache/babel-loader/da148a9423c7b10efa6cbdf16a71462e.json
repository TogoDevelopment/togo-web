{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from \"react\";\nexport function useButtonType(value) {\n  var _React$useState = React.useState(!value),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isButton = _React$useState2[0],\n    setIsButton = _React$useState2[1];\n  var refCallback = React.useCallback(function (node) {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type: type\n  };\n}","map":{"version":3,"names":["React","useButtonType","value","_React$useState","useState","_React$useState2","_slicedToArray","isButton","setIsButton","refCallback","useCallback","node","tagName","type","undefined","ref"],"sources":["../../src/use-button-type.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = React.useState(!value)\n  const refCallback = React.useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,SAASC,aAATA,CAAuBC,KAAvB,EAAkD;EACvD,IAAAC,eAAA,GAAgCH,KAAK,CAACI,QAAN,CAAe,CAACF,KAAhB,CAAhC;IAAAG,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,QAAD,GAAAF,gBAAA;IAAWG,WAAX,GAAAH,gBAAA;EACN,IAAMI,WAAW,GAAGT,KAAK,CAACU,WAAN,CAAmB,UAAAC,IAAD,EAA8B;IAClE,IAAI,CAACA,IAAL,EAAW;IACXH,WAAW,CAACG,IAAI,CAACC,OAAL,KAAiB,QAAlB,CAAX;EACD,CAHmB,EAGjB,EAHiB,CAApB;EAIA,IAAMC,IAAI,GAAGN,QAAQ,GAAG,QAAH,GAAcO,SAAnC;EACA,OAAO;IAAEC,GAAG,EAAEN,WAAP;IAAoBI,IAAA,EAAAA;EAApB,CAAP;AACD"},"metadata":{},"sourceType":"module"}