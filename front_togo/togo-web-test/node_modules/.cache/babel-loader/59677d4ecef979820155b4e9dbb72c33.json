{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/StuckOrder.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport translate from \"../i18n/translate\";\n/*import AccountInfo from \"../AccountInfo/AccountInfo\";*/\n\nimport { Accordion, Card, Button, Badge, Modal, Form } from \"react-bootstrap\";\nexport default function StuckOrder(props) {\n  // console.log(props.transportationParties) // temp test\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(localStorage.getItem(\"Language\") === 'en' ? true : false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEn = _useState6[0],\n      setIsEn = _useState6[1]; // const [users, setUsers] = useState(props.transportationParties[1].name === null ? props.transportationParties.splice(1,1) : props.transportationParties);\n\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    setShow(true);\n  };\n\n  useEffect(function () {\n    if (localStorage.getItem(\"Language\") === 'en') {\n      setIsEn(true);\n    } else {\n      setIsEn(false);\n    }\n  }); // console.log(props.users); /* test */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"border togo-button\",\n    style: {\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      width: \"150px\"\n    },\n    onClick: handleShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, translate(\"TEMP.STUCK\")), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    style: {\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, translate(\"TEMP.DESCRIPTION\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"w-100\",\n    variant: \"outline-primary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, translate(\"TEMP.SUBMIT\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/StuckOrder.jsx"],"names":["React","useState","useEffect","translate","Accordion","Card","Button","Badge","Modal","Form","StuckOrder","props","show","setShow","user","setUser","localStorage","getItem","isEn","setIsEn","handleClose","handleShow","marginRight","marginLeft","width","background"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA;;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,KAAzC,EAAgDC,IAAhD,QAA4D,iBAA5D;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC;AAEA,kBAAwBV,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOW,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBZ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOa,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBd,QAAQ,CAACe,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,IAArC,GAA4C,IAA5C,GAAmD,KAApD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb,iBANsC,CAQtC;;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAER,IAAAA,OAAO,CAAC,IAAD,CAAP;AAAe,GAA1C;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,IAAzC,EAA+C;AAC3CE,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAEO;AACHA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GANQ,CAAT,CAhBsC,CAwBtC;;AAEA,sBACI,uDACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,KAAK,EAAE;AACHG,MAAAA,WAAW,EAAE,KADV;AAEHC,MAAAA,UAAU,EAAE,KAFT;AAGHC,MAAAA,KAAK,EAAE;AAHJ,KAFX;AAOI,IAAA,OAAO,EAAEH,UAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKlB,SAAS,CAAC,YAAD,CARd,CADJ,eAWI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAES,IAAb;AAAmB,IAAA,MAAM,EAAEQ,WAA3B;AAAwC,IAAA,QAAQ,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAA0B,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAU,EAAE;AAAd,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,SAAS,CAAC,kBAAD,CADd,CADJ,eAKI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAA2C,IAAA,WAAW,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,eAUI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAC,iBAAlC;AAAoD,IAAA,OAAO,EAAEiB,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,SAAS,CAAC,aAAD,CADd,CAJJ,CAVJ,CAXJ,CADJ;AAiCH","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport translate from \"../i18n/translate\";\r\n/*import AccountInfo from \"../AccountInfo/AccountInfo\";*/\r\nimport { Accordion, Card, Button, Badge, Modal, Form } from \"react-bootstrap\";\r\n\r\nexport default function StuckOrder(props) {\r\n\r\n    // console.log(props.transportationParties) // temp test\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [user, setUser] = useState({});\r\n    const [isEn, setIsEn] = useState(localStorage.getItem(\"Language\") === 'en' ? true : false);\r\n\r\n    // const [users, setUsers] = useState(props.transportationParties[1].name === null ? props.transportationParties.splice(1,1) : props.transportationParties);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => { setShow(true) }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"Language\") === 'en') {\r\n            setIsEn(true);\r\n        } else {\r\n            setIsEn(false);\r\n        }\r\n    })\r\n\r\n    // console.log(props.users); /* test */\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                className=\"border togo-button\"\r\n                style={{\r\n                    marginRight: \"5px\",\r\n                    marginLeft: \"5px\",\r\n                    width: \"150px\"\r\n                }}\r\n                onClick={handleShow}>\r\n                {translate(\"TEMP.STUCK\")}\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Modal.Header closeButton style={{ background: \"linear-gradient(90deg, #26a69a, #69d4a5)\" }}>\r\n                    {translate(\"TEMP.DESCRIPTION\")}\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n\r\n                    <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Description\" />\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {/* <Button className=\"w-100\" variant=\"outline-secondary\" onClick={handleClose}>\r\n                        {translate(\"GENERAL.CLOSE\")}\r\n                    </Button> */}\r\n                    <Button className=\"w-100\" variant=\"outline-primary\" onClick={handleClose}>\r\n                        {translate(\"TEMP.SUBMIT\")}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}