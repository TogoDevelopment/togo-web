{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\n  authDomain: \"togo-7f889.firebaseapp.com\",\n  projectId: \"togo-7f889\",\n  storageBucket: \"togo-7f889.appspot.com\",\n  messagingSenderId: \"861859089841\",\n  appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\n  measurementId: \"G-4DSC9GYT3S\" // databaseURL: \"https://DATABASE_NAME.firebaseio.com\",\n\n}; // Initialize Firebase\n\nvar firebaseApp = initializeApp(firebaseConfig);\nvar messaging = getMessaging(firebaseApp);\nvar REACT_APP_VAPID_KEY = process.env.REACT_APP_VAPID_KEY;\nvar publicKey = REACT_APP_VAPID_KEY;\nconsole.log(publicKey);\nexport var getUserToken = function getUserToken() {\n  return getToken(messaging, {\n    vapidKey: publicKey\n  }).then(function (currentToken) {\n    if (currentToken) {\n      console.log('current token for client: ', currentToken); // Perform any other neccessary action with the token\n    } else {\n      // Show permission request UI\n      console.log('No registration token available. Request permission to generate one.');\n    }\n  }).catch(function (err) {\n    console.log('An error occurred while retrieving token. ', err);\n  });\n};\nexport var onMessageListener = function onMessageListener() {\n  return new Promise(function (resolve) {\n    onMessage(messaging, function (payload) {\n      console.log(payload);\n      resolve(payload);\n    });\n  });\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/firebase.js"],"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","messaging","REACT_APP_VAPID_KEY","process","env","publicKey","console","log","getUserToken","vapidKey","then","currentToken","catch","err","onMessageListener","Promise","resolve","payload"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,SAAjC,QAAkD,oBAAlD,C,CACA;AACA;AAEA;AACA;;AACA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,4BAFO;AAGnBC,EAAAA,SAAS,EAAE,YAHQ;AAInBC,EAAAA,aAAa,EAAE,wBAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE,2CANY;AAOnBC,EAAAA,aAAa,EAAE,cAPI,CAQnB;;AARmB,CAAvB,C,CAWA;;AACA,IAAMC,WAAW,GAAGZ,aAAa,CAACI,cAAD,CAAjC;AACA,IAAMS,SAAS,GAAGZ,YAAY,CAACW,WAAD,CAA9B;AACA,IAAQE,mBAAR,GAAgCC,OAAO,CAACC,GAAxC,CAAQF,mBAAR;AACA,IAAMG,SAAS,GAAGH,mBAAlB;AAEAI,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAOlB,QAAQ,CAACW,SAAD,EAAY;AAAEQ,IAAAA,QAAQ,EAAEJ;AAAZ,GAAZ,CAAR,CACJK,IADI,CACC,UAACC,YAAD,EAAkB;AACtB,QAAIA,YAAJ,EAAkB;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,YAA1C,EADgB,CAEhB;AACD,KAHD,MAGO;AACL;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,sEAAZ;AACD;AACF,GATI,EAUJK,KAVI,CAUE,UAACC,GAAD,EAAS;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DM,GAA1D;AACD,GAZI,CAAP;AAaD,CAdI;AAgBP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAC7B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACrBzB,IAAAA,SAAS,CAACU,SAAD,EAAY,UAACgB,OAAD,EAAa;AAC9BX,MAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AACAD,MAAAA,OAAO,CAACC,OAAD,CAAP;AACH,KAHQ,CAAT;AAIH,GALD,CAD6B;AAAA,CAA1B","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA4eDytrjfsvvmH-W7IlSPGjvOsuFM8IwY\",\r\n    authDomain: \"togo-7f889.firebaseapp.com\",\r\n    projectId: \"togo-7f889\",\r\n    storageBucket: \"togo-7f889.appspot.com\",\r\n    messagingSenderId: \"861859089841\",\r\n    appId: \"1:861859089841:web:5b55bc6bc5573930694190\",\r\n    measurementId: \"G-4DSC9GYT3S\"\r\n    // databaseURL: \"https://DATABASE_NAME.firebaseio.com\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(firebaseApp);\r\nconst { REACT_APP_VAPID_KEY } = process.env;\r\nconst publicKey = REACT_APP_VAPID_KEY;\r\n\r\nconsole.log(publicKey);\r\n\r\nexport const getUserToken = () => {\r\n    return getToken(messaging, { vapidKey: publicKey })\r\n      .then((currentToken) => {\r\n        if (currentToken) {\r\n          console.log('current token for client: ', currentToken);\r\n          // Perform any other neccessary action with the token\r\n        } else {\r\n          // Show permission request UI\r\n          console.log('No registration token available. Request permission to generate one.');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log('An error occurred while retrieving token. ', err);\r\n      });\r\n  };\r\n\r\nexport const onMessageListener = () =>\r\n    new Promise((resolve) => {\r\n        onMessage(messaging, (payload) => {\r\n            console.log(payload);\r\n            resolve(payload);\r\n        });\r\n    });"]},"metadata":{},"sourceType":"module"}