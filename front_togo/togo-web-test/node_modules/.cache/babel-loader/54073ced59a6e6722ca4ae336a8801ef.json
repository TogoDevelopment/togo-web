{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/Orders/Main.jsx\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport \"./Main.css\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { getFunctions } from \"../APIs/OrdersAPIs\";\nimport { OrdersTabularView } from \"./OrdersTabularView\";\nimport { Box } from \"@chakra-ui/react\";\nimport Invoice from \"../Invoice/Invoice\";\nimport { isTransporter } from \"../../Util\";\nimport Loader from \"../Loader/Loader\";\nimport { toastMessage } from \"../../Actions/GeneralActions\";\nimport { useDispatch } from \"react-redux\";\nimport translate from \"../../i18n/translate\";\nimport { useHistory } from \"react-router-dom\";\nimport { PAGE_SIZE } from '../UserManager/UserManager';\nimport PaginateComp from \"../Pagination/Pagination\";\nvar styles = {\n  invoicesContainer: {\n    d: \"flex\",\n    flexWrap: \"wrap\",\n    p: 10,\n    justifyContent: \"center\"\n  }\n};\n\nvar getCurrentPage = function getCurrentPage(history) {\n  var pathname = history.location.pathname;\n  return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n};\n\nvar Main = function Main() {\n  var _getCurrentPage;\n\n  var history = useHistory();\n\n  var _useState = useState((_getCurrentPage = getCurrentPage(history)) !== null && _getCurrentPage !== void 0 ? _getCurrentPage : \"all-orders\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      orders = _useState4[0],\n      setOrders = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalNumOfRecs = _useState6[0],\n      setTotalNumberOfRecs = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      activePage = _useState8[0],\n      setActivePage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      invoices = _useState10[0],\n      setInvoices = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var dispatch = useDispatch();\n\n  var cleanUp = function cleanUp() {\n    setOrders([]);\n    setInvoices([]);\n  };\n\n  useEffect(function () {\n    var currentPage = getCurrentPage(history);\n\n    if (!currentPage || currentPage === '/main') {\n      currentPage = \"all-orders\";\n      var currentPagePath = \"/account/main/\".concat(currentPage);\n      history.push(currentPagePath);\n    }\n\n    setCurrentPage(currentPage);\n    var historyUnListen = history.listen(function (location) {\n      var pathname = location.pathname;\n      var currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\n\n      if (!currentPageTmp) {\n        currentPageTmp = \"all-orders\";\n\n        var _currentPagePath = \"account/main/\".concat(currentPageTmp);\n\n        history.push(_currentPagePath);\n      }\n\n      setCurrentPage(currentPageTmp);\n    });\n    return function () {\n      historyUnListen();\n      cleanUp();\n    };\n  }, [history]);\n  var fetchData = useCallback(function (functionType, stateKey) {\n    setLoading(true);\n    getFunctions(functionType, activePage).then(function (resp) {\n      if (resp === 'NotActiveNow') {\n        dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\n      } else {\n        var _resp$data = resp.data,\n            server_response = _resp$data.server_response,\n            total_orders = _resp$data.total_orders;\n\n        switch (stateKey) {\n          case 'orders':\n            setTotalNumberOfRecs(total_orders);\n            setOrders(server_response);\n            break;\n\n          case 'invoices':\n            setInvoices(server_response);\n            break;\n\n          default:\n            break;\n        }\n      }\n    }).catch(function (err) {\n      dispatch(toastMessage(err));\n    }).finally(function () {\n      setLoading(false);\n    });\n  }, [dispatch, activePage]);\n  useEffect(function () {\n    var stateKey,\n        functionType = null;\n    cleanUp();\n\n    switch (currentPage) {\n      case \"all-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\n        break;\n\n      case \"current-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\n        break;\n\n      case \"previous-orders\":\n        stateKey = \"orders\";\n        functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\n        break;\n\n      case \"invoices\":\n        stateKey = \"invoices\";\n        functionType = isTransporter() ? \"getTransporterInvoices\" : \"getClientInvoices\";\n        break;\n\n      default:\n        break;\n    }\n\n    fetchData(functionType, stateKey);\n  }, [currentPage, fetchData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 20,\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    justify: true,\n    variant: \"tabs\",\n    defaultActiveKey: currentPage,\n    activeKey: currentPage,\n    onSelect: function onSelect(eventKey) {\n      return history.push(\"/account/main/\".concat(eventKey));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"all-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.ALL_ORDERS\"))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"current-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.CUR_ORDER\"))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"previous-orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.PREV_ORDER\"))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"financial-transaction\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.FINANCIAL_TRANSACTION\"))), /*#__PURE__*/React.createElement(Nav.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    eventKey: \"invoices\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.INVOICES\"))))), /*#__PURE__*/React.createElement(Box, {\n    height: \"400px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, !!orders && currentPage !== \"invoices\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(OrdersTabularView, {\n    orders: orders,\n    currentPage: currentPage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(PaginateComp, {\n    totalNumOfRecs: totalNumOfRecs,\n    pageSize: PAGE_SIZE,\n    activePage: activePage,\n    setActive: setActivePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  })), !!invoices.length && /*#__PURE__*/React.createElement(Box, Object.assign({}, styles.invoicesContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }), invoices.map(function (invoice) {\n    return /*#__PURE__*/React.createElement(Invoice, {\n      key: invoice.orderId,\n      invoice: invoice,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 54\n      }\n    });\n  })))));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/Orders/Main.jsx"],"names":["React","useCallback","useEffect","useState","Nav","getFunctions","OrdersTabularView","Box","Invoice","isTransporter","Loader","toastMessage","useDispatch","translate","useHistory","PAGE_SIZE","PaginateComp","styles","invoicesContainer","d","flexWrap","p","justifyContent","getCurrentPage","history","pathname","location","substr","lastIndexOf","length","Main","currentPage","setCurrentPage","orders","setOrders","totalNumOfRecs","setTotalNumberOfRecs","activePage","setActivePage","invoices","setInvoices","loading","setLoading","dispatch","cleanUp","currentPagePath","push","historyUnListen","listen","currentPageTmp","fetchData","functionType","stateKey","then","resp","data","server_response","total_orders","catch","err","finally","marginBottom","marginTop","eventKey","map","invoice","orderId"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport \"./Main.css\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport {getFunctions} from \"../APIs/OrdersAPIs\";\r\nimport {OrdersTabularView} from \"./OrdersTabularView\";\r\nimport {Box} from \"@chakra-ui/react\";\r\nimport Invoice from \"../Invoice/Invoice\";\r\nimport {isTransporter} from \"../../Util\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport {toastMessage} from \"../../Actions/GeneralActions\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport translate from \"../../i18n/translate\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {PAGE_SIZE} from '../UserManager/UserManager';\r\nimport PaginateComp from \"../Pagination/Pagination\";\r\nconst styles = {\r\n    invoicesContainer: {\r\n        d: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        p: 10,\r\n        justifyContent: \"center\"\r\n    }\r\n};\r\nconst getCurrentPage = (history) => {\r\n    const pathname = history.location.pathname;\r\n    return pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n}\r\n\r\nconst Main = () => {\r\n    let history = useHistory();\r\n\r\n    const [currentPage, setCurrentPage] = useState(getCurrentPage(history) ?? \"all-orders\");\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalNumOfRecs, setTotalNumberOfRecs] = useState(0);\r\n    const [activePage, setActivePage] = useState(0);\r\n    const [invoices, setInvoices] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n    const cleanUp = () => {\r\n        setOrders([]);\r\n        setInvoices([]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let currentPage = getCurrentPage(history);\r\n        if (!currentPage || currentPage === '/main') {\r\n            currentPage = \"all-orders\";\r\n            let currentPagePath = `/account/main/${currentPage}`;\r\n            history.push(currentPagePath);\r\n        }\r\n        setCurrentPage(currentPage);\r\n\r\n        let historyUnListen = history.listen(location => {\r\n            const pathname = location.pathname;\r\n            let currentPageTmp = pathname.substr(pathname.lastIndexOf('/') + 1, pathname.length);\r\n            if (!currentPageTmp) {\r\n                currentPageTmp = \"all-orders\";\r\n                let currentPagePath = `account/main/${currentPageTmp}`;\r\n                history.push(currentPagePath);\r\n            }\r\n            setCurrentPage(currentPageTmp);\r\n        });\r\n\r\n        return () => {\r\n            historyUnListen();\r\n            cleanUp();\r\n        }\r\n    }, [history]);\r\n\r\n    const fetchData = useCallback((functionType, stateKey) => {\r\n        setLoading(true);\r\n        getFunctions(functionType, activePage)\r\n            .then(resp => {\r\n                if (resp === 'NotActiveNow') {\r\n                    dispatch(toastMessage(translate(\"GENERAL.COULD_NOT_FETCH\"), translate(\"GENERAL.ERROR\")));\r\n                } else {\r\n                    const {data: {server_response, total_orders}} = resp;\r\n                    switch (stateKey) {\r\n                        case 'orders':\r\n                            setTotalNumberOfRecs(total_orders);\r\n                            setOrders(server_response);\r\n                            break;\r\n                        case 'invoices':\r\n                            setInvoices(server_response);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch(toastMessage(err));\r\n            }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }, [dispatch, activePage]);\r\n\r\n    useEffect(() => {\r\n        let stateKey, functionType = null;\r\n        cleanUp();\r\n        switch (currentPage) {\r\n            case \"all-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterGetOrder\" : \"ShowClientOrder\";\r\n                break;\r\n            case \"current-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterOrderCurrent\" : \"ClientShowBidRequistsAccepted\";\r\n                break;\r\n            case \"previous-orders\":\r\n                stateKey = \"orders\";\r\n                functionType = isTransporter() ? \"TransporterHistoryOrder\" : \"ClientHistoryOrder\";\r\n                break;\r\n            case \"invoices\":\r\n                stateKey = \"invoices\";\r\n                functionType = isTransporter() ? \"getTransporterInvoices\" : \"getClientInvoices\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        fetchData(functionType, stateKey);\r\n    }, [currentPage, fetchData]);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{marginBottom: 20, marginTop: 20}}>\r\n                <Nav\r\n                    justify\r\n                    variant=\"tabs\"\r\n                    defaultActiveKey={currentPage}\r\n                    activeKey={currentPage}\r\n                    onSelect={(eventKey) => history.push(`/account/main/${eventKey}`)}\r\n                >\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"all-orders\">{translate(\"ORDERS.ALL_ORDERS\")}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"current-orders\">{translate(\"ORDERS.CUR_ORDER\")}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"previous-orders\">{translate(\"ORDERS.PREV_ORDER\")}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link\r\n                            eventKey=\"financial-transaction\">{translate(\"ORDERS.FINANCIAL_TRANSACTION\")}</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"invoices\">{translate(\"ORDERS.INVOICES\")}</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </div>\r\n\r\n            <Box height=\"400px\">\r\n                {loading ? <Loader/> : (\r\n                    <>\r\n                        {!!orders && currentPage !== \"invoices\" &&\r\n                        <>\r\n                            <OrdersTabularView\r\n                                orders={orders}\r\n                                currentPage={currentPage}\r\n                            />\r\n                            <PaginateComp \r\n                                totalNumOfRecs={totalNumOfRecs}\r\n                                pageSize={PAGE_SIZE}\r\n                                activePage={activePage}\r\n                                setActive={setActivePage}\r\n                            />\r\n                        </>\r\n                        }\r\n\r\n                        {!!invoices.length &&\r\n                        <Box {...styles.invoicesContainer}>\r\n                            {invoices.map(invoice => <Invoice key={invoice.orderId} invoice={invoice}/>)}\r\n                        </Box>\r\n                        }\r\n                    </>\r\n                )}\r\n            </Box>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}