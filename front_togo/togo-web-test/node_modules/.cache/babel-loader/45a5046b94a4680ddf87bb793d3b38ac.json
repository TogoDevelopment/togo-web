{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/AdminPanel/CustomerInfo/UsersMap.jsx\";\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Badge from \"react-bootstrap/Badge\";\nimport './styles.css';\nimport { GetAllCities } from \"../../../APIs/AdminPanelApis\";\nvar DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nvar UsersMap = function UsersMap(props) {\n  /* const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n    useEffect(() => {\r\n      function handleResize() {\r\n          setWindowHeight(window.innerHeight)\r\n      }\r\n        window.addEventListener('resize', handleResize)\r\n  }, []) */\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      btnClients = _useState2[0],\n      setBtnClients = _useState2[1];\n\n  var _useState3 = useState(\"active\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      btnTransporters = _useState4[0],\n      setBtnTransporters = _useState4[1];\n\n  var toggleHandler = function toggleHandler() {\n    if (btnClients === \"active\") {\n      setBtnClients(\"\");\n      setBtnTransporters(\"active\");\n    } else {\n      setBtnClients(\"active\");\n      setBtnTransporters(\"\");\n    }\n  };\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allCities = _useState6[0],\n      setAllCities = _useState6[1];\n\n  var _useState7 = useState({\n    \"centerLat\": 0,\n    \"centerLong\": 0\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      centerMarkerPosition = _useState8[0],\n      setCenterMarkerPosition = _useState8[1];\n\n  useEffect(function () {\n    GetAllCities().then(function (res) {\n      setAllCities(res.data.cities_list); // setCenterMarkerPosition(getCenter(res.data.cities_list));\n      // console.log(getCenter(res.data.cities_list))\n    });\n  }, []);\n\n  var getCenter = function getCenter(points) {\n    var sumX = 0;\n    var sumY = 0;\n    var n = points.length;\n\n    for (var i = 0; i < points.length; i++) {\n      sumX += parseFloat(points[i].LatRegion);\n      sumY += parseFloat(points[i].LongRegion);\n    }\n\n    return {\n      \"centerLat\": 1 / n * sumX,\n      \"centerLong\": 1 / n * sumY\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 d-flex flex-column bg-white p-3 rounded-22 shadow map-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    className: btnClients + \" toggleButtonLeft\",\n    onClick: toggleHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Clients\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    className: btnTransporters + \" toggleButtonRight\",\n    onClick: toggleHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Transporters\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"bi bi-plus-lg h5 ms-5 mt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Add New City/Village\"))), /*#__PURE__*/React.createElement(MapContainer, {\n    key: JSON.stringify([0, 0]),\n    id: \"mapId\",\n    center: [31.9522, 35.2332],\n    zoom: 9.5,\n    style: {\n      height: \"100%\"\n    },\n    className: \"rounded-22\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), allCities === null || allCities === void 0 ? void 0 : allCities.map(function (city, index) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      position: L.latLng(parseFloat(city.LatRegion), parseFloat(city.LongRegion)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Popup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, city.Name));\n  })));\n};\n\nexport default UsersMap;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/AdminPanel/CustomerInfo/UsersMap.jsx"],"names":["React","Component","useState","useEffect","MapContainer","Marker","Popup","TileLayer","L","icon","iconShadow","Button","Modal","Badge","GetAllCities","DefaultIcon","iconUrl","shadowUrl","prototype","options","UsersMap","props","btnClients","setBtnClients","btnTransporters","setBtnTransporters","toggleHandler","allCities","setAllCities","centerMarkerPosition","setCenterMarkerPosition","then","res","data","cities_list","getCenter","points","sumX","sumY","n","length","i","parseFloat","LatRegion","LongRegion","JSON","stringify","height","map","city","index","latLng","Name"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\r\nimport L from 'leaflet';\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport './styles.css';\r\nimport { GetAllCities } from \"../../../APIs/AdminPanelApis\";\r\n\r\nlet DefaultIcon = L.icon({\r\n    iconUrl: icon,\r\n    shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nconst UsersMap = (props) => {\r\n\r\n    /* const [windowHeight, setWindowHeight] = useState(window.innerHeight);\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowHeight(window.innerHeight)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n    }, []) */\r\n\r\n    const [btnClients, setBtnClients] = useState(\"\");\r\n    const [btnTransporters, setBtnTransporters] = useState(\"active\");\r\n\r\n    const toggleHandler = () => {\r\n        if (btnClients === \"active\") {\r\n            setBtnClients(\"\");\r\n            setBtnTransporters(\"active\")\r\n        } else {\r\n            setBtnClients(\"active\");\r\n            setBtnTransporters(\"\")\r\n        }\r\n    }\r\n\r\n    const [allCities, setAllCities] = useState([]);\r\n    const [centerMarkerPosition, setCenterMarkerPosition] = useState({ \"centerLat\": 0, \"centerLong\": 0 });\r\n\r\n    useEffect(() => {\r\n        GetAllCities().then((res) => {\r\n            setAllCities(res.data.cities_list);\r\n\r\n            // setCenterMarkerPosition(getCenter(res.data.cities_list));\r\n            // console.log(getCenter(res.data.cities_list))\r\n        })\r\n    }, [])\r\n\r\n    const getCenter = (points) => {\r\n        let sumX = 0;\r\n        let sumY = 0;\r\n        const n = points.length;\r\n\r\n        for (let i = 0; i < points.length; i++) {\r\n            sumX += parseFloat(points[i].LatRegion);\r\n            sumY += parseFloat(points[i].LongRegion);\r\n        }\r\n\r\n        return { \"centerLat\": (1 / n) * sumX, \"centerLong\": (1 / n) * sumY };\r\n    }\r\n\r\n    return (\r\n        <div className=\"h-100 d-flex flex-column bg-white p-3 rounded-22 shadow map-container\">\r\n            <div className=\"toggle-users\">\r\n                <Button variant=\"outline-secondary\" className={btnClients + \" toggleButtonLeft\"} onClick={toggleHandler} >Clients</Button>\r\n                <Button variant=\"outline-secondary\" className={btnTransporters + \" toggleButtonRight\"} onClick={toggleHandler} >Transporters</Button>\r\n                <div>\r\n                    <i className=\"bi bi-plus-lg h5 ms-5 mt-3\">Add New City/Village</i>\r\n                    {/* <span className=\"\">Add City/Village</span> */}\r\n                </div>\r\n            </div>\r\n            <MapContainer\r\n                key={JSON.stringify([0, 0])}\r\n                id=\"mapId\"\r\n                center={[31.9522, 35.2332]}\r\n                zoom={9.5}\r\n                style={{ height: \"100%\" }}\r\n                className=\"rounded-22\"\r\n            >\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n\r\n                {allCities?.map((city, index) => {\r\n                    return <Marker position={L.latLng(parseFloat(city.LatRegion), parseFloat(city.LongRegion))}>\r\n                        <Popup>\r\n                            {city.Name}\r\n                        </Popup>\r\n                    </Marker>\r\n                })}\r\n\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UsersMap;\r\n"]},"metadata":{},"sourceType":"module"}