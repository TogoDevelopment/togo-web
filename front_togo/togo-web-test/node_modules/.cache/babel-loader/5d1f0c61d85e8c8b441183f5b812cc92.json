{"ast":null,"code":"import _objectSpread from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/OrderDetails/OrderDetails.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Map from \"../Address/Map\";\nimport { Accordion, Card, Button, Badge, Dropdown, Form, Modal, Spinner, Col, Row, Container, Table, ModalHeader } from \"react-bootstrap\";\nimport { MdOutlineFastfood } from 'react-icons/md';\nimport { BiPackage } from 'react-icons/bi';\nimport { FiPackage } from 'react-icons/fi';\nimport { FcPackage } from 'react-icons/fc';\nimport { GiEnvelope } from 'react-icons/gi';\nimport { FinalizeOrder } from \"../OrdersManager/FinalizeOrder\";\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\nimport { BidOrder } from \"../OrdersManager/AcceptOrder\";\nimport { DeleteTripCost } from \"../OrdersManager/DeleteTripCost\";\nimport { EditTripCost } from \"../OrdersManager/EditTripCost\";\nimport Loader from \"../Loader/Loader\";\nimport \"./OrderDetails.css\";\nimport { getOrderDetails, checkTripCost, AcceptOfferReq, GetTransporterLocation, getOrderActions, transactionsByOrder, getTransporterInfo, getTimeLine, recordAction, ClientAssignOrder } from \"../../APIs/OrdersAPIs\";\nimport translate from \"../../i18n/translate\";\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { deliverFormatter, packageFormatter } from \"../Orders/OrdersTabularView\";\nimport { isTeamMember, isTransporter, isTransporterMaster } from \"../../Util\";\nimport AssignToTransporter from \"../AssigneToTransporter\";\nimport { useLocation, useParams, useHistory } from \"react-router\";\nimport AssignToMemberOnNetworkDialog from \"../AssginToMemberOnNetworkDialog\";\nimport { refreshPage } from \"../../Functions/CommonFunctions\";\nimport Timeline from \"../TimeLine/TimeLine\";\nimport Rating from '@material-ui/lab/Rating';\nimport { motion } from \"framer-motion\";\nimport AssignClientOrder from '../AssignClientOrder';\nimport StuckOrder from '../OrdersManager/StuckOrder';\nimport ReturnOrder from '../OrdersManager/ReturnOrder';\nimport AcceptReturned from '../OrdersManager/AcceptReturnedOrder';\nimport ResponseToAssignedOrderFromTransporter from '../OrdersManager/responseToAssignedOrderFromTransporter';\nimport ResponseToAssignedOrderFromClient from '../OrdersManager/ResponseToAssignedOrderFromClient';\nimport CancelAssignedOrder from '../OrdersManager/CancelAssignedOrder'; // import AssignToNetworkMemberCo from '../OrdersManager/AssignToNetworkMemberCo';\n\nimport OrderActions from './OrderActions';\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nimport { useImmer } from \"use-immer\";\n/* format time from 24hr system to 12hr (am/pm) system */\n\nfunction timeFormat(time) {\n  // Check correct time format and split into components\n  time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n  if (time.length > 1) {\n    // If time format correct\n    time = time.slice(1); // Remove full string match value\n\n    time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n\n    time[0] = +time[0] % 12 || 12; // Adjust hours\n  }\n\n  return time.join(''); // return adjusted time or original string\n}\n\nvar OrderDetails = function OrderDetails() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      testShow = _useState2[0],\n      setTestShow = _useState2[1];\n\n  var testHandleShow = function testHandleShow() {\n    setTestShow(true);\n  };\n\n  var testHandleHide = function testHandleHide() {\n    setTestShow(false);\n  };\n\n  var dispatch = useDispatch();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refresh = _useState4[0],\n      setRefresh = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingAcceptOffer = _useState6[0],\n      setLoadingAcceptOffer = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      show = _useState8[0],\n      setShow = _useState8[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var _useParams = useParams(),\n      orderId = _useParams.id;\n\n  var location = useLocation();\n  var history = useHistory();\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      orderDetails = _useState10[0],\n      setOrderDetails = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      orderActions = _useState12[0],\n      setOrderActions = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      timelineArr = _useState14[0],\n      setTimelineArr = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      previousPage = _useState16[0],\n      setPreviousPage = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      tripCost = _useState18[0],\n      setTripCost = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      costSet = _useState20[0],\n      setCostSet = _useState20[1];\n\n  var _useState21 = useState({}),\n      _useState22 = _slicedToArray(_useState21, 2),\n      receiverAddress = _useState22[0],\n      setReceiverAddress = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      startTracking = _useState24[0],\n      setStartTracking = _useState24[1]; // tracking !!!\n\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      transactions = _useState26[0],\n      setTransactions = _useState26[1];\n  /* selected available offer variables (to display transporter info to accept offer) */\n\n\n  var _useState27 = useState(),\n      _useState28 = _slicedToArray(_useState27, 2),\n      bidReqTransImg = _useState28[0],\n      setBidReqTransImg = _useState28[1];\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      bidReqTransPrice = _useState30[0],\n      setBidReqTransPrice = _useState30[1];\n\n  var _useState31 = useState(),\n      _useState32 = _slicedToArray(_useState31, 2),\n      bidReqTransId = _useState32[0],\n      setBidReqTransId = _useState32[1];\n\n  var _useState33 = useState(),\n      _useState34 = _slicedToArray(_useState33, 2),\n      bidReqTransRate = _useState34[0],\n      setBidReqTransRate = _useState34[1];\n\n  var _useState35 = useState(),\n      _useState36 = _slicedToArray(_useState35, 2),\n      bidReqTransName = _useState36[0],\n      setBidReqTransName = _useState36[1];\n\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1rem\"\n    },\n    orderNumber: {\n      color: 'white',\n      fontStyle: 'italic',\n      marginLeft: '10px',\n      marginRight: '10px'\n    },\n    orderStatus: {\n      float: localStorage.getItem(\"Language\") === \"en\" ? 'right' : 'left'\n    },\n    actionButton: {\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      width: \"150px\"\n    },\n    actionButtonLg: {\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      width: \"200px\"\n    }\n  };\n  /* get financial transactions related to this order */\n\n  useEffect(function () {\n    var isMounted = true;\n    transactionsByOrder(localStorage.getItem(\"userId\"), orderId).then(function (res) {\n      if (isMounted) {\n        var tempArr = res.data.server_response.data.result.response;\n        setTransactions(tempArr);\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, [refresh]);\n  /* track transporter !!!! */\n  // to be done\n\n  useEffect(function () {\n    var live = false;\n\n    if (startTracking === false) {\n      return;\n    }\n\n    var intervalId = setInterval(function () {\n      if (!live) {\n        live = true;\n        GetTransporterLocation(orderId).then(function (resp) {\n          live = false;\n          var _resp$data$server_res = resp.data.server_response[0],\n              TransporterLatLocation = _resp$data$server_res.TransporterLatLocation,\n              TransporterLongLoc = _resp$data$server_res.TransporterLongLoc;\n\n          if (TransporterLatLocation === null || TransporterLongLoc === null) {\n            TransporterLatLocation = 0;\n            TransporterLongLoc = 0;\n          }\n\n          setReceiverAddress(_objectSpread(_objectSpread({}, receiverAddress), {}, {\n            long: TransporterLongLoc,\n            lat: TransporterLatLocation\n          }));\n        });\n      }\n    }, 4000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, [startTracking]);\n  /* check if the current transporter has already bid on this order and get available offers */\n\n  /* useEffect(() => {\r\n      checkTripCost(orderId, isTransporter(), ).then((tripCostRes) => {\r\n            // console.log(tripCostRes); // temp test\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n              setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n              setCostSet(true);\r\n          } else {\r\n              setCostSet(false);\r\n          }\r\n      });\r\n  }, [refresh]) */\n\n  /* get order details */\n\n  useEffect(function () {\n    var _location$state;\n\n    getOrderDetails(orderId).then(function (orderDetailsRes) {\n      // console.log(orderDetailsRes); // temp test\n      setOrderDetails(orderDetailsRes);\n      setReceiverAddress({\n        otherDetails: orderDetailsRes.IdAreaDes == null ? orderDetailsRes.OtherDetailsDes + \", \" + orderDetailsRes.IdCityDes : orderDetailsRes.OtherDetailsDes + \", \" + orderDetailsRes.IdAreaDes,\n        phoneCustomer: orderDetailsRes.ReceiverAddressNum,\n        long: orderDetailsRes.LongReciver,\n        lat: orderDetailsRes.LatReciver\n      }); // ---------------------\n\n      checkTripCost(orderId, isTransporter(), orderDetailsRes.CostLoad, orderDetailsRes.cityFromId, orderDetailsRes.cityToId).then(function (tripCostRes) {\n        // console.log(tripCostRes); // temp test\n        if (tripCostRes && tripCostRes !== \"CostNotSend\") {\n          setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\n          setCostSet(true);\n        } else {\n          setCostSet(false);\n        }\n      });\n    });\n    setPreviousPage((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.currentPage);\n  }, [refresh]);\n  useEffect(function () {\n    /* get all actions related to this order */\n    getOrderActions(orderId).then(function (res) {\n      setOrderActions(res.data.records_list);\n    });\n  }, [refresh]);\n  /* transportation timeline (to show all the transporters that worked with this order) */\n\n  useEffect(function () {\n    getTimeLine(orderId).then(function (res) {\n      // console.log(res.data.timeline)\n      setTimelineArr(res.data.timeline);\n    });\n  }, [refresh]);\n  /* order-details feilds */\n\n  if (typeof orderDetails === \"object\" && JSON.stringify(orderDetails) !== '{}') {\n    var OrderStatus = orderDetails.OrderStatus,\n        DateLoad = orderDetails.DateLoad,\n        DeliveryPrice = orderDetails.DeliveryPrice,\n        CostLoad = orderDetails.CostLoad,\n        OriginalDeliveryId = orderDetails.OriginalDeliveryId,\n        DeliveryId = orderDetails.DeliveryId,\n        AssignToName = orderDetails.AssignToName,\n        AssignToNumber = orderDetails.AssignToNumber,\n        transporterImgURL = orderDetails.transporterImgURL,\n        pickupDate = orderDetails.pickupDate,\n        customerImgURL = orderDetails.customerImgURL,\n        FullNameCustomer = orderDetails.FullNameCustomer,\n        LastNameCustomer = orderDetails.LastNameCustomer,\n        orderFinished = orderDetails.orderFinished,\n        IdCitySource = orderDetails.IdCitySource,\n        IdAreaSource = orderDetails.IdAreaSource,\n        transporterAssignStatus = orderDetails.transporterAssignStatus,\n        AssignerId = orderDetails.AssignerId,\n        AssigneeId = orderDetails.AssigneeId,\n        currentTransporterId = orderDetails.currentTransporterId,\n        order_status = orderDetails.order_status,\n        ClientAssignAccepted = orderDetails.ClientAssignAccepted,\n        AssignedByClient = orderDetails.AssignedByClient,\n        IsReturnedOrder = orderDetails.IsReturnedOrder,\n        IsReturnAccepted = orderDetails.IsReturnAccepted,\n        IsStuckOrder = orderDetails.IsStuckOrder,\n        clientAssigneeId = orderDetails.clientAssigneeId,\n        StuckOrderComment = orderDetails.StuckOrderComment,\n        CustomerId = orderDetails.CustomerId,\n        deliveryWay = orderDetails.deliveryWay,\n        HeightLoad = orderDetails.HeightLoad,\n        DetailsLoad = orderDetails.DetailsLoad,\n        LengthLoad = orderDetails.LengthLoad,\n        WeightLoad = orderDetails.WeightLoad,\n        WidthLoad = orderDetails.WidthLoad,\n        OtherDetails = orderDetails.OtherDetails,\n        TypeLoad = orderDetails.TypeLoad,\n        PhoneCustomer = orderDetails.PhoneCustomer,\n        LongSender = orderDetails.LongSender,\n        LatSender = orderDetails.LatSender,\n        AssignStatus = orderDetails.AssignStatus,\n        AssignedMemberName = orderDetails.AssignedMemberName,\n        isAcceptDelivery = orderDetails.isAcceptDelivery,\n        SenderName = orderDetails.SenderName,\n        ReceiverName = orderDetails.ReceiverName;\n    var senderAddress = {\n      name: SenderName,\n      otherDetails: IdAreaSource != null ? OtherDetails + \", \" + IdAreaSource : OtherDetails + \", \" + IdCitySource,\n      phoneCustomer: PhoneCustomer,\n      long: LongSender,\n      lat: LatSender\n    };\n    /* transportation timeline data: */\n\n    var tempTransportationParties = []; // if there are transporters worked with this order\n\n    if (timelineArr.length !== 0) {\n      tempTransportationParties = [{\n        // sender\n        type: 1,\n        current: false,\n        address: senderAddress,\n        customerName: FullNameCustomer + \" \" + LastNameCustomer,\n        name: SenderName,\n        imageURL: customerImgURL\n      }, {\n        // receiver\n        type: 3,\n        current: false,\n        address: receiverAddress,\n        name: ReceiverName\n      }]; // add the transporters to the timeline\n\n      for (var i = 0; i < timelineArr.length; i++) {\n        tempTransportationParties.splice(i + 1, 0, {\n          type: 2,\n          address: null,\n          name: timelineArr[i].fullName,\n          phone: timelineArr[i].PhoneNumber,\n          price: timelineArr[i].transporter_bidprice,\n          current: timelineArr[i].isCurrent === \"1\" ? true : false,\n          imageURL: timelineArr[i].PersonalImgPath,\n          pickupDate: timelineArr[i].transporter_pickupdate,\n          assignDate: timelineArr[i].assign_date\n        });\n      }\n    } else {\n      // if there are no transporters yet\n      tempTransportationParties = [{\n        // sender\n        type: 1,\n        current: false,\n        address: senderAddress,\n        customerName: FullNameCustomer + \" \" + LastNameCustomer,\n        name: SenderName,\n        imageURL: customerImgURL\n      }, {\n        // receiver\n        type: 3,\n        current: false,\n        address: receiverAddress,\n        name: ReceiverName\n      }];\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }, orderDetails && /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"ps-5 pe-5 pb-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        backgroundColor: \"#ededed\",\n        height: \"140px\",\n        zIndex: \"-1\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"mt-5\",\n      xl: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow rounded-22 p-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: styles.cardHeaderLg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: styles.orderNumberTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 37\n      }\n    }, translate(\"TEMP.ORDER\")), /*#__PURE__*/React.createElement(\"span\", {\n      style: styles.orderNumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 37\n      }\n    }, orderId), /*#__PURE__*/React.createElement(\"span\", {\n      style: styles.orderStatus,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 37\n      }\n    }, IsStuckOrder == \"1\" ? /*#__PURE__*/React.createElement(Badge, {\n      bg: \"light\",\n      style: {\n        color: \"red\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 67\n      }\n    }, translate(\"ORDER_DETAILS.ORDER_STUCK\")) : IsReturnedOrder == \"1\" && IsReturnAccepted == \"1\" ? /*#__PURE__*/React.createElement(Badge, {\n      bg: \"light\",\n      style: {\n        color: \"#ff4444\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 101\n      }\n    }, translate(\"ORDER_DETAILS.ORDER_RETURNED\")) : IsReturnedOrder == \"1\" && IsReturnAccepted == null ? /*#__PURE__*/React.createElement(Badge, {\n      bg: \"light\",\n      style: {\n        color: \"#ff4444\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 106\n      }\n    }, translate(\"ORDER_DETAILS.REQUEST_RETURN\")) : order_status == \"Deleted\" ? /*#__PURE__*/React.createElement(Badge, {\n      bg: \"light\",\n      style: {\n        color: \"#ff4444\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 85\n      }\n    }, order_status) : /*#__PURE__*/React.createElement(Badge, {\n      bg: \"light\",\n      style: {\n        color: \"#35b09d\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 61\n      }\n    }, order_status))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      style: {\n        fontSize: \"1.2rem\",\n        marginTop: \"30px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 57\n      }\n    }, translate(\"ORDER_DETAILS.DELIVERY_TYPE\"))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#35b09d\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 57\n      }\n    }, deliverFormatter({\n      DeliveryWays: deliveryWay\n    }), CostLoad && /*#__PURE__*/React.createElement(Badge, {\n      bg: \"secondary ms-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 74\n      }\n    }, CostLoad, \" NIS\")))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 57\n      }\n    }, translate(\"ORDERS.ORDER_TIME\"))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#35b09d\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 57\n      }\n    }, DateLoad.split(\" \")[0], \" \", /*#__PURE__*/React.createElement(Badge, {\n      bg: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 117\n      }\n    },\n    /*DateLoad.split(\" \")[1]*/\n    timeFormat(DateLoad.split(\" \")[1]))))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 57\n      }\n    }, translate(\"ORDER_DETAILS.LOAD_DETAILS\"))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#35b09d\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 57\n      }\n    }, DetailsLoad))), IsStuckOrder == 1 && IsReturnedOrder == 0 && /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 95\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 57\n      }\n    }, translate(\"ORDER_DETAILS.STUCK_COMMENT\"))), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"#35b09d\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 57\n      }\n    }, StuckOrderComment))))))))), /*#__PURE__*/React.createElement(Col, {\n      className: \"mt-5\",\n      xl: \"8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        marginTop: \"40px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 37\n      }\n    }, order_status !== 'Waiting for Bids' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: function onClick() {\n        history.push(\"/account/print/\" + orderId + \"?print=true\");\n      },\n      style: styles.actionButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 45\n      }\n    }, translate(\"ORDER_DETAILS.PRINT\"), /*#__PURE__*/React.createElement(\"svg\", {\n      style: {\n        display: \"inline-block\",\n        marginLeft: \"5px\",\n        marginRight: \"5px\"\n      },\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"16\",\n      height: \"16\",\n      fill: \"currentColor\",\n      className: \"bi bi-printer\",\n      viewBox: \"0 0 16 16\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 53\n      }\n    })))),\n    /* Transporter actions */\n    isTransporter() && /*#__PURE__*/React.createElement(React.Fragment, null, localStorage.getItem(\"userId\") == \"40\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      className: \"border btn-grad\",\n      style: {\n        width: \"150px\",\n        marginRight: \"5px\",\n        marginLeft: \"5px\"\n      },\n      onClick: function onClick() {\n        history.push(\"/account/assign-to-network\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 53\n      }\n    }, \"Assgin To\")), order_status === 'Waiting for Bids' && tripCost && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DeleteTripCost, {\n      customerId: CustomerId,\n      orderId: orderId,\n      onSuccess: function onSuccess() {\n        setTripCost(null);\n        setRefresh(!refresh);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(EditTripCost, {\n      orderId: orderId,\n      tripCost: tripCost.CostDelivery,\n      onSuccess: function onSuccess() {\n        setRefresh(!refresh);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 53\n      }\n    })), order_status === 'Waiting for Bids' && !costSet && isTransporter() && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 84\n      }\n    }, /*#__PURE__*/React.createElement(BidOrder, {\n      customerId: CustomerId,\n      orderId: orderId,\n      onSuccess: function onSuccess() {\n        setRefresh(!refresh);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 57\n      }\n    })), order_status !== 'Waiting for Bids' && order_status !== \"Delivered\" && order_status !== \"Deleted\" && /*#__PURE__*/React.createElement(React.Fragment, null, currentTransporterId === localStorage.getItem(\"userId\") && transporterAssignStatus != 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AssignToMemberOnNetworkDialog, {\n      onSuccess: function onSuccess() {\n        setRefresh(!refresh);\n      },\n      orderId: orderId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 57\n      }\n    })), AssigneeId === localStorage.getItem(\"userId\") && transporterAssignStatus == 1 && /*#__PURE__*/React.createElement(ResponseToAssignedOrderFromTransporter, {\n      onSuccessAccept: function onSuccessAccept() {\n        setRefresh(!refresh);\n      },\n      onSuccessReject: function onSuccessReject() {\n        history.push(\"/account/main/all-orders\");\n      },\n      orderId: orderId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 57\n      }\n    }), AssignerId === localStorage.getItem(\"userId\") && transporterAssignStatus == 1 && /*#__PURE__*/React.createElement(CancelAssignedOrder, {\n      onSuccess: function onSuccess() {\n        setRefresh(!refresh);\n      },\n      orderId: orderId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 57\n      }\n    })), clientAssigneeId === localStorage.getItem(\"userId\") && AssignedByClient == 1 && ClientAssignAccepted == 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ResponseToAssignedOrderFromClient, {\n      onSuccessAccept: function onSuccessAccept() {\n        setRefresh(!refresh);\n      },\n      onSuccessReject: function onSuccessReject() {\n        history.push(\"/account/main/all-orders\");\n      },\n      orderId: orderId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 53\n      }\n    })), pickupDate && order_status !== \"Delivered\" && currentTransporterId === localStorage.getItem(\"userId\") && /*#__PURE__*/React.createElement(React.Fragment, null, IsStuckOrder == 0 && IsReturnedOrder == 0 && /*#__PURE__*/React.createElement(StuckOrder, {\n      onSuccess: function onSuccess() {\n        setRefresh(!refresh);\n      },\n      orderId: orderId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 99\n      }\n    }), IsReturnedOrder == 0 && /*#__PURE__*/React.createElement(ReturnOrder, {\n      onSuccess: function onSuccess() {\n        setRefresh(!refresh);\n      },\n      orderId: orderId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 78\n      }\n    }))),\n    /* Client actions */\n    !isTransporter() && /*#__PURE__*/React.createElement(React.Fragment, null, (order_status === 'Waiting for Bids' || order_status === 'Order Assigned' && ClientAssignAccepted == 0 && clientAssigneeId != null) && /*#__PURE__*/React.createElement(CancelOrder, {\n      orderId: orderId,\n      className: \"mx-1\",\n      onSuccess: function onSuccess() {\n        // history.goBack();\n        setRefresh(!refresh);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 53\n      }\n    }), IsReturnedOrder == 1 && IsReturnAccepted == null && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AcceptReturned, {\n      onSuccess: function onSuccess() {\n        setRefresh(!refresh);\n      },\n      orderId: orderId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 53\n      }\n    })))))))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Timeline, {\n      transportationParties: tempTransportationParties,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xl: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow h-100 rounded-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: styles.cardHeaderSm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 33\n      }\n    }, translate(\"TEMP.LOAD_INFO\")), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 d-flex justify-content-center mt-2\",\n      style: {\n        fontSize: \"1.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      bg: \"warning\",\n      className: \"rounded-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 41\n      }\n    }, TypeLoad === \"1\" ? /*#__PURE__*/React.createElement(MdOutlineFastfood, {\n      style: {\n        height: '40px',\n        width: '40px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 68\n      }\n    }) : TypeLoad === \"2\" ? /*#__PURE__*/React.createElement(FcPackage, {\n      style: {\n        height: '40px',\n        width: '40px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 72\n      }\n    }) : TypeLoad === \"3\" ? /*#__PURE__*/React.createElement(BiPackage, {\n      style: {\n        height: '40px',\n        width: '40px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 76\n      }\n    }) : /*#__PURE__*/React.createElement(FiPackage, {\n      style: {\n        height: '40px',\n        width: '40px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-100 d-flex justify-content-center\",\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 37\n      }\n    }, packageFormatter({\n      PackageType: TypeLoad\n    })), /*#__PURE__*/React.createElement(Table, {\n      className: \"mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 49\n      }\n    }, translate(\"ORDER_DETAILS.LOAD_HEIGHT\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 49\n      }\n    }, HeightLoad ? HeightLoad : \"--\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 49\n      }\n    }, translate(\"ORDER_DETAILS.LOAD_WIDTH\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 49\n      }\n    }, WidthLoad ? WidthLoad : \"--\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 49\n      }\n    }, translate(\"ORDER_DETAILS.LOAD_LENGTH\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 49\n      }\n    }, LengthLoad ? LengthLoad : \"--\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"row\",\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 49\n      }\n    }, translate(\"ORDER_DETAILS.LOAD_WEIGHT\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 49\n      }\n    }, WeightLoad ? WeightLoad : \"--\"))))))), /*#__PURE__*/React.createElement(Col, {\n      xl: \"5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow h-100 rounded-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: styles.cardHeaderSm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 33\n      }\n    }, !isTransporter() && (order_status === \"Waiting for Bids\" || order_status === \"Order Assigned\") && DeliveryId == null ? translate(\"ORDERS.AVAILABLE_OFFERS\") : translate(\"TEMP.LOCATION\")), !isTransporter() && (order_status === \"Waiting for Bids\" || order_status === \"Order Assigned\") && DeliveryId == null ? /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"mt-4\",\n      style: {\n        height: '345.8px',\n        overflowY: 'scroll'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 153\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        width: \"20%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 49\n      }\n    }, translate(\"TEMP.MY_NETWORK\")), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 49\n      }\n    }, translate(\"TEMP.NAME_MOBILE\")), /*#__PURE__*/React.createElement(\"th\", {\n      style: {\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 49\n      }\n    }, translate(\"TEMP.PRICE\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 49\n      }\n    }))), order_status === \"Waiting for Bids\" && tripCost && tripCost.length !== 0 ? /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 117\n      }\n    }, tripCost.map(function (costs, index) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 56\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: \"50%\",\n          height: \"50%\",\n          objectFit: \"cover\"\n        },\n        className: \"rounded-circle align-self-center\",\n        src: \"https://togo.ps/togo/MobileAPi/\".concat(costs.TransporterPersonalImg),\n        alt: \"transImg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 53\n        }\n      }, costs.isNetwork === \"1\" && /*#__PURE__*/React.createElement(\"i\", {\n        className: \"bi bi-check-circle-fill h5\",\n        style: {\n          color: \"green\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 85\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 57\n        }\n      }, costs.TransporterName), /*#__PURE__*/React.createElement(\"br\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 93\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 57\n        }\n      }, costs.mobile)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 53\n        }\n      }, costs.BidCost), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        disabled: costs.isEnoughBalance == \"1\" ? false : true,\n        variant: costs.isEnoughBalance == \"1\" ? \"primary\" : \"warning\",\n        style: {\n          fontSize: \"0.7rem\",\n          width: \"100px\"\n        },\n        onClick: function onClick() {\n          if (costs.isEnoughBalance == \"1\") {\n            handleShow();\n            setBidReqTransName(costs.TransporterName);\n            setBidReqTransRate(costs.TotalRate);\n            setBidReqTransId(costs.IdTransporterBidRequist);\n            setBidReqTransPrice(costs.BidCost);\n            setBidReqTransImg(costs.TransporterPersonalImg);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 57\n        }\n      }, costs.isEnoughBalance == \"1\" ? translate(\"TEMP.ACCEPT_OFFER\") : translate(\"TEMP.NO_BALANCE\")), /*#__PURE__*/React.createElement(Modal, {\n        show: show,\n        onHide: handleClose,\n        centered: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        closeButton: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 65\n        }\n      }, translate(\"TEMP.ACCEPT_OFFER\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        style: {\n          fontSize: \"1.5rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"w-100 d-flex justify-content-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n          width: \"80px\",\n          height: \"80px\"\n        },\n        className: \"d-flex justify-content-center rounded-circle align-self-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          width: \"80%\",\n          height: \"80%\",\n          objectFit: \"cover\"\n        },\n        className: \"rounded-circle align-self-center bg-white\",\n        src: \"https://togo.ps/togo/MobileAPi/\".concat(bidReqTransImg),\n        alt: \"img\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 77\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 73\n        }\n      }, \"Transporter:\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 73\n        }\n      }, bidReqTransName)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 73\n        }\n      }, \"Bid Price:\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 73\n        }\n      }, bidReqTransPrice)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"w-100 d-flex justify-content-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Rating, {\n        name: \"size-large\",\n        size: \"large\",\n        defaultValue: bidReqTransRate,\n        precision: 0.1,\n        readOnly: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 73\n        }\n      })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 65\n        }\n      }, translate(\"GENERAL.CANCEL\")), /*#__PURE__*/React.createElement(Button, {\n        disabled: loadingAcceptOffer ? true : false,\n        variant: \"primary\",\n        onClick: function onClick() {\n          setLoadingAcceptOffer(true);\n          AcceptOfferReq(bidReqTransId, orderId, bidReqTransPrice).then(function (resp) {\n            if (resp.data == \"ClientChargeBalanace\" || resp.data == \"TransporterNeedCharge\" || resp.data == \"ChargeBalanace\" || resp.data == \"deliveryWayNotFound\" || resp.data == \"OrderNotFound\" || resp.data == \"OrderAlreadyTaken\" || resp.data == \"TransporterNeedCharge\" || resp.data == \"OrderNotAccept\" || resp.data == \"BidChanged\" || resp.data == \"Blocked\" || resp.data == \"TokenError\") {\n              dispatch(toastNotification(\"Error!\", resp.data, \"error\"));\n            } else if (resp.data.indexOf(\"Success\") !== -1) {\n              setRefresh(!refresh);\n            }\n\n            setLoadingAcceptOffer(false);\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 65\n        }\n      }, loadingAcceptOffer && /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        size: \"sm\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 92\n        }\n      }), translate(\"TEMP.ACCEPT\"))))));\n    })) : /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 49\n      }\n    }, translate(\"ORDERS.NO_OFFERS\")))))) : /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"\",\n      address1: senderAddress,\n      address2: receiverAddress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 76\n      }\n    }), \" \"), \" \")), /*#__PURE__*/React.createElement(Col, {\n      xl: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 818,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow h-100 rounded-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: styles.cardHeaderSm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 33\n      }\n    }, translate(\"TEMP.ORDER_ACTIONS\")), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"mt-4\",\n      style: {\n        height: '345.8px',\n        overflowY: 'scroll'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(OrderActions, {\n      actions: orderActions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 37\n      }\n    }))))), !isTransporter() && order_status === \"Waiting for Bids\" && /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 84\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow rounded-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: styles.cardHeaderSm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 37\n      }\n    }, translate(\"TEMP.LOCATION\")), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"\",\n      address1: senderAddress,\n      address2: receiverAddress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 41\n      }\n    }))))), transactions.length > 0 && /*#__PURE__*/React.createElement(Row, {\n      className: \"mt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow rounded-22\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: styles.cardHeaderSm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 33\n      }\n    }, translate(\"TEMP.ORDER_TRANSACTIONS\")), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 49\n      }\n    }, translate(\"TRANSACTIONS.NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 49\n      }\n    }, translate(\"TRANSACTIONS.DATE\")), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 49\n      }\n    }, translate(\"TRANSACTIONS.TIME\")), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 49\n      }\n    }, translate(\"TRANSACTIONS.JOURNAL_NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 49\n      }\n    }, translate(\"TRANSACTIONS.IN\")), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 49\n      }\n    }, translate(\"TRANSACTIONS.OUT\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 41\n      }\n    }, // popo\n    transactions === null || transactions === void 0 ? void 0 : transactions.map(function (item, index) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 60\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 57\n        }\n      }, item.move_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 57\n        }\n      }, item.create_date.split(\" \")[0]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 57\n        }\n      }, timeFormat(item.create_date.split(\" \")[1])), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 57\n        }\n      }, item.journal_id_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: item.credit > 0 ? \"bold\" : \"\",\n          color: item.credit === 0 ? \"lightgray\" : \"\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 61\n        }\n      }, item.credit !== 0 ? item.credit + \" NIS\" : 0)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: item.debit > 0 ? \"bold\" : \"\",\n          color: item.debit === 0 ? \"lightgray\" : \"\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 61\n        }\n      }, item.debit !== 0 ? item.debit + \" NIS\" : 0)));\n    }))))))));\n  } else if (typeof orderDetails === \"string\") {\n    return /*#__PURE__*/React.createElement(Alert, {\n      status: \"error\",\n      w: \"80%\",\n      m: \"10px auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AlertTitle, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 17\n      }\n    }, orderId), /*#__PURE__*/React.createElement(AlertDescription, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 17\n      }\n    }, orderDetails));\n  } else {\n    return /*#__PURE__*/React.createElement(Box, {\n      height: \"400px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 36\n      }\n    }));\n  }\n};\n\nexport default OrderDetails;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/OrderDetails/OrderDetails.jsx"],"names":["React","useEffect","useState","Map","Accordion","Card","Button","Badge","Dropdown","Form","Modal","Spinner","Col","Row","Container","Table","ModalHeader","MdOutlineFastfood","BiPackage","FiPackage","FcPackage","GiEnvelope","FinalizeOrder","CancelOrder","BidOrder","DeleteTripCost","EditTripCost","Loader","getOrderDetails","checkTripCost","AcceptOfferReq","GetTransporterLocation","getOrderActions","transactionsByOrder","getTransporterInfo","getTimeLine","recordAction","ClientAssignOrder","translate","Alert","AlertDescription","AlertIcon","AlertTitle","Box","deliverFormatter","packageFormatter","isTeamMember","isTransporter","isTransporterMaster","AssignToTransporter","useLocation","useParams","useHistory","AssignToMemberOnNetworkDialog","refreshPage","Timeline","Rating","motion","AssignClientOrder","StuckOrder","ReturnOrder","AcceptReturned","ResponseToAssignedOrderFromTransporter","ResponseToAssignedOrderFromClient","CancelAssignedOrder","OrderActions","useDispatch","toastNotification","useImmer","timeFormat","time","toString","match","length","slice","join","OrderDetails","testShow","setTestShow","testHandleShow","testHandleHide","dispatch","refresh","setRefresh","loadingAcceptOffer","setLoadingAcceptOffer","show","setShow","handleClose","handleShow","orderId","id","location","history","orderDetails","setOrderDetails","orderActions","setOrderActions","timelineArr","setTimelineArr","previousPage","setPreviousPage","tripCost","setTripCost","costSet","setCostSet","receiverAddress","setReceiverAddress","startTracking","setStartTracking","transactions","setTransactions","bidReqTransImg","setBidReqTransImg","bidReqTransPrice","setBidReqTransPrice","bidReqTransId","setBidReqTransId","bidReqTransRate","setBidReqTransRate","bidReqTransName","setBidReqTransName","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","orderNumber","fontStyle","marginLeft","marginRight","orderStatus","float","localStorage","getItem","actionButton","width","actionButtonLg","isMounted","then","res","tempArr","data","server_response","result","response","live","intervalId","setInterval","resp","TransporterLatLocation","TransporterLongLoc","long","lat","clearInterval","orderDetailsRes","otherDetails","IdAreaDes","OtherDetailsDes","IdCityDes","phoneCustomer","ReceiverAddressNum","LongReciver","LatReciver","CostLoad","cityFromId","cityToId","tripCostRes","CostDetail","state","currentPage","records_list","timeline","JSON","stringify","OrderStatus","DateLoad","DeliveryPrice","OriginalDeliveryId","DeliveryId","AssignToName","AssignToNumber","transporterImgURL","pickupDate","customerImgURL","FullNameCustomer","LastNameCustomer","orderFinished","IdCitySource","IdAreaSource","transporterAssignStatus","AssignerId","AssigneeId","currentTransporterId","order_status","ClientAssignAccepted","AssignedByClient","IsReturnedOrder","IsReturnAccepted","IsStuckOrder","clientAssigneeId","StuckOrderComment","CustomerId","deliveryWay","HeightLoad","DetailsLoad","LengthLoad","WeightLoad","WidthLoad","OtherDetails","TypeLoad","PhoneCustomer","LongSender","LatSender","AssignStatus","AssignedMemberName","isAcceptDelivery","SenderName","ReceiverName","senderAddress","name","tempTransportationParties","type","current","address","customerName","imageURL","i","splice","fullName","phone","PhoneNumber","price","transporter_bidprice","isCurrent","PersonalImgPath","transporter_pickupdate","assignDate","assign_date","backgroundColor","height","zIndex","orderNumberTitle","marginTop","textAlign","DeliveryWays","split","push","display","CostDelivery","PackageType","overflowY","map","costs","index","objectFit","TransporterPersonalImg","isNetwork","TransporterName","mobile","BidCost","isEnoughBalance","TotalRate","IdTransporterBidRequist","indexOf","item","move_name","create_date","journal_id_name","credit","debit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Map from \"../Address/Map\";\r\nimport { Accordion, Card, Button, Badge, Dropdown, Form, Modal, Spinner, Col, Row, Container, Table, ModalHeader } from \"react-bootstrap\";\r\nimport { MdOutlineFastfood } from 'react-icons/md';\r\nimport { BiPackage } from 'react-icons/bi'\r\nimport { FiPackage } from 'react-icons/fi';\r\nimport { FcPackage } from 'react-icons/fc';\r\nimport { GiEnvelope } from 'react-icons/gi';\r\nimport { FinalizeOrder } from \"../OrdersManager/FinalizeOrder\";\r\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\r\nimport { BidOrder } from \"../OrdersManager/AcceptOrder\";\r\nimport { DeleteTripCost } from \"../OrdersManager/DeleteTripCost\";\r\nimport { EditTripCost } from \"../OrdersManager/EditTripCost\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"./OrderDetails.css\";\r\nimport { getOrderDetails, checkTripCost, AcceptOfferReq, GetTransporterLocation, getOrderActions, transactionsByOrder, getTransporterInfo, getTimeLine, recordAction, ClientAssignOrder } from \"../../APIs/OrdersAPIs\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { deliverFormatter, packageFormatter } from \"../Orders/OrdersTabularView\";\r\nimport { isTeamMember, isTransporter, isTransporterMaster } from \"../../Util\";\r\nimport AssignToTransporter from \"../AssigneToTransporter\";\r\nimport { useLocation, useParams, useHistory } from \"react-router\";\r\nimport AssignToMemberOnNetworkDialog from \"../AssginToMemberOnNetworkDialog\";\r\nimport { refreshPage } from \"../../Functions/CommonFunctions\";\r\nimport Timeline from \"../TimeLine/TimeLine\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { motion } from \"framer-motion\";\r\nimport AssignClientOrder from '../AssignClientOrder';\r\nimport StuckOrder from '../OrdersManager/StuckOrder';\r\nimport ReturnOrder from '../OrdersManager/ReturnOrder';\r\nimport AcceptReturned from '../OrdersManager/AcceptReturnedOrder';\r\nimport ResponseToAssignedOrderFromTransporter from '../OrdersManager/responseToAssignedOrderFromTransporter';\r\nimport ResponseToAssignedOrderFromClient from '../OrdersManager/ResponseToAssignedOrderFromClient';\r\nimport CancelAssignedOrder from '../OrdersManager/CancelAssignedOrder';\r\n// import AssignToNetworkMemberCo from '../OrdersManager/AssignToNetworkMemberCo';\r\nimport OrderActions from './OrderActions';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\n\r\nimport { useImmer } from \"use-immer\";\r\n\r\n/* format time from 24hr system to 12hr (am/pm) system */\r\nfunction timeFormat(time) {\r\n    // Check correct time format and split into components\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) { // If time format correct\r\n        time = time.slice(1);  // Remove full string match value\r\n        time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n        time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    return time.join(''); // return adjusted time or original string\r\n}\r\n\r\nconst OrderDetails = () => {\r\n\r\n    const [testShow, setTestShow] = useState(false);\r\n\r\n    const testHandleShow = () => { setTestShow(true) };\r\n    const testHandleHide = () => { setTestShow(false) };\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [refresh, setRefresh] = useState(false);\r\n    const [loadingAcceptOffer, setLoadingAcceptOffer] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const { id: orderId } = useParams();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [orderDetails, setOrderDetails] = useState({});\r\n    const [orderActions, setOrderActions] = useState([]);\r\n    const [timelineArr, setTimelineArr] = useState([]);\r\n    const [previousPage, setPreviousPage] = useState(null);\r\n    const [tripCost, setTripCost] = useState(null);\r\n    const [costSet, setCostSet] = useState(null);\r\n    const [receiverAddress, setReceiverAddress] = useState({});\r\n    const [startTracking, setStartTracking] = useState(false); // tracking !!!\r\n    const [transactions, setTransactions] = useState([]);\r\n\r\n    /* selected available offer variables (to display transporter info to accept offer) */\r\n    const [bidReqTransImg, setBidReqTransImg] = useState();\r\n    const [bidReqTransPrice, setBidReqTransPrice] = useState();\r\n    const [bidReqTransId, setBidReqTransId] = useState();\r\n    const [bidReqTransRate, setBidReqTransRate] = useState();\r\n    const [bidReqTransName, setBidReqTransName] = useState();\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1rem\"\r\n        },\r\n        orderNumber: {\r\n            color: 'white',\r\n            fontStyle: 'italic',\r\n            marginLeft: '10px',\r\n            marginRight: '10px'\r\n        },\r\n        orderStatus: {\r\n            float: localStorage.getItem(\"Language\") === \"en\" ? 'right' : 'left',\r\n        },\r\n        actionButton: {\r\n            marginRight: \"5px\",\r\n            marginLeft: \"5px\",\r\n            width: \"150px\"\r\n        },\r\n        actionButtonLg: {\r\n            marginRight: \"5px\",\r\n            marginLeft: \"5px\",\r\n            width: \"200px\"\r\n        }\r\n    }\r\n\r\n    /* get financial transactions related to this order */\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        transactionsByOrder(localStorage.getItem(\"userId\"), orderId).then(res => {\r\n            if (isMounted) {\r\n                let tempArr = res.data.server_response.data.result.response;\r\n\r\n                setTransactions(tempArr);\r\n            }\r\n        })\r\n        return () => { isMounted = false };\r\n    }, [refresh]);\r\n\r\n    /* track transporter !!!! */ // to be done\r\n    useEffect(() => {\r\n        let live = false;\r\n        if (startTracking === false) {\r\n            return;\r\n        }\r\n        const intervalId = setInterval(() => {\r\n            if (!live) {\r\n                live = true;\r\n                GetTransporterLocation(orderId).then((resp) => {\r\n                    live = false;\r\n                    let { TransporterLatLocation, TransporterLongLoc } = resp.data.server_response[0];\r\n                    if (TransporterLatLocation === null || TransporterLongLoc === null) {\r\n                        TransporterLatLocation = 0;\r\n                        TransporterLongLoc = 0;\r\n                    }\r\n                    setReceiverAddress({\r\n                        ...receiverAddress,\r\n                        long: TransporterLongLoc,\r\n                        lat: TransporterLatLocation\r\n                    });\r\n                });\r\n            }\r\n        }, 4000);\r\n        return () => clearInterval(intervalId);\r\n    }, [startTracking])\r\n\r\n    /* check if the current transporter has already bid on this order and get available offers */\r\n    /* useEffect(() => {\r\n        checkTripCost(orderId, isTransporter(), ).then((tripCostRes) => {\r\n\r\n            // console.log(tripCostRes); // temp test\r\n\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                setCostSet(true);\r\n            } else {\r\n                setCostSet(false);\r\n            }\r\n        });\r\n    }, [refresh]) */\r\n\r\n    /* get order details */\r\n    useEffect(() => {\r\n        getOrderDetails(orderId).then((orderDetailsRes) => {\r\n\r\n            // console.log(orderDetailsRes); // temp test\r\n\r\n            setOrderDetails(orderDetailsRes);\r\n\r\n            setReceiverAddress({\r\n                otherDetails: orderDetailsRes.IdAreaDes == null ? orderDetailsRes.OtherDetailsDes + \", \" + orderDetailsRes.IdCityDes : orderDetailsRes.OtherDetailsDes + \", \" + orderDetailsRes.IdAreaDes,\r\n                phoneCustomer: orderDetailsRes.ReceiverAddressNum,\r\n                long: orderDetailsRes.LongReciver,\r\n                lat: orderDetailsRes.LatReciver\r\n            });\r\n\r\n            // ---------------------\r\n\r\n            checkTripCost(orderId, isTransporter(), orderDetailsRes.CostLoad, orderDetailsRes.cityFromId, orderDetailsRes.cityToId).then((tripCostRes) => {\r\n\r\n                // console.log(tripCostRes); // temp test\r\n\r\n                if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                    setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                    setCostSet(true);\r\n                } else {\r\n                    setCostSet(false);\r\n                }\r\n            });\r\n        });\r\n\r\n        setPreviousPage(location.state?.currentPage);\r\n    }, [refresh]);\r\n\r\n    useEffect(() => {\r\n        /* get all actions related to this order */\r\n        getOrderActions(orderId).then((res) => {\r\n            setOrderActions(res.data.records_list);\r\n        })\r\n    }, [refresh])\r\n\r\n    /* transportation timeline (to show all the transporters that worked with this order) */\r\n    useEffect(() => {\r\n        getTimeLine(orderId).then((res) => {\r\n            // console.log(res.data.timeline)\r\n            setTimelineArr(res.data.timeline)\r\n        });\r\n    }, [refresh]);\r\n\r\n    /* order-details feilds */\r\n    if (typeof orderDetails === \"object\" && JSON.stringify(orderDetails) !== '{}') {\r\n        let {\r\n            OrderStatus, /* edited (OrderStatus added) */\r\n            DateLoad, /* edited (DateLoad added) */\r\n            DeliveryPrice, /* edited (DeliveryPrice added) */\r\n            CostLoad, /* edited (CostLoad added) */\r\n            OriginalDeliveryId, /* edited (OriginalDeliveryId added) */\r\n            DeliveryId, /* edited (DeliveryId added) */\r\n            AssignToName, /* edited (AssignToName added) */\r\n            AssignToNumber, /* edited (AssignToNumber added) */\r\n            transporterImgURL, /* edited (transporterImgURL added) */\r\n            pickupDate, /* edited (pickupDate added) */\r\n            customerImgURL, /* edited (customerImgURL added) */\r\n            FullNameCustomer, /* edited (FullNameCustomer added) */\r\n            LastNameCustomer, /* edited (LastNameCustomer added) */\r\n            orderFinished, /* edited (orderFinished added) */\r\n            IdCitySource, /* edited (IdCitySource added) */\r\n            IdAreaSource, /* edited (IdAreaSource added) */\r\n            transporterAssignStatus, /* edited (transporterAssignStatus added) */\r\n            AssignerId, /* edited (AssignerId added) */\r\n            AssigneeId, /* edited (AssigneeId added) */\r\n            currentTransporterId, /* edited (currentTransporterId added) */\r\n            order_status, /* edited (order_status added) */\r\n            ClientAssignAccepted, /* edited (ClientAssignAccepted added) */\r\n            AssignedByClient, /* edited (AssignedByClient added) */\r\n            IsReturnedOrder, /* edited (IsReturnedOrder added) */\r\n            IsReturnAccepted, /* edited (IsReturnAccepted added) */\r\n            IsStuckOrder, /* edited (IsStuckOrder added) */\r\n            clientAssigneeId, /* edited (clientAssigneeId added) */\r\n            StuckOrderComment, /* edited (StuckOrderComment added) */\r\n            CustomerId, /* edited (CustomerId added) */\r\n            deliveryWay,\r\n            HeightLoad,\r\n            DetailsLoad,\r\n            LengthLoad,\r\n            WeightLoad,\r\n            WidthLoad,\r\n            OtherDetails,\r\n            TypeLoad,\r\n            PhoneCustomer,\r\n            LongSender, LatSender,\r\n            AssignStatus, AssignedMemberName,\r\n            isAcceptDelivery,\r\n            SenderName,\r\n            ReceiverName\r\n        } = orderDetails;\r\n\r\n        let senderAddress = {\r\n            name: SenderName,\r\n            otherDetails: IdAreaSource != null ? OtherDetails + \", \" + IdAreaSource : OtherDetails + \", \" + IdCitySource,\r\n            phoneCustomer: PhoneCustomer,\r\n            long: LongSender,\r\n            lat: LatSender\r\n        };\r\n\r\n        /* transportation timeline data: */\r\n        let tempTransportationParties = [];\r\n\r\n        // if there are transporters worked with this order\r\n        if (timelineArr.length !== 0) {\r\n\r\n            tempTransportationParties = [\r\n                { // sender\r\n                    type: 1,\r\n                    current: false,\r\n                    address: senderAddress,\r\n                    customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                    name: SenderName,\r\n                    imageURL: customerImgURL\r\n                },\r\n                { // receiver\r\n                    type: 3,\r\n                    current: false,\r\n                    address: receiverAddress,\r\n                    name: ReceiverName\r\n                }\r\n            ]\r\n\r\n            // add the transporters to the timeline\r\n            for (let i = 0; i < timelineArr.length; i++) {\r\n\r\n                tempTransportationParties.splice(i + 1, 0, {\r\n                    type: 2,\r\n                    address: null,\r\n                    name: timelineArr[i].fullName,\r\n                    phone: timelineArr[i].PhoneNumber,\r\n                    price: timelineArr[i].transporter_bidprice,\r\n                    current: timelineArr[i].isCurrent === \"1\" ? true : false,\r\n                    imageURL: timelineArr[i].PersonalImgPath,\r\n                    pickupDate: timelineArr[i].transporter_pickupdate,\r\n                    assignDate: timelineArr[i].assign_date\r\n                })\r\n            }\r\n\r\n        } else { // if there are no transporters yet\r\n\r\n            tempTransportationParties = [\r\n                { // sender\r\n                    type: 1,\r\n                    current: false,\r\n                    address: senderAddress,\r\n                    customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                    name: SenderName,\r\n                    imageURL: customerImgURL\r\n                },\r\n                { // receiver\r\n                    type: 3,\r\n                    current: false,\r\n                    address: receiverAddress,\r\n                    name: ReceiverName\r\n                }\r\n            ]\r\n        }\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {orderDetails && <Container fluid className='ps-5 pe-5 pb-5'>\r\n\r\n                    <div style={{ position: \"absolute\", left: 0, right: 0, backgroundColor: \"#ededed\", height: \"140px\", zIndex: \"-1\" }}></div>\r\n\r\n                    <Row className=\"\">\r\n                        {/* Order main info (order number, delivery type, order time, and load details) */}\r\n                        <Col className=\"mt-5\" xl=\"4\">\r\n                            <Card className=\"shadow rounded-22 p-2\">\r\n                                <Card.Header style={styles.cardHeaderLg}>\r\n                                    <span style={styles.orderNumberTitle}>{translate(\"TEMP.ORDER\")}</span>\r\n                                    <span style={styles.orderNumber}>{orderId}</span>\r\n                                    <span style={styles.orderStatus}>\r\n                                        {\r\n                                            IsStuckOrder == \"1\" ? <Badge bg=\"light\" style={{ color: \"red\" }}>{translate(\"ORDER_DETAILS.ORDER_STUCK\")}</Badge> :\r\n                                                IsReturnedOrder == \"1\" && IsReturnAccepted == \"1\" ? <Badge bg=\"light\" style={{ color: \"#ff4444\" }}>{translate(\"ORDER_DETAILS.ORDER_RETURNED\")}</Badge> :\r\n                                                    IsReturnedOrder == \"1\" && IsReturnAccepted == null ? <Badge bg=\"light\" style={{ color: \"#ff4444\" }}>{translate(\"ORDER_DETAILS.REQUEST_RETURN\")}</Badge> :\r\n                                                        order_status == \"Deleted\" ? <Badge bg=\"light\" style={{ color: \"#ff4444\" }}>{order_status}</Badge> :\r\n                                                            <Badge bg=\"light\" style={{ color: \"#35b09d\" }}>{order_status}</Badge>\r\n                                        }\r\n                                    </span>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div>\r\n                                        <Table style={{ fontSize: \"1.2rem\", marginTop: \"30px\" }}>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th scope=\"row\">\r\n                                                        <span>{translate(\"ORDER_DETAILS.DELIVERY_TYPE\")}</span>\r\n                                                    </th>\r\n                                                    <td style={{ textAlign: \"right\" }}>\r\n                                                        <span style={{ color: \"#35b09d\" }}>\r\n                                                            {deliverFormatter({ DeliveryWays: deliveryWay })}\r\n                                                            {CostLoad && <Badge bg=\"secondary ms-1\">{CostLoad} NIS</Badge>}\r\n                                                        </span>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                                <tr>\r\n                                                    <th scope=\"row\">\r\n                                                        <span>{translate(\"ORDERS.ORDER_TIME\")}</span>\r\n                                                    </th>\r\n                                                    <td style={{ textAlign: \"right\" }}>\r\n                                                        <span style={{ color: \"#35b09d\" }}>{DateLoad.split(\" \")[0]} <Badge bg=\"secondary\">{/*DateLoad.split(\" \")[1]*/ timeFormat(DateLoad.split(\" \")[1])}</Badge></span>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                                <tr>\r\n                                                    <th scope=\"row\">\r\n                                                        <span>{translate(\"ORDER_DETAILS.LOAD_DETAILS\")}</span>\r\n                                                    </th>\r\n                                                    <td style={{ textAlign: \"right\" }}>\r\n                                                        <span style={{ color: \"#35b09d\" }}>{DetailsLoad}</span>\r\n                                                    </td>\r\n                                                </tr>\r\n\r\n                                                {IsStuckOrder == 1 && IsReturnedOrder == 0 && <tr>\r\n                                                    <th scope=\"row\">\r\n                                                        <span>{translate(\"ORDER_DETAILS.STUCK_COMMENT\")}</span>\r\n                                                    </th>\r\n                                                    <td style={{ textAlign: \"right\" }}>\r\n                                                        <span style={{ color: \"#35b09d\" }}>{StuckOrderComment}</span>\r\n                                                    </td>\r\n                                                </tr>}\r\n                                            </tbody>\r\n                                        </Table>\r\n\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        {/* Actions Buttons (each will be displayed according to a specific condition or status) */}\r\n                        <Col className=\"mt-5\" xl=\"8\">\r\n                            <Row style={{\r\n                                marginTop: \"40px\"\r\n                            }}>\r\n                                {/* Display assign status for transporters (when order is assigned to another transporter and when the other transporter response to the asigned order) */}\r\n                                {/* {isTransporter() && order_status !== \"Delivered\" && <Col>\r\n                                    {\r\n                                        AssignerId === localStorage.getItem(\"userId\") && transporterAssignStatus == 1 ? <div style={{ marginTop: \"0\" }}>\r\n                                            <Button variant=\"outline-danger\" disabled>{translate(\"TEMP.ASSIGNED_AND_WAITING\")}</Button>\r\n                                        </div> :\r\n                                            (AssigneeId === localStorage.getItem(\"userId\") && transporterAssignStatus == 1) || (clientAssigneeId === localStorage.getItem(\"userId\") && AssignedByClient == 1 && ClientAssignAccepted == 0) ? <div style={{ marginTop: \"0\" }}>\r\n                                                <Button variant=\"outline-danger\" disabled>{translate(\"TEMP.ASSIGNED_TO_ME\")}</Button>\r\n                                            </div> :\r\n                                                AssignerId === localStorage.getItem(\"userId\") && transporterAssignStatus == 2 ? <div style={{ marginTop: \"0\" }}><Button variant=\"outline-danger\" disabled>{translate(\"TEMP.ASSIGNED_AND_ACCEPTED\")}</Button></div> :\r\n                                                    AssignerId === localStorage.getItem(\"userId\") && transporterAssignStatus == 3 ? <div style={{ marginTop: \"0\" }}><Button variant=\"outline-danger\" disabled>{translate(\"TEMP.ASSIGNED_AND_REJECTED\")}</Button></div> : <></>\r\n                                    }\r\n                                </Col>} */}\r\n\r\n                                {/* Display assign status for Client (when order is assigned to a transporter and order is marked as returned) */}\r\n                                {/* {!isTransporter() && order_status !== \"Delivered\" && order_status !== \"Deleted\" && <Col>\r\n                                    {\r\n                                        AssignedByClient == 1 && ClientAssignAccepted == 0 ?\r\n                                            <div style={{ marginTop: \"0\" }}>\r\n                                                <Button variant=\"outline-danger\" disabled>{translate(\"TEMP.ASSIGNED_AND_WAITING\")}</Button>\r\n                                                <Button variant=\"danger\" disabled>{translate(\"ORDER_DETAILS.PRICE\")}  {\" \"}  {DeliveryPrice}</Button>\r\n                                            </div> : IsReturnedOrder == 1 && IsReturnAccepted == null ?\r\n                                                <div style={{ marginTop: \"0\" }}>\r\n                                                    <Button variant=\"outline-danger\" disabled>{translate(\"ORDER_DETAILS.ORDER_MARKED_RETURNED\")}</Button>\r\n                                                </div> : AssignedByClient == 1 && ClientAssignAccepted == 1 ?\r\n                                                    <div style={{ marginTop: \"0\" }}><Button variant=\"outline-danger\" disabled>{translate(\"TEMP.ASSIGNED_AND_ACCEPTED\")}</Button>\r\n                                                    </div> : AssignedByClient == 1 && ClientAssignAccepted == 0 ?\r\n                                                        <div style={{ marginTop: \"0\" }}><Button variant=\"outline-danger\" disabled>{translate(\"TEMP.ASSIGNED_AND_REJECTED\")}</Button>\r\n                                                        </div> : <></>\r\n                                    }\r\n                                </Col>} */}\r\n\r\n                                <Col>\r\n                                    <Box display=\"flex\" justifyContent=\"end\">\r\n                                        {/* Print order pill */}\r\n                                        {/* (order_status !== 'Waiting for Bids' && isTransporter()) || !isTransporter() */}\r\n                                        {(order_status !== 'Waiting for Bids') && <>\r\n                                            <Button\r\n                                                variant=\"outline-primary\"\r\n                                                onClick={() => {\r\n                                                    history.push(\"/account/print/\" + orderId + \"?print=true\")\r\n                                                }}\r\n                                                style={styles.actionButton}\r\n                                            >\r\n                                                {translate(\"ORDER_DETAILS.PRINT\")}\r\n                                                <svg style={{ display: \"inline-block\", marginLeft: \"5px\", marginRight: \"5px\" }} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-printer\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n                                                    <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n                                                </svg>\r\n                                            </Button>\r\n                                        </>\r\n                                        }\r\n\r\n                                        {\r\n                                            /* Transporter actions */\r\n                                            isTransporter() && <>\r\n                                                {localStorage.getItem(\"userId\") == \"40\" && <>\r\n                                                    {/* <AssignToNetworkMemberCo\r\n                                                        onSuccess={() => {\r\n                                                            setRefresh(!refresh);\r\n                                                        }}\r\n                                                        orderId={orderId}\r\n                                                    /> */}\r\n                                                    <Button className=\"border btn-grad\" style={{ width: \"150px\", marginRight: \"5px\", marginLeft: \"5px\" }} onClick={() => {\r\n                                                        history.push(\"/account/assign-to-network\");\r\n                                                    }}>\r\n                                                        Assgin To\r\n                                                    </Button>\r\n                                                </>}\r\n                                                {/* display edit and delete bid buttons when the order is waiting for bids and there is tripCost(bid price) */}\r\n                                                {order_status === 'Waiting for Bids' && tripCost && <>\r\n                                                    <DeleteTripCost customerId={CustomerId} orderId={orderId} onSuccess={() => {\r\n                                                        setTripCost(null);\r\n                                                        setRefresh(!refresh);\r\n                                                    }} />\r\n                                                    <EditTripCost orderId={orderId} tripCost={tripCost.CostDelivery} onSuccess={() => {\r\n                                                        setRefresh(!refresh);\r\n                                                    }} />\r\n                                                </>\r\n                                                }\r\n\r\n                                                {/* display bid button when the order is waiting for bids */}\r\n                                                {order_status === 'Waiting for Bids' &&\r\n                                                    !costSet && isTransporter() && <div className=\"d-flex justify-content-end\">\r\n                                                        <BidOrder customerId={CustomerId} orderId={orderId} onSuccess={() => {\r\n                                                            setRefresh(!refresh);\r\n                                                        }} />\r\n                                                    </div>\r\n                                                }\r\n\r\n                                                {/* display assign order, accept order, reject order, and cancel assign buttons when order is not waiting for bids and it is not delevered */}\r\n                                                {order_status !== 'Waiting for Bids' && order_status !== \"Delivered\" && order_status !== \"Deleted\" && <>\r\n                                                    {/* display assign order button (\r\n                                                         if the current user is the current transporter (currentTransporterId -> the transporter for which the order is assigned)\r\n                                                         transporterAssignStatus -> \r\n                                                                       \"0\" if the order is not assigned or assigned and rejected\r\n                                                                       \"1\" if the order is assigned and waiting for acceptance\r\n                                                                       \"2\" if the order is assigned and accepted\r\n                                                    ) */}\r\n                                                    {currentTransporterId === localStorage.getItem(\"userId\") && transporterAssignStatus != 1 && <>\r\n                                                        <AssignToMemberOnNetworkDialog\r\n                                                            onSuccess={() => {\r\n                                                                setRefresh(!refresh);\r\n                                                            }}\r\n                                                            orderId={orderId}\r\n                                                        />\r\n                                                    </>}\r\n\r\n                                                    {/* display accept and reject assigned order from another transporter buttons when the current user (transporter) is the assignee AND the order is assigned and waiting for acceptance */}\r\n                                                    {AssigneeId === localStorage.getItem(\"userId\") && transporterAssignStatus == 1 &&\r\n                                                        <ResponseToAssignedOrderFromTransporter\r\n                                                            onSuccessAccept={() => {\r\n                                                                setRefresh(!refresh);\r\n                                                            }}\r\n\r\n                                                            onSuccessReject={() => {\r\n                                                                history.push(\"/account/main/all-orders\");\r\n                                                            }}\r\n                                                            orderId={orderId}\r\n                                                        />}\r\n                                                    {/* display cancel assigned order button when the current user is the assigner AND the order is assigned and waiting for acceptance */}\r\n                                                    {AssignerId === localStorage.getItem(\"userId\") && transporterAssignStatus == 1 &&\r\n\r\n                                                        <CancelAssignedOrder\r\n                                                            onSuccess={() => {\r\n                                                                setRefresh(!refresh);\r\n                                                            }}\r\n                                                            orderId={orderId}\r\n                                                        />\r\n                                                    }\r\n                                                </>}\r\n\r\n                                                {/* display accept and reject assigned order from a client buttons when\r\n                                                     the order is assigned by a client (AssignedByClient == 1) AND \r\n                                                     the order is not accepted yet (ClientAssignAccepted == 0) AND \r\n                                                     the current transporter is the assignee */}\r\n                                                {clientAssigneeId === localStorage.getItem(\"userId\") && AssignedByClient == 1 && ClientAssignAccepted == 0 && <>\r\n                                                    <ResponseToAssignedOrderFromClient\r\n                                                        onSuccessAccept={() => {\r\n                                                            setRefresh(!refresh);\r\n                                                        }}\r\n\r\n                                                        onSuccessReject={() => {\r\n                                                            history.push(\"/account/main/all-orders\");\r\n                                                        }}\r\n\r\n                                                        orderId={orderId}\r\n                                                    />\r\n                                                </>}\r\n\r\n                                                {/* display stuck order and return order buttons (\r\n                                                         if the order is not finished AND\r\n                                                         the current user is the current transporter (currentTransporterId -> the transporter for which the order is assigned) AND\r\n                                                         pickupDate -> null if the order is not picked up / date string if the order is picked up\r\n                                                ) */}\r\n                                                {pickupDate && order_status !== \"Delivered\" && currentTransporterId === localStorage.getItem(\"userId\") && <>\r\n\r\n                                                    {/* display stuck-order button if the order is not marked as stuck or returned */}\r\n                                                    {IsStuckOrder == 0 && IsReturnedOrder == 0 && <StuckOrder onSuccess={() => { setRefresh(!refresh) }} orderId={orderId} />}\r\n\r\n                                                    {/* display return-order button if the order is not marked as returned */}\r\n                                                    {IsReturnedOrder == 0 && <ReturnOrder onSuccess={() => { setRefresh(!refresh) }} orderId={orderId} />}\r\n\r\n                                                </>}\r\n                                            </>\r\n                                        }\r\n\r\n                                        {\r\n                                            /* Client actions */\r\n                                            !isTransporter() && <>\r\n                                                {/* display cancel order button when the order is waiting for bids OR the order is assigned and not accepted */}\r\n                                                {(order_status === 'Waiting for Bids' || (order_status === 'Order Assigned' && ClientAssignAccepted == 0 && clientAssigneeId != null)) &&\r\n\r\n                                                    <CancelOrder orderId={orderId} className=\"mx-1\" onSuccess={() => {\r\n                                                        // history.goBack();\r\n                                                        setRefresh(!refresh);\r\n                                                    }} />\r\n                                                }\r\n\r\n                                                {/* display assign order button when the order is waiting for bids and it is not assigned */}\r\n                                                {/* {(order_status === 'Waiting for Bids' && order_status !== 'Order Assigned') &&\r\n\r\n                                                    <AssignClientOrder onSuccess={() => { setRefresh(!refresh) }} orderId={orderId} />\r\n\r\n                                                } */}\r\n\r\n                                                {/* display accept/reject returned order button when order is marked as returned by the transporter */}\r\n                                                {(IsReturnedOrder == 1 && IsReturnAccepted == null) && <>\r\n                                                    <AcceptReturned onSuccess={() => { setRefresh(!refresh) }} orderId={orderId} />\r\n                                                </>\r\n                                                }\r\n                                            </>\r\n                                        }\r\n                                    </Box>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* Transportation Timeline */}\r\n                    <Row className=\"mt-5\">\r\n                        <Col>\r\n                            <Timeline transportationParties={tempTransportationParties} />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"mt-5\">\r\n                        {/* Load Details */}\r\n                        <Col xl=\"3\">\r\n                            <Card className='shadow h-100 rounded-22'>\r\n                                <Card.Header style={styles.cardHeaderSm}>\r\n                                    {translate(\"TEMP.LOAD_INFO\")}\r\n                                </Card.Header>\r\n                                <Card.Body className='mt-3'>\r\n                                    <div className=\"w-100 d-flex justify-content-center mt-2\" style={{ fontSize: \"1.5rem\" }}>\r\n                                        <Badge bg=\"warning\" className=\"rounded-22\">\r\n                                            {\r\n                                                TypeLoad === \"1\" ? <MdOutlineFastfood style={{ height: '40px', width: '40px' }} /> :\r\n                                                    TypeLoad === \"2\" ? <FcPackage style={{ height: '40px', width: '40px' }} /> :\r\n                                                        TypeLoad === \"3\" ? <BiPackage style={{ height: '40px', width: '40px' }} /> :\r\n                                                            <FiPackage style={{ height: '40px', width: '40px' }} />\r\n                                            }\r\n                                        </Badge>\r\n                                    </div>\r\n                                    <div className=\"w-100 d-flex justify-content-center\" style={{ fontSize: \"1.2rem\" }}>\r\n                                        {packageFormatter({ PackageType: TypeLoad })}\r\n                                    </div>\r\n                                    <Table className=\"mt-3\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <th scope='row' style={{ fontSize: \"1rem\" }}>{translate(\"ORDER_DETAILS.LOAD_HEIGHT\")}</th>\r\n                                                <td style={{ fontSize: \"1rem\" }}>{HeightLoad ? HeightLoad : \"--\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope='row' style={{ fontSize: \"1rem\" }}>{translate(\"ORDER_DETAILS.LOAD_WIDTH\")}</th>\r\n                                                <td style={{ fontSize: \"1rem\" }}>{WidthLoad ? WidthLoad : \"--\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope='row' style={{ fontSize: \"1rem\" }}>{translate(\"ORDER_DETAILS.LOAD_LENGTH\")}</th>\r\n                                                <td style={{ fontSize: \"1rem\" }}>{LengthLoad ? LengthLoad : \"--\"}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th scope='row' style={{ fontSize: \"1rem\" }}>{translate(\"ORDER_DETAILS.LOAD_WEIGHT\")}</th>\r\n                                                <td style={{ fontSize: \"1rem\" }}>{WeightLoad ? WeightLoad : \"--\"}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        {/* Map card above (if there are no available offers) / Available Offers card (if there are available offers) */}\r\n                        {/* if there are available offers then their card will apear and the map card will go below. if not, the map will be above */}\r\n                        <Col xl=\"5\">\r\n                            <Card className='shadow h-100 rounded-22'>\r\n                                <Card.Header style={styles.cardHeaderSm}>\r\n                                    {!isTransporter() && (order_status === \"Waiting for Bids\" || order_status === \"Order Assigned\") && DeliveryId == null ? translate(\"ORDERS.AVAILABLE_OFFERS\") : translate(\"TEMP.LOCATION\")}\r\n                                </Card.Header>\r\n\r\n                                {!isTransporter() && (order_status === \"Waiting for Bids\" || order_status === \"Order Assigned\") && DeliveryId == null ? <Card.Body className='mt-4' style={{ height: '345.8px', overflowY: 'scroll' }}>\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th style={{ width: \"20%\" }}></th>\r\n                                                <th style={{ fontSize: \"1rem\" }}>{translate(\"TEMP.MY_NETWORK\")}</th>\r\n                                                <th style={{ fontSize: \"1rem\" }}>{translate(\"TEMP.NAME_MOBILE\")}</th>\r\n                                                <th style={{ fontSize: \"1rem\" }}>{translate(\"TEMP.PRICE\")}</th>\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {order_status === \"Waiting for Bids\" && tripCost && tripCost.length !== 0 ? <tbody>\r\n                                            {tripCost.map((costs, index) => {\r\n                                                return <tr key={index}>\r\n                                                    <td><img style={{\r\n                                                        width: \"50%\",\r\n                                                        height: \"50%\",\r\n                                                        objectFit: \"cover\"\r\n                                                    }}\r\n                                                        className=\"rounded-circle align-self-center\" src={`https://togo.ps/togo/MobileAPi/${costs.TransporterPersonalImg}`} alt=\"transImg\" />\r\n                                                    </td>\r\n                                                    <td>{costs.isNetwork === \"1\" && <i className=\"bi bi-check-circle-fill h5\" style={{ color: \"green\" }}></i>}</td>\r\n                                                    <td>\r\n                                                        <span>{costs.TransporterName}</span><br />\r\n                                                        <span>{costs.mobile}</span>\r\n                                                    </td>\r\n                                                    <td>{costs.BidCost}</td>\r\n                                                    <td>\r\n                                                        <Button\r\n                                                            disabled={costs.isEnoughBalance == \"1\" ? false : true}\r\n                                                            variant={costs.isEnoughBalance == \"1\" ? \"primary\" : \"warning\"}\r\n                                                            style={{ fontSize: \"0.7rem\", width: \"100px\" }}\r\n                                                            onClick={() => { if (costs.isEnoughBalance == \"1\") { handleShow(); setBidReqTransName(costs.TransporterName); setBidReqTransRate(costs.TotalRate); setBidReqTransId(costs.IdTransporterBidRequist); setBidReqTransPrice(costs.BidCost); setBidReqTransImg(costs.TransporterPersonalImg) } }}\r\n                                                        >\r\n                                                            {costs.isEnoughBalance == \"1\" ? translate(\"TEMP.ACCEPT_OFFER\") : translate(\"TEMP.NO_BALANCE\")}\r\n                                                        </Button>\r\n                                                        <Modal show={show} onHide={handleClose} centered>\r\n                                                            <Modal.Header closeButton>\r\n                                                                <Modal.Title>{translate(\"TEMP.ACCEPT_OFFER\")}</Modal.Title>\r\n                                                            </Modal.Header>\r\n\r\n                                                            <Modal.Body>\r\n                                                                <div className=\"\" style={{ fontSize: \"1.5rem\" }}>\r\n                                                                    <div className=\"w-100 d-flex justify-content-center\">\r\n                                                                        <div style={{\r\n                                                                            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n\r\n                                                                            width: \"80px\",\r\n                                                                            height: \"80px\",\r\n                                                                        }}\r\n                                                                            className=\"d-flex justify-content-center rounded-circle align-self-center\">\r\n                                                                            <img\r\n                                                                                style={{\r\n                                                                                    width: \"80%\",\r\n                                                                                    height: \"80%\",\r\n                                                                                    objectFit: \"cover\"\r\n                                                                                }}\r\n                                                                                className=\"rounded-circle align-self-center bg-white\"\r\n                                                                                src={`https://togo.ps/togo/MobileAPi/${bidReqTransImg}`}\r\n                                                                                alt={\"img\"}\r\n\r\n                                                                            />\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"d-flex justify-content-between\">\r\n                                                                        <div>Transporter:</div>\r\n                                                                        <div>{bidReqTransName}</div>\r\n                                                                    </div>\r\n                                                                    <div className=\"d-flex justify-content-between\">\r\n                                                                        <div>Bid Price:</div>\r\n                                                                        <div>{bidReqTransPrice}</div>\r\n                                                                    </div>\r\n                                                                    <div className=\"w-100 d-flex justify-content-center\">\r\n                                                                        <Rating name=\"size-large\" size=\"large\" defaultValue={bidReqTransRate} precision={0.1} readOnly />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </Modal.Body>\r\n                                                            <Modal.Footer>\r\n                                                                <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                                    {translate(\"GENERAL.CANCEL\")}\r\n                                                                </Button>\r\n                                                                <Button\r\n                                                                    disabled={loadingAcceptOffer ? true : false}\r\n                                                                    variant=\"primary\"\r\n                                                                    onClick={() => {\r\n                                                                        setLoadingAcceptOffer(true);\r\n                                                                        AcceptOfferReq(bidReqTransId, orderId, bidReqTransPrice).then((resp) => {\r\n                                                                            if (\r\n                                                                                resp.data == \"ClientChargeBalanace\" ||\r\n                                                                                resp.data == \"TransporterNeedCharge\" ||\r\n                                                                                resp.data == \"ChargeBalanace\" ||\r\n                                                                                resp.data == \"deliveryWayNotFound\" ||\r\n                                                                                resp.data == \"OrderNotFound\" ||\r\n                                                                                resp.data == \"OrderAlreadyTaken\" ||\r\n                                                                                resp.data == \"TransporterNeedCharge\" ||\r\n                                                                                resp.data == \"OrderNotAccept\" ||\r\n                                                                                resp.data == \"BidChanged\" ||\r\n                                                                                resp.data == \"Blocked\" ||\r\n                                                                                resp.data == \"TokenError\"\r\n                                                                            ) {\r\n                                                                                dispatch(toastNotification(\"Error!\", resp.data, \"error\"));\r\n                                                                            } else if (resp.data.indexOf(\"Success\") !== -1) {\r\n                                                                                setRefresh(!refresh);\r\n                                                                            }\r\n                                                                            setLoadingAcceptOffer(false);\r\n                                                                        })\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {loadingAcceptOffer && <Spinner animation=\"border\" size=\"sm\" />}\r\n                                                                    {translate(\"TEMP.ACCEPT\")}\r\n                                                                </Button>\r\n                                                            </Modal.Footer>\r\n                                                        </Modal>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            })}\r\n                                        </tbody> : <tbody>\r\n                                            <tr>\r\n                                                <td colSpan={4}>{translate(\"ORDERS.NO_OFFERS\")}</td>\r\n                                            </tr>\r\n                                        </tbody>}\r\n                                    </Table>\r\n                                </Card.Body> : <Card.Body className='mt-4'><Map className=\"\" address1={senderAddress} address2={receiverAddress} /> </Card.Body>} {/* display Map card above if there are available offers */}\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        {/* Order's Actions Log */}\r\n                        <Col xl=\"4\">\r\n                            <Card className='shadow h-100 rounded-22'>\r\n                                <Card.Header style={styles.cardHeaderSm}>\r\n                                    {translate(\"TEMP.ORDER_ACTIONS\")}\r\n                                </Card.Header>\r\n                                <Card.Body className='mt-4' style={{ height: '345.8px', overflowY: 'scroll' }}>\r\n\r\n                                    <OrderActions actions={orderActions} />\r\n\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {/* Display Map in another row (below) if available-offers dsiplayed */}\r\n                    {\r\n                        !isTransporter() && order_status === \"Waiting for Bids\" && <Row className=\"mt-5\">\r\n                            <Col>\r\n                                <Card className='shadow rounded-22'>\r\n                                    <Card.Header style={styles.cardHeaderSm}>\r\n                                        {translate(\"TEMP.LOCATION\")}\r\n                                    </Card.Header>\r\n                                    <Card.Body className='mt-3'>\r\n                                        <Map className=\"\" address1={senderAddress} address2={receiverAddress} />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n\r\n                    {/* Order's Financial Transactions */}\r\n                    {\r\n                        transactions.length > 0 && <Row className=\"mt-5\">\r\n                            <Card className='shadow rounded-22'>\r\n                                <Card.Header style={styles.cardHeaderSm}>\r\n                                    {translate(\"TEMP.ORDER_TRANSACTIONS\")}\r\n                                </Card.Header>\r\n                                <Card.Body className=\"mt-3\">\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">{translate(\"TRANSACTIONS.NAME\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TRANSACTIONS.DATE\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TRANSACTIONS.TIME\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TRANSACTIONS.JOURNAL_NAME\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TRANSACTIONS.IN\")}</th>\r\n                                                <th scope=\"col\">{translate(\"TRANSACTIONS.OUT\")}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            { // popo\r\n                                                transactions?.map((item, index) => {\r\n                                                    return <tr\r\n                                                        key={index}\r\n                                                    >\r\n                                                        <td>\r\n                                                            {item.move_name}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {item.create_date.split(\" \")[0]}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {timeFormat(item.create_date.split(\" \")[1])}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {item.journal_id_name}\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <span style={{ fontWeight: item.credit > 0 ? \"bold\" : \"\", color: item.credit === 0 ? \"lightgray\" : \"\" }}>{item.credit !== 0 ? item.credit + \" NIS\" : 0}</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <span style={{ fontWeight: item.debit > 0 ? \"bold\" : \"\", color: item.debit === 0 ? \"lightgray\" : \"\" }}>{item.debit !== 0 ? item.debit + \" NIS\" : 0}</span>\r\n                                                        </td>\r\n\r\n                                                    </tr>\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Row>\r\n                    }\r\n                </Container >}\r\n            </React.Fragment >\r\n        );\r\n    } else if (typeof orderDetails === \"string\") {\r\n        return (\r\n            <Alert status=\"error\" w=\"80%\" m=\"10px auto\">\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>{orderId}</AlertTitle>\r\n                <AlertDescription>{orderDetails}</AlertDescription>\r\n            </Alert>\r\n        );\r\n    } else {\r\n        return <Box height=\"400px\"><Loader /></Box>\r\n    }\r\n}\r\n\r\nexport default OrderDetails;\r\n"]},"metadata":{},"sourceType":"module"}