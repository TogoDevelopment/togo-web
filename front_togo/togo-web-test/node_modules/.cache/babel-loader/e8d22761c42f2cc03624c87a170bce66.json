{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{AddIcon,MinusIcon}from\"@chakra-ui/icons\";import React,{useEffect,useState}from\"react\";import{Button,Table,Modal,Alert,ButtonGroup}from\"react-bootstrap\";import translate from\"../i18n/translate\";import{GetTransactions}from\"./APIs/OrdersAPIs\";import Receipt from\"./Receipt\";export default function TransferBtn(_ref){var _transactions$transac,_transactions$transac2;var TransporterId=_ref.TransporterId,onSuccess=_ref.onSuccess;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var handleShow=function handleShow(){return setShow(true);};var handleClose=function handleClose(){setShow(false);};var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),transactions=_useState4[0],setTransactions=_useState4[1];useEffect(function(){if(show===true){GetTransactions(TransporterId).then(function(res){setTransactions(res.data);});}},[show]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{variant:\"info\",className:\"text-white\",onClick:function onClick(event){event.stopPropagation();handleShow();}},translate(\"ADMIN.REVIEW_TRANSACTION\")),/*#__PURE__*/React.createElement(Modal,{show:show,onHide:handleClose,size:\"lg\"},/*#__PURE__*/React.createElement(Modal.Header,{closeButton:true},/*#__PURE__*/React.createElement(Modal.Title,null,translate(\"ADMIN.TRANSACTIONS_HISTORY\"))),/*#__PURE__*/React.createElement(Modal.Body,null,/*#__PURE__*/React.createElement(Table,{className:\"togo-table\"},/*#__PURE__*/React.createElement(\"thead\",{style:{display:\"block\",overflowY:\"scroll\"}},/*#__PURE__*/React.createElement(\"tr\",{style:{display:\"table\",width:\"100%\",tableLayout:\"fixed\"}},/*#__PURE__*/React.createElement(\"th\",null,\"OrderId\"),/*#__PURE__*/React.createElement(\"th\",null,\"TransactionDate\"),/*#__PURE__*/React.createElement(\"th\",null,\"FromCustomer\"),/*#__PURE__*/React.createElement(\"th\",null,\"ToCustomer\"),/*#__PURE__*/React.createElement(\"th\",null,\"Amount\"))),/*#__PURE__*/React.createElement(\"tbody\",{style:{height:\"280px\",display:\"block\",overflowY:\"auto\"}},transactions===null||transactions===void 0?void 0:(_transactions$transac=transactions.transactions_list)===null||_transactions$transac===void 0?void 0:(_transactions$transac2=_transactions$transac.map)===null||_transactions$transac2===void 0?void 0:_transactions$transac2.call(_transactions$transac,function(_ref2,idx){var Amount=_ref2.Amount,Description=_ref2.Description,FromCustomer=_ref2.FromCustomer,OrderId=_ref2.OrderId,ToCustomer=_ref2.ToCustomer,TransactionDate=_ref2.TransactionDate;return/*#__PURE__*/React.createElement(\"tr\",{key:OrderId+\"_\"+idx,style:{display:\"table\",width:\"100%\",tableLayout:\"fixed\"}},/*#__PURE__*/React.createElement(\"td\",null,OrderId),/*#__PURE__*/React.createElement(\"td\",null,TransactionDate),/*#__PURE__*/React.createElement(\"td\",null,FromCustomer),/*#__PURE__*/React.createElement(\"td\",null,ToCustomer),/*#__PURE__*/React.createElement(\"td\",null,Amount));}))),/*#__PURE__*/React.createElement(Alert,{variant:\"info\",className:\"d-flex align-items-center\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"font-bold\"},\"Total: \"),transactions===null||transactions===void 0?void 0:transactions.sum_of_balance),/*#__PURE__*/React.createElement(ButtonGroup,{variant:\"danger\",className:\"ms-5\"},/*#__PURE__*/React.createElement(Receipt,{toMaster:true,TransporterId:TransporterId},/*#__PURE__*/React.createElement(Button,{variant:\"outline-secondary\",className:\"m-inline-e-2\",onClick:function onClick(){// TransferToMaster(TransporterId, ref.current.value).then(()=>{\n//     dispatch(toastMessage(\"Debited\", \"Successful\", \"success\"));\n//     handleClose();\n//     //onSuccess();32f9f1ab3c8c30fac1bd1eff8c46235992485fbd\n// });\n}},/*#__PURE__*/React.createElement(AddIcon,null),\" Debit (Receive Cash From Transporter)\")),/*#__PURE__*/React.createElement(Receipt,{toMaster:false,TransporterId:TransporterId},/*#__PURE__*/React.createElement(Button,{variant:\"outline-secondary\",onClick:function onClick(){// TransferToMember(TransporterId, ref.current.value).then(()=>{\n//     dispatch(toastMessage(\"Credited\", \"Successful\", \"success\"));\n//     handleClose();\n//     //onSuccess();\n// });\n}},/*#__PURE__*/React.createElement(MinusIcon,null),\" Credit (Hand Cash To Transporter)\"))))),/*#__PURE__*/React.createElement(Modal.Footer,null)));}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/TransferBtn.jsx"],"names":["AddIcon","MinusIcon","React","useEffect","useState","Button","Table","Modal","Alert","ButtonGroup","translate","GetTransactions","Receipt","TransferBtn","TransporterId","onSuccess","show","setShow","handleShow","handleClose","transactions","setTransactions","then","res","data","event","stopPropagation","display","overflowY","width","tableLayout","height","transactions_list","map","idx","Amount","Description","FromCustomer","OrderId","ToCustomer","TransactionDate","sum_of_balance"],"mappings":"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","sourcesContent":["import { AddIcon, MinusIcon } from \"@chakra-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Table, Modal, Alert, ButtonGroup } from \"react-bootstrap\";\r\nimport translate from \"../i18n/translate\";\r\nimport { GetTransactions } from \"./APIs/OrdersAPIs\";\r\nimport Receipt from \"./Receipt\";\r\n\r\nexport default function TransferBtn({TransporterId, onSuccess}){\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n    const [transactions, setTransactions] = useState();\r\n    \r\n    useEffect(()=>{\r\n        if(show === true){\r\n            GetTransactions(TransporterId).then((res)=>{\r\n                setTransactions(res.data);\r\n            });\r\n        }\r\n    }, [show]);\r\n    \r\n    return (\r\n        <>\r\n        <Button variant=\"info\" className=\"text-white\" onClick={(event)=>{\r\n            event.stopPropagation();\r\n            handleShow();\r\n        }}>\r\n            {translate(\"ADMIN.REVIEW_TRANSACTION\")}\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose} size=\"lg\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{translate(\"ADMIN.TRANSACTIONS_HISTORY\")}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Table className=\"togo-table\">\r\n                    <thead style={{ display: \"block\", overflowY:\"scroll\"}}>\r\n                        <tr style={{display: \"table\",width:\"100%\",\r\n                                tableLayout:\"fixed\"}}>\r\n                            <th>OrderId</th>\r\n                            <th>TransactionDate</th>\r\n                            <th>FromCustomer</th>\r\n                            <th>ToCustomer</th>\r\n                            <th>Amount</th>\r\n                            {/* <th>Description</th> */}\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{height: \"280px\", display: \"block\", overflowY:\"auto\"}}>\r\n                        {transactions?.transactions_list?.map?.(({Amount, Description, FromCustomer, OrderId, ToCustomer, TransactionDate}, idx)=>{\r\n                            return (<tr key={OrderId + \"_\" + idx} style={{display: \"table\",width:\"100%\",\r\n                                tableLayout:\"fixed\"}}>\r\n                                <td>{OrderId}</td>\r\n                                <td>{TransactionDate}</td>\r\n                                <td>{FromCustomer}</td>\r\n                                <td>{ToCustomer}</td>\r\n                                <td>{Amount}</td>\r\n                                {/* <td>{Description}</td> */}\r\n                            </tr>);\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n                <Alert variant=\"info\" className=\"d-flex align-items-center\">\r\n                    <p><span className=\"font-bold\">Total: </span>{transactions?.sum_of_balance}</p>\r\n                    <ButtonGroup variant=\"danger\" className=\"ms-5\">\r\n                        <Receipt toMaster={true} TransporterId={TransporterId}>\r\n                            <Button variant=\"outline-secondary\" className=\"m-inline-e-2\" onClick={()=>{\r\n                                // TransferToMaster(TransporterId, ref.current.value).then(()=>{\r\n                                //     dispatch(toastMessage(\"Debited\", \"Successful\", \"success\"));\r\n                                //     handleClose();\r\n                                //     //onSuccess();32f9f1ab3c8c30fac1bd1eff8c46235992485fbd\r\n                                // });\r\n                            }}>\r\n                                <AddIcon /> Debit (Receive Cash From Transporter)\r\n                            </Button>\r\n                        </Receipt>\r\n                        <Receipt toMaster={false} TransporterId={TransporterId}>\r\n                            <Button variant=\"outline-secondary\" onClick={()=>{\r\n                                // TransferToMember(TransporterId, ref.current.value).then(()=>{\r\n                                //     dispatch(toastMessage(\"Credited\", \"Successful\", \"success\"));\r\n                                //     handleClose();\r\n                                //     //onSuccess();\r\n                                // });\r\n                            }}>\r\n                                <MinusIcon /> Credit (Hand Cash To Transporter)\r\n                            </Button>\r\n                        </Receipt>\r\n                    </ButtonGroup>\r\n                </Alert>\r\n                \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {/* <Button variant=\"danger\" onClick={() => {\r\n                    //onConfirm();\r\n                    handleClose();\r\n                }}>\r\n                    \r\n                </Button> */}\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}