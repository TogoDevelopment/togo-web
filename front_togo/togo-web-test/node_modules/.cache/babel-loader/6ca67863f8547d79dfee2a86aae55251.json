{"ast":null,"code":"var request = require(\"request\");\n\nfunction checkSet(json, opt, key, expected) {\n  if (opt && opt[key] && typeof opt[key] == expected) json[key] = opt[key];\n}\n\nfunction firebase(api_key) {\n  this.options = {\n    url: \"https://fcm.googleapis.com/fcm/send\",\n    method: \"POST\",\n    headers: {\n      \"Authorization\": \"key=\" + api_key,\n      \"Content-Type\": \"application/json\"\n    },\n    json: {}\n  };\n}\n\nfirebase.prototype.send = function (to, data, opt, cb) {\n  var options = JSON.parse(JSON.stringify(this.options));\n  var json = options.json;\n  if (typeof opt == \"function\") cb = opt;\n  json[typeof to === \"object\" && to instanceof Array ? \"registration_ids\" : \"to\"] = to;\n  json.data = data;\n  checkSet(json, opt, \"priority\", \"string\");\n  checkSet(json, opt, \"collapse_key\", \"string\");\n  checkSet(json, opt, \"time_to_live\", \"number\");\n  checkSet(json, opt, \"delay_while_idle\", \"boolean\");\n  checkSet(json, opt, \"notification\", \"object\");\n  request(options, function (err, response, body) {\n    if (cb) if (body !== null) try {\n      cb(JSON.parse(body));\n    } catch (e) {\n      cb(body);\n    } else cb(err);\n  });\n};\n\nfirebase.prototype.message = function (to, data, opt, cb) {\n  this.send(to, data, opt, cb);\n};\n\nfirebase.prototype.topic = function (topic, data, opt, cb) {\n  this.send(\"/topics/\" + topic, data, opt, cb);\n};\n\nmodule.exports = firebase;","map":{"version":3,"sources":["/home/system/togo-web-test/node_modules/firebase-messaging/index.js"],"names":["request","require","checkSet","json","opt","key","expected","firebase","api_key","options","url","method","headers","prototype","send","to","data","cb","JSON","parse","stringify","Array","err","response","body","e","message","topic","module","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,QAAlC,EAA4C;AACxC,MAAIF,GAAG,IAAIA,GAAG,CAACC,GAAD,CAAV,IAAmB,OAAOD,GAAG,CAACC,GAAD,CAAV,IAAmBC,QAA1C,EACIH,IAAI,CAACE,GAAD,CAAJ,GAAYD,GAAG,CAACC,GAAD,CAAf;AACP;;AAED,SAASE,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,OAAKC,OAAL,GAAe;AACXC,IAAAA,GAAG,EAAE,qCADM;AAEXC,IAAAA,MAAM,EAAE,MAFG;AAGXC,IAAAA,OAAO,EAAE;AACL,uBAAiB,SAASJ,OADrB;AAEL,sBAAgB;AAFX,KAHE;AAOXL,IAAAA,IAAI,EAAE;AAPK,GAAf;AASH;;AAEDI,QAAQ,CAACM,SAAT,CAAmBC,IAAnB,GAA0B,UAASC,EAAT,EAAaC,IAAb,EAAmBZ,GAAnB,EAAwBa,EAAxB,EAA4B;AAElD,MAAMR,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKX,OAApB,CAAX,CAAhB;AACA,MAAMN,IAAI,GAAGM,OAAO,CAACN,IAArB;AAEA,MAAI,OAAOC,GAAP,IAAc,UAAlB,EACIa,EAAE,GAAGb,GAAL;AAEJD,EAAAA,IAAI,CAAC,OAAOY,EAAP,KAAc,QAAd,IAA0BA,EAAE,YAAYM,KAAxC,GAAgD,kBAAhD,GAAqE,IAAtE,CAAJ,GAAkFN,EAAlF;AACAZ,EAAAA,IAAI,CAACa,IAAL,GAAYA,IAAZ;AAEAd,EAAAA,QAAQ,CAACC,IAAD,EAAOC,GAAP,EAAY,UAAZ,EAAwB,QAAxB,CAAR;AACAF,EAAAA,QAAQ,CAACC,IAAD,EAAOC,GAAP,EAAY,cAAZ,EAA4B,QAA5B,CAAR;AACAF,EAAAA,QAAQ,CAACC,IAAD,EAAOC,GAAP,EAAY,cAAZ,EAA4B,QAA5B,CAAR;AACAF,EAAAA,QAAQ,CAACC,IAAD,EAAOC,GAAP,EAAY,kBAAZ,EAAgC,SAAhC,CAAR;AACAF,EAAAA,QAAQ,CAACC,IAAD,EAAOC,GAAP,EAAY,cAAZ,EAA4B,QAA5B,CAAR;AAEAJ,EAAAA,OAAO,CAACS,OAAD,EAAU,UAASa,GAAT,EAAcC,QAAd,EAAwBC,IAAxB,EAA8B;AAE3C,QAAIP,EAAJ,EACI,IAAIO,IAAI,KAAK,IAAb,EACI,IAAI;AACAP,MAAAA,EAAE,CAACC,IAAI,CAACC,KAAL,CAAWK,IAAX,CAAD,CAAF;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACRR,MAAAA,EAAE,CAACO,IAAD,CAAF;AACH,KALL,MAOIP,EAAE,CAACK,GAAD,CAAF;AAEX,GAZM,CAAP;AAcH,CA/BD;;AAiCAf,QAAQ,CAACM,SAAT,CAAmBa,OAAnB,GAA6B,UAASX,EAAT,EAAaC,IAAb,EAAmBZ,GAAnB,EAAwBa,EAAxB,EAA4B;AACrD,OAAKH,IAAL,CAAUC,EAAV,EAAcC,IAAd,EAAoBZ,GAApB,EAAyBa,EAAzB;AACH,CAFD;;AAIAV,QAAQ,CAACM,SAAT,CAAmBc,KAAnB,GAA2B,UAASA,KAAT,EAAgBX,IAAhB,EAAsBZ,GAAtB,EAA2Ba,EAA3B,EAA+B;AACtD,OAAKH,IAAL,CAAU,aAAaa,KAAvB,EAA8BX,IAA9B,EAAoCZ,GAApC,EAAyCa,EAAzC;AACH,CAFD;;AAIAW,MAAM,CAACC,OAAP,GAAiBtB,QAAjB","sourcesContent":["var request = require(\"request\");\r\n\r\nfunction checkSet(json, opt, key, expected) {\r\n    if (opt && opt[key] && typeof opt[key] == expected)\r\n        json[key] = opt[key];\r\n}\r\n\r\nfunction firebase(api_key) {\r\n    this.options = {\r\n        url: \"https://fcm.googleapis.com/fcm/send\",\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Authorization\": \"key=\" + api_key,\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        json: {}\r\n    };\r\n}\r\n\r\nfirebase.prototype.send = function(to, data, opt, cb) {\r\n\r\n    const options = JSON.parse(JSON.stringify(this.options));\r\n    const json = options.json;\r\n\r\n    if (typeof opt == \"function\")\r\n        cb = opt;\r\n\r\n    json[typeof to === \"object\" && to instanceof Array ? \"registration_ids\" : \"to\"] = to;\r\n    json.data = data;\r\n\r\n    checkSet(json, opt, \"priority\", \"string\");\r\n    checkSet(json, opt, \"collapse_key\", \"string\");\r\n    checkSet(json, opt, \"time_to_live\", \"number\");\r\n    checkSet(json, opt, \"delay_while_idle\", \"boolean\");\r\n    checkSet(json, opt, \"notification\", \"object\");\r\n\r\n    request(options, function(err, response, body) {\r\n\r\n        if (cb)\r\n            if (body !== null)\r\n                try {\r\n                    cb(JSON.parse(body));\r\n                } catch (e) {\r\n                    cb(body);\r\n                }\r\n            else\r\n                cb(err);\r\n\r\n    });\r\n\r\n};\r\n\r\nfirebase.prototype.message = function(to, data, opt, cb) {\r\n    this.send(to, data, opt, cb);\r\n};\r\n\r\nfirebase.prototype.topic = function(topic, data, opt, cb) {\r\n    this.send(\"/topics/\" + topic, data, opt, cb);\r\n};\r\n\r\nmodule.exports = firebase;"]},"metadata":{},"sourceType":"script"}