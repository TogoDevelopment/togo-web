{"ast":null,"code":"import _objectSpread from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/system/togo-web-test/src/components/OrderDetails/OrderDetails.jsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Address from \"../Address/Address\";\nimport Map from \"../Address/Map\";\n/* edited (Map imported) */\n\nimport { Accordion, Card, Button, Badge, Dropdown, Form, Modal, Spinner, Col, Row, Container, Table } from \"react-bootstrap\";\n/* edited (new importd) */\n\nimport { MdOutlineFastfood } from 'react-icons/md';\n/* edited (new import) */\n\nimport { BiPackage } from 'react-icons/bi';\n/* edited (new import) */\n\nimport { FiPackage } from 'react-icons/fi';\n/* edited (new import) */\n\nimport { FcPackage } from 'react-icons/fc';\n/* edited (new import) */\n\nimport { GiEnvelope } from 'react-icons/gi';\n/* edited (new import) */\n\nimport { FinalizeOrder } from \"../OrdersManager/FinalizeOrder\";\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\nimport { BidOrder } from \"../OrdersManager/AcceptOrder\";\nimport { DeleteTripCost } from \"../OrdersManager/DeleteTripCost\";\nimport { EditTripCost } from \"../OrdersManager/EditTripCost\";\nimport Loader from \"../Loader/Loader\";\nimport \"./OrderDetails.css\";\nimport { getOrderDetails, checkTripCost, AcceptOfferReq, GetTransporterLocation } from \"../../APIs/OrdersAPIs\";\nimport translate from \"../../i18n/translate\";\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { deliverFormatter, packageFormatter } from \"../Orders/OrdersTabularView\";\nimport { isTeamMember, isTransporter, isTransporterMaster } from \"../../Util\";\nimport AssignToTransporter from \"../AssigneToTransporter\";\nimport { useLocation, useParams, useHistory } from \"react-router\";\nimport AssignToMemberOnNetworkDialog from \"../AssginToMemberOnNetworkDialog\";\nimport { refreshPage } from \"../../Functions/CommonFunctions\";\nimport Timeline from \"../TimeLine/TimeLine\";\n/* edited (TimeLine imported for old orders \"to be removed\") */\n// import FullTimeline from \"../FullTimeline/FullTimeline\"; /* edited (FullTimeline imported) */\n\nimport Rating from '@material-ui/lab/Rating';\n/* edited (Rating imported) */\n\nimport { transactionsByOrder, getTransporterInfo, getTimeLine, responseToAssignedOrder, recordAction } from '../../APIs/OrdersAPIs';\n/* edited (transactionsByOrder, getTimeLine, responseToAssignedOrder imported) */\n\n/* edited (to test the timeline) */\n// import { acceptOffer, pickupPackage, acceptAssignedOrder } from '../../APIs/OrdersAPIs';\n// var Barcode = require('react-barcode');\n\nfunction timeFormat(time) {\n  // Check correct time format and split into components\n  time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n  if (time.length > 1) {\n    // If time format correct\n    time = time.slice(1); // Remove full string match value\n\n    time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\n\n    time[0] = +time[0] % 12 || 12; // Adjust hours\n  }\n\n  return time.join(''); // return adjusted time or original string\n}\n\nvar calculateRange = function calculateRange(data, rowsPerPage) {\n  var range = [];\n  var num = Math.ceil(data.length / rowsPerPage);\n  var i = 1;\n\n  for (var _i = 1; _i <= num; _i++) {\n    range.push(_i);\n  }\n\n  return range;\n};\n\nvar sliceData = function sliceData(data, page, rowsPerPage) {\n  return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\n};\n\nvar useTable = function useTable(data, page, rowsPerPage) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableRange = _useState2[0],\n      setTableRange = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      slice = _useState4[0],\n      setSlice = _useState4[1];\n\n  useEffect(function () {\n    var range = calculateRange(data, rowsPerPage);\n    setTableRange(_toConsumableArray(range));\n    var slice = sliceData(data, page, rowsPerPage);\n    setSlice(_toConsumableArray(slice));\n  }, [data, setTableRange, page, setSlice]);\n  return {\n    slice: slice,\n    range: tableRange\n  };\n};\n\nvar TableFooter = function TableFooter(_ref) {\n  var range = _ref.range,\n      setPage = _ref.setPage,\n      page = _ref.page,\n      slice = _ref.slice;\n  useEffect(function () {\n    if (slice.length < 1 && page !== 1) {\n      setPage(page - 1);\n    }\n  }, [slice, page, setPage]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'tableFooter',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, range.map(function (el, index) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: index,\n      className: 'button'.concat(\" \", page === el ? 'activeButton' : 'inactiveButton'),\n      onClick: function onClick() {\n        return setPage(el);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, el);\n  }));\n};\n\nvar CustomTable = function CustomTable(_ref2) {\n  var data = _ref2.data,\n      rowsPerPage = _ref2.rowsPerPage;\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useTable = useTable(data, page, rowsPerPage),\n      slice = _useTable.slice,\n      range = _useTable.range;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, translate(\"TRANSACTIONS.NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, translate(\"TRANSACTIONS.DATE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, translate(\"TRANSACTIONS.TIME\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, translate(\"TRANSACTIONS.JOURNAL_NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, translate(\"TRANSACTIONS.AMOUNT\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    colSpan: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, translate(\"TRANSACTIONS.IN\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, translate(\"TRANSACTIONS.OUT\")))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, slice.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, item.move_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, item.create_date.split(\" \")[0]), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, timeFormat(item.create_date.split(\" \")[1])), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, item.journal_id_name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 37\n      }\n    }, item.credit !== 0 && item.credit + \" NIS\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, item.debit !== 0 && item.debit + \" NIS\"))));\n  }))), /*#__PURE__*/React.createElement(TableFooter, {\n    range: range,\n    slice: slice,\n    setPage: setPage,\n    page: page,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar OrderDetails = function OrderDetails() {\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      refresh = _useState8[0],\n      setRefresh = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      show = _useState10[0],\n      setShow = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cost = _useState12[0],\n      setCost = _useState12[1];\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var _useParams = useParams(),\n      orderId = _useParams.id;\n\n  var location = useLocation();\n  var history = useHistory();\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      orderDetails = _useState14[0],\n      setOrderDetails = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      timelineArr = _useState16[0],\n      setTimelineArr = _useState16[1];\n  /* edited (add timeline variable) */\n\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      previousPage = _useState18[0],\n      setPreviousPage = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      tripCost = _useState20[0],\n      setTripCost = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      costSet = _useState22[0],\n      setCostSet = _useState22[1];\n\n  var _useState23 = useState({}),\n      _useState24 = _slicedToArray(_useState23, 2),\n      receiverAddress = _useState24[0],\n      setReceiverAddress = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      startTracking = _useState26[0],\n      setStartTracking = _useState26[1];\n\n  var _useState27 = useState({\n    // edited (add previousTransporter) for old orders\n    type: 2,\n    current: false,\n    address: null,\n    name: \"\",\n    phone: \"\",\n    price: null,\n    imageURL: \"\",\n    pickupDate: null\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      previousTransporter = _useState28[0],\n      setPreviousTransporter = _useState28[1];\n  /* edited (selected available offer variables added) */\n\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      bidReqTransImg = _useState30[0],\n      setBidReqTransImg = _useState30[1];\n\n  var _useState31 = useState(),\n      _useState32 = _slicedToArray(_useState31, 2),\n      bidReqTransPrice = _useState32[0],\n      setBidReqTransPrice = _useState32[1];\n\n  var _useState33 = useState(),\n      _useState34 = _slicedToArray(_useState33, 2),\n      bidReqTransId = _useState34[0],\n      setBidReqTransId = _useState34[1];\n\n  var _useState35 = useState(),\n      _useState36 = _slicedToArray(_useState35, 2),\n      bidReqTransRate = _useState36[0],\n      setBidReqTransRate = _useState36[1];\n\n  var _useState37 = useState(),\n      _useState38 = _slicedToArray(_useState37, 2),\n      bidReqTransName = _useState38[0],\n      setBidReqTransName = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      transactions = _useState40[0],\n      setTransactions = _useState40[1]; // edited (add order transactions variable)\n\n\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.2rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold'\n    },\n    orderNumber: {\n      color: 'white',\n      fontStyle: 'italic',\n      marginLeft: '10px',\n      marginRight: '10px'\n    },\n    orderStatus: {\n      float: localStorage.getItem(\"Language\") === \"en\" ? 'right' : 'left'\n    },\n    tableElement: {\n      textAlign: 'right'\n    },\n    orderNumberTitle: {}\n  };\n  useEffect(function () {\n    var isMounted = true;\n    transactionsByOrder(localStorage.getItem(\"userId\"), orderId).then(function (res) {\n      if (isMounted) {\n        var tempArr = res.data.server_response.data.result.response;\n        /*tempArr.sort((a, b) => {\r\n            return b.ref - a.ref;\r\n        });\r\n          for (let i = 0; i < tempArr.length; i++) {\r\n            if (tempArr[i].amount < 0) {\r\n                tempArr[i].amount = Math.abs(tempArr[i].amount) + \" - in\"\r\n            } else if (tempArr[i].amount > 0) {\r\n                tempArr[i].amount = tempArr[i].amount + \" - out\"\r\n            }\r\n        }*/\n\n        setTransactions(tempArr);\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(function () {\n    var live = false;\n\n    if (startTracking === false) {\n      return;\n    }\n\n    var intervalId = setInterval(function () {\n      if (!live) {\n        live = true;\n        GetTransporterLocation(orderId).then(function (resp) {\n          live = false;\n          var _resp$data$server_res = resp.data.server_response[0],\n              TransporterLatLocation = _resp$data$server_res.TransporterLatLocation,\n              TransporterLongLoc = _resp$data$server_res.TransporterLongLoc;\n\n          if (TransporterLatLocation === null || TransporterLongLoc === null) {\n            TransporterLatLocation = 0;\n            TransporterLongLoc = 0;\n          }\n\n          setReceiverAddress(_objectSpread(_objectSpread({}, receiverAddress), {}, {\n            long: TransporterLongLoc,\n            lat: TransporterLatLocation\n          }));\n        });\n      }\n    }, 4000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, [startTracking]);\n  /* edited (move checkTripCost to an updating useEffect to update it at any change) */\n\n  useEffect(function () {\n    /* const interval = setInterval(() => {\r\n        checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                setCostSet(true);\r\n            } else {\r\n                setCostSet(false);\r\n            }\r\n        });\r\n    }, 1000);\r\n    return () => clearInterval(interval); */\n    checkTripCost(orderId, isTransporter()).then(function (tripCostRes) {\n      if (tripCostRes && tripCostRes !== \"CostNotSend\") {\n        setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\n        setCostSet(true);\n      } else {\n        setCostSet(false);\n      }\n    });\n  }, []);\n  /* to be edited */\n\n  useEffect(function () {\n    var _location$state;\n\n    /* edited (comment checkTripCost request) */\n\n    /*checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n        if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n            setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n            setCostSet(true);\r\n        } else {\r\n            setCostSet(false);\r\n        }\r\n    });*/\n    getOrderDetails(orderId).then(function (orderDetailsRes) {\n      console.log(orderDetailsRes); // temp test\n\n      setOrderDetails(orderDetailsRes);\n      setReceiverAddress({\n        otherDetails: orderDetailsRes.OtherDetailsDes + \", \" + orderDetailsRes.IdCityDes,\n        phoneCustomer: orderDetailsRes.ReceiverAddressNum,\n        long: orderDetailsRes.LongReciver,\n        lat: orderDetailsRes.LatReciver\n      });\n    });\n    setPreviousPage((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.currentPage);\n  }, [refresh]);\n  /* edited (getTimeLine called) */\n\n  useEffect(function () {\n    getTimeLine(orderId).then(function (res) {\n      //  console.log(res.data.timeline); // temp test\n      setTimelineArr(res.data.timeline);\n    });\n  }, [refresh]);\n\n  function getTransporterPersonalInfo(transporterId) {\n    var tempTrans = {\n      type: 2,\n      current: false,\n      address: null,\n      name: \"\",\n      phone: \"\",\n      price: null,\n      imageURL: \"\",\n      pickupDate: null,\n      assignDate: null\n    };\n    getTransporterInfo(transporterId).then(function (res) {\n      tempTrans.name = res.data.server_response.fullName;\n      tempTrans.phone = res.data.server_response.PhoneNumber;\n      tempTrans.imageURL = res.data.server_response.PersonalImgPath;\n    }); // console.log(tempTrans);\n\n    return tempTrans;\n  } // console.log(orderDetails); /* temp test */\n\n\n  if (typeof orderDetails === \"object\" && JSON.stringify(orderDetails) !== '{}') {\n    var OrderStatus = orderDetails.OrderStatus,\n        DateLoad = orderDetails.DateLoad,\n        DeliveryPrice = orderDetails.DeliveryPrice,\n        CostLoad = orderDetails.CostLoad,\n        OriginalDeliveryId = orderDetails.OriginalDeliveryId,\n        DeliveryId = orderDetails.DeliveryId,\n        AssignToName = orderDetails.AssignToName,\n        AssignToNumber = orderDetails.AssignToNumber,\n        transporterImgURL = orderDetails.transporterImgURL,\n        pickupDate = orderDetails.pickupDate,\n        customerImgURL = orderDetails.customerImgURL,\n        FullNameCustomer = orderDetails.FullNameCustomer,\n        LastNameCustomer = orderDetails.LastNameCustomer,\n        orderFinished = orderDetails.orderFinished,\n        IdCityDes = orderDetails.IdCityDes,\n        IdCitySource = orderDetails.IdCitySource,\n        isAssigned = orderDetails.isAssigned,\n        AssignerId = orderDetails.AssignerId,\n        order_status = orderDetails.order_status,\n        deliveryWay = orderDetails.deliveryWay,\n        HeightLoad = orderDetails.HeightLoad,\n        DetailsLoad = orderDetails.DetailsLoad,\n        LengthLoad = orderDetails.LengthLoad,\n        WeightLoad = orderDetails.WeightLoad,\n        WidthLoad = orderDetails.WidthLoad,\n        OtherDetails = orderDetails.OtherDetails,\n        TypeLoad = orderDetails.TypeLoad,\n        PhoneCustomer = orderDetails.PhoneCustomer,\n        LongSender = orderDetails.LongSender,\n        LatSender = orderDetails.LatSender,\n        AssignStatus = orderDetails.AssignStatus,\n        AssignedMemberName = orderDetails.AssignedMemberName,\n        isAcceptDelivery = orderDetails.isAcceptDelivery,\n        SenderName = orderDetails.SenderName,\n        ReceiverName = orderDetails.ReceiverName;\n    var senderAddress = {\n      name: SenderName,\n      otherDetails: OtherDetails + \", \" + IdCitySource,\n      phoneCustomer: PhoneCustomer,\n      long: LongSender,\n      lat: LatSender\n    };\n    /* edited (timeline data:) */\n\n    var tempTransportationParties = [];\n\n    if (timelineArr.length !== 0) {\n      // new timeline created for new orders to show all order related parties\n      tempTransportationParties = [{\n        type: 1,\n        current: false,\n        address: senderAddress,\n        customerName: FullNameCustomer + \" \" + LastNameCustomer,\n        name: SenderName,\n        imageURL: customerImgURL\n      }, {\n        type: 3,\n        current: false,\n        address: receiverAddress,\n        name: ReceiverName\n      }];\n\n      for (var i = 0; i < timelineArr.length; i++) {\n        // let tempTrans = getTransporterPersonalInfo(timelineArr[i].transporter_id);\n        // console.log(tempTrans);\n\n        /* tempTrans.price = timelineArr[i].transporter_bidprice;\r\n        tempTrans.pickupDate = timelineArr[i].transporter_pickupdate;\r\n        tempTrans.current = timelineArr[i].isCurrent === \"1\" ? true : false;\r\n        tempTrans.assignDate = timelineArr[i].assign_date; */\n        tempTransportationParties.splice(i + 1, 0, {\n          type: 2,\n          address: null,\n          name: timelineArr[i].fullName,\n          phone: timelineArr[i].PhoneNumber,\n          price: timelineArr[i].transporter_bidprice,\n          current: timelineArr[i].isCurrent === \"1\" ? true : false,\n          imageURL: timelineArr[i].PersonalImgPath,\n          pickupDate: timelineArr[i].transporter_pickupdate,\n          assignDate: timelineArr[i].assign_date\n        }); // console.log(tempTrans);\n      }\n    } else {\n      // temp code to view old orders timeline. it shows sender, receiver, first transporter, and last transporter\n\n      /* if (DeliveryId !== OriginalDeliveryId && DeliveryId !== null) {\r\n          getTransporterInfo(OriginalDeliveryId).then((res) => { // nono\r\n              // console.log(res.data) // temp test\r\n                previousTransporter.name = res.data.server_response.fullName;\r\n              previousTransporter.phone = res.data.server_response.PhoneNumber;\r\n              previousTransporter.imageURL = res.data.server_response.PersonalImgPath;\r\n          });\r\n      } */\n      if (\n      /* AssignToName !== null */\n      false) {\n        if (DeliveryId !== OriginalDeliveryId) {\n          tempTransportationParties = [{\n            type: 1,\n            current: false,\n            address: senderAddress,\n            customerName: FullNameCustomer + \" \" + LastNameCustomer,\n            name: SenderName,\n            imageURL: customerImgURL\n          }, previousTransporter, // assigner transpoter\n          {\n            // assignee transporter\n            type: 2,\n            address: null,\n            name: AssignToName,\n            phone: AssignToNumber,\n            price: DeliveryPrice,\n            current: true,\n            imageURL: transporterImgURL,\n            pickupDate: pickupDate\n          }, {\n            type: 3,\n            current: false,\n            address: receiverAddress,\n            name: ReceiverName\n          }];\n        } else {\n          tempTransportationParties = [{\n            type: 1,\n            current: false,\n            address: senderAddress,\n            customerName: FullNameCustomer + \" \" + LastNameCustomer,\n            name: SenderName,\n            imageURL: customerImgURL\n          }, {\n            type: 2,\n            address: null,\n            name: AssignToName,\n            phone: AssignToNumber,\n            price: DeliveryPrice,\n            current: true,\n            imageURL: transporterImgURL,\n            pickupDate: pickupDate\n          }, {\n            type: 3,\n            current: false,\n            address: receiverAddress,\n            name: ReceiverName\n          }];\n        }\n      } else {\n        tempTransportationParties = [{\n          type: 1,\n          current: false,\n          address: senderAddress,\n          customerName: FullNameCustomer + \" \" + LastNameCustomer,\n          name: SenderName,\n          imageURL: customerImgURL\n        }, {\n          type: 3,\n          current: false,\n          address: receiverAddress,\n          name: ReceiverName\n        }];\n      }\n    } // console.log(\"------ previousPage: \" + previousPage); // temp test\n\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 13\n      }\n    }, orderDetails && /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"ps-5 pe-5 pb-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        backgroundColor: \"#ededed\",\n        height: \"20%\",\n        zIndex: \"-1\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"mt-5\",\n      xl: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"shadow rounded-22 p-2\",\n      style: {\n        height: \"300px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"2rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 37\n      }\n    }, translate(\"TEMP.ORDER\")), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: \"2rem\",\n        color: \"#35b09d\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 37\n      }\n    }, orderId), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      className: \"mt-5\",\n      xxl: \"8\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 25\n      }\n    }, \"fsef\"))));\n  } else if (typeof orderDetails === \"string\") {\n    return /*#__PURE__*/React.createElement(Alert, {\n      status: \"error\",\n      w: \"80%\",\n      m: \"10px auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AlertIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AlertTitle, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 17\n      }\n    }, orderId), /*#__PURE__*/React.createElement(AlertDescription, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 17\n      }\n    }, orderDetails));\n  } else {\n    return /*#__PURE__*/React.createElement(Box, {\n      height: \"400px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Loader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 36\n      }\n    }));\n  }\n};\n\nexport default OrderDetails;","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/OrderDetails/OrderDetails.jsx"],"names":["React","useEffect","useState","Address","Map","Accordion","Card","Button","Badge","Dropdown","Form","Modal","Spinner","Col","Row","Container","Table","MdOutlineFastfood","BiPackage","FiPackage","FcPackage","GiEnvelope","FinalizeOrder","CancelOrder","BidOrder","DeleteTripCost","EditTripCost","Loader","getOrderDetails","checkTripCost","AcceptOfferReq","GetTransporterLocation","translate","Alert","AlertDescription","AlertIcon","AlertTitle","Box","deliverFormatter","packageFormatter","isTeamMember","isTransporter","isTransporterMaster","AssignToTransporter","useLocation","useParams","useHistory","AssignToMemberOnNetworkDialog","refreshPage","Timeline","Rating","transactionsByOrder","getTransporterInfo","getTimeLine","responseToAssignedOrder","recordAction","timeFormat","time","toString","match","length","slice","join","calculateRange","data","rowsPerPage","range","num","Math","ceil","i","push","sliceData","page","useTable","tableRange","setTableRange","setSlice","TableFooter","setPage","map","el","index","CustomTable","item","move_name","create_date","split","journal_id_name","credit","debit","OrderDetails","refresh","setRefresh","show","setShow","cost","setCost","handleClose","handleShow","orderId","id","location","history","orderDetails","setOrderDetails","timelineArr","setTimelineArr","previousPage","setPreviousPage","tripCost","setTripCost","costSet","setCostSet","receiverAddress","setReceiverAddress","startTracking","setStartTracking","type","current","address","name","phone","price","imageURL","pickupDate","previousTransporter","setPreviousTransporter","bidReqTransImg","setBidReqTransImg","bidReqTransPrice","setBidReqTransPrice","bidReqTransId","setBidReqTransId","bidReqTransRate","setBidReqTransRate","bidReqTransName","setBidReqTransName","transactions","setTransactions","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","orderNumber","fontStyle","marginLeft","marginRight","orderStatus","float","localStorage","getItem","tableElement","textAlign","orderNumberTitle","isMounted","then","res","tempArr","server_response","result","response","live","intervalId","setInterval","resp","TransporterLatLocation","TransporterLongLoc","long","lat","clearInterval","tripCostRes","CostDetail","orderDetailsRes","console","log","otherDetails","OtherDetailsDes","IdCityDes","phoneCustomer","ReceiverAddressNum","LongReciver","LatReciver","state","currentPage","timeline","getTransporterPersonalInfo","transporterId","tempTrans","assignDate","fullName","PhoneNumber","PersonalImgPath","JSON","stringify","OrderStatus","DateLoad","DeliveryPrice","CostLoad","OriginalDeliveryId","DeliveryId","AssignToName","AssignToNumber","transporterImgURL","customerImgURL","FullNameCustomer","LastNameCustomer","orderFinished","IdCitySource","isAssigned","AssignerId","order_status","deliveryWay","HeightLoad","DetailsLoad","LengthLoad","WeightLoad","WidthLoad","OtherDetails","TypeLoad","PhoneCustomer","LongSender","LatSender","AssignStatus","AssignedMemberName","isAcceptDelivery","SenderName","ReceiverName","senderAddress","tempTransportationParties","customerName","splice","transporter_bidprice","isCurrent","transporter_pickupdate","assign_date","backgroundColor","height","zIndex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Address from \"../Address/Address\";\r\nimport Map from \"../Address/Map\"; /* edited (Map imported) */\r\nimport { Accordion, Card, Button, Badge, Dropdown, Form, Modal, Spinner, Col, Row, Container, Table } from \"react-bootstrap\"; /* edited (new importd) */\r\nimport { MdOutlineFastfood } from 'react-icons/md'; /* edited (new import) */\r\nimport { BiPackage } from 'react-icons/bi'; /* edited (new import) */\r\nimport { FiPackage } from 'react-icons/fi'; /* edited (new import) */\r\nimport { FcPackage } from 'react-icons/fc'; /* edited (new import) */\r\nimport { GiEnvelope } from 'react-icons/gi'; /* edited (new import) */\r\n\r\nimport { FinalizeOrder } from \"../OrdersManager/FinalizeOrder\";\r\nimport { CancelOrder } from \"../OrdersManager/CancelOrder\";\r\nimport { BidOrder } from \"../OrdersManager/AcceptOrder\";\r\nimport { DeleteTripCost } from \"../OrdersManager/DeleteTripCost\";\r\nimport { EditTripCost } from \"../OrdersManager/EditTripCost\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"./OrderDetails.css\";\r\nimport { getOrderDetails, checkTripCost, AcceptOfferReq, GetTransporterLocation } from \"../../APIs/OrdersAPIs\";\r\nimport translate from \"../../i18n/translate\";\r\n\r\nimport { Alert, AlertDescription, AlertIcon, AlertTitle } from \"@chakra-ui/alert\";\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { deliverFormatter, packageFormatter } from \"../Orders/OrdersTabularView\";\r\nimport { isTeamMember, isTransporter, isTransporterMaster } from \"../../Util\";\r\nimport AssignToTransporter from \"../AssigneToTransporter\";\r\n\r\nimport { useLocation, useParams, useHistory } from \"react-router\";\r\n\r\nimport AssignToMemberOnNetworkDialog from \"../AssginToMemberOnNetworkDialog\";\r\nimport { refreshPage } from \"../../Functions/CommonFunctions\";\r\n\r\nimport Timeline from \"../TimeLine/TimeLine\"; /* edited (TimeLine imported for old orders \"to be removed\") */\r\n// import FullTimeline from \"../FullTimeline/FullTimeline\"; /* edited (FullTimeline imported) */\r\n\r\nimport Rating from '@material-ui/lab/Rating'; /* edited (Rating imported) */\r\n\r\nimport { transactionsByOrder, getTransporterInfo, getTimeLine, responseToAssignedOrder, recordAction } from '../../APIs/OrdersAPIs'; /* edited (transactionsByOrder, getTimeLine, responseToAssignedOrder imported) */\r\n\r\n/* edited (to test the timeline) */\r\n// import { acceptOffer, pickupPackage, acceptAssignedOrder } from '../../APIs/OrdersAPIs';\r\n\r\n// var Barcode = require('react-barcode');\r\n\r\nfunction timeFormat(time) {\r\n    // Check correct time format and split into components\r\n    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) { // If time format correct\r\n        time = time.slice(1);  // Remove full string match value\r\n        time[5] = +time[0] < 12 ? ' AM' : ' PM'; // Set AM/PM\r\n        time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    return time.join(''); // return adjusted time or original string\r\n}\r\n\r\nconst calculateRange = (data, rowsPerPage) => {\r\n    const range = [];\r\n    const num = Math.ceil(data.length / rowsPerPage);\r\n    let i = 1;\r\n    for (let i = 1; i <= num; i++) {\r\n        range.push(i);\r\n    }\r\n    return range;\r\n};\r\n\r\nconst sliceData = (data, page, rowsPerPage) => {\r\n    return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\r\n};\r\n\r\nconst useTable = (data, page, rowsPerPage) => {\r\n    const [tableRange, setTableRange] = useState([]);\r\n    const [slice, setSlice] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const range = calculateRange(data, rowsPerPage);\r\n        setTableRange([...range]);\r\n\r\n        const slice = sliceData(data, page, rowsPerPage);\r\n        setSlice([...slice]);\r\n    }, [data, setTableRange, page, setSlice]);\r\n\r\n    return { slice, range: tableRange };\r\n};\r\n\r\nconst TableFooter = ({ range, setPage, page, slice }) => {\r\n    useEffect(() => {\r\n        if (slice.length < 1 && page !== 1) {\r\n            setPage(page - 1);\r\n        }\r\n    }, [slice, page, setPage]);\r\n    return (\r\n        <div className={'tableFooter'}>\r\n\r\n            {/*<Button onClick={() => console.log(range)}>{\"<\"}</Button>*/}\r\n\r\n            {range.map((el, index) => (\r\n                <button\r\n                    key={index}\r\n                    className={`${'button'} ${page === el ? 'activeButton' : 'inactiveButton'\r\n                        }`}\r\n                    onClick={() => setPage(el)}\r\n                >\r\n                    {el}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CustomTable = ({ data, rowsPerPage }) => {\r\n    const [page, setPage] = useState(1);\r\n    const { slice, range } = useTable(data, page, rowsPerPage);\r\n    return (\r\n        <>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        {/*<th scope=\"col\">{translate(\"TRANSACTIONS.ORDER_ID\")}</th>*/}\r\n                        <th scope=\"col\">{translate(\"TRANSACTIONS.NAME\")}</th>\r\n                        <th scope=\"col\">{translate(\"TRANSACTIONS.DATE\")}</th>\r\n                        <th scope=\"col\">{translate(\"TRANSACTIONS.TIME\")}</th>\r\n                        <th scope=\"col\">{translate(\"TRANSACTIONS.JOURNAL_NAME\")}</th>\r\n                        <th scope=\"col\">{translate(\"TRANSACTIONS.AMOUNT\")}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"col\" colSpan=\"4\"></th>\r\n                        <th scope=\"col\">\r\n                            <div className=\"d-flex justify-content-around\">\r\n                                <span>{translate(\"TRANSACTIONS.IN\")}</span>\r\n                                <span>{translate(\"TRANSACTIONS.OUT\")}</span>\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {slice.map((item, index) =>\r\n                        <tr\r\n                            key={index}\r\n                        >\r\n\r\n                            {/*<td>\r\n                              {item.ref}\r\n                            </td>*/}\r\n                            <td>\r\n                                {item.move_name}\r\n                            </td>\r\n                            <td>\r\n                                {item.create_date.split(\" \")[0]}\r\n                            </td>\r\n                            <td>\r\n                                {timeFormat(item.create_date.split(\" \")[1])}\r\n                            </td>\r\n                            <td>\r\n                                {item.journal_id_name}\r\n                            </td>\r\n                            <td>\r\n                                <div className=\"d-flex justify-content-around\">\r\n                                    <span>{item.credit !== 0 && item.credit + \" NIS\"}</span>\r\n                                    <span>{item.debit !== 0 && item.debit + \" NIS\"}</span>\r\n                                </div>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    )}\r\n                    {/*{!slice.length && <tr><td colSpan={columns.length}>Transactions not found!</td></tr>}*/}\r\n                </tbody>\r\n            </Table>\r\n            <TableFooter range={range} slice={slice} setPage={setPage} page={page} />\r\n        </>\r\n    );\r\n};\r\n\r\nconst OrderDetails = () => {\r\n\r\n    const [refresh, setRefresh] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [cost, setCost] = useState(\"\");\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const { id: orderId } = useParams();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [orderDetails, setOrderDetails] = useState({});\r\n    const [timelineArr, setTimelineArr] = useState([]); /* edited (add timeline variable) */\r\n    const [previousPage, setPreviousPage] = useState(null);\r\n    const [tripCost, setTripCost] = useState(null);\r\n    const [costSet, setCostSet] = useState(null);\r\n    const [receiverAddress, setReceiverAddress] = useState({});\r\n    const [startTracking, setStartTracking] = useState(false);\r\n\r\n    const [previousTransporter, setPreviousTransporter] = useState({ // edited (add previousTransporter) for old orders\r\n        type: 2,\r\n        current: false,\r\n        address: null,\r\n        name: \"\",\r\n        phone: \"\",\r\n        price: null,\r\n        imageURL: \"\",\r\n        pickupDate: null\r\n    });\r\n\r\n    /* edited (selected available offer variables added) */\r\n    const [bidReqTransImg, setBidReqTransImg] = useState();\r\n    const [bidReqTransPrice, setBidReqTransPrice] = useState();\r\n    const [bidReqTransId, setBidReqTransId] = useState();\r\n    const [bidReqTransRate, setBidReqTransRate] = useState();\r\n    const [bidReqTransName, setBidReqTransName] = useState();\r\n\r\n    const [transactions, setTransactions] = useState([]); // edited (add order transactions variable)\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.2rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold'\r\n        },\r\n        orderNumber: {\r\n            color: 'white',\r\n            fontStyle: 'italic',\r\n            marginLeft: '10px',\r\n            marginRight: '10px'\r\n        },\r\n        orderStatus: {\r\n            float: localStorage.getItem(\"Language\") === \"en\" ? 'right' : 'left',\r\n\r\n        },\r\n        tableElement: {\r\n            textAlign: 'right'\r\n        },\r\n        orderNumberTitle: {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        let isMounted = true;\r\n        transactionsByOrder(localStorage.getItem(\"userId\"), orderId).then(res => {\r\n            if (isMounted) {\r\n                let tempArr = res.data.server_response.data.result.response;\r\n\r\n                /*tempArr.sort((a, b) => {\r\n                    return b.ref - a.ref;\r\n                });\r\n\r\n                for (let i = 0; i < tempArr.length; i++) {\r\n                    if (tempArr[i].amount < 0) {\r\n                        tempArr[i].amount = Math.abs(tempArr[i].amount) + \" - in\"\r\n                    } else if (tempArr[i].amount > 0) {\r\n                        tempArr[i].amount = tempArr[i].amount + \" - out\"\r\n                    }\r\n                }*/\r\n\r\n                setTransactions(tempArr);\r\n            }\r\n        })\r\n        return () => { isMounted = false };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let live = false;\r\n        if (startTracking === false) {\r\n            return;\r\n        }\r\n        const intervalId = setInterval(() => {\r\n            if (!live) {\r\n                live = true;\r\n                GetTransporterLocation(orderId).then((resp) => {\r\n                    live = false;\r\n                    let { TransporterLatLocation, TransporterLongLoc } = resp.data.server_response[0];\r\n                    if (TransporterLatLocation === null || TransporterLongLoc === null) {\r\n                        TransporterLatLocation = 0;\r\n                        TransporterLongLoc = 0;\r\n                    }\r\n                    setReceiverAddress({\r\n                        ...receiverAddress,\r\n                        long: TransporterLongLoc,\r\n                        lat: TransporterLatLocation\r\n                    });\r\n                });\r\n            }\r\n        }, 4000);\r\n        return () => clearInterval(intervalId);\r\n    }, [startTracking])\r\n\r\n    /* edited (move checkTripCost to an updating useEffect to update it at any change) */\r\n\r\n    useEffect(() => {\r\n        /* const interval = setInterval(() => {\r\n            checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n                if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                    setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                    setCostSet(true);\r\n                } else {\r\n                    setCostSet(false);\r\n                }\r\n            });\r\n        }, 1000);\r\n        return () => clearInterval(interval); */\r\n        checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                setCostSet(true);\r\n            } else {\r\n                setCostSet(false);\r\n            }\r\n        });\r\n    }, []) /* to be edited */\r\n\r\n    useEffect(() => {\r\n        /* edited (comment checkTripCost request) */\r\n\r\n        /*checkTripCost(orderId, isTransporter()).then((tripCostRes) => {\r\n            if (tripCostRes && tripCostRes !== \"CostNotSend\") {\r\n                setTripCost(isTransporter() ? tripCostRes.server_response[0] : tripCostRes.CostDetail);\r\n                setCostSet(true);\r\n            } else {\r\n                setCostSet(false);\r\n            }\r\n        });*/\r\n\r\n        getOrderDetails(orderId).then((orderDetailsRes) => {\r\n\r\n            console.log(orderDetailsRes); // temp test\r\n\r\n            setOrderDetails(orderDetailsRes);\r\n\r\n            setReceiverAddress({\r\n                otherDetails: orderDetailsRes.OtherDetailsDes + \", \" + orderDetailsRes.IdCityDes,\r\n                phoneCustomer: orderDetailsRes.ReceiverAddressNum,\r\n                long: orderDetailsRes.LongReciver,\r\n                lat: orderDetailsRes.LatReciver\r\n            });\r\n        });\r\n\r\n        setPreviousPage(location.state?.currentPage);\r\n    }, [refresh]);\r\n\r\n    /* edited (getTimeLine called) */\r\n    useEffect(() => {\r\n        getTimeLine(orderId).then((res) => {\r\n            //  console.log(res.data.timeline); // temp test\r\n            setTimelineArr(res.data.timeline)\r\n        });\r\n    }, [refresh]);\r\n\r\n    function getTransporterPersonalInfo(transporterId) {\r\n        let tempTrans = {\r\n            type: 2,\r\n            current: false,\r\n            address: null,\r\n            name: \"\",\r\n            phone: \"\",\r\n            price: null,\r\n            imageURL: \"\",\r\n            pickupDate: null,\r\n            assignDate: null\r\n        }\r\n\r\n        getTransporterInfo(transporterId).then((res) => {\r\n\r\n            tempTrans.name = res.data.server_response.fullName;\r\n            tempTrans.phone = res.data.server_response.PhoneNumber;\r\n            tempTrans.imageURL = res.data.server_response.PersonalImgPath;\r\n        });\r\n\r\n        // console.log(tempTrans);\r\n        return tempTrans;\r\n    }\r\n\r\n    // console.log(orderDetails); /* temp test */\r\n\r\n    if (typeof orderDetails === \"object\" && JSON.stringify(orderDetails) !== '{}') {\r\n        let {\r\n            OrderStatus, /* edited (OrderStatus added) */\r\n            DateLoad, /* edited (DateLoad added) */\r\n            DeliveryPrice, /* edited (DeliveryPrice added) */\r\n            CostLoad, /* edited (CostLoad added) */\r\n            OriginalDeliveryId, /* edited (OriginalDeliveryId added) */\r\n            DeliveryId, /* edited (DeliveryId added) */\r\n            AssignToName, /* edited (AssignToName added) */\r\n            AssignToNumber, /* edited (AssignToNumber added) */\r\n            transporterImgURL, /* edited (transporterImgURL added) */\r\n            pickupDate, /* edited (pickupDate added) */\r\n            customerImgURL, /* edited (customerImgURL added) */\r\n            FullNameCustomer, /* edited (FullNameCustomer added) */\r\n            LastNameCustomer, /* edited (LastNameCustomer added) */\r\n            orderFinished, /* edited (orderFinished added) */\r\n            IdCityDes, /* edited (IdCityDes added) */\r\n            IdCitySource, /* edited (IdCitySource added) */\r\n            isAssigned, /* edited (isAssigned added) */\r\n            AssignerId, /* edited (AssignerId added) */\r\n            order_status, /* edited (order_status added) */\r\n            deliveryWay,\r\n            HeightLoad,\r\n            DetailsLoad,\r\n            LengthLoad,\r\n            WeightLoad,\r\n            WidthLoad,\r\n            OtherDetails,\r\n            TypeLoad,\r\n            PhoneCustomer,\r\n            LongSender, LatSender,\r\n            AssignStatus, AssignedMemberName,\r\n            isAcceptDelivery,\r\n            SenderName,\r\n            ReceiverName\r\n        } = orderDetails;\r\n\r\n        let senderAddress = {\r\n            name: SenderName,\r\n            otherDetails: OtherDetails + \", \" + IdCitySource,\r\n            phoneCustomer: PhoneCustomer,\r\n            long: LongSender,\r\n            lat: LatSender\r\n        };\r\n\r\n        /* edited (timeline data:) */\r\n\r\n        let tempTransportationParties = [];\r\n\r\n        if (timelineArr.length !== 0) { // new timeline created for new orders to show all order related parties\r\n\r\n            tempTransportationParties = [\r\n                {\r\n                    type: 1,\r\n                    current: false,\r\n                    address: senderAddress,\r\n                    customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                    name: SenderName,\r\n                    imageURL: customerImgURL\r\n                },\r\n                {\r\n                    type: 3,\r\n                    current: false,\r\n                    address: receiverAddress,\r\n                    name: ReceiverName\r\n                }\r\n            ]\r\n\r\n            for (let i = 0; i < timelineArr.length; i++) {\r\n\r\n                // let tempTrans = getTransporterPersonalInfo(timelineArr[i].transporter_id);\r\n                // console.log(tempTrans);\r\n\r\n                /* tempTrans.price = timelineArr[i].transporter_bidprice;\r\n                tempTrans.pickupDate = timelineArr[i].transporter_pickupdate;\r\n                tempTrans.current = timelineArr[i].isCurrent === \"1\" ? true : false;\r\n                tempTrans.assignDate = timelineArr[i].assign_date; */\r\n\r\n                tempTransportationParties.splice(i + 1, 0, {\r\n                    type: 2,\r\n                    address: null,\r\n                    name: timelineArr[i].fullName,\r\n                    phone: timelineArr[i].PhoneNumber,\r\n                    price: timelineArr[i].transporter_bidprice,\r\n                    current: timelineArr[i].isCurrent === \"1\" ? true : false,\r\n                    imageURL: timelineArr[i].PersonalImgPath,\r\n                    pickupDate: timelineArr[i].transporter_pickupdate,\r\n                    assignDate: timelineArr[i].assign_date\r\n                })\r\n\r\n                // console.log(tempTrans);\r\n            }\r\n\r\n        } else { // temp code to view old orders timeline. it shows sender, receiver, first transporter, and last transporter\r\n\r\n            /* if (DeliveryId !== OriginalDeliveryId && DeliveryId !== null) {\r\n                getTransporterInfo(OriginalDeliveryId).then((res) => { // nono\r\n                    // console.log(res.data) // temp test\r\n\r\n                    previousTransporter.name = res.data.server_response.fullName;\r\n                    previousTransporter.phone = res.data.server_response.PhoneNumber;\r\n                    previousTransporter.imageURL = res.data.server_response.PersonalImgPath;\r\n                });\r\n            } */\r\n\r\n            if (/* AssignToName !== null */ false) {\r\n                if (DeliveryId !== OriginalDeliveryId) {\r\n                    tempTransportationParties = [\r\n                        {\r\n                            type: 1,\r\n                            current: false,\r\n                            address: senderAddress,\r\n                            customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                            name: SenderName,\r\n                            imageURL: customerImgURL\r\n                        },\r\n                        previousTransporter, // assigner transpoter\r\n                        { // assignee transporter\r\n                            type: 2,\r\n                            address: null,\r\n                            name: AssignToName,\r\n                            phone: AssignToNumber,\r\n                            price: DeliveryPrice,\r\n                            current: true,\r\n                            imageURL: transporterImgURL,\r\n                            pickupDate: pickupDate\r\n                        },\r\n                        {\r\n                            type: 3,\r\n                            current: false,\r\n                            address: receiverAddress,\r\n                            name: ReceiverName\r\n                        }\r\n                    ]\r\n                } else {\r\n                    tempTransportationParties = [\r\n                        {\r\n                            type: 1,\r\n                            current: false,\r\n                            address: senderAddress,\r\n                            customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                            name: SenderName,\r\n                            imageURL: customerImgURL\r\n                        },\r\n                        {\r\n                            type: 2,\r\n                            address: null,\r\n                            name: AssignToName,\r\n                            phone: AssignToNumber,\r\n                            price: DeliveryPrice,\r\n                            current: true,\r\n                            imageURL: transporterImgURL,\r\n                            pickupDate: pickupDate\r\n                        },\r\n                        {\r\n                            type: 3,\r\n                            current: false,\r\n                            address: receiverAddress,\r\n                            name: ReceiverName\r\n                        }\r\n                    ]\r\n                }\r\n            } else {\r\n                tempTransportationParties = [\r\n                    {\r\n                        type: 1,\r\n                        current: false,\r\n                        address: senderAddress,\r\n                        customerName: FullNameCustomer + \" \" + LastNameCustomer,\r\n                        name: SenderName,\r\n                        imageURL: customerImgURL\r\n                    },\r\n                    {\r\n                        type: 3,\r\n                        current: false,\r\n                        address: receiverAddress,\r\n                        name: ReceiverName\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        // console.log(\"------ previousPage: \" + previousPage); // temp test\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {orderDetails && <Container fluid className='ps-5 pe-5 pb-5'>\r\n\r\n                    <div style={{ position: \"absolute\", left: 0, right: 0, backgroundColor: \"#ededed\", height: \"20%\", zIndex: \"-1\" }}></div>\r\n\r\n                    <Row className=\"\">\r\n                        <Col className=\"mt-5\" xl=\"4\">\r\n                            <Card className=\"shadow rounded-22 p-2\" style={{ height: \"300px\" }}>\r\n                                {/* <Card.Header style={styles.cardHeaderSm}>\r\n                                    test\r\n                                </Card.Header> */}\r\n                                <Card.Body /* className=\"mt-3\" */>\r\n                                    <span style={{ fontSize: \"2rem\" }}>{translate(\"TEMP.ORDER\")}</span>{\" \"}\r\n                                    <span style={{ fontSize: \"2rem\", color: \"#35b09d\" }}>{orderId}</span>\r\n                                    <hr />\r\n                                    <div className=\"mt-2\">\r\n                                        \r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col className=\"mt-5\" xxl=\"8\">\r\n                            fsef\r\n                        </Col>\r\n                    </Row>\r\n                </Container>}\r\n                {/* edited (to test the timeline) */}\r\n                {/* <div className=\"mt-5\">\r\n                    <Button variant=\"outline-light\" onClick={() => {console.log(\"test 1\"); acceptOffer(1000, 12, 11).then((res) => { console.log(res.data) })}}>test 1 (accecpt offer)</Button>\r\n                    <Button variant=\"outline-light\" onClick={() => {console.log(\"test 2\"); pickupPackage(1000, 12).then((res) => { console.log(res.data) })}}>test 2 (pickup package)</Button>\r\n                    <Button variant=\"outline-light\" onClick={() => {console.log(\"test 3\"); acceptAssignedOrder(1000, 40).then((res) => { console.log(res.data) })}}>test 3 (accept assigned order)</Button>\r\n                </div> */}\r\n\r\n                {/* edited (to test actions records) */}\r\n                {/* recordAction(party_one_id, party_one_name, party_two_id, party_two_name, order_id, description, action_id) */}\r\n                {/* <div className=\"mt-5\">\r\n                    <Button variant=\"outline-light\" onClick={() => {recordAction(41, \"party_one_name\", 12, \"party_two_name\", 100, \"description\", 5).then((res) => { console.log(res.data) })}}>test</Button>\r\n                </div> */}\r\n            </React.Fragment>\r\n        );\r\n    } else if (typeof orderDetails === \"string\") {\r\n        return (\r\n            <Alert status=\"error\" w=\"80%\" m=\"10px auto\">\r\n                <AlertIcon />\r\n                <AlertTitle mr={2}>{orderId}</AlertTitle>\r\n                <AlertDescription>{orderDetails}</AlertDescription>\r\n            </Alert>\r\n        );\r\n    } else {\r\n        return <Box height=\"400px\"><Loader /></Box>\r\n    }\r\n}\r\n\r\nexport default OrderDetails;\r\n"]},"metadata":{},"sourceType":"module"}