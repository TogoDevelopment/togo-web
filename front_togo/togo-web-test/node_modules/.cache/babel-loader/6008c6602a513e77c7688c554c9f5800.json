{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/AssignToDialog.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal } from \"react-bootstrap\";\nimport translate from \"../i18n/translate\";\nimport MyNetworkDropDown from \"./MyNetworkDropDown\";\nexport default function AssignToDialog(_ref) {\n  var ordersIds = _ref.ordersIds;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openAssignModal = _useState2[0],\n      setOpenAssignModal = _useState2[1];\n\n  var handleAssignModalClose = function handleAssignModalClose() {\n    setOpenAssignModal(false);\n  };\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputValue = _useState4[0],\n      setInputValue = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedMember = _useState6[0],\n      setSelectedMember = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (openAssignModal) {\n        setLoading(true);\n        GetAllNetworkMembers().then(function (res) {\n          setLoading(false);\n          setSelectedMember(res.data.server_response.filter(function (member) {\n            return member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(inputValue.toLowerCase());\n          }));\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, openAssignModal]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad text-white ms-2 me-2\",\n    onClick: function onClick() {\n      ordersIds.length > 0 ? setOpenAssignModal(true) : alert(\"Select ordera first!\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, translate(\"TEMP.ASSIGN_TO\")), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: openAssignModal,\n    onHide: handleAssignModalClose,\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, translate(\"TEMP.ASSIGN_TO\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MyNetworkDropDown, {\n    loading: loading,\n    network: allNetworkMembers,\n    onSearch: setInputValue,\n    onSelect: setSelectedMember,\n    selectedMember: selectedMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAssignModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, translate(\"GENERAL.CLOSE\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/AssignToDialog.jsx"],"names":["React","useState","useEffect","Button","Modal","translate","MyNetworkDropDown","AssignToDialog","ordersIds","openAssignModal","setOpenAssignModal","handleAssignModalClose","inputValue","setInputValue","selectedMember","setSelectedMember","loading","setLoading","timer","setTimeout","GetAllNetworkMembers","then","res","data","server_response","filter","member","FullName","toLowerCase","replaceAll","includes","clearTimeout","length","alert","allNetworkMembers"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport translate from \"../i18n/translate\";\r\nimport MyNetworkDropDown from \"./MyNetworkDropDown\";\r\n\r\nexport default function AssignToDialog({ ordersIds }) {\r\n    const [openAssignModal, setOpenAssignModal] = useState(false);\r\n    const handleAssignModalClose = () => { setOpenAssignModal(false); }\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectedMember, setSelectedMember] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (openAssignModal) {\r\n                setLoading(true);\r\n\r\n                GetAllNetworkMembers().then((res) => {\r\n                    setLoading(false);\r\n\r\n                    setSelectedMember(res.data.server_response.filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(inputValue.toLowerCase())));\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, openAssignModal]);\r\n\r\n    return <>\r\n        <Button className={\"btn-grad text-white ms-2 me-2\"} onClick={() => { ordersIds.length > 0 ? setOpenAssignModal(true) : alert(\"Select ordera first!\") }}>{translate(\"TEMP.ASSIGN_TO\")}</Button>\r\n        <Modal size=\"lg\" show={openAssignModal} onHide={handleAssignModalClose} centered animation={true} backdrop=\"static\">\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{translate(\"TEMP.ASSIGN_TO\")}</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n\r\n                <MyNetworkDropDown\r\n                    loading={loading}\r\n                    network={allNetworkMembers}\r\n                    onSearch={setInputValue}\r\n                    onSelect={setSelectedMember}\r\n                    selectedMember={selectedMember}\r\n                />\r\n\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <Button onClick={handleAssignModalClose}>{translate(\"GENERAL.CLOSE\")}</Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    </>\r\n}"]},"metadata":{},"sourceType":"module"}