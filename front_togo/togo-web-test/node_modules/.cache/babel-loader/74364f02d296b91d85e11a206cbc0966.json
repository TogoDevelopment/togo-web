{"ast":null,"code":"import _classCallCheck from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { ToastManager } from \"./toast-manager\";\nvar portalId = \"chakra-toast-portal\";\nvar Toaster =\n/**\n * Initialize the manager and mount it in the DOM\n * inside the portal node.\n *\n * @todo\n *\n * Update toast constructor to use `PortalManager`'s node or document.body.\n * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n */\nfunction Toaster() {\n  var _this2 = this;\n  _classCallCheck(this, Toaster);\n  var _this = this;\n  _defineProperty(this, \"createToast\", void 0);\n  _defineProperty(this, \"removeAll\", void 0);\n  _defineProperty(this, \"closeToast\", void 0);\n  _defineProperty(this, \"updateToast\", void 0);\n  _defineProperty(this, \"isToastActive\", void 0);\n  _defineProperty(this, \"bindFunctions\", function (methods) {\n    _this2.createToast = methods.notify;\n    _this2.removeAll = methods.closeAll;\n    _this2.closeToast = methods.close;\n    _this2.updateToast = methods.update;\n    _this2.isToastActive = methods.isActive;\n  });\n  _defineProperty(this, \"notify\", function (message, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return _this.createToast == null ? void 0 : _this.createToast(message, options);\n  });\n  _defineProperty(this, \"close\", function (id) {\n    var _this$closeToast;\n    (_this$closeToast = _this2.closeToast) == null ? void 0 : _this$closeToast.call(_this2, id);\n  });\n  _defineProperty(this, \"closeAll\", function (options) {\n    var _this$removeAll;\n    (_this$removeAll = _this2.removeAll) == null ? void 0 : _this$removeAll.call(_this2, options);\n  });\n  _defineProperty(this, \"update\", function (id, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    _this.updateToast == null ? void 0 : _this.updateToast(id, options);\n  });\n  _defineProperty(this, \"isActive\", function (id) {\n    var _this$isToastActive;\n    return (_this$isToastActive = _this2.isToastActive) == null ? void 0 : _this$isToastActive.call(_this2, id);\n  });\n  if (!isBrowser) return;\n  var portal;\n  var existingPortal = document.getElementById(portalId);\n  if (existingPortal) {\n    portal = existingPortal;\n  } else {\n    var _document$body;\n    var div = document.createElement(\"div\");\n    div.id = portalId;\n    (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);\n    portal = div;\n  }\n  render( /*#__PURE__*/React.createElement(ToastManager, {\n    notify: this.bindFunctions\n  }), portal);\n};\nexport var toast = new Toaster();","map":{"version":3,"names":["isBrowser","React","render","ToastManager","portalId","Toaster","_this2","_classCallCheck","_this","_defineProperty","methods","createToast","notify","removeAll","closeAll","closeToast","close","updateToast","update","isToastActive","isActive","message","options","id","_this$closeToast","call","_this$removeAll","_this$isToastActive","portal","existingPortal","document","getElementById","_document$body","div","createElement","body","appendChild","bindFunctions","toast"],"sources":["../../src/toast.class.tsx"],"sourcesContent":["import { isBrowser } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { ToastMethods, ToastManager } from \"./toast-manager\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\n\nconst portalId = \"chakra-toast-portal\"\n\nclass Toaster {\n  private createToast?: ToastMethods[\"notify\"]\n  private removeAll?: ToastMethods[\"closeAll\"]\n  private closeToast?: ToastMethods[\"close\"]\n  private updateToast?: ToastMethods[\"update\"]\n  private isToastActive?: ToastMethods[\"isActive\"]\n\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    if (!isBrowser) return\n\n    let portal: HTMLElement\n    const existingPortal = document.getElementById(portalId)\n\n    if (existingPortal) {\n      portal = existingPortal\n    } else {\n      const div = document.createElement(\"div\")\n      div.id = portalId\n      document.body?.appendChild(div)\n      portal = div\n    }\n\n    render(<ToastManager notify={this.bindFunctions} />, portal)\n  }\n\n  private bindFunctions = (methods: ToastMethods) => {\n    this.createToast = methods.notify\n    this.removeAll = methods.closeAll\n    this.closeToast = methods.close\n    this.updateToast = methods.update\n    this.isToastActive = methods.isActive\n  }\n\n  notify = (message: ToastMessage, options: Partial<ToastOptions> = {}) =>\n    this.createToast?.(message, options)\n\n  close = (id: ToastId) => {\n    this.closeToast?.(id)\n  }\n\n  closeAll = (options?: CloseAllToastsOptions) => {\n    this.removeAll?.(options)\n  }\n\n  update = (id: ToastId, options: Partial<ToastOptions> = {}) => {\n    this.updateToast?.(id, options)\n  }\n\n  isActive = (id: ToastId) => this.isToastActive?.(id)\n}\n\nexport const toast = new Toaster()\n"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAuBC,YAAvB,QAA2C,iBAA3C;AAQA,IAAMC,QAAQ,GAAG,qBAAjB;AAAA,IAEMC,OAAN;AAOE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SAAAA,QAAA,EAAc;EAAA,IAAAC,MAAA;EAAAC,eAAA,OAAAF,OAAA;EAAA,IAAAG,KAAA;EAAAC,eAAA;EAAAA,eAAA;EAAAA,eAAA;EAAAA,eAAA;EAAAA,eAAA;EAAAA,eAAA,wBAkBW,UAAAC,OAAD,EAA2B;IACjDJ,MAAA,CAAKK,WAAL,GAAmBD,OAAO,CAACE,MAA3B;IACAN,MAAA,CAAKO,SAAL,GAAiBH,OAAO,CAACI,QAAzB;IACAR,MAAA,CAAKS,UAAL,GAAkBL,OAAO,CAACM,KAA1B;IACAV,MAAA,CAAKW,WAAL,GAAmBP,OAAO,CAACQ,MAA3B;IACAZ,MAAA,CAAKa,aAAL,GAAqBT,OAAO,CAACU,QAA7B;EACD,CAxBa;EAAAX,eAAA,iBA0BL,UAACY,OAAD,EAAwBC,OAAxB;IAAA,IAAwBA,OAAxB;MAAwBA,OAAxB,GAAyD,EAAzD;IAAA;IAAA,OACPd,KAAI,CAACG,WADE,oBACPH,KAAI,CAACG,WAAL,CAAmBU,OAAnB,EAA4BC,OAA5B,CADO;EAAA,CA1BK;EAAAb,eAAA,gBA6BL,UAAAc,EAAD,EAAiB;IAAA,IAAAC,gBAAA;IACvB,CAAAA,gBAAA,GAAAlB,MAAA,CAAKS,UAAL,qBAAAS,gBAAA,CAAAC,IAAA,CAAAnB,MAAA,EAAkBiB,EAAlB;EACD,CA/Ba;EAAAd,eAAA,mBAiCF,UAAAa,OAAD,EAAqC;IAAA,IAAAI,eAAA;IAC9C,CAAAA,eAAA,GAAApB,MAAA,CAAKO,SAAL,qBAAAa,eAAA,CAAAD,IAAA,CAAAnB,MAAA,EAAiBgB,OAAjB;EACD,CAnCa;EAAAb,eAAA,iBAqCL,UAACc,EAAD,EAAcD,OAAd,EAAsD;IAAA,IAAxCA,OAAwC;MAAxCA,OAAwC,GAAP,EAAO;IAAA;IAC7Dd,KAAI,CAACS,WAAL,oBAAAT,KAAI,CAACS,WAAL,CAAmBM,EAAnB,EAAuBD,OAAvB;EACD,CAvCa;EAAAb,eAAA,mBAyCF,UAAAc,EAAD;IAAA,IAAAI,mBAAA;IAAA,QAAAA,mBAAA,GAAiBrB,MAAA,CAAKa,aAAtB,qBAAiBQ,mBAAA,CAAAF,IAAA,CAAAnB,MAAA,EAAqBiB,EAArB,CAAjB;EAAA,CAzCG;EACZ,IAAI,CAACvB,SAAL,EAAgB;EAEhB,IAAI4B,MAAJ;EACA,IAAMC,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB3B,QAAxB,CAAvB;EAEA,IAAIyB,cAAJ,EAAoB;IAClBD,MAAM,GAAGC,cAAT;EACD,CAFD,MAEO;IAAA,IAAAG,cAAA;IACL,IAAMC,GAAG,GAAGH,QAAQ,CAACI,aAAT,CAAuB,KAAvB,CAAZ;IACAD,GAAG,CAACV,EAAJ,GAASnB,QAAT;IACA,CAAA4B,cAAA,GAAAF,QAAQ,CAACK,IAAT,qBAAAH,cAAA,CAAeI,WAAf,CAA2BH,GAA3B;IACAL,MAAM,GAAGK,GAAT;EACD;EAED/B,MAAM,eAACD,KAAA,CAAAiC,aAAA,CAAC/B,YAAD;IAAcS,MAAM,EAAE,KAAKyB;EAA3B,EAAD,EAA+CT,MAA/C,CAAN;AACD;AA4BH,OAAO,IAAMU,KAAK,GAAG,IAAIjC,OAAJ,EAAd"},"metadata":{},"sourceType":"module"}