{"ast":null,"code":"import _classCallCheck from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./QRCodeGenerator.css\";import{getAuthenticationQR}from\"../APIs/AuthenticationAPIs\";import{checkAccess as _checkAccess}from\"../../Actions/authenticationActions\";import{connect}from\"react-redux\";import AuthOne from'../../assets/images/auth1.jpg';import AuthTOW from'../../assets/images/auth2.jpg';import{Image,ListGroup}from\"react-bootstrap\";import{Link}from\"react-router-dom\";var QRCode=require(\"qrcode.react\");var QRCodeGenerator=/*#__PURE__*/function(_Component){_inherits(QRCodeGenerator,_Component);var _super=_createSuper(QRCodeGenerator);function QRCodeGenerator(){var _this;_classCallCheck(this,QRCodeGenerator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={qrUUID:null};_this.getAuthenticationQR=function(){getAuthenticationQR().then(function(qrUUID){_this.setState({qrUUID:qrUUID});});};_this.componentDidMount=function(){var _this$props=_this.props,history=_this$props.history,checkAccess=_this$props.checkAccess;_this.getAuthenticationQR();_this.qrCodeGeneratorInterval=setInterval(_this.getAuthenticationQR,300000000);_this.checkSuccessInterval=setInterval(function(){checkAccess(_this.state.qrUUID).then(function(res){res&&history.push(\"/account/main/\");});},5000);};_this.componentWillUnmount=function(){clearInterval(_this.qrCodeGeneratorInterval);clearInterval(_this.checkSuccessInterval);};return _this;}_createClass(QRCodeGenerator,[{key:\"render\",value:function render(){var qrUUID=this.state.qrUUID;return/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-evenly p-2 w-100 w-75\"},/*#__PURE__*/React.createElement(ListGroup,{as:\"ol\",numbered:true,className:\"m-inline-e-2\"},/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\"},/*#__PURE__*/React.createElement(\"span\",null,\"Have you got the app ? if not please download from \"),/*#__PURE__*/React.createElement(Link,{to:\"/#testdownload\",style:{color:\"#0d6efd\"}},\"here\")),/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\"},\"Register an account\",/*#__PURE__*/React.createElement(ListGroup,{as:\"ol\",numbered:true,variant:\"flush\"},/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\"},\"Choose your language\"),/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\"},\"Check TOGO privacy agreement\"),/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\"},\"Enter your mobile number and create your account\"))),/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\"},\"Click on user icon\",/*#__PURE__*/React.createElement(Image,{src:AuthOne,alt:\"stepone\",rounded:true,className:\"m-auto\",style:{maxWidth:\"210px\"}})),/*#__PURE__*/React.createElement(ListGroup.Item,{as:\"li\"},\"Select scan bar code\",/*#__PURE__*/React.createElement(Image,{src:AuthTOW,alt:\"steptwo\",rounded:true,className:\"m-auto\",style:{maxWidth:\"210px\"}}))),qrUUID&&/*#__PURE__*/React.createElement(\"div\",{className:\"qr-code-canvas\"},/*#__PURE__*/React.createElement(QRCode,{value:qrUUID,size:256//fgColor=\"green\"\n,imageSettings:{//src: whiteLogo,\nheight:30*256/100,width:30*256/100,excavate:false}//includeMargin={true}\n})));}}]);return QRCodeGenerator;}(Component);var mapStateToProps=function mapStateToProps(state){return{};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{checkAccess:function checkAccess(qrUUID){return dispatch(_checkAccess(qrUUID));}};};export default connect(mapStateToProps,mapDispatchToProps)(QRCodeGenerator);","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/QRCodeGenerator/QRCodeGenerator.jsx"],"names":["React","Component","getAuthenticationQR","checkAccess","connect","AuthOne","AuthTOW","Image","ListGroup","Link","QRCode","require","QRCodeGenerator","state","qrUUID","then","setState","componentDidMount","props","history","qrCodeGeneratorInterval","setInterval","checkSuccessInterval","res","push","componentWillUnmount","clearInterval","color","maxWidth","height","width","excavate","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"ojBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAO,uBAAP,CACA,OAAQC,mBAAR,KAAkC,4BAAlC,CAEA,OAAQC,WAAW,GAAXA,CAAAA,YAAR,KAA0B,qCAA1B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,iBAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,GAAIC,CAAAA,MAAM,CAAGC,OAAO,CAAC,cAAD,CAApB,C,GAEMC,CAAAA,e,+VACFC,K,CAAQ,CAACC,MAAM,CAAE,IAAT,C,OAERZ,mB,CAAsB,UAAM,CACxBA,mBAAmB,GAAGa,IAAtB,CAA2B,SAACD,MAAD,CAAY,CACnC,MAAKE,QAAL,CAAc,CACVF,MAAM,CAANA,MADU,CAAd,EAGH,CAJD,EAKH,C,OAEDG,iB,CAAoB,UAAM,CACtB,gBAA6B,MAAKC,KAAlC,CAAKC,OAAL,aAAKA,OAAL,CAAchB,WAAd,aAAcA,WAAd,CAEA,MAAKD,mBAAL,GACA,MAAKkB,uBAAL,CAA+BC,WAAW,CACtC,MAAKnB,mBADiC,CAEtC,SAFsC,CAA1C,CAIA,MAAKoB,oBAAL,CAA4BD,WAAW,CAAC,UAAM,CAC1ClB,WAAW,CAAC,MAAKU,KAAL,CAAWC,MAAZ,CAAX,CAA+BC,IAA/B,CAAoC,SAACQ,GAAD,CAAS,CACzCA,GAAG,EAAIJ,OAAO,CAACK,IAAR,CAAa,gBAAb,CAAP,CACH,CAFD,EAGH,CAJsC,CAIpC,IAJoC,CAAvC,CAKH,C,OAEDC,oB,CAAuB,UAAM,CACzBC,aAAa,CAAC,MAAKN,uBAAN,CAAb,CACAM,aAAa,CAAC,MAAKJ,oBAAN,CAAb,CACH,C,iEAED,iBAAS,CACL,GAAKR,CAAAA,MAAL,CAAe,KAAKD,KAApB,CAAKC,MAAL,CACA,mBACI,2BAAK,SAAS,CAAC,8CAAf,eACI,oBAAC,SAAD,EAAW,EAAE,CAAC,IAAd,CAAmB,QAAQ,KAA3B,CAA4B,SAAS,CAAC,cAAtC,eACI,oBAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,eACI,sFADJ,cAEI,oBAAC,IAAD,EAAM,EAAE,CAAC,gBAAT,CAA0B,KAAK,CAAE,CAACa,KAAK,CAAE,SAAR,CAAjC,SAFJ,CADJ,cAKI,oBAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,qCAEI,oBAAC,SAAD,EAAW,EAAE,CAAC,IAAd,CAAmB,QAAQ,KAA3B,CAA4B,OAAO,CAAC,OAApC,eACI,oBAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,yBADJ,cAII,oBAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,iCAJJ,cAOI,oBAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,qDAPJ,CAFJ,CALJ,cAmBI,oBAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,oCAEI,oBAAC,KAAD,EAAO,GAAG,CAAEtB,OAAZ,CAAqB,GAAG,CAAC,SAAzB,CAAmC,OAAO,KAA1C,CAA2C,SAAS,CAAC,QAArD,CAA8D,KAAK,CAAE,CAAKuB,QAAQ,CAAE,OAAf,CAArE,EAFJ,CAnBJ,cAuBI,oBAAC,SAAD,CAAW,IAAX,EAAgB,EAAE,CAAC,IAAnB,sCAEI,oBAAC,KAAD,EAAO,GAAG,CAAEtB,OAAZ,CAAqB,GAAG,CAAC,SAAzB,CAAmC,OAAO,KAA1C,CAA2C,SAAS,CAAC,QAArD,CAA8D,KAAK,CAAE,CAAEsB,QAAQ,CAAE,OAAZ,CAArE,EAFJ,CAvBJ,CADJ,CA8BKd,MAAM,eACH,2BAAK,SAAS,CAAC,gBAAf,eACI,oBAAC,MAAD,EACI,KAAK,CAAEA,MADX,CAEI,IAAI,CAAE,GACN;AAHJ,CAII,aAAa,CAAE,CACX;AACAe,MAAM,CAAE,GAAK,GAAL,CAAW,GAFR,CAGXC,KAAK,CAAE,GAAK,GAAL,CAAW,GAHP,CAIXC,QAAQ,CAAE,KAJC,CAMf;AAVJ,EADJ,CA/BR,CADJ,CAiDH,C,6BAlFyB9B,S,EAqF9B,GAAM+B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACnB,KAAD,QAAY,EAAZ,EAAxB,CAEA,GAAMoB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACtC/B,WAAW,CAAE,qBAACW,MAAD,QAAYoB,CAAAA,QAAQ,CAAC/B,YAAW,CAACW,MAAD,CAAZ,CAApB,EADyB,CAAf,EAA3B,CAIA,cAAeV,CAAAA,OAAO,CAAC4B,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CrB,eAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./QRCodeGenerator.css\";\r\nimport {getAuthenticationQR} from \"../APIs/AuthenticationAPIs\";\r\n\r\nimport {checkAccess} from \"../../Actions/authenticationActions\";\r\nimport {connect} from \"react-redux\";\r\nimport AuthOne from '../../assets/images/auth1.jpg';\r\nimport AuthTOW from '../../assets/images/auth2.jpg';\r\nimport { Image, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nvar QRCode = require(\"qrcode.react\");\r\n\r\nclass QRCodeGenerator extends Component {\r\n    state = {qrUUID: null};\r\n\r\n    getAuthenticationQR = () => {\r\n        getAuthenticationQR().then((qrUUID) => {\r\n            this.setState({\r\n                qrUUID,\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        let {history, checkAccess} = this.props;\r\n\r\n        this.getAuthenticationQR();\r\n        this.qrCodeGeneratorInterval = setInterval(\r\n            this.getAuthenticationQR,\r\n            300000000\r\n        );\r\n        this.checkSuccessInterval = setInterval(() => {\r\n            checkAccess(this.state.qrUUID).then((res) => {\r\n                res && history.push(\"/account/main/\");\r\n            });\r\n        }, 5000);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.qrCodeGeneratorInterval);\r\n        clearInterval(this.checkSuccessInterval);\r\n    };\r\n\r\n    render() {\r\n        let {qrUUID} = this.state;\r\n        return (\r\n            <div className=\"d-flex justify-content-evenly p-2 w-100 w-75\">\r\n                <ListGroup as=\"ol\" numbered className=\"m-inline-e-2\">\r\n                    <ListGroup.Item as=\"li\">\r\n                        <span>Have you got the app ? if not please download from </span>\r\n                        <Link to=\"/#testdownload\" style={{color: \"#0d6efd\"}}>here</Link>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item as=\"li\">\r\n                        Register an account\r\n                        <ListGroup as=\"ol\" numbered variant=\"flush\">\r\n                            <ListGroup.Item as=\"li\">\r\n                                Choose your language\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item as=\"li\">\r\n                                Check TOGO privacy agreement\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item as=\"li\">\r\n                                Enter your mobile number and create your account\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item as=\"li\">\r\n                        Click on user icon\r\n                        <Image src={AuthOne} alt=\"stepone\" rounded className=\"m-auto\" style={{    maxWidth: \"210px\" }} />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item as=\"li\">\r\n                        Select scan bar code\r\n                        <Image src={AuthTOW} alt=\"steptwo\" rounded className=\"m-auto\" style={{ maxWidth: \"210px\",  }} />\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                \r\n                {qrUUID && (\r\n                    <div className=\"qr-code-canvas\">\r\n                        <QRCode\r\n                            value={qrUUID}\r\n                            size={256}\r\n                            //fgColor=\"green\"\r\n                            imageSettings={{\r\n                                //src: whiteLogo,\r\n                                height: 30 * 256 / 100,\r\n                                width: 30 * 256 / 100, \r\n                                excavate: false\r\n                            }}\r\n                            //includeMargin={true}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    checkAccess: (qrUUID) => dispatch(checkAccess(qrUUID))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeGenerator);\r\n"]},"metadata":{},"sourceType":"module"}