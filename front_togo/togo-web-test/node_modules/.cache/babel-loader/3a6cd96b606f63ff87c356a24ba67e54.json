{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport { createContext } from \"@chakra-ui/react-utils\";\nimport * as React from \"react\";\nimport { useCheckboxGroup } from \"./use-checkbox-group\";\nvar _createContext = createContext({\n    name: \"CheckboxGroupContext\",\n    strict: false\n  }),\n  _createContext2 = _slicedToArray(_createContext, 2),\n  CheckboxGroupProvider = _createContext2[0],\n  useCheckboxGroupContext = _createContext2[1];\nexport { useCheckboxGroupContext };\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nexport var CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n    size = props.size,\n    variant = props.variant,\n    children = props.children,\n    isDisabled = props.isDisabled;\n  var _useCheckboxGroup = useCheckboxGroup(props),\n    value = _useCheckboxGroup.value,\n    onChange = _useCheckboxGroup.onChange;\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}","map":{"version":3,"names":["__DEV__","createContext","React","useCheckboxGroup","_createContext","name","strict","_createContext2","_slicedToArray","CheckboxGroupProvider","useCheckboxGroupContext","CheckboxGroup","props","colorScheme","size","variant","children","isDisabled","_useCheckboxGroup","value","onChange","group","useMemo","createElement","displayName"],"sources":["../../src/checkbox-group.tsx"],"sourcesContent":["import { ThemingProps } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport {\n  useCheckboxGroup,\n  UseCheckboxGroupProps,\n  UseCheckboxGroupReturn,\n} from \"./use-checkbox-group\"\n\nexport interface CheckboxGroupProps\n  extends UseCheckboxGroupProps,\n    Omit<ThemingProps<\"Checkbox\">, \"orientation\"> {\n  children?: React.ReactNode\n}\n\nexport interface CheckboxGroupContext\n  extends Pick<UseCheckboxGroupReturn, \"onChange\" | \"value\" | \"isDisabled\">,\n    Omit<ThemingProps<\"Checkbox\">, \"orientation\"> {}\n\nconst [\n  CheckboxGroupProvider,\n  useCheckboxGroupContext,\n] = createContext<CheckboxGroupContext>({\n  name: \"CheckboxGroupContext\",\n  strict: false,\n})\n\nexport { useCheckboxGroupContext }\n\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nexport const CheckboxGroup: React.FC<CheckboxGroupProps> = (props) => {\n  const { colorScheme, size, variant, children, isDisabled } = props\n  const { value, onChange } = useCheckboxGroup(props)\n\n  const group = React.useMemo(\n    () => ({\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n    }),\n    [size, onChange, colorScheme, value, variant, isDisabled],\n  )\n\n  return <CheckboxGroupProvider value={group}>{children}</CheckboxGroupProvider>\n}\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\"\n}\n"],"mappings":";AACA,SAASA,OAAT,QAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,gBADF,QAIO,sBAJP;AAgBA,IAAAC,cAAA,GAGIH,aAAa,CAAuB;IACtCI,IAAI,EAAE,sBADgC;IAEtCC,MAAM,EAAE;EAF8B,CAAvB,CAHjB;EAAAC,eAAA,GAAAC,cAAA,CAAAJ,cAAA;EACEK,qBADI,GAAAF,eAAA;EAEJG,uBAFI,GAAAH,eAAA;AAQN,SAASG,uBAAT;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,aAA2C,GAAI,SAA/CA,aAA2CA,CAAIC,KAAD,EAAW;EACpE,IAAQC,WAAF,GAAuDD,KAA7D,CAAQC,WAAF;IAAeC,IAAf,GAAuDF,KAA7D,CAAqBE,IAAf;IAAqBC,OAArB,GAAuDH,KAA7D,CAA2BG,OAArB;IAA8BC,QAA9B,GAAuDJ,KAA7D,CAAoCI,QAA9B;IAAwCC,UAAA,GAAeL,KAA7D,CAA8CK,UAAA;EAC9C,IAAAC,iBAAA,GAA4Bf,gBAAgB,CAACS,KAAD,CAA5C;IAAQO,KAAF,GAAAD,iBAAA,CAAEC,KAAF;IAASC,QAAA,GAAAF,iBAAA,CAAAE,QAAA;EAEf,IAAMC,KAAK,GAAGnB,KAAK,CAACoB,OAAN,CACZ;IAAA,OAAO;MACLR,IADK,EACLA,IADK;MAELM,QAFK,EAELA,QAFK;MAGLP,WAHK,EAGLA,WAHK;MAILM,KAJK,EAILA,KAJK;MAKLJ,OALK,EAKLA,OALK;MAMLE,UAAA,EAAAA;IANK,CAAP;EAAA,CADY,EASZ,CAACH,IAAD,EAAOM,QAAP,EAAiBP,WAAjB,EAA8BM,KAA9B,EAAqCJ,OAArC,EAA8CE,UAA9C,CATY,CAAd;EAYA,oBAAOf,KAAA,CAAAqB,aAAA,CAACd,qBAAD;IAAuBU,KAAK,EAAEE;EAA9B,GAAsCL,QAAtC,CAAP;AACD,CAjBM;AAmBP,IAAIhB,OAAJ,EAAa;EACXW,aAAa,CAACa,WAAd,GAA4B,eAA5B;AACD"},"metadata":{},"sourceType":"module"}