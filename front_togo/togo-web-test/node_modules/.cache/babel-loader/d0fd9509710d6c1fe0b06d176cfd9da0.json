{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CustomDropDown.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport './CustomDropDown.css';\nimport { ListGroup } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nexport default function CustomDropDown(_ref) {\n  var _this = this;\n\n  var dropList = _ref.dropList,\n      x_pos = _ref.x_pos,\n      y_pos = _ref.y_pos,\n      fromDirection = _ref.fromDirection,\n      close = _ref.close,\n      action = _ref.action;\n  var history = useHistory();\n  var wrapperRef = useRef(null);\n\n  var _useState = useState({\n    wrapperFromLeft: {\n      left: x_pos + 'px',\n      top: y_pos + 'px'\n    },\n    wrapperFromRight: {\n      right: x_pos + 'px',\n      top: y_pos + 'px'\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      styles = _useState2[0],\n      setStyles = _useState2[1];\n\n  useEffect(function () {\n    // Function to handle clicks outside the component\n    function handleClickOutside(event) {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        close();\n      }\n    } // Add event listener to detect clicks outside the component\n\n\n    document.addEventListener(\"mousedown\", handleClickOutside); // Clean up the event listener on unmount\n\n    return function () {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [wrapperRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    style: fromDirection === \"left\" ? styles.wrapperFromLeft : styles.wrapperFromRight,\n    className: \"custom-drop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    className: \"custom-list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, dropList === null || dropList === void 0 ? void 0 : dropList.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(ListGroup.Item, {\n      key: index,\n      onClick: function onClick() {\n        action(item.action, item.link);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: item.iconClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 111\n      }\n    }), item.text);\n  })));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CustomDropDown.jsx"],"names":["React","useEffect","useState","useRef","ListGroup","useHistory","CustomDropDown","dropList","x_pos","y_pos","fromDirection","close","action","history","wrapperRef","wrapperFromLeft","left","top","wrapperFromRight","right","styles","setStyles","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","map","item","index","link","iconClass","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,sBAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,eAAe,SAASC,cAAT,OAAkF;AAAA;;AAAA,MAAxDC,QAAwD,QAAxDA,QAAwD;AAAA,MAA9CC,KAA8C,QAA9CA,KAA8C;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,aAAgC,QAAhCA,aAAgC;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAE7F,MAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,MAAMS,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;;AAEA,kBAA4BD,QAAQ,CAAC;AACjCa,IAAAA,eAAe,EAAE;AACbC,MAAAA,IAAI,EAAER,KAAK,GAAG,IADD;AAEbS,MAAAA,GAAG,EAAER,KAAK,GAAG;AAFA,KADgB;AAKjCS,IAAAA,gBAAgB,EAAE;AACdC,MAAAA,KAAK,EAAEX,KAAK,GAAG,IADD;AAEdS,MAAAA,GAAG,EAAER,KAAK,GAAG;AAFC;AALe,GAAD,CAApC;AAAA;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AAWApB,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,aAASqB,kBAAT,CAA4BC,KAA5B,EAAmC;AAC/B,UAAIT,UAAU,CAACU,OAAX,IAAsB,CAACV,UAAU,CAACU,OAAX,CAAmBC,QAAnB,CAA4BF,KAAK,CAACG,MAAlC,CAA3B,EAAsE;AAClEf,QAAAA,KAAK;AACR;AACJ,KANW,CAOZ;;;AACAgB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC,EARY,CASZ;;AACA,WAAO,YAAM;AACTK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACH,KAFD;AAGH,GAbQ,EAaN,CAACR,UAAD,CAbM,CAAT;AAeA,sBACI;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAsB,IAAA,KAAK,EAAEJ,aAAa,KAAK,MAAlB,GAA2BU,MAAM,CAACL,eAAlC,GAAoDK,MAAM,CAACF,gBAAxF;AAA0G,IAAA,SAAS,EAAC,aAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQX,QAFR,aAEQA,QAFR,uBAEQA,QAAQ,CAAEuB,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3B,wBAAO,oBAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,GAAG,EAAEA,KAArB;AAA4B,MAAA,OAAO,EAAE,mBAAM;AAAEpB,QAAAA,MAAM,CAACmB,IAAI,CAACnB,MAAN,EAAcmB,IAAI,CAACE,IAAnB,CAAN;AAAgC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+E;AAAG,MAAA,SAAS,EAAEF,IAAI,CAACG,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/E,EAAkHH,IAAI,CAACI,IAAvH,CAAP;AACH,GAFD,CAFR,CADJ,CADJ;AAWH","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport './CustomDropDown.css';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function CustomDropDown({ dropList, x_pos, y_pos, fromDirection, close, action }) {\r\n\r\n    const history = useHistory();\r\n    const wrapperRef = useRef(null);\r\n\r\n    const [styles, setStyles] = useState({\r\n        wrapperFromLeft: {\r\n            left: x_pos + 'px',\r\n            top: y_pos + 'px',\r\n        },\r\n        wrapperFromRight: {\r\n            right: x_pos + 'px',\r\n            top: y_pos + 'px',\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Function to handle clicks outside the component\r\n        function handleClickOutside(event) {\r\n            if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n                close();\r\n            }\r\n        }\r\n        // Add event listener to detect clicks outside the component\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        // Clean up the event listener on unmount\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [wrapperRef]);\r\n\r\n    return (\r\n        <div ref={wrapperRef} style={fromDirection === \"left\" ? styles.wrapperFromLeft : styles.wrapperFromRight} className=\"custom-drop\">\r\n            <ListGroup className=\"custom-list-group\">\r\n                {\r\n                    dropList?.map((item, index) => {\r\n                        return <ListGroup.Item key={index} onClick={() => { action(item.action, item.link) }}><i className={item.iconClass}></i>{item.text}</ListGroup.Item>\r\n                    })\r\n                }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}