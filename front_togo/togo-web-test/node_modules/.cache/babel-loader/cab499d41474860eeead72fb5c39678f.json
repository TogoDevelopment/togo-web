{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _templateObject;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeAnchor from '../SafeAnchor';\nimport Ripple from '../Ripple';\nimport { isOneOf, useClassNames } from '../utils';\nvar defaultProps = {\n  appearance: 'default',\n  classPrefix: 'btn',\n  ripple: true\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var as = props.as,\n      active = props.active,\n      appearance = props.appearance,\n      block = props.block,\n      className = props.className,\n      children = props.children,\n      classPrefix = props.classPrefix,\n      color = props.color,\n      disabled = props.disabled,\n      loading = props.loading,\n      ripple = props.ripple,\n      size = props.size,\n      typeProp = props.type,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"active\", \"appearance\", \"block\", \"className\", \"children\", \"classPrefix\", \"color\", \"disabled\", \"loading\", \"ripple\", \"size\", \"type\"]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix(appearance, color, size, {\n    active: active,\n    disabled: disabled,\n    loading: loading,\n    block: block\n  }));\n  var rippleElement = ripple && !isOneOf(appearance, ['link', 'ghost']) ? /*#__PURE__*/React.createElement(Ripple, null) : null;\n  var spin = /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"spin\"])))\n  });\n\n  if (rest.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, rest, {\n      as: as,\n      ref: ref,\n      \"aria-disabled\": disabled,\n      disabled: disabled,\n      className: classes\n    }), loading && spin, children, rippleElement);\n  }\n\n  var Component = as || 'button';\n  var type = typeProp || (Component === 'button' ? 'button' : undefined);\n  var role = rest.role || (Component !== 'button' ? 'button' : undefined);\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    role: role,\n    type: type,\n    ref: ref,\n    disabled: disabled,\n    \"aria-disabled\": disabled,\n    className: classes\n  }), loading && spin, children, rippleElement);\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nButton.propTypes = {\n  as: PropTypes.elementType,\n  active: PropTypes.bool,\n  appearance: PropTypes.oneOf(['default', 'primary', 'link', 'subtle', 'ghost']),\n  block: PropTypes.bool,\n  children: PropTypes.node,\n  color: PropTypes.oneOf(['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet']),\n  disabled: PropTypes.bool,\n  href: PropTypes.string,\n  loading: PropTypes.bool,\n  ripple: PropTypes.bool,\n  size: PropTypes.oneOf(['lg', 'md', 'sm', 'xs']),\n  type: PropTypes.oneOf(['button', 'reset', 'submit'])\n};\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}