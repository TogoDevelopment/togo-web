{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/NetworkInvitesListDialog.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport { imgBaseUrl } from \"../Constants/GeneralCont\";\nimport { GetNetworkInvitations, JoinNetwork } from \"../APIs/OrdersAPIs\";\nimport { InviteRow } from \"./Network\";\n\nfunction InviteForm(_ref) {\n  var userId = _ref.userId,\n      name = _ref.name,\n      phonenumber = _ref.phonenumber,\n      onAccept = _ref.onAccept;\n  var deliverCostRef = useRef();\n  var verifyCode = useRef();\n  var Note = useRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column flex-grow-1 h-100 justify-content-evenly\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InviteRow, {\n    label: \"Name\",\n    value: name,\n    secLabel: \"Load cost\",\n    secValue: /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"border-2 togo-border-full p-1\",\n      type: \"text\",\n      ref: deliverCostRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InviteRow, {\n    label: \"Phone number\",\n    value: phonenumber,\n    secLabel: \"Activation Code\",\n    secValue: /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"border-2 togo-border-full p-1\",\n      type: \"text\",\n      ref: verifyCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InviteRow, {\n    label: \"\",\n    value: \"\",\n    secLabel: \"Note\",\n    secValue: /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"border-2 togo-border-full p-1\",\n      type: \"text\",\n      ref: Note,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-end mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      var val1 = deliverCostRef.current.value;\n      var val2 = verifyCode.current.value;\n\n      if (val1.trim().length === 0 || val2.trim().length === 0) {\n        return;\n      }\n\n      JoinNetwork(userId, val1, val2, Note.current.value).then(function () {\n        if (onAccept) {\n          onAccept();\n        }\n      });\n    },\n    className: \"border rounded-22 togo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Accept\")));\n}\n\nexport function NetworkInvitesListDialog(_ref2) {\n  var _this = this;\n\n  var update = _ref2.update;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      invites = _useState4[0],\n      setInvites = _useState4[1];\n\n  var handleCloseInvites = function handleCloseInvites() {\n    setOpen(false);\n  };\n\n  var getInvites = function getInvites() {\n    GetNetworkInvitations().then(function (res) {\n      setInvites(res.data.server_response);\n    });\n  };\n\n  useEffect(function () {\n    if (open) {\n      getInvites();\n    }\n  }, [open]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"border me-2 rounded-22 togo-button\",\n    onClick: function onClick() {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, translate(\"TEMP.JOIN_NETWORK\")), /*#__PURE__*/React.createElement(Modal, {\n    show: open,\n    onHide: handleCloseInvites,\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, (invites === null || invites === void 0 ? void 0 : invites.length) === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 47\n    }\n  }, \"There is no network invitations\"), invites === null || invites === void 0 ? void 0 : invites.map(function (invite) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: invite,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align-items-center d-flex\",\n      style: {\n        height: \"200px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"w-250px me-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        maxHeight: \"200px\"\n      },\n      src: \"\".concat(imgBaseUrl).concat(invite.PersonalImgPath),\n      alt: invite.PhoneNumber,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(InviteForm, {\n      userId: invite.CustomerId,\n      name: invite.FullName,\n      phonenumber: invite.PhoneNumber,\n      onAccept: function onAccept() {\n        getInvites();\n        update();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    })));\n  }))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/NetworkInvitesListDialog.jsx"],"names":["React","useEffect","useRef","useState","Button","Form","Modal","imgBaseUrl","GetNetworkInvitations","JoinNetwork","InviteRow","InviteForm","userId","name","phonenumber","onAccept","deliverCostRef","verifyCode","Note","val1","current","value","val2","trim","length","then","NetworkInvitesListDialog","update","open","setOpen","invites","setInvites","handleCloseInvites","getInvites","res","data","server_response","translate","map","invite","height","maxHeight","PersonalImgPath","PhoneNumber","CustomerId","FullName"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Form, Modal } from \"react-bootstrap\";\r\nimport { imgBaseUrl } from \"../Constants/GeneralCont\";\r\nimport { GetNetworkInvitations, JoinNetwork } from \"../APIs/OrdersAPIs\";\r\nimport { InviteRow } from \"./Network\";\r\n\r\nfunction InviteForm({userId, name, phonenumber, onAccept}){\r\n    const deliverCostRef = useRef();\r\n    const verifyCode = useRef();\r\n    const Note = useRef();\r\n    return (\r\n        <div className=\"d-flex flex-column flex-grow-1 h-100 justify-content-evenly\">\r\n            <InviteRow \r\n                label={\"Name\"} \r\n                value={name} \r\n                secLabel={\"Load cost\"}\r\n                secValue={\r\n                    <Form.Control\r\n                        className=\"border-2 togo-border-full p-1\"\r\n                        type=\"text\"\r\n                        ref={deliverCostRef}\r\n                    />\r\n                }\r\n            />\r\n            <InviteRow\r\n                label={\"Phone number\"} \r\n                value={phonenumber} \r\n                secLabel={\"Activation Code\"}\r\n                secValue={\r\n                    <Form.Control\r\n                        className=\"border-2 togo-border-full p-1\"\r\n                        type=\"text\"\r\n                        ref={verifyCode}\r\n                    />\r\n                }\r\n            />\r\n            <InviteRow\r\n                label={\"\"} \r\n                value={\"\"} \r\n                secLabel={\"Note\"}\r\n                secValue={\r\n                    <Form.Control\r\n                        className=\"border-2 togo-border-full p-1\"\r\n                        type=\"text\"\r\n                        ref={Note}\r\n                    />\r\n                }\r\n            />\r\n            <div className=\"d-flex justify-content-end mt-1\">\r\n                <Button \r\n                    onClick={()=>{\r\n                        let val1 = deliverCostRef.current.value;\r\n                        let val2 = verifyCode.current.value;\r\n                        if(val1.trim().length === 0 || val2.trim().length === 0){\r\n                            return;\r\n                        }\r\n                        JoinNetwork(userId, val1, val2, Note.current.value).then(()=>{\r\n                            if(onAccept){\r\n                                onAccept();\r\n                            }\r\n                        });\r\n                    }}\r\n                    className=\"border rounded-22 togo-button\"\r\n                >\r\n                    Accept\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function NetworkInvitesListDialog({update}) {\r\n    const [open, setOpen] = useState(false);\r\n    const [invites, setInvites] = useState([]);\r\n    const handleCloseInvites = () => {\r\n        setOpen(false);\r\n    }\r\n    const getInvites = () => {\r\n        GetNetworkInvitations().then((res)=>{\r\n            setInvites(res.data.server_response);\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        if(open){\r\n            getInvites();\r\n        }\r\n    }, [open]);\r\n    return (\r\n        <>\r\n            <Button\r\n                className=\"border me-2 rounded-22 togo-button\"\r\n                onClick={()=>{\r\n                    setOpen(true);\r\n                }}\r\n            >\r\n                {translate(\"TEMP.JOIN_NETWORK\")}\r\n            </Button>\r\n            <Modal show={open} onHide={handleCloseInvites} size=\"lg\">\r\n                {/* <Modal.Header closeButton>\r\n                    <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header> */}\r\n                <Modal.Body>\r\n                    {invites?.length === 0 && <p>There is no network invitations</p>}\r\n                    {invites?.map((invite) => {\r\n                        return (\r\n                            <div key={invite}>\r\n                                <div className=\"align-items-center d-flex\" style={{height: \"200px\"}}>\r\n                                    <div className={\"w-250px me-2\"}>\r\n                                        <img\r\n                                            style={{maxHeight: \"200px\"}} \r\n                                            src={`${imgBaseUrl}${invite.PersonalImgPath}`} alt={invite.PhoneNumber}  \r\n                                        />\r\n                                    </div>\r\n                                    <InviteForm \r\n                                        userId={invite.CustomerId} \r\n                                        name={invite.FullName} \r\n                                        phonenumber={invite.PhoneNumber}\r\n                                        onAccept={()=>{\r\n                                            getInvites();\r\n                                            update();\r\n                                        }}\r\n                                    />\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    \r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n        \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}