{"ast":null,"code":"import _toConsumableArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrder.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner, Table } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers } from \"../APIs/OrdersAPIs\"; // import { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import GetAllClients) */\n\nimport { GetTransporterClients } from \"../APIs/OrdersAPIs\";\n/* edited (import GetTransporterClients) */\n\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/attachment.svg\";\nimport { IoIosGitNetwork } from 'react-icons/io';\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\nimport AddressDropdown from \"./AddressDropdown\";\nimport ClientDropdown from \"./ClientDropdown\";\n/* edited (import ClientDropdown) */\n\nimport CreateAddress from \"./CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../Actions/GeneralActions\";\nimport { isTransporter } from \"../Util\";\n/* edited (new import) */\n\nimport SubmitAndAssignDialog from \"./SubmitAndAssignDialog\";\n/* edited (new import) */\n\nimport \"./CreateNewOrder.css\";\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport function CreateNewOrder(props) {\n  var _this = this;\n\n  var styles = {\n    cardHeaderLg: {\n      position: 'absolute',\n      left: '20px',\n      right: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.5rem\"\n    },\n    cardHeaderSm: {\n      position: 'absolute',\n      left: '20px',\n      top: '-20px',\n      background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\n      color: 'white',\n      borderRadius: '10px',\n      fontWeight: 'bold',\n      fontSize: \"1.2rem\"\n    }\n  };\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openConf = _useState4[0],\n      setOpenConf = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"1\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientInputValue = _useState12[0],\n      setClientInputValue = _useState12[1];\n  /* edited (clientInputValue added) */\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deliverAddresses = _useState14[0],\n      setDeliverAddresses = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allClients = _useState16[0],\n      setAllClients = _useState16[1];\n  /* edited (setAllClients added) Note: not all clients */\n\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedDeliveryAddress = _useState18[0],\n      setSelectedDeliveryAddress = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedPickUpAddress = _useState20[0],\n      setSelectedPickUpAddress = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedClient = _useState22[0],\n      setSelectedClient = _useState22[1];\n  /* edited (setSelectedClient added) */\n\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loading = _useState24[0],\n      setLoading = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      loadingSubmit = _useState26[0],\n      setLoadingSubmit = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      openAssignDialog = _useState28[0],\n      setOpenAssignDialog = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      assignAddressClint = _useState30[0],\n      setAssignAddressClint = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      assignDeliveryParams = _useState32[0],\n      setAssignDeliveryParams = _useState32[1];\n  /* edited (validation variables) */\n\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      beginValidation = _useState34[0],\n      setBeginValidation = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedClientCheck = _useState36[0],\n      setSelectedClientCheckShow = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      deliveryCostCheck = _useState38[0],\n      setDeliveryCostCheckShow = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      selectedPickUpAddressCheck = _useState40[0],\n      setSelectedPickUpAddressCheckShow = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      selectedDeliveryAddressCheck = _useState42[0],\n      setSelectedDeliveryAddressCheckShow = _useState42[1];\n\n  var _useState43 = useState([{\n    name: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    type: \"1\",\n    active: \"active\"\n  }, {\n    name: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    type: \"2\",\n    active: \"\"\n  }]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      deliverTypeArr = _useState44[0],\n      setDeliverTypeArr = _useState44[1];\n\n  var _useState45 = useState([]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      myNetwork = _useState46[0],\n      setMyNetwork = _useState46[1];\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      networkInputValue = _useState48[0],\n      setNetworkInputValue = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      networkLoading = _useState50[0],\n      setNetworkLoading = _useState50[1];\n\n  var deliveryCostRef = useRef();\n  /* edited (deliveryCostRef added) */\n  // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\n\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  useEffect(function () {\n    setNetworkLoading(true);\n    console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\n    GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then(function (res) {\n      setNetworkLoading(false);\n      setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\n    });\n  }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]);\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetDefinedAddresses(inputValue).then(function (res) {\n          setLoading(false);\n          setDeliverAddresses(res.data);\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  /* edited (get all clients) */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetTransporterClients().then(function (res) {\n          setLoading(false);\n          setAllClients(res.data.membersData.filter(function (client) {\n            return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n          }));\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, open]);\n  /* edited (show and hide validation error messages handles) */\n\n  function showValidation() {\n    // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\n    if (isTransporter()) {\n      if (selectedClient) {\n        setSelectedClientCheckShow(false);\n      } else {\n        setSelectedClientCheckShow(true);\n      }\n\n      if (deliveryCostRef && deliveryCostRef.current.value > 0) {\n        setDeliveryCostCheckShow(false);\n      } else {\n        setDeliveryCostCheckShow(true);\n      }\n    }\n\n    if (selectedPickUpAddress) {\n      setSelectedPickUpAddressCheckShow(false);\n    } else {\n      setSelectedPickUpAddressCheckShow(true);\n    }\n\n    if (selectedDeliveryAddress) {\n      setSelectedDeliveryAddressCheckShow(false);\n    } else {\n      setSelectedDeliveryAddressCheckShow(true);\n    } // console.log(\"show validation\");\n\n  }\n\n  function hideValidation() {\n    setBeginValidation(false);\n    setSelectedClientCheckShow(false);\n    setDeliveryCostCheckShow(false);\n    setSelectedPickUpAddressCheckShow(false);\n    setSelectedDeliveryAddressCheckShow(false); // console.log(\"hide validation\");\n  }\n\n  function setCloseAssignDialog() {\n    setOpenAssignDialog(false);\n  }\n\n  function setCloseMainDialog() {\n    setOpen(false);\n  }\n\n  var handleDeliveryTypeClick = function handleDeliveryTypeClick(index, type) {\n    setDeliveryType(type);\n\n    var tempArr = _toConsumableArray(deliverTypeArr);\n\n    for (var i = 0; i < tempArr.length; i++) {\n      tempArr[i].active = \"\";\n    }\n\n    tempArr[index].active = \"active\";\n    setDeliverTypeArr(tempArr);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad text-white\",\n    onClick: function onClick() {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, props.children && props.children, !props.children && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      display: \"inline-block\",\n      width: \"22px\",\n      height: \"22px\",\n      marginRight: \"5px\",\n      marginLeft: \"5px\",\n      fill: \"currentcolor\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }), isTransporter() ? translate(\"ORDERS.NEW_CUSTOMER_ORDER\") : translate(\"ORDERS.CREATE_NEW_ORDER\"))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: open,\n    onHide: handleClose,\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    style: styles.cardHeaderLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, isTransporter() && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown\n  /* fofo */\n  , {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }), beginValidation && selectedClientCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 76\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    style: {\n      marginTop: \"9px\"\n    },\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.DELIVERY_COST\"\n    }),\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }), beginValidation && deliveryCostCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 74\n    }\n  }, \"required!\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    style: {\n      width: \"100%\"\n    },\n    className: \"togo-dropdown shadow\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 41\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2]))))), packageType !== \"1\" && packageType !== \"2\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8\",\n    style: {\n      marginTop: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 72\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.HEIGHT\"\n    }),\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WIDTH\"\n    }),\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.LENGTH\"\n    }),\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.WEIGHT\"\n    }),\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggleButtonsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, deliverTypeArr.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"toggleButton \" + item.active,\n      onClick: function onClick() {\n        handleDeliveryTypeClick(index, item.type);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"innerRadio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 68\n      }\n    })), \" \", item.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 25\n    }\n  }, deliveryType === \"2\" && /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"rounded-22 shadow\",\n    style: {\n      width: \"35%\",\n      marginTop: \"5px\"\n    },\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedPickUpAddress,\n    selectedAddress: selectedPickUpAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedPickUpAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 79\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 33\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedDeliveryAddress,\n    selectedAddress: selectedDeliveryAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedDeliveryAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 81\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\",\n      marginTop: \"30px\"\n    },\n    className: \"btn-grad-circle p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2 rounded-22 shadow\",\n    placeholder: intl.formatMessage({\n      id: \"TEMP.NOTES\"\n    }),\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 21\n    }\n  }), selectedPickUpAddress !== \"\" && selectedDeliveryAddress !== \"\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"mt-4 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center mb-2 h5\",\n    style: {\n      color: \"#26a69a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IoIosGitNetwork, {\n    style: {\n      width: \"20px\",\n      height: \"20px\",\n      color: \"black\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 29\n    }\n  }), translate(\"TEMP.CHOOSE_FROM_NETWORK\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between\",\n    style: {\n      height: \"200px\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.NAME\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.PHONE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.PRICE\")), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 45\n    }\n  }, translate(\"TEMP.ASSIGN\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 37\n    }\n  }, myNetwork.map(function (member, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 56\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 53\n      }\n    }, member.FullName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 53\n      }\n    }, member.PhoneNumber), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 53\n      }\n    }, member.deliveryPrice + \" NIS\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 57\n      }\n    }, translate(\"TEMP.ASSIGN\"))));\n  }))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-grad\",\n    style: {\n      width: \"45%\"\n    },\n    disabled: loadingSubmit,\n    onClick: function onClick() {\n      setBeginValidation(true);\n      var CreatedBy = \"\";\n      /* edited (CreatedBy variable added) */\n\n      var DeliveryParams = {};\n      /* edited (DeliveryParams as empty object) */\n\n      if (isTransporter()) {\n        if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\n          var _lengthRef$current, _widthRef$current, _heightRef$current, _weightRef$current;\n\n          // console.log(\"true\");\n          setLoadingSubmit(true);\n          hideValidation();\n          CreatedBy = \"Transporter\";\n          DeliveryParams = {\n            deliveryWay: deliveryType,\n            TypeLoad: packageType,\n            // ClientMobileNumber: clientMobileNumberRef.current.value, /* edited (add ClientMobileNumber) */\n            ClientMobileNumber: selectedClient.PhoneNumber,\n\n            /* edited (add ClientMobileNumber from dropdown) */\n            DeliveryPrice: deliveryCostRef.current.value,\n\n            /* edited (add DeliveryPrice) */\n            CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n            // 2 or 4\n            DetailsLoad: notesRef.current.value,\n            LengthLoad: ((_lengthRef$current = lengthRef.current) === null || _lengthRef$current === void 0 ? void 0 : _lengthRef$current.value) || \"\",\n            WidthLoad: ((_widthRef$current = widthRef.current) === null || _widthRef$current === void 0 ? void 0 : _widthRef$current.value) || \"\",\n            HeightLoad: ((_heightRef$current = heightRef.current) === null || _heightRef$current === void 0 ? void 0 : _heightRef$current.value) || \"\",\n            WeightLoad: ((_weightRef$current = weightRef.current) === null || _weightRef$current === void 0 ? void 0 : _weightRef$current.value) || \"\",\n            qrCode: \"\"\n          };\n          /* edited (fix client mobile number intro) */\n\n          if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\n            var firstZero = DeliveryParams.ClientMobileNumber[0];\n            var replaced = DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');\n            DeliveryParams.ClientMobileNumber = replaced;\n          }\n\n          var AddressClint = {\n            IdCity: selectedPickUpAddress.cityId,\n            // from selected pick up address\n            IdArea: selectedPickUpAddress.areaId,\n            // from selected pick up address\n            OtherDetails: selectedPickUpAddress.details,\n            // details from selected pickup address\n            LatSender: selectedPickUpAddress.latitude,\n            // from selected pick up address\n            LongSender: selectedPickUpAddress.longitude,\n            //  from selected pick up address\n            SenderAddressId: selectedPickUpAddress.id,\n            // from selected pick up address\n            IdCityDes: selectedDeliveryAddress.cityId,\n            // from selected delivery to address\n            IdAreaDes: selectedDeliveryAddress.areaId,\n            // from selected delivery to address\n            OtherDetailsDes: selectedDeliveryAddress.details,\n            // details from selected delivery to address\n            LatReciver: selectedDeliveryAddress.latitude,\n            // from selected delivery to address\n            LongReciver: selectedDeliveryAddress.longitude,\n            // from selected delivery to address\n            ReciverAddressId: selectedDeliveryAddress.id,\n            // from selected delivery to address\n            ReceiverAddressNum: selectedDeliveryAddress.phone_number\n          };\n          CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy\n          /* edited (add CreatedBy parameter) */\n          , JSON.stringify(AddressClint)).then(function (res) {\n            /* edited (test data) */\n            // console.log(\"---------------\\nres : \" + res.data);\n\n            /* to be edited (to print order by returned id) */\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n            // setOpenConf(true);\n\n            /* if (res.data == \"Blocked\") {\r\n                dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n            } */\n            setOpen(false);\n            setLoadingSubmit(false);\n            props.onSuccess();\n          });\n        } else {\n          // console.log(\"false\");\n          showValidation();\n        }\n      } else {\n        if (selectedPickUpAddress && selectedDeliveryAddress) {\n          var _lengthRef$current2, _widthRef$current2, _heightRef$current2, _weightRef$current2;\n\n          setLoadingSubmit(true); // console.log(\"true\");\n\n          hideValidation();\n          CreatedBy = \"Client\";\n          DeliveryParams = {\n            deliveryWay: deliveryType,\n            TypeLoad: packageType,\n            CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n            // 2 or 4\n            DetailsLoad: notesRef.current.value,\n            LengthLoad: ((_lengthRef$current2 = lengthRef.current) === null || _lengthRef$current2 === void 0 ? void 0 : _lengthRef$current2.value) || \"\",\n            WidthLoad: ((_widthRef$current2 = widthRef.current) === null || _widthRef$current2 === void 0 ? void 0 : _widthRef$current2.value) || \"\",\n            HeightLoad: ((_heightRef$current2 = heightRef.current) === null || _heightRef$current2 === void 0 ? void 0 : _heightRef$current2.value) || \"\",\n            WeightLoad: ((_weightRef$current2 = weightRef.current) === null || _weightRef$current2 === void 0 ? void 0 : _weightRef$current2.value) || \"\",\n            qrCode: \"\"\n          };\n          var _AddressClint = {\n            IdCity: selectedPickUpAddress.cityId,\n            // from selected pick up address\n            IdArea: selectedPickUpAddress.areaId,\n            // from selected pick up address\n            OtherDetails: selectedPickUpAddress.details,\n            // details from selected pickup address\n            LatSender: selectedPickUpAddress.latitude,\n            // from selected pick up address\n            LongSender: selectedPickUpAddress.longitude,\n            //  from selected pick up address\n            SenderAddressId: selectedPickUpAddress.id,\n            // from selected pick up address\n            IdCityDes: selectedDeliveryAddress.cityId,\n            // from selected delivery to address\n            IdAreaDes: selectedDeliveryAddress.areaId,\n            // from selected delivery to address\n            OtherDetailsDes: selectedDeliveryAddress.details,\n            // details from selected delivery to address\n            LatReciver: selectedDeliveryAddress.latitude,\n            // from selected delivery to address\n            LongReciver: selectedDeliveryAddress.longitude,\n            // from selected delivery to address\n            ReciverAddressId: selectedDeliveryAddress.id,\n            // from selected delivery to address\n            ReceiverAddressNum: selectedDeliveryAddress.phone_number\n          };\n          CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy\n          /* edited (add CreatedBy parameter) */\n          , JSON.stringify(_AddressClint)).then(function (res) {\n            /* edited (test data) */\n            // console.log(\"---------------\\nres : \" + res.data);\n\n            /* to be edited (to print order by returned id) */\n            // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\n            //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\n            // setOpenConf(true);\n\n            /*  if (res.data == \"Blocked\") {\r\n                 dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n             } */\n            // console.log(res.data)\n            setOpen(false);\n            setLoadingSubmit(false);\n            props.onSuccess();\n          });\n        } else {\n          // console.log(\"false\");\n          showValidation();\n        }\n        /* - deliveryWay \r\n        This one from radio button for delivery type it contains four values \r\n            (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n        - CostLoad   \r\n            This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n        - TypeLoad   \r\n            This one from the list we pick Food or Small/Medium/Large package where \r\n                Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n        - qrCode\r\n            in case of submit with qrcode we will put the value else it will be empty */\n\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 21\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 43\n    }\n  }), isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")), !isTransporter() && /*#__PURE__*/React.createElement(Button\n  /* disabled */\n  , {\n    className: \"btn-grad\",\n    style: {\n      width: \"45%\"\n    },\n    onClick: function onClick() {\n      setBeginValidation(true);\n\n      if (selectedPickUpAddress && selectedDeliveryAddress) {\n        var _lengthRef$current3, _widthRef$current3, _heightRef$current3, _weightRef$current3;\n\n        hideValidation();\n        var tempDeliveryParams = {\n          deliveryWay: deliveryType,\n          TypeLoad: packageType,\n          CostLoad: deliveryType === \"2\" && codAmountRef.current.value || deliveryType === \"4\" && pickAmountRef.current.value || \"\",\n          // 2 or 4\n          DetailsLoad: notesRef.current.value,\n          LengthLoad: ((_lengthRef$current3 = lengthRef.current) === null || _lengthRef$current3 === void 0 ? void 0 : _lengthRef$current3.value) || \"\",\n          WidthLoad: ((_widthRef$current3 = widthRef.current) === null || _widthRef$current3 === void 0 ? void 0 : _widthRef$current3.value) || \"\",\n          HeightLoad: ((_heightRef$current3 = heightRef.current) === null || _heightRef$current3 === void 0 ? void 0 : _heightRef$current3.value) || \"\",\n          WeightLoad: ((_weightRef$current3 = weightRef.current) === null || _weightRef$current3 === void 0 ? void 0 : _weightRef$current3.value) || \"\",\n          qrCode: \"\"\n        }; // console.log(selectedDeliveryAddress);\n\n        var tempAddressClint = {\n          IdCity: selectedPickUpAddress.cityId,\n          // from selected pick up address\n          IdArea: selectedPickUpAddress.areaId,\n          // from selected pick up address\n          IdGov: selectedPickUpAddress.governoratId,\n          // from selected pick up address\n          IdProv: selectedPickUpAddress.provinceId,\n          // from selected pick up address\n          OtherDetails: selectedPickUpAddress.details,\n          // details from selected pickup address\n          LatSender: selectedPickUpAddress.latitude,\n          // from selected pick up address\n          LongSender: selectedPickUpAddress.longitude,\n          //  from selected pick up address\n          SenderAddressId: selectedPickUpAddress.id,\n          // from selected pick up address\n          IdCityDes: selectedDeliveryAddress.cityId,\n          // from selected delivery to address\n          IdAreaDes: selectedDeliveryAddress.areaId,\n          // from selected delivery to address\n          IdProvDes: selectedDeliveryAddress.provinceId,\n          // from selected delivery to address\n          IdGovDes: selectedDeliveryAddress.governoratId,\n          // from selected delivery to address\n          OtherDetailsDes: selectedDeliveryAddress.details,\n          // details from selected delivery to address\n          LatReciver: selectedDeliveryAddress.latitude,\n          // from selected delivery to address\n          LongReciver: selectedDeliveryAddress.longitude,\n          // from selected delivery to address\n          ReciverAddressId: selectedDeliveryAddress.id,\n          // from selected delivery to address\n          ReceiverAddressNum: selectedDeliveryAddress.phone_number,\n          ReceiverAddressName: selectedDeliveryAddress.name\n        }; // console.log(selectedPickUpAddress.areaId + \" -> \" + selectedDeliveryAddress.areaId);\n\n        setAssignDeliveryParams(tempDeliveryParams);\n        setAssignAddressClint(tempAddressClint);\n        setOpenAssignDialog(true);\n      } else {\n        showValidation();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 42\n    }\n  }, translate(\"TEMP.SUBMIT_AND_ASSIGN\")))), openAssignDialog && /*#__PURE__*/React.createElement(SubmitAndAssignDialog, {\n    onSuccess: function onSuccess() {\n      return props.onSuccess();\n    },\n    setCloseAssignDialog: setCloseAssignDialog,\n    setCloseMainDialog: setCloseMainDialog,\n    loadingSubmit: loadingSubmit,\n    assignDeliveryParams: assignDeliveryParams,\n    assignAddressClint: assignAddressClint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 21\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 21\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 21\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 21\n    }\n  }, \"Yes\"))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrder.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","Table","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","testBarq","GetAllClientNetworkMembers","GetTransporterClients","IoIosGitNetwork","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","useDispatch","toastNotification","isTransporter","SubmitAndAssignDialog","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","styles","cardHeaderLg","position","left","right","top","background","color","borderRadius","fontWeight","fontSize","cardHeaderSm","dispatch","open","setOpen","openConf","setOpenConf","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","clientInputValue","setClientInputValue","deliverAddresses","setDeliverAddresses","allClients","setAllClients","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","openAssignDialog","setOpenAssignDialog","assignAddressClint","setAssignAddressClint","assignDeliveryParams","setAssignDeliveryParams","beginValidation","setBeginValidation","selectedClientCheck","setSelectedClientCheckShow","deliveryCostCheck","setDeliveryCostCheckShow","selectedPickUpAddressCheck","setSelectedPickUpAddressCheckShow","selectedDeliveryAddressCheck","setSelectedDeliveryAddressCheckShow","name","type","active","deliverTypeArr","setDeliverTypeArr","myNetwork","setMyNetwork","networkInputValue","setNetworkInputValue","networkLoading","setNetworkLoading","deliveryCostRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","console","log","cityId","then","res","data","membersData","timer","setTimeout","clearTimeout","filter","client","FullName","toLowerCase","replaceAll","includes","showValidation","current","value","hideValidation","setCloseAssignDialog","setCloseMainDialog","handleDeliveryTypeClick","index","tempArr","i","length","children","display","width","height","marginRight","marginLeft","fill","marginTop","formatMessage","id","eve","createElement","style","className","map","item","cursor","overflowY","member","PhoneNumber","deliveryPrice","CreatedBy","DeliveryParams","deliveryWay","TypeLoad","ClientMobileNumber","DeliveryPrice","CostLoad","DetailsLoad","LengthLoad","WidthLoad","HeightLoad","WeightLoad","qrCode","charAt","firstZero","replaced","replace","AddressClint","IdCity","IdArea","areaId","OtherDetails","details","LatSender","latitude","LongSender","longitude","SenderAddressId","IdCityDes","IdAreaDes","OtherDetailsDes","LatReciver","LongReciver","ReciverAddressId","ReceiverAddressNum","phone_number","JSON","stringify","onSuccess","tempDeliveryParams","tempAddressClint","IdGov","governoratId","IdProv","provinceId","IdProvDes","IdGovDes","ReceiverAddressName","window"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner, Table } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../i18n/translate\";\r\nimport { ReactComponent as SendIcon } from \"../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses, testBarq, GetAllClientNetworkMembers } from \"../APIs/OrdersAPIs\";\r\n// import { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import GetAllClients) */\r\nimport { GetTransporterClients } from \"../APIs/OrdersAPIs\"; /* edited (import GetTransporterClients) */\r\nimport { ReactComponent as FoodIcon } from \"../assets/images/food.svg\";\r\nimport { ReactComponent as SmBoxIcon } from \"../assets/images/smallBox.svg\";\r\nimport { ReactComponent as MedBoxIcon } from \"../assets/images/medbox.svg\";\r\nimport { ReactComponent as BigBoxIcon } from \"../assets/images/largebox.svg\";\r\nimport { ReactComponent as DeliveryTruckIcon } from \"../assets/images/deliveryTruck.svg\";\r\nimport { ReactComponent as LocationIcon } from \"../assets/images/location.svg\";\r\nimport { ReactComponent as AttachmentIcon } from \"../assets/images/attachment.svg\";\r\nimport { IoIosGitNetwork } from 'react-icons/io';\r\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"./AddressDropdown\";\r\nimport ClientDropdown from \"./ClientDropdown\"; /* edited (import ClientDropdown) */\r\nimport CreateAddress from \"./CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../Actions/GeneralActions\";\r\n\r\nimport { isTransporter } from \"../Util\"; /* edited (new import) */\r\n\r\nimport SubmitAndAssignDialog from \"./SubmitAndAssignDialog\"; /* edited (new import) */\r\n\r\nimport \"./CreateNewOrder.css\";\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport function CreateNewOrder(props) {\r\n\r\n    const styles = {\r\n        cardHeaderLg: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            right: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        cardHeaderSm: {\r\n            position: 'absolute',\r\n            left: '20px',\r\n            top: '-20px',\r\n            background: \"linear-gradient(90deg, #26a69a, #69d4a5)\",\r\n            color: 'white',\r\n            borderRadius: '10px',\r\n            fontWeight: 'bold',\r\n            fontSize: \"1.2rem\"\r\n        },\r\n    }\r\n\r\n    let dispatch = useDispatch();\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState(''); /* edited (clientInputValue added) */\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) Note: not all clients */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const [openAssignDialog, setOpenAssignDialog] = useState(false);\r\n    const [assignAddressClint, setAssignAddressClint] = useState(false);\r\n    const [assignDeliveryParams, setAssignDeliveryParams] = useState(false);\r\n\r\n    /* edited (validation variables) */\r\n\r\n    const [beginValidation, setBeginValidation] = useState(false);\r\n    const [selectedClientCheck, setSelectedClientCheckShow] = useState(false);\r\n    const [deliveryCostCheck, setDeliveryCostCheckShow] = useState(false);\r\n    const [selectedPickUpAddressCheck, setSelectedPickUpAddressCheckShow] = useState(false);\r\n    const [selectedDeliveryAddressCheck, setSelectedDeliveryAddressCheckShow] = useState(false);\r\n\r\n    const [deliverTypeArr, setDeliverTypeArr] = useState([{ name: translate(\"ORDERS.\" + DeliveryTypes[1]), type: \"1\", active: \"active\" }, { name: translate(\"ORDERS.\" + DeliveryTypes[2]), type: \"2\", active: \"\" }]);\r\n\r\n    const [myNetwork, setMyNetwork] = useState([]);\r\n    const [networkInputValue, setNetworkInputValue] = useState('');\r\n    const [networkLoading, setNetworkLoading] = useState('');\r\n\r\n    const deliveryCostRef = useRef(); /* edited (deliveryCostRef added) */\r\n    // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n\r\n        setNetworkLoading(true);\r\n\r\n        console.log(selectedPickUpAddress.cityId + \" -> \" + selectedDeliveryAddress.cityId);\r\n\r\n        GetAllClientNetworkMembers(selectedPickUpAddress.cityId, selectedDeliveryAddress.cityId).then((res) => {\r\n\r\n            setNetworkLoading(false);\r\n\r\n            setMyNetwork(res.data.membersData); // .filter(member => member.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(networkInputValue.toLowerCase()) || member.PhoneNumber.includes(networkInputValue))\r\n        });\r\n\r\n    }, [networkInputValue, selectedPickUpAddress, selectedDeliveryAddress]);\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetDefinedAddresses(inputValue).then((res) => {\r\n                    setLoading(false);\r\n                    setDeliverAddresses(res.data);\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (open) {\r\n                setLoading(true);\r\n\r\n                GetTransporterClients().then((res) => {\r\n                    setLoading(false);\r\n\r\n                    setAllClients(res.data.membersData.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, open]);\r\n\r\n    /* edited (show and hide validation error messages handles) */\r\n\r\n    function showValidation() {\r\n        // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\r\n\r\n        if (isTransporter()) {\r\n            if (selectedClient) {\r\n                setSelectedClientCheckShow(false)\r\n            } else {\r\n                setSelectedClientCheckShow(true)\r\n            }\r\n\r\n            if (deliveryCostRef && deliveryCostRef.current.value > 0) {\r\n                setDeliveryCostCheckShow(false)\r\n            } else {\r\n                setDeliveryCostCheckShow(true)\r\n            }\r\n        }\r\n\r\n        if (selectedPickUpAddress) {\r\n            setSelectedPickUpAddressCheckShow(false)\r\n        } else {\r\n            setSelectedPickUpAddressCheckShow(true)\r\n        }\r\n\r\n        if (selectedDeliveryAddress) {\r\n            setSelectedDeliveryAddressCheckShow(false)\r\n        } else {\r\n            setSelectedDeliveryAddressCheckShow(true)\r\n        }\r\n\r\n        // console.log(\"show validation\");\r\n    }\r\n\r\n    function hideValidation() {\r\n        setBeginValidation(false);\r\n        setSelectedClientCheckShow(false);\r\n        setDeliveryCostCheckShow(false);\r\n        setSelectedPickUpAddressCheckShow(false);\r\n        setSelectedDeliveryAddressCheckShow(false);\r\n\r\n        // console.log(\"hide validation\");\r\n    }\r\n\r\n    function setCloseAssignDialog() {\r\n        setOpenAssignDialog(false);\r\n    }\r\n\r\n    function setCloseMainDialog() {\r\n        setOpen(false);\r\n    }\r\n\r\n    const handleDeliveryTypeClick = (index, type) => {\r\n        setDeliveryType(type);\r\n\r\n        let tempArr = [...deliverTypeArr];\r\n\r\n        for (let i = 0; i < tempArr.length; i++) {\r\n            tempArr[i].active = \"\";\r\n        }\r\n\r\n        tempArr[index].active = \"active\";\r\n\r\n        setDeliverTypeArr(tempArr);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* edited (change button style if the user is transporter) */}\r\n\r\n            {/* edited (on-header button commented) */}\r\n            {/*<Button className={`${props.children ? \"\" : !isTransporter() && \"btn-grad text-white\"}`} variant={isTransporter() && \"outline-light\"} onClick={()=>{\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight:\"5px\", fill:\"currentcolor\"}} />\r\n                        {translate(\"ORDERS.NEW_CUSTOMER_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>*/}\r\n            <Button className={\"btn-grad text-white\"} onClick={() => {\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{ display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight: \"5px\", marginLeft: \"5px\", fill: \"currentcolor\" }} />\r\n                        {isTransporter() ? translate(\"ORDERS.NEW_CUSTOMER_ORDER\") : translate(\"ORDERS.CREATE_NEW_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>\r\n            <Modal size=\"lg\" show={open} onHide={handleClose} centered animation={true} backdrop=\"static\">\r\n\r\n                <Modal.Header closeButton style={styles.cardHeaderLg}>\r\n                    <Modal.Title>{translate(\"ORDERS.CREATE_ORDER\")}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body className=\"mt-5\">\r\n\r\n                    {/* edited (Client Mobile Number & Delivery Cost Fields added) */}\r\n                    {isTransporter() && <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9\">\r\n                                {/*<Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Client Mobile Number\" ref={clientMobileNumberRef} />*/}\r\n\r\n                                {/* edited (add clients dropdown) */}\r\n\r\n                                <ClientDropdown /* fofo */\r\n                                    loading={loading}\r\n                                    clients={allClients}\r\n                                    onSearch={setClientInputValue}\r\n                                    onSelect={setSelectedClient}\r\n                                    selectedClient={selectedClient}\r\n                                />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <Form.Control type=\"number\" style={{ marginTop: \"9px\" }} className=\"rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.DELIVERY_COST\" })} ref={deliveryCostRef} />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr className=\"mt-4 mb-3\" />\r\n                    </>}\r\n\r\n                    {/* <div className=\"row mt-3 mb-4\">\r\n                        <div className=\"col-lg-3\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { paddinRight: 0 } : { paddingLeft: 0 }}>\r\n                            <hr className=\"mt-3\" />\r\n                        </div>\r\n                        <div className=\"col-lg-6 d-flex justify-content-center\" style={{borderRight: \"1px solid lightgray\", borderLeft: \"1px solid lightgray\"}}>\r\n                            <div className=\"h5\" style={{ color: \"#26a69a\" }}>\r\n                                {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-3\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { paddingLeft: 0 } : { paddinRight: 0 }}>\r\n                            <hr className=\"mt-3\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                            {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4\">\r\n                            <Dropdown\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"togo-dropdown shadow\"\r\n                                onSelect={(eve) => {\r\n                                    setPackageType(eve);\r\n                                }}>\r\n                                <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                                    {React.createElement(PackageTypesIcons[packageType], { style: { width: \"20px\", height: \"20px\" }, className: \"me-1\" })}\r\n                                    <div style={{ width: \"97%\" }}>\r\n                                        {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                                    </div>\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu className=\"w-100\">\r\n                                    <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                        <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                        <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                        <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                        <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                        {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n\r\n                        {packageType !== \"1\" && packageType !== \"2\" && <div className=\"col-lg-8\" style={{ marginTop: \"2px\" }}>\r\n                            {/* <div className=\"row\">\r\n                                <div className=\"my-1\">{translate(\"ORDERS.DIMENSIONS_LABEL\")}</div>\r\n                            </div> */}\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Group>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            className=\"rounded-22 shadow\"\r\n                                            placeholder={intl.formatMessage({ id: \"TEMP.HEIGHT\" })}\r\n                                            ref={heightRef}\r\n                                        />\r\n                                        {/* <Form.Text muted>\r\n                                            optional\r\n                                        </Form.Text> */}\r\n                                    </Form.Group>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        className=\"rounded-22 shadow\"\r\n                                        placeholder={intl.formatMessage({ id: \"TEMP.WIDTH\" })}\r\n                                        ref={widthRef}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        className=\"rounded-22 shadow\"\r\n                                        placeholder={intl.formatMessage({ id: \"TEMP.LENGTH\" })}\r\n                                        ref={lengthRef}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        className=\"rounded-22 shadow\"\r\n                                        placeholder={intl.formatMessage({ id: \"TEMP.WEIGHT\" })}\r\n                                        ref={weightRef}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n\r\n                    <hr className=\"mt-4 mb-3\" />\r\n\r\n                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                        <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                        {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                    </div>\r\n\r\n                    {/* <div className=\"row mt-3 mb-3\">\r\n                        <div className=\"col-lg-3\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { borderRight: \"1px solid lightgray\" } : { borderLeft: \"1px solid lightgray\" }}>\r\n                            <div className=\"d-flex align-items-center my-1 h5\" style={{ color: \"#26a69a\" }}>\r\n                                <DeliveryTruckIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-9\" style={(localStorage.getItem(\"Language\") || \"en\") === \"en\" ? { paddingLeft: 0 } : { paddinRight: 0 }}>\r\n                            <hr className=\"mt-3\" />\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"toggleButtonsContainer\">\r\n                                {\r\n                                    deliverTypeArr.map((item, index) => {\r\n                                        return <div key={index} className={\"toggleButton \" + item.active} onClick={() => { handleDeliveryTypeClick(index, item.type) }}>\r\n                                            <div className=\"radio\"><div className=\"innerRadio\"></div></div> {item.name}\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            {deliveryType === \"2\" &&\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    className=\"rounded-22 shadow\" style={{ width: \"35%\", marginTop: \"5px\" }}\r\n                                    placeholder={intl.formatMessage({ id: \"ORDERS.AMOUNT\" })}\r\n                                    ref={codAmountRef}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr className=\"mt-4 mb-3\" />\r\n\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                <LocationIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                            </div>\r\n\r\n                            <AddressDropdown\r\n                                loading={loading}\r\n                                addresses={deliverAddresses}\r\n                                onSearch={setInputValue}\r\n                                onSelect={setSelectedPickUpAddress}\r\n                                selectedAddress={selectedPickUpAddress}\r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedPickUpAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n\r\n                        {/* <div className=\"mt-5\">\r\n                            <i className=\"bi bi-arrow-right h3\"></i>\r\n                        </div> */}\r\n\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                                <SendIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                            </div>\r\n\r\n                            <AddressDropdown\r\n                                loading={loading}\r\n                                addresses={deliverAddresses}\r\n                                onSearch={setInputValue}\r\n                                onSelect={setSelectedDeliveryAddress}\r\n                                selectedAddress={selectedDeliveryAddress}\r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedDeliveryAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n                        <CreateAddress>\r\n                            <div style={{ cursor: \"pointer\", marginTop: \"30px\" }} className=\"btn-grad-circle p-2\">\r\n                                <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                            </div>\r\n                        </CreateAddress>\r\n                    </div>\r\n\r\n                    <hr className=\"mt-4 mb-3\" />\r\n\r\n                    <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                        <AttachmentIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                        {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                    </div>\r\n\r\n                    <Form.Control type=\"text\" className=\"mt-2 rounded-22 shadow\" placeholder={intl.formatMessage({ id: \"TEMP.NOTES\" })} ref={notesRef} />\r\n\r\n                    {selectedPickUpAddress !== \"\" && selectedDeliveryAddress !== \"\" && <>\r\n                        <hr className=\"mt-4 mb-3\" />\r\n\r\n                        <div className=\"d-flex align-items-center mb-2 h5\" style={{ color: \"#26a69a\" }}>\r\n                            <IoIosGitNetwork style={{ width: \"20px\", height: \"20px\", color: \"black\" }} className=\"me-1\" />\r\n                            {translate(\"TEMP.CHOOSE_FROM_NETWORK\")}\r\n                        </div>\r\n\r\n                        {/* <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">{translate(\"TEMP.NAME\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PHONE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PRICE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.ASSIGN\")}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                </Table>\r\n                            </div>\r\n                        </div> */}\r\n\r\n                        <div className=\"d-flex justify-content-between\" style={{ height: \"200px\", overflowY: \"scroll\" }}>\r\n                            <div className=\"col\">\r\n                                <Table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">{translate(\"TEMP.NAME\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PHONE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.PRICE\")}</th>\r\n                                            <th scope=\"col\">{translate(\"TEMP.ASSIGN\")}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            myNetwork.map((member, index) => {\r\n                                                return <tr key={index}>\r\n                                                    <td>{member.FullName}</td>\r\n                                                    <td>{member.PhoneNumber}</td>\r\n                                                    <td>{member.deliveryPrice + \" NIS\"}</td>\r\n                                                    <td>\r\n                                                        <Button>\r\n                                                            {translate(\"TEMP.ASSIGN\")}\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        </div>\r\n                    </>}\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer className=\"d-flex justify-content-center\">\r\n\r\n                    {/*<Form.Check type=\"checkbox\" label=\"Only for my network\" />*/}\r\n\r\n                    <Button\r\n                        className=\"btn-grad\"\r\n                        style={{ width: \"45%\" }}\r\n                        disabled={loadingSubmit}\r\n                        onClick={() => {\r\n\r\n                            setBeginValidation(true);\r\n\r\n                            let CreatedBy = \"\"; /* edited (CreatedBy variable added) */\r\n                            let DeliveryParams = {}; /* edited (DeliveryParams as empty object) */\r\n\r\n                            if (isTransporter()) {\r\n                                if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\r\n                                    // console.log(\"true\");\r\n\r\n                                    setLoadingSubmit(true);\r\n\r\n                                    hideValidation();\r\n\r\n                                    CreatedBy = \"Transporter\";\r\n\r\n                                    DeliveryParams = {\r\n                                        deliveryWay: deliveryType,\r\n                                        TypeLoad: packageType,\r\n                                        // ClientMobileNumber: clientMobileNumberRef.current.value, /* edited (add ClientMobileNumber) */\r\n                                        ClientMobileNumber: selectedClient.PhoneNumber, /* edited (add ClientMobileNumber from dropdown) */\r\n                                        DeliveryPrice: deliveryCostRef.current.value, /* edited (add DeliveryPrice) */\r\n                                        CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                        DetailsLoad: notesRef.current.value,\r\n                                        LengthLoad: lengthRef.current?.value || \"\",\r\n                                        WidthLoad: widthRef.current?.value || \"\",\r\n                                        HeightLoad: heightRef.current?.value || \"\",\r\n                                        WeightLoad: weightRef.current?.value || \"\",\r\n                                        qrCode: \"\"\r\n                                    };\r\n\r\n                                    /* edited (fix client mobile number intro) */\r\n                                    if (DeliveryParams.ClientMobileNumber.charAt(0) === '0') {\r\n                                        const firstZero = DeliveryParams.ClientMobileNumber[0];\r\n                                        const replaced = DeliveryParams.ClientMobileNumber.replace(firstZero, '+972');\r\n                                        DeliveryParams.ClientMobileNumber = replaced;\r\n                                    }\r\n\r\n                                    const AddressClint = {\r\n                                        IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                        IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                        OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                        LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                        LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                        SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                        IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                        IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                        OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                        LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                        LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                        ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                        ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                    };\r\n\r\n                                    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then((res) => {\r\n                                        /* edited (test data) */\r\n                                        // console.log(\"---------------\\nres : \" + res.data);\r\n\r\n                                        /* to be edited (to print order by returned id) */\r\n\r\n                                        // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\r\n                                        //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n                                        // setOpenConf(true);\r\n\r\n                                        /* if (res.data == \"Blocked\") {\r\n                                            dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n                                        } */\r\n\r\n                                        setOpen(false);\r\n                                        setLoadingSubmit(false);\r\n                                        props.onSuccess();\r\n                                    });\r\n\r\n                                } else {\r\n                                    // console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n                            } else {\r\n                                if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n\r\n                                    setLoadingSubmit(true);\r\n\r\n                                    // console.log(\"true\");\r\n\r\n                                    hideValidation();\r\n\r\n                                    CreatedBy = \"Client\";\r\n\r\n                                    DeliveryParams = {\r\n                                        deliveryWay: deliveryType,\r\n                                        TypeLoad: packageType,\r\n                                        CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                        DetailsLoad: notesRef.current.value,\r\n                                        LengthLoad: lengthRef.current?.value || \"\",\r\n                                        WidthLoad: widthRef.current?.value || \"\",\r\n                                        HeightLoad: heightRef.current?.value || \"\",\r\n                                        WeightLoad: weightRef.current?.value || \"\",\r\n                                        qrCode: \"\"\r\n                                    };\r\n\r\n                                    const AddressClint = {\r\n                                        IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                        IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                        OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                        LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                        LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                        SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                        IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                        IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                        OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                        LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                        LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                        ReciverAddressId: selectedDeliveryAddress.id,// from selected delivery to address\r\n                                        ReceiverAddressNum: selectedDeliveryAddress.phone_number\r\n                                    };\r\n\r\n                                    CreateNewOrderReq(JSON.stringify(DeliveryParams), CreatedBy /* edited (add CreatedBy parameter) */, JSON.stringify(AddressClint)).then((res) => {\r\n                                        /* edited (test data) */\r\n                                        // console.log(\"---------------\\nres : \" + res.data);\r\n\r\n                                        /* to be edited (to print order by returned id) */\r\n\r\n                                        // orderIdRef.current = JSON.parse(res.data.replace(\"}{\", \",\")).server_response[0].OrderId;\r\n                                        //https://therichpost.com/reactjs-convert-html-into-pdf-working-functionality/\r\n\r\n                                        // setOpenConf(true);\r\n\r\n                                        /*  if (res.data == \"Blocked\") {\r\n                                             dispatch(toastNotification(\"Warning!\", translate(\"GENERAL.BLOCKED\"), \"warning\"));\r\n                                         } */\r\n\r\n                                        // console.log(res.data)\r\n\r\n                                        setOpen(false);\r\n                                        setLoadingSubmit(false);\r\n                                        props.onSuccess();\r\n                                    });\r\n                                } else {\r\n                                    // console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n\r\n                                /* - deliveryWay \r\n                                This one from radio button for delivery type it contains four values \r\n                                    (Delivery = 1, Cache on delivery = 2, Pickup = 3, Pay and Pickup = 4)\r\n                                - CostLoad   \r\n                                    This amount inserted in case of (Cache on delivery/Pay and pickup)\r\n                                - TypeLoad   \r\n                                    This one from the list we pick Food or Small/Medium/Large package where \r\n                                        Food = 1, Small Package = 2, Medium Package =3, Large Package = 4\r\n                                - qrCode\r\n                                    in case of submit with qrcode we will put the value else it will be empty */\r\n                            }\r\n                        }}\r\n                    >\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                        {isTransporter() ? translate(\"ORDERS.CREATE_ORDER\") : translate(\"ORDERS.SUBMIT_ORDER\")}\r\n                    </Button>\r\n\r\n                    {!isTransporter() && <Button\r\n                        /* disabled */\r\n                        className=\"btn-grad\"\r\n                        style={{ width: \"45%\" }}\r\n                        onClick={() => {\r\n                            setBeginValidation(true);\r\n\r\n                            if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n\r\n                                hideValidation();\r\n\r\n                                const tempDeliveryParams = {\r\n                                    deliveryWay: deliveryType,\r\n                                    TypeLoad: packageType,\r\n                                    CostLoad: (deliveryType === \"2\" && codAmountRef.current.value) || (deliveryType === \"4\" && pickAmountRef.current.value) || \"\", // 2 or 4\r\n                                    DetailsLoad: notesRef.current.value,\r\n                                    LengthLoad: lengthRef.current?.value || \"\",\r\n                                    WidthLoad: widthRef.current?.value || \"\",\r\n                                    HeightLoad: heightRef.current?.value || \"\",\r\n                                    WeightLoad: weightRef.current?.value || \"\",\r\n                                    qrCode: \"\"\r\n                                };\r\n\r\n                                // console.log(selectedDeliveryAddress);\r\n\r\n                                const tempAddressClint = {\r\n                                    IdCity: selectedPickUpAddress.cityId,  // from selected pick up address\r\n                                    IdArea: selectedPickUpAddress.areaId,  // from selected pick up address\r\n                                    IdGov: selectedPickUpAddress.governoratId,  // from selected pick up address\r\n                                    IdProv: selectedPickUpAddress.provinceId,  // from selected pick up address\r\n                                    OtherDetails: selectedPickUpAddress.details, // details from selected pickup address\r\n                                    LatSender: selectedPickUpAddress.latitude, // from selected pick up address\r\n                                    LongSender: selectedPickUpAddress.longitude, //  from selected pick up address\r\n                                    SenderAddressId: selectedPickUpAddress.id, // from selected pick up address\r\n\r\n                                    IdCityDes: selectedDeliveryAddress.cityId, // from selected delivery to address\r\n                                    IdAreaDes: selectedDeliveryAddress.areaId, // from selected delivery to address\r\n                                    IdProvDes: selectedDeliveryAddress.provinceId, // from selected delivery to address\r\n                                    IdGovDes: selectedDeliveryAddress.governoratId, // from selected delivery to address\r\n                                    OtherDetailsDes: selectedDeliveryAddress.details, // details from selected delivery to address\r\n                                    LatReciver: selectedDeliveryAddress.latitude, // from selected delivery to address\r\n                                    LongReciver: selectedDeliveryAddress.longitude, // from selected delivery to address\r\n                                    ReciverAddressId: selectedDeliveryAddress.id, // from selected delivery to address\r\n                                    ReceiverAddressNum: selectedDeliveryAddress.phone_number,\r\n                                    ReceiverAddressName: selectedDeliveryAddress.name\r\n                                };\r\n\r\n                                // console.log(selectedPickUpAddress.areaId + \" -> \" + selectedDeliveryAddress.areaId);\r\n\r\n                                setAssignDeliveryParams(tempDeliveryParams);\r\n                                setAssignAddressClint(tempAddressClint);\r\n\r\n                                setOpenAssignDialog(true);\r\n                            } else {\r\n                                showValidation();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {translate(\"TEMP.SUBMIT_AND_ASSIGN\")}\r\n                    </Button>}\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            {openAssignDialog && <SubmitAndAssignDialog\r\n                onSuccess={() => props.onSuccess()}\r\n                setCloseAssignDialog={setCloseAssignDialog}\r\n                setCloseMainDialog={setCloseMainDialog}\r\n                loadingSubmit={loadingSubmit}\r\n                assignDeliveryParams={assignDeliveryParams}\r\n                assignAddressClint={assignAddressClint} />}\r\n\r\n            <Modal\r\n                show={openConf}\r\n                onHide={() => {\r\n\r\n                    setOpenConf(false);\r\n                }}\r\n                animation={false}\r\n                backdrop=\"static\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>Would you like to print a waybill ?</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={() => {\r\n                            setOpenConf(false);\r\n                        }}\r\n                    >\r\n                        No\r\n                    </Button>\r\n\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            setOpenConf(false);\r\n                            window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}