{"ast":null,"code":"import { getUserCreditialParams } from \"../UserManager/UserManager\";\nimport { apiUrl } from \"../../Constants/GeneralCont\";\n\nvar axios = require(\"axios\");\n\nvar requestHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Content-Type\": \"application/x-www-form-urlencoded\"\n};\nexport function getAuthenticationQR() {\n  var params = getUserCreditialParams();\n  params.append(\"CheckTypeFunction\", \"GenerateUUID\");\n  return axios.post(apiUrl, params, {\n    headers: requestHeaders\n  }).then(function (response) {\n    if (response.data === \"Function Not Found\") {\n      return \"null\";\n    }\n\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport var checkAccessAPI = function checkAccessAPI(qrUUID) {\n  var params = new URLSearchParams();\n  params.append(\"CheckTypeFunction\", \"getUserCredentials\");\n  params.append(\"QRId\", qrUUID);\n  return axios.post(apiUrl, params, {\n    headers: requestHeaders\n  }).then(function (response) {\n    if (response.data === \"Function Not Found\" || response.data.ResultArray[0].CustomerId === null) {\n      return false;\n    }\n\n    localStorage.setItem(\"userId\", response.data.ResultArray[0].CustomerId);\n    localStorage.setItem(\"TokenDevice\", response.data.ResultArray[0].TokenDevice);\n    localStorage.setItem(\"UserType\", response.data.ResultArray[0].UserType);\n    localStorage.setItem(\"IsTransporterMaster\", response.data.ResultArray[0].IsTransporterMaster);\n    localStorage.setItem(\"IsTeamMember\", response.data.ResultArray[0].IsTeamMember);\n    return true;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/APIs/AuthenticationAPIs.jsx"],"names":["getUserCreditialParams","apiUrl","axios","require","requestHeaders","getAuthenticationQR","params","append","post","headers","then","response","data","catch","error","console","log","checkAccessAPI","qrUUID","URLSearchParams","ResultArray","CustomerId","localStorage","setItem","TokenDevice","UserType","IsTransporterMaster","IsTeamMember"],"mappings":"AAAA,SAAQA,sBAAR,QAAqC,4BAArC;AACA,SAAQC,MAAR,QAAqB,6BAArB;;AAEA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,cAAc,GAAG;AACnB,oCADmB;AAEnB;AAFmB,CAAvB;AAKA,OAAO,SAASC,mBAAT,GAA+B;AAClC,MAAIC,MAAM,GAAGN,sBAAsB,EAAnC;AACAM,EAAAA,MAAM,CAACC,MAAP,CAAc,mBAAd,EAAmC,cAAnC;AACA,SAAOL,KAAK,CACPM,IADE,CACGP,MADH,EACWK,MADX,EACmB;AAClBG,IAAAA,OAAO,EAAEL;AADS,GADnB,EAIFM,IAJE,CAIG,UAACC,QAAD,EAAc;AAChB,QAAIA,QAAQ,CAACC,IAAT,KAAkB,oBAAtB,EAA4C;AACxC,aAAO,MAAP;AACH;;AACD,WAAOD,QAAQ,CAACC,IAAhB;AACH,GATE,EAUFC,KAVE,CAUI,UAACC,KAAD,EAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAZE,CAAP;AAaH;AAED,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACtC,MAAIZ,MAAM,GAAG,IAAIa,eAAJ,EAAb;AACAb,EAAAA,MAAM,CAACC,MAAP,CAAc,mBAAd,EAAmC,oBAAnC;AACAD,EAAAA,MAAM,CAACC,MAAP,CAAc,MAAd,EAAsBW,MAAtB;AACA,SAAOhB,KAAK,CACPM,IADE,CACGP,MADH,EACWK,MADX,EACmB;AAClBG,IAAAA,OAAO,EAAEL;AADS,GADnB,EAIFM,IAJE,CAIG,UAACC,QAAD,EAAc;AAChB,QACIA,QAAQ,CAACC,IAAT,KAAkB,oBAAlB,IACAD,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BC,UAA7B,KAA4C,IAFhD,EAGE;AACE,aAAO,KAAP;AACH;;AAEDC,IAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BC,UAA5D;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BI,WAAjE;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BK,QAA9D;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,qBAArB,EAA4CZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BM,mBAAzE;AACAJ,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCZ,QAAQ,CAACC,IAAT,CAAcQ,WAAd,CAA0B,CAA1B,EAA6BO,YAAlE;AACA,WAAO,IAAP;AACH,GAlBE,EAmBFd,KAnBE,CAmBI,UAACC,KAAD,EAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GArBE,CAAP;AAsBH,CA1BM","sourcesContent":["import {getUserCreditialParams} from \"../UserManager/UserManager\";\r\nimport {apiUrl} from \"../../Constants/GeneralCont\";\r\n\r\nconst axios = require(\"axios\");\r\nconst requestHeaders = {\r\n    \"Access-Control-Allow-Origin\": `*`,\r\n    \"Content-Type\": `application/x-www-form-urlencoded`,\r\n};\r\n\r\nexport function getAuthenticationQR() {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"GenerateUUID\");\r\n    return axios\r\n        .post(apiUrl, params, {\r\n            headers: requestHeaders,\r\n        })\r\n        .then((response) => {\r\n            if (response.data === \"Function Not Found\") {\r\n                return \"null\";\r\n            }\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const checkAccessAPI = (qrUUID) => {\r\n    let params = new URLSearchParams();\r\n    params.append(\"CheckTypeFunction\", \"getUserCredentials\");\r\n    params.append(\"QRId\", qrUUID);\r\n    return axios\r\n        .post(apiUrl, params, {\r\n            headers: requestHeaders,\r\n        })\r\n        .then((response) => {\r\n            if (\r\n                response.data === \"Function Not Found\" ||\r\n                response.data.ResultArray[0].CustomerId === null\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            localStorage.setItem(\"userId\", response.data.ResultArray[0].CustomerId);\r\n            localStorage.setItem(\"TokenDevice\", response.data.ResultArray[0].TokenDevice);\r\n            localStorage.setItem(\"UserType\", response.data.ResultArray[0].UserType);\r\n            localStorage.setItem(\"IsTransporterMaster\", response.data.ResultArray[0].IsTransporterMaster);\r\n            localStorage.setItem(\"IsTeamMember\", response.data.ResultArray[0].IsTeamMember)\r\n            return true;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}