{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/CreateNewOrder.jsx\";\nimport { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport translate from \"../i18n/translate\";\nimport { ReactComponent as SendIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/send.svg\";\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"../APIs/OrdersAPIs\";\nimport { GetAllClients } from \"../APIs/AdminPanelApis\";\n/* edited (import ) GetAllClients */\n\nimport { ReactComponent as FoodIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/food.svg\";\nimport { ReactComponent as SmBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/smallBox.svg\";\nimport { ReactComponent as MedBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/medbox.svg\";\nimport { ReactComponent as BigBoxIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/largebox.svg\";\nimport { ReactComponent as DeliveryTruckIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/deliveryTruck.svg\";\nimport { ReactComponent as LocationIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/location.svg\";\nimport { ReactComponent as AttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/images/attachment.svg\";\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\nimport AddressDropdown from \"./AddressDropdown\";\nimport ClientDropdown from \"./ClientDropdown\";\n/* edited (import ClientDropdown) */\n\nimport CreateAddress from \"./CreateAddress\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useIntl } from \"react-intl\";\nimport { isTransporter } from \"../Util\";\n/* edited (new import) */\n\nexport var PackageTypesIcons = {\n  \"1\": FoodIcon,\n  \"2\": SmBoxIcon,\n  \"3\": MedBoxIcon,\n  \"4\": BigBoxIcon\n};\nexport function CreateNewOrder(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openConf = _useState4[0],\n      setOpenConf = _useState4[1];\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var _useState5 = useState(\"1\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      packageType = _useState6[0],\n      setPackageType = _useState6[1];\n\n  var _useState7 = useState(\"1\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deliveryType = _useState8[0],\n      setDeliveryType = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputValue = _useState10[0],\n      setInputValue = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientInputValue = _useState12[0],\n      setClientInputValue = _useState12[1];\n  /* edited (clientInputValue added) */\n\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      deliverAddresses = _useState14[0],\n      setDeliverAddresses = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allClients = _useState16[0],\n      setAllClients = _useState16[1];\n  /* edited (setAllClients added) */\n\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedDeliveryAddress = _useState18[0],\n      setSelectedDeliveryAddress = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedPickUpAddress = _useState20[0],\n      setSelectedPickUpAddress = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedClient = _useState22[0],\n      setSelectedClient = _useState22[1];\n  /* edited (setSelectedClient added) */\n\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      loading = _useState24[0],\n      setLoading = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      loadingSubmit = _useState26[0],\n      setLoadingSubmit = _useState26[1];\n  /* edited (validation variables) */\n\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      beginValidation = _useState28[0],\n      setBeginValidation = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      selectedClientCheck = _useState30[0],\n      setSelectedClientCheckShow = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      deliveryCostCheck = _useState32[0],\n      setDeliveryCostCheckShow = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      selectedPickUpAddressCheck = _useState34[0],\n      setSelectedPickUpAddressCheckShow = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      selectedDeliveryAddressCheck = _useState36[0],\n      setSelectedDeliveryAddressCheckShow = _useState36[1];\n\n  var deliveryCostRef = useRef();\n  /* edited (deliveryCostRef added) */\n  // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\n\n  var orderIdRef = useRef();\n  var notesRef = useRef();\n  var heightRef = useRef();\n  var widthRef = useRef();\n  var lengthRef = useRef();\n  var weightRef = useRef();\n  var codAmountRef = useRef();\n  var pickAmountRef = useRef();\n  var intl = useIntl();\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetDefinedAddresses(inputValue).then(function (res) {\n          setLoading(false);\n          setDeliverAddresses(res.data);\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [inputValue, open]);\n  /* edited (get all clients) */\n\n  useEffect(function () {\n    var timer = setTimeout(function () {\n      if (open) {\n        setLoading(true);\n        GetAllClients().then(function (res) {\n          setLoading(false);\n          setAllClients(res.data.clients_list.filter(function (client) {\n            return client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase());\n          }));\n        });\n      }\n    }, 500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [clientInputValue, open]);\n  /* edited (show and hide validation error messages handles) */\n\n  function showValidation() {\n    // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\n    if (selectedClient) {\n      setSelectedClientCheckShow(false);\n    } else {\n      setSelectedClientCheckShow(true);\n    }\n\n    if (deliveryCostRef && deliveryCostRef.current.value > 0) {\n      setDeliveryCostCheckShow(false);\n    } else {\n      setDeliveryCostCheckShow(true);\n    }\n\n    if (selectedPickUpAddress) {\n      setSelectedPickUpAddressCheckShow(false);\n    } else {\n      setSelectedPickUpAddressCheckShow(true);\n    }\n\n    if (selectedDeliveryAddress) {\n      setSelectedDeliveryAddressCheckShow(false);\n    } else {\n      setSelectedDeliveryAddressCheckShow(true);\n    }\n\n    console.log(\"show validation\");\n  }\n\n  function hideValidation() {\n    console.log(\"hide validation\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: \"\".concat(props.children ? \"\" : !isTransporter() && \"btn-grad text-white\"),\n    variant: isTransporter() && \"outline-light\",\n    onClick: function onClick() {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, props.children && props.children, !props.children && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      display: \"inline-block\",\n      width: \"22px\",\n      height: \"22px\",\n      marginRight: \"5px\",\n      fill: \"currentcolor\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.NEW_CUSTOMER_ORDER\"))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: open,\n    onHide: handleClose,\n    centered: true,\n    animation: true,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.CREATE_ORDER\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, translate(\"ORDERS.WHAT_TO_TRANS\")), /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"togo-dropdown\",\n    onSelect: function onSelect(eve) {\n      setPackageType(eve);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"\",\n    className: \"w-100 text-start d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, React.createElement(PackageTypesIcons[packageType], {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"97%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, translate(\"ORDERS.\" + PackageTypes[packageType]))), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"1\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FoodIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[1])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"4\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(BigBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[4])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"3\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MedBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[3])), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"2\",\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SmBoxIcon, {\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.\" + PackageTypes[2])))), isTransporter() && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ClientDropdown, {\n    loading: loading,\n    clients: allClients,\n    onSearch: setClientInputValue,\n    onSelect: setSelectedClient,\n    selectedClient: selectedClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }), beginValidation && selectedClientCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 76\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Delivery Cost\",\n    ref: deliveryCostRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }), beginValidation && deliveryCostCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 74\n    }\n  }, \"required!\")))), /*#__PURE__*/React.createElement(Form.Group, {\n    onChange: function onChange(event) {\n      if (event.target.name === \"DeliveryType\") {\n        setDeliveryType(event.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DeliveryTruckIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }), translate(\"ORDERS.DELIVERY_TYPE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[1]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios1\",\n    value: \"1\",\n    defaultChecked: deliveryType === \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[2]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios2\",\n    value: \"2\",\n    defaultChecked: deliveryType === \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }), deliveryType === \"2\" && /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"ms-auto w-25\",\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    ref: codAmountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[3]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios3\",\n    value: \"3\",\n    defaultChecked: deliveryType === \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    label: translate(\"ORDERS.\" + DeliveryTypes[4]),\n    name: \"DeliveryType\",\n    id: \"formHorizontalRadios4\",\n    value: \"4\",\n    defaultChecked: deliveryType === \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }), deliveryType === \"4\" && /*#__PURE__*/React.createElement(Form.Control, {\n    ref: pickAmountRef,\n    type: \"number\",\n    className: \"ms-auto w-25\",\n    placeholder: intl.formatMessage({\n      id: \"ORDERS.AMOUNT\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LocationIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }), translate(\"ORDERS.PICKUP_ADDRESS\")), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedPickUpAddress,\n    selectedAddress: selectedPickUpAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedPickUpAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 79\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-50 m-inline-e-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 33\n    }\n  }, translate(\"ORDERS.DELIVER_TO\"))), /*#__PURE__*/React.createElement(AddressDropdown, {\n    loading: loading,\n    addresses: deliverAddresses,\n    onSearch: setInputValue,\n    onSelect: setSelectedDeliveryAddress,\n    selectedAddress: selectedDeliveryAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }), beginValidation && selectedDeliveryAddressCheck && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 81\n    }\n  }, \"required!\")), /*#__PURE__*/React.createElement(CreateAddress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"btn-grad p-2 rounded-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    w: 6,\n    h: 6,\n    color: \"gray.50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AttachmentIcon, {\n    style: {\n      width: \"15px\",\n      height: \"15px\"\n    },\n    className: \"me-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 25\n    }\n  }), translate(\"ORDERS.ATTACHMENTS_LABEL\")), packageType !== \"1\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, translate(\"ORDERS.DIMENSIONS_LABEL\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"me-2\",\n    placeholder: \"Height\",\n    ref: heightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"me-2\",\n    placeholder: \"Width\",\n    ref: widthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"\",\n    placeholder: \"Length\",\n    ref: lengthRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    className: \"mt-2\",\n    placeholder: \"Weight\",\n    ref: weightRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"mt-2\",\n    placeholder: \"Notes\",\n    ref: notesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"\",\n    className: \"togo-button w-100\",\n    disabled: loadingSubmit,\n    onClick: function onClick() {\n      setBeginValidation(true);\n\n      if (isTransporter()) {\n        if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\n          console.log(\"true\");\n          hideValidation();\n        } else {\n          console.log(\"false\");\n          showValidation();\n        }\n      } else {\n        if (selectedPickUpAddress && selectedDeliveryAddress) {\n          console.log(\"true\");\n          hideValidation();\n        } else {\n          console.log(\"false\");\n          showValidation();\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 21\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 43\n    }\n  }), translate(\"ORDERS.SUBMIT\")))), /*#__PURE__*/React.createElement(Modal, {\n    show: openConf,\n    onHide: function onHide() {\n      setOpenConf(false);\n    },\n    animation: false,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 21\n    }\n  }, \"Confirmation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 21\n    }\n  }, \"Would you like to print a waybill ?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 21\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      setOpenConf(false);\n      window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 21\n    }\n  }, \"Yes\"))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/CreateNewOrder.jsx"],"names":["Button","Dropdown","Form","Modal","Spinner","React","useEffect","useRef","useState","translate","CreateNewOrderReq","GetDefinedAddresses","GetAllClients","DeliveryTypes","PackageTypes","AddressDropdown","ClientDropdown","CreateAddress","AddIcon","useIntl","isTransporter","PackageTypesIcons","FoodIcon","SmBoxIcon","MedBoxIcon","BigBoxIcon","CreateNewOrder","props","open","setOpen","openConf","setOpenConf","handleClose","packageType","setPackageType","deliveryType","setDeliveryType","inputValue","setInputValue","clientInputValue","setClientInputValue","deliverAddresses","setDeliverAddresses","allClients","setAllClients","selectedDeliveryAddress","setSelectedDeliveryAddress","selectedPickUpAddress","setSelectedPickUpAddress","selectedClient","setSelectedClient","loading","setLoading","loadingSubmit","setLoadingSubmit","beginValidation","setBeginValidation","selectedClientCheck","setSelectedClientCheckShow","deliveryCostCheck","setDeliveryCostCheckShow","selectedPickUpAddressCheck","setSelectedPickUpAddressCheckShow","selectedDeliveryAddressCheck","setSelectedDeliveryAddressCheckShow","deliveryCostRef","orderIdRef","notesRef","heightRef","widthRef","lengthRef","weightRef","codAmountRef","pickAmountRef","intl","timer","setTimeout","then","res","data","clearTimeout","clients_list","filter","client","FullName","toLowerCase","replaceAll","includes","showValidation","current","value","console","log","hideValidation","children","display","width","height","marginRight","fill","eve","createElement","style","className","color","event","target","name","formatMessage","id","cursor","window"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Form, Modal, Spinner } from \"react-bootstrap\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport translate from \"../i18n/translate\";\r\nimport {ReactComponent as SendIcon } from \"../assets/images/send.svg\";\r\nimport { CreateNewOrderReq, GetDefinedAddresses } from \"../APIs/OrdersAPIs\";\r\nimport { GetAllClients } from \"../APIs/AdminPanelApis\"; /* edited (import ) GetAllClients */\r\nimport {ReactComponent as FoodIcon} from \"../assets/images/food.svg\";\r\nimport {ReactComponent as SmBoxIcon} from \"../assets/images/smallBox.svg\";\r\nimport {ReactComponent as MedBoxIcon} from \"../assets/images/medbox.svg\";\r\nimport {ReactComponent as BigBoxIcon} from \"../assets/images/largebox.svg\";\r\nimport {ReactComponent as DeliveryTruckIcon} from \"../assets/images/deliveryTruck.svg\";\r\nimport {ReactComponent as LocationIcon} from \"../assets/images/location.svg\";\r\nimport {ReactComponent as AttachmentIcon} from \"../assets/images/attachment.svg\";\r\nimport { DeliveryTypes, PackageTypes } from \"./Orders/OrdersTabularView\";\r\nimport AddressDropdown from \"./AddressDropdown\";\r\nimport ClientDropdown from \"./ClientDropdown\"; /* edited (import ClientDropdown) */\r\nimport CreateAddress from \"./CreateAddress\";\r\nimport { AddIcon } from \"@chakra-ui/icons\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport { isTransporter } from \"../Util\"; /* edited (new import) */\r\n\r\nexport const PackageTypesIcons = {\r\n    \"1\": FoodIcon,\r\n    \"2\": SmBoxIcon,\r\n    \"3\": MedBoxIcon,\r\n    \"4\": BigBoxIcon\r\n};\r\n\r\n\r\nexport function CreateNewOrder(props){\r\n    const [open, setOpen] = useState(false);\r\n    const [openConf, setOpenConf] = useState(false);\r\n    const handleClose = () => { setOpen(false); }\r\n    const [packageType, setPackageType] = useState(\"1\");\r\n    const [deliveryType, setDeliveryType] = useState(\"1\");\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [clientInputValue, setClientInputValue] = useState(''); /* edited (clientInputValue added) */\r\n    const [deliverAddresses, setDeliverAddresses] = useState([]);\r\n    const [allClients, setAllClients] = useState([]); /* edited (setAllClients added) */\r\n    const [selectedDeliveryAddress, setSelectedDeliveryAddress] = useState(\"\");\r\n    const [selectedPickUpAddress, setSelectedPickUpAddress] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(\"\"); /* edited (setSelectedClient added) */\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    /* edited (validation variables) */\r\n\r\n    const [beginValidation, setBeginValidation] = useState(false);\r\n    const [selectedClientCheck, setSelectedClientCheckShow] = useState(false);\r\n    const [deliveryCostCheck, setDeliveryCostCheckShow] = useState(false);\r\n    const [selectedPickUpAddressCheck, setSelectedPickUpAddressCheckShow] = useState(false);\r\n    const [selectedDeliveryAddressCheck, setSelectedDeliveryAddressCheckShow] = useState(false);\r\n\r\n\tconst deliveryCostRef = useRef(); /* edited (deliveryCostRef added) */\r\n    // const clientMobileNumberRef = useRef(); /* edited (clientMobileNumberRef added) */\r\n    const orderIdRef = useRef();\r\n    const notesRef = useRef();\r\n    const heightRef = useRef();\r\n    const widthRef = useRef();\r\n    const lengthRef = useRef();\r\n    const weightRef = useRef();\r\n    const codAmountRef = useRef();\r\n    const pickAmountRef = useRef();\r\n    const intl = useIntl();\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if(open){\r\n                setLoading(true);\r\n\r\n                GetDefinedAddresses(inputValue).then((res)=>{\r\n                    setLoading(false);\r\n                    setDeliverAddresses(res.data);\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [inputValue, open]);\r\n\r\n\r\n    /* edited (get all clients) */\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if(open){\r\n                setLoading(true);\r\n\r\n                GetAllClients().then((res) => {\r\n                    setLoading(false);\r\n                    setAllClients(res.data.clients_list.filter(client => client.FullName.toLowerCase().replaceAll(\"أ\", 'ا').replaceAll(\"إ\", 'ا').includes(clientInputValue.toLowerCase())));\r\n                });\r\n            }\r\n        }, 500)\r\n\r\n        return () => {\r\n            return clearTimeout(timer)\r\n        }\r\n    }, [clientInputValue, open]);\r\n\r\n    /* edited (show and hide validation error messages handles) */\r\n\r\n    function showValidation() {\r\n        // selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0\r\n\r\n        if (selectedClient) {\r\n            setSelectedClientCheckShow(false)\r\n        } else {\r\n            setSelectedClientCheckShow(true)\r\n        }\r\n\r\n        if (deliveryCostRef && deliveryCostRef.current.value > 0) {\r\n            setDeliveryCostCheckShow(false)\r\n        } else {\r\n            setDeliveryCostCheckShow(true)\r\n        }\r\n\r\n        if (selectedPickUpAddress) {\r\n            setSelectedPickUpAddressCheckShow(false)\r\n        } else {\r\n            setSelectedPickUpAddressCheckShow(true)\r\n        }\r\n\r\n        if (selectedDeliveryAddress) {\r\n            setSelectedDeliveryAddressCheckShow(false)\r\n        } else {\r\n            setSelectedDeliveryAddressCheckShow(true)\r\n        }\r\n\r\n        console.log(\"show validation\");\r\n    }\r\n\r\n    function hideValidation() {\r\n        console.log(\"hide validation\");\r\n    }\r\n    \r\n    return(\r\n        <>\r\n\t\t\t{/* edited (change button style if the user is transporter) */}\r\n            <Button className={`${props.children ? \"\" : !isTransporter() && \"btn-grad text-white\"}`} variant={isTransporter() && \"outline-light\"} onClick={()=>{\r\n                setOpen(true);\r\n            }}>\r\n                {props.children && props.children}\r\n                {!props.children && (\r\n                    <>\r\n                        <SendIcon style={{display: \"inline-block\", width: \"22px\", height: \"22px\", marginRight:\"5px\", fill:\"currentcolor\"}} />\r\n                        {translate(\"ORDERS.NEW_CUSTOMER_ORDER\")}\r\n                    </>\r\n                )}\r\n            </Button>\r\n            <Modal size=\"lg\" show={open} onHide={handleClose} centered animation={true} backdrop=\"static\">\r\n                \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDERS.CREATE_ORDER\")}</Modal.Title>\r\n                </Modal.Header>\r\n                \r\n                <Modal.Body>\r\n\r\n                    <div className=\"my-1\">\r\n                        {translate(\"ORDERS.WHAT_TO_TRANS\")}\r\n                    </div>\r\n\r\n                    <Dropdown \r\n                        className=\"togo-dropdown\" \r\n                        onSelect={(eve)=>{\r\n                            setPackageType(eve);\r\n                        }}>\r\n                        <Dropdown.Toggle variant=\"\" className=\"w-100 text-start d-flex align-items-center\">\r\n                            {React.createElement(PackageTypesIcons[packageType], {style: {width: \"20px\", height: \"20px\"}, className: \"me-1\"})}\r\n                            <div style={{width: \"97%\"}}>    \r\n                                {translate(\"ORDERS.\" + PackageTypes[packageType])}\r\n                            </div>\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu className=\"w-100\">\r\n                            <Dropdown.Item eventKey=\"1\" className=\"d-flex\">\r\n                                <FoodIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[1])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"4\" className=\"d-flex\">\r\n                                <BigBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[4])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"3\" className=\"d-flex\">\r\n                                <MedBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[3])}\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"2\" className=\"d-flex\">\r\n                                <SmBoxIcon style={{ width: \"20px\", height: \"20px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.\" + PackageTypes[2])}\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* edited (Client Mobile Number & Delivery Cost Fields added) */}\r\n                    {isTransporter() && <>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                {/*<Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Client Mobile Number\" ref={clientMobileNumberRef} />*/}\r\n\r\n                                {/* edited (add clients dropdown) */}\r\n\r\n                                <ClientDropdown\r\n                                    loading={loading} \r\n                                    clients={allClients} \r\n                                    onSearch={setClientInputValue} \r\n                                    onSelect={setSelectedClient} \r\n                                    selectedClient={selectedClient} \r\n                                />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && selectedClientCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Delivery Cost\" ref={deliveryCostRef} />\r\n\r\n                                {/* edited (add validation message) */}\r\n                                {beginValidation && deliveryCostCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n                            </div>\r\n                        </div>\r\n                    </>}\r\n                    \r\n                    <Form.Group onChange={(event)=>{\r\n                        if(event.target.name === \"DeliveryType\"){\r\n                            setDeliveryType(event.target.value);\r\n                        }\r\n                    }}>\r\n                        \r\n                        <div className=\"d-flex align-items-center my-1\">\r\n                            <DeliveryTruckIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                            {translate(\"ORDERS.DELIVERY_TYPE\")}\r\n                        </div>\r\n                        \r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[1])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios1\"\r\n                                value=\"1\"\r\n                                defaultChecked={deliveryType === \"1\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[2])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios2\"\r\n                                value=\"2\"\r\n                                defaultChecked={deliveryType === \"2\"}\r\n                            />\r\n                            {deliveryType === \"2\" &&\r\n                                <Form.Control \r\n                                    type=\"number\" \r\n                                    className=\"ms-auto w-25\" \r\n                                    placeholder={intl.formatMessage({id: \"ORDERS.AMOUNT\"})}\r\n                                    ref={codAmountRef}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[3])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios3\"\r\n                                value=\"3\"\r\n                                defaultChecked={deliveryType === \"3\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center\" style={{height: \"40px\"}}>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                label={translate(\"ORDERS.\" + DeliveryTypes[4])}\r\n                                name=\"DeliveryType\"\r\n                                id=\"formHorizontalRadios4\"\r\n                                value=\"4\"\r\n                                defaultChecked={deliveryType === \"4\"}\r\n                            />\r\n                            {deliveryType === \"4\" && \r\n                                <Form.Control \r\n                                    ref={pickAmountRef}\r\n                                    type=\"number\"\r\n                                    className=\"ms-auto w-25\"\r\n                                    placeholder={intl.formatMessage({id: \"ORDERS.AMOUNT\"})}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </Form.Group>\r\n\r\n                    <div className=\"d-flex align-items-end\">\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center my-1\">\r\n                                <LocationIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                                {translate(\"ORDERS.PICKUP_ADDRESS\")}\r\n                            </div>\r\n\r\n                            <AddressDropdown \r\n                                loading={loading} \r\n                                addresses={deliverAddresses} \r\n                                onSearch={setInputValue} \r\n                                onSelect={setSelectedPickUpAddress} \r\n                                selectedAddress={selectedPickUpAddress} \r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedPickUpAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n                        <div className=\"w-50 m-inline-e-2\">\r\n                            <div className=\"d-flex align-items-center my-1\">\r\n                                <SendIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                                <p>{translate(\"ORDERS.DELIVER_TO\")}</p>\r\n                            </div>\r\n                            \r\n                            <AddressDropdown \r\n                                loading={loading} \r\n                                addresses={deliverAddresses} \r\n                                onSearch={setInputValue} \r\n                                onSelect={setSelectedDeliveryAddress} \r\n                                selectedAddress={selectedDeliveryAddress} \r\n                            />\r\n\r\n                            {/* edited (add validation message) */}\r\n                            {beginValidation && selectedDeliveryAddressCheck && <span style={{ color: \"red\" }}>required!</span>}\r\n\r\n                        </div>\r\n                        <CreateAddress>\r\n                            <div style={{ cursor: \"pointer\" }} className=\"btn-grad p-2 rounded-circle\">\r\n                                <AddIcon w={6} h={6} color=\"gray.50\" />\r\n                            </div>\r\n                        </CreateAddress>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center my-1\">\r\n                        <AttachmentIcon style={{ width: \"15px\", height: \"15px\" }} className=\"me-1\" />\r\n                        {translate(\"ORDERS.ATTACHMENTS_LABEL\")}\r\n                    </div>\r\n                    \r\n                    {packageType !== \"1\" &&\r\n                    <>\r\n                        <div className=\"my-1\">{translate(\"ORDERS.DIMENSIONS_LABEL\")}</div>\r\n                        <div className=\"d-flex\">\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"me-2\"\r\n                                placeholder=\"Height\" \r\n                                ref={heightRef}\r\n                            />\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"me-2\" \r\n                                placeholder=\"Width\" \r\n                                ref={widthRef}\r\n                            />\r\n                            <Form.Control \r\n                                type=\"number\" \r\n                                className=\"\" \r\n                                placeholder=\"Length\" \r\n                                ref={lengthRef}\r\n                            />\r\n                        </div>\r\n                        <Form.Control \r\n                            type=\"number\" \r\n                            className=\"mt-2\"\r\n                            placeholder=\"Weight\" \r\n                            ref={weightRef}\r\n                        />\r\n                    </>\r\n                    }\r\n                    <Form.Control type=\"text\" className=\"mt-2\" placeholder=\"Notes\" ref={notesRef} />\r\n                \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"\" \r\n                        className=\"togo-button w-100\" \r\n                        disabled={loadingSubmit}\r\n                        onClick={()=>{\r\n\r\n                            setBeginValidation(true);\r\n\r\n                            if (isTransporter()) {\r\n                                if (selectedClient && deliveryCostRef && selectedPickUpAddress && selectedDeliveryAddress && deliveryCostRef.current.value > 0) {\r\n                                    console.log(\"true\");\r\n                                    hideValidation();\r\n                                } else {\r\n                                    console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n                            } else {\r\n                                if (selectedPickUpAddress && selectedDeliveryAddress) {\r\n                                    console.log(\"true\");\r\n                                    hideValidation();\r\n                                } else {\r\n                                    console.log(\"false\");\r\n                                    showValidation();\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\"/>} \r\n                        {translate(\"ORDERS.SUBMIT\")}\r\n                    </Button>\r\n                </Modal.Footer>\r\n\r\n                \r\n            </Modal>\r\n            <Modal \r\n                show={openConf} \r\n                onHide={()=>{\r\n                    \r\n                    setOpenConf(false);\r\n                }} \r\n                animation={false} \r\n                backdrop=\"static\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <p>Would you like to print a waybill ?</p>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button \r\n                        variant=\"secondary\"\r\n                        onClick={()=>{\r\n                            setOpenConf(false);\r\n                        }}\r\n                    >\r\n                        No\r\n                    </Button>\r\n\r\n                    <Button \r\n                        variant=\"primary\"\r\n                        onClick={()=>{\r\n                            setOpenConf(false);\r\n                            window.open(\"/account/bill-for-order/\" + orderIdRef.current + \"?print=true\")\r\n                        }}\r\n                    >\r\n                        Yes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}