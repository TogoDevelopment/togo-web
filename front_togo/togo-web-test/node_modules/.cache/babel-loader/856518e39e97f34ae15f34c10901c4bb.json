{"ast":null,"code":"import maxBy from 'lodash/maxBy';\nimport minBy from 'lodash/minBy';\nimport kebabCase from 'lodash/kebabCase';\nimport { ownerDocument, getOffset, getPosition as _getPosition, scrollTop, scrollLeft } from 'dom-lib';\nexport var AutoPlacement = {\n  left: 'Start',\n  right: 'End',\n  top: 'Start',\n  bottom: 'End'\n};\n\n/**\n * Get the external dimensions of the container\n * @param containerNode\n */\nfunction getContainerDimensions(containerNode) {\n  var width;\n  var height;\n  var scrollX;\n  var scrollY;\n  if (containerNode.tagName === 'BODY') {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    scrollY = scrollTop(ownerDocument(containerNode).documentElement) || scrollTop(containerNode);\n    scrollX = scrollLeft(ownerDocument(containerNode).documentElement) || scrollLeft(containerNode);\n  } else {\n    var _getOffset = getOffset(containerNode);\n    width = _getOffset.width;\n    height = _getOffset.height;\n    scrollY = scrollTop(containerNode);\n    scrollX = scrollLeft(containerNode);\n  }\n  return {\n    width: width,\n    height: height,\n    scrollX: scrollX,\n    scrollY: scrollY\n  };\n}\nexport default (function (props) {\n  var placement = props.placement,\n    preventOverflow = props.preventOverflow,\n    padding = props.padding;\n  function getTopDelta(top, overlayHeight, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n    var containerDimensions = getContainerDimensions(container);\n    var containerHeight = containerDimensions.height,\n      scrollY = containerDimensions.scrollY;\n    var topEdgeOffset = top - padding - scrollY;\n    var bottomEdgeOffset = top + padding + overlayHeight - scrollY;\n    if (topEdgeOffset < 0) {\n      return -topEdgeOffset;\n    } else if (bottomEdgeOffset > containerHeight) {\n      return containerHeight - bottomEdgeOffset;\n    }\n    return 0;\n  }\n  function getLeftDelta(left, overlayWidth, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n    var containerDimensions = getContainerDimensions(container);\n    var scrollX = containerDimensions.scrollX,\n      containerWidth = containerDimensions.width;\n    var leftEdgeOffset = left - padding - scrollX;\n    var rightEdgeOffset = left + padding + overlayWidth - scrollX;\n    if (leftEdgeOffset < 0) {\n      return -leftEdgeOffset;\n    } else if (rightEdgeOffset > containerWidth) {\n      return containerWidth - rightEdgeOffset;\n    }\n    return 0;\n  }\n  function getPositionTop(container, overlayHeight, top) {\n    if (!preventOverflow) {\n      return top;\n    }\n    var _getContainerDimensio = getContainerDimensions(container),\n      scrollY = _getContainerDimensio.scrollY,\n      containerHeight = _getContainerDimensio.height; // 判断 overlay 底部是否溢出，设置 top\n\n    if (overlayHeight + top > containerHeight + scrollY) {\n      return containerHeight - overlayHeight + scrollY;\n    } // top 的最小值不能少于纵向滚动条 y 的值\n\n    return Math.max(scrollY, top);\n  }\n  function getPositionLeft(container, overlayWidth, left) {\n    if (!preventOverflow) {\n      return left;\n    }\n    var _getContainerDimensio2 = getContainerDimensions(container),\n      scrollX = _getContainerDimensio2.scrollX,\n      containerWidth = _getContainerDimensio2.width;\n    if (overlayWidth + left > containerWidth + scrollX) {\n      return containerWidth - overlayWidth + scrollX;\n    } // left 的最小值不能少于横向滚动条 x 的值\n\n    return Math.max(scrollX, left);\n  }\n  return {\n    getPosition: function getPosition(target, container) {\n      var offset = container.tagName === 'BODY' ? getOffset(target) : _getPosition(target, container);\n      return offset;\n    },\n    calcAutoPlacement: function calcAutoPlacement(targetOffset, container, overlay) {\n      var _getContainerDimensio3 = getContainerDimensions(container),\n        width = _getContainerDimensio3.width,\n        height = _getContainerDimensio3.height,\n        scrollX = _getContainerDimensio3.scrollX,\n        scrollY = _getContainerDimensio3.scrollY;\n      var left = targetOffset.left - scrollX - overlay.width;\n      var top = targetOffset.top - scrollY - overlay.height;\n      var right = width - targetOffset.left - targetOffset.width + scrollX - overlay.width;\n      var bottom = height - targetOffset.top - targetOffset.height + scrollY - overlay.height;\n      var horizontal = [{\n        key: 'left',\n        value: left\n      }, {\n        key: 'right',\n        value: right\n      }];\n      var vertical = [{\n        key: 'top',\n        value: top\n      }, {\n        key: 'bottom',\n        value: bottom\n      }];\n      var AV = 'autoVertical';\n      var AH = 'autoHorizontal';\n      var direction;\n      var align;\n      if (placement.indexOf(AV) !== -1) {\n        direction = maxBy(vertical, function (o) {\n          return o.value;\n        });\n        return placement === AV ? direction.key : \"\" + direction.key + placement.replace(AV, '');\n      } else if (placement.indexOf(AH) !== -1) {\n        direction = maxBy(horizontal, function (o) {\n          return o.value;\n        });\n        return placement === AH ? direction.key : \"\" + direction.key + placement.replace(AH, '');\n      }\n      /**\n       * Precedence Vertical\n       * [...vertical, ...horizontal]\n       */\n\n      direction = maxBy([].concat(vertical, horizontal), function (o) {\n        return o.value;\n      });\n      if (direction.key === 'left' || direction.key === 'right') {\n        align = minBy(vertical, function (o) {\n          return o.value;\n        });\n      } else {\n        align = minBy(horizontal, function (o) {\n          return o.value;\n        });\n      }\n      return \"\" + direction.key + AutoPlacement[align.key];\n    },\n    // Calculate the position of the overlay\n    calcOverlayPosition: function calcOverlayPosition(overlayNode, target, container) {\n      var childOffset = this.getPosition(target, container);\n      var _getOffset2 = getOffset(overlayNode),\n        overlayHeight = _getOffset2.height,\n        overlayWidth = _getOffset2.width;\n      var top = childOffset.top,\n        left = childOffset.left;\n      var nextPlacement = placement;\n      if (placement && placement.indexOf('auto') >= 0) {\n        nextPlacement = this.calcAutoPlacement(childOffset, container, {\n          height: overlayHeight,\n          width: overlayWidth\n        });\n      }\n      var positionLeft;\n      var positionTop;\n      var arrowOffsetLeft;\n      var arrowOffsetTop;\n      if (nextPlacement === 'left' || nextPlacement === 'right') {\n        positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;\n        var topDelta = getTopDelta(positionTop, overlayHeight, container);\n        positionTop += topDelta;\n        arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + \"%\";\n        arrowOffsetLeft = undefined;\n      } else if (nextPlacement === 'top' || nextPlacement === 'bottom') {\n        positionLeft = left + (childOffset.width - overlayWidth) / 2;\n        var leftDelta = getLeftDelta(positionLeft, overlayWidth, container);\n        positionLeft += leftDelta;\n        arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + \"%\";\n        arrowOffsetTop = undefined;\n      }\n      if (nextPlacement === 'top' || nextPlacement === 'topStart' || nextPlacement === 'topEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top - overlayHeight);\n      }\n      if (nextPlacement === 'bottom' || nextPlacement === 'bottomStart' || nextPlacement === 'bottomEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top + childOffset.height);\n      }\n      if (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left - overlayWidth);\n      }\n      if (nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left + childOffset.width);\n      }\n      if (document.dir === 'rtl' && (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd' || nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd')) {\n        /**\n         * When laying out in rtl, if the width of the container\n         * is less than the width of the container scrolling,\n         * you need to recalculate the left value.\n         */\n        var _getContainerDimensio4 = getContainerDimensions(container),\n          containerWidth = _getContainerDimensio4.width;\n        if (container.scrollWidth > containerWidth) {\n          positionLeft = containerWidth + positionLeft - container.scrollWidth;\n        }\n      }\n      if (nextPlacement === 'topStart' || nextPlacement === 'bottomStart') {\n        if (document.dir === 'rtl') {\n          var nextLeft = left + (childOffset.width - overlayWidth);\n          positionLeft = nextLeft + getLeftDelta(nextLeft, overlayWidth, container);\n        } else {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        }\n      }\n      if (nextPlacement === 'topEnd' || nextPlacement === 'bottomEnd') {\n        if (document.dir === 'rtl') {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        } else {\n          var _nextLeft = left + (childOffset.width - overlayWidth);\n          positionLeft = _nextLeft + getLeftDelta(_nextLeft, overlayWidth, container);\n        }\n      }\n      if (nextPlacement === 'leftStart' || nextPlacement === 'rightStart') {\n        positionTop = top + getTopDelta(top, overlayHeight, container);\n      }\n      if (nextPlacement === 'leftEnd' || nextPlacement === 'rightEnd') {\n        var nextTop = top + (childOffset.height - overlayHeight);\n        positionTop = nextTop + getTopDelta(nextTop, overlayHeight, container);\n      }\n      return {\n        positionLeft: positionLeft,\n        positionTop: positionTop,\n        arrowOffsetLeft: arrowOffsetLeft,\n        arrowOffsetTop: arrowOffsetTop,\n        positionClassName: \"placement-\" + kebabCase(nextPlacement)\n      };\n    }\n  };\n});","map":{"version":3,"names":["maxBy","minBy","kebabCase","ownerDocument","getOffset","getPosition","_getPosition","scrollTop","scrollLeft","AutoPlacement","left","right","top","bottom","getContainerDimensions","containerNode","width","height","scrollX","scrollY","tagName","window","innerWidth","innerHeight","documentElement","_getOffset","props","placement","preventOverflow","padding","getTopDelta","overlayHeight","container","containerDimensions","containerHeight","topEdgeOffset","bottomEdgeOffset","getLeftDelta","overlayWidth","containerWidth","leftEdgeOffset","rightEdgeOffset","getPositionTop","_getContainerDimensio","Math","max","getPositionLeft","_getContainerDimensio2","target","offset","calcAutoPlacement","targetOffset","overlay","_getContainerDimensio3","horizontal","key","value","vertical","AV","AH","direction","align","indexOf","o","replace","concat","calcOverlayPosition","overlayNode","childOffset","_getOffset2","nextPlacement","positionLeft","positionTop","arrowOffsetLeft","arrowOffsetTop","topDelta","undefined","leftDelta","document","dir","_getContainerDimensio4","scrollWidth","nextLeft","_nextLeft","nextTop","positionClassName"],"sources":["/home/system/togo-web-test/node_modules/rsuite/esm/Overlay/positionUtils.js"],"sourcesContent":["import maxBy from 'lodash/maxBy';\nimport minBy from 'lodash/minBy';\nimport kebabCase from 'lodash/kebabCase';\nimport { ownerDocument, getOffset, getPosition as _getPosition, scrollTop, scrollLeft } from 'dom-lib';\nexport var AutoPlacement = {\n  left: 'Start',\n  right: 'End',\n  top: 'Start',\n  bottom: 'End'\n};\n\n/**\n * Get the external dimensions of the container\n * @param containerNode\n */\nfunction getContainerDimensions(containerNode) {\n  var width;\n  var height;\n  var scrollX;\n  var scrollY;\n\n  if (containerNode.tagName === 'BODY') {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    scrollY = scrollTop(ownerDocument(containerNode).documentElement) || scrollTop(containerNode);\n    scrollX = scrollLeft(ownerDocument(containerNode).documentElement) || scrollLeft(containerNode);\n  } else {\n    var _getOffset = getOffset(containerNode);\n\n    width = _getOffset.width;\n    height = _getOffset.height;\n    scrollY = scrollTop(containerNode);\n    scrollX = scrollLeft(containerNode);\n  }\n\n  return {\n    width: width,\n    height: height,\n    scrollX: scrollX,\n    scrollY: scrollY\n  };\n}\n\nexport default (function (props) {\n  var placement = props.placement,\n      preventOverflow = props.preventOverflow,\n      padding = props.padding;\n\n  function getTopDelta(top, overlayHeight, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n\n    var containerDimensions = getContainerDimensions(container);\n    var containerHeight = containerDimensions.height,\n        scrollY = containerDimensions.scrollY;\n    var topEdgeOffset = top - padding - scrollY;\n    var bottomEdgeOffset = top + padding + overlayHeight - scrollY;\n\n    if (topEdgeOffset < 0) {\n      return -topEdgeOffset;\n    } else if (bottomEdgeOffset > containerHeight) {\n      return containerHeight - bottomEdgeOffset;\n    }\n\n    return 0;\n  }\n\n  function getLeftDelta(left, overlayWidth, container) {\n    if (!preventOverflow) {\n      return 0;\n    }\n\n    var containerDimensions = getContainerDimensions(container);\n    var scrollX = containerDimensions.scrollX,\n        containerWidth = containerDimensions.width;\n    var leftEdgeOffset = left - padding - scrollX;\n    var rightEdgeOffset = left + padding + overlayWidth - scrollX;\n\n    if (leftEdgeOffset < 0) {\n      return -leftEdgeOffset;\n    } else if (rightEdgeOffset > containerWidth) {\n      return containerWidth - rightEdgeOffset;\n    }\n\n    return 0;\n  }\n\n  function getPositionTop(container, overlayHeight, top) {\n    if (!preventOverflow) {\n      return top;\n    }\n\n    var _getContainerDimensio = getContainerDimensions(container),\n        scrollY = _getContainerDimensio.scrollY,\n        containerHeight = _getContainerDimensio.height; // 判断 overlay 底部是否溢出，设置 top\n\n\n    if (overlayHeight + top > containerHeight + scrollY) {\n      return containerHeight - overlayHeight + scrollY;\n    } // top 的最小值不能少于纵向滚动条 y 的值\n\n\n    return Math.max(scrollY, top);\n  }\n\n  function getPositionLeft(container, overlayWidth, left) {\n    if (!preventOverflow) {\n      return left;\n    }\n\n    var _getContainerDimensio2 = getContainerDimensions(container),\n        scrollX = _getContainerDimensio2.scrollX,\n        containerWidth = _getContainerDimensio2.width;\n\n    if (overlayWidth + left > containerWidth + scrollX) {\n      return containerWidth - overlayWidth + scrollX;\n    } // left 的最小值不能少于横向滚动条 x 的值\n\n\n    return Math.max(scrollX, left);\n  }\n\n  return {\n    getPosition: function getPosition(target, container) {\n      var offset = container.tagName === 'BODY' ? getOffset(target) : _getPosition(target, container);\n      return offset;\n    },\n    calcAutoPlacement: function calcAutoPlacement(targetOffset, container, overlay) {\n      var _getContainerDimensio3 = getContainerDimensions(container),\n          width = _getContainerDimensio3.width,\n          height = _getContainerDimensio3.height,\n          scrollX = _getContainerDimensio3.scrollX,\n          scrollY = _getContainerDimensio3.scrollY;\n\n      var left = targetOffset.left - scrollX - overlay.width;\n      var top = targetOffset.top - scrollY - overlay.height;\n      var right = width - targetOffset.left - targetOffset.width + scrollX - overlay.width;\n      var bottom = height - targetOffset.top - targetOffset.height + scrollY - overlay.height;\n      var horizontal = [{\n        key: 'left',\n        value: left\n      }, {\n        key: 'right',\n        value: right\n      }];\n      var vertical = [{\n        key: 'top',\n        value: top\n      }, {\n        key: 'bottom',\n        value: bottom\n      }];\n      var AV = 'autoVertical';\n      var AH = 'autoHorizontal';\n      var direction;\n      var align;\n\n      if (placement.indexOf(AV) !== -1) {\n        direction = maxBy(vertical, function (o) {\n          return o.value;\n        });\n        return placement === AV ? direction.key : \"\" + direction.key + placement.replace(AV, '');\n      } else if (placement.indexOf(AH) !== -1) {\n        direction = maxBy(horizontal, function (o) {\n          return o.value;\n        });\n        return placement === AH ? direction.key : \"\" + direction.key + placement.replace(AH, '');\n      }\n      /**\n       * Precedence Vertical\n       * [...vertical, ...horizontal]\n       */\n\n\n      direction = maxBy([].concat(vertical, horizontal), function (o) {\n        return o.value;\n      });\n\n      if (direction.key === 'left' || direction.key === 'right') {\n        align = minBy(vertical, function (o) {\n          return o.value;\n        });\n      } else {\n        align = minBy(horizontal, function (o) {\n          return o.value;\n        });\n      }\n\n      return \"\" + direction.key + AutoPlacement[align.key];\n    },\n    // Calculate the position of the overlay\n    calcOverlayPosition: function calcOverlayPosition(overlayNode, target, container) {\n      var childOffset = this.getPosition(target, container);\n\n      var _getOffset2 = getOffset(overlayNode),\n          overlayHeight = _getOffset2.height,\n          overlayWidth = _getOffset2.width;\n\n      var top = childOffset.top,\n          left = childOffset.left;\n      var nextPlacement = placement;\n\n      if (placement && placement.indexOf('auto') >= 0) {\n        nextPlacement = this.calcAutoPlacement(childOffset, container, {\n          height: overlayHeight,\n          width: overlayWidth\n        });\n      }\n\n      var positionLeft;\n      var positionTop;\n      var arrowOffsetLeft;\n      var arrowOffsetTop;\n\n      if (nextPlacement === 'left' || nextPlacement === 'right') {\n        positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;\n        var topDelta = getTopDelta(positionTop, overlayHeight, container);\n        positionTop += topDelta;\n        arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + \"%\";\n        arrowOffsetLeft = undefined;\n      } else if (nextPlacement === 'top' || nextPlacement === 'bottom') {\n        positionLeft = left + (childOffset.width - overlayWidth) / 2;\n        var leftDelta = getLeftDelta(positionLeft, overlayWidth, container);\n        positionLeft += leftDelta;\n        arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + \"%\";\n        arrowOffsetTop = undefined;\n      }\n\n      if (nextPlacement === 'top' || nextPlacement === 'topStart' || nextPlacement === 'topEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top - overlayHeight);\n      }\n\n      if (nextPlacement === 'bottom' || nextPlacement === 'bottomStart' || nextPlacement === 'bottomEnd') {\n        positionTop = getPositionTop(container, overlayHeight, childOffset.top + childOffset.height);\n      }\n\n      if (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left - overlayWidth);\n      }\n\n      if (nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd') {\n        positionLeft = getPositionLeft(container, overlayWidth, childOffset.left + childOffset.width);\n      }\n\n      if (document.dir === 'rtl' && (nextPlacement === 'left' || nextPlacement === 'leftStart' || nextPlacement === 'leftEnd' || nextPlacement === 'right' || nextPlacement === 'rightStart' || nextPlacement === 'rightEnd')) {\n        /**\n         * When laying out in rtl, if the width of the container\n         * is less than the width of the container scrolling,\n         * you need to recalculate the left value.\n         */\n        var _getContainerDimensio4 = getContainerDimensions(container),\n            containerWidth = _getContainerDimensio4.width;\n\n        if (container.scrollWidth > containerWidth) {\n          positionLeft = containerWidth + positionLeft - container.scrollWidth;\n        }\n      }\n\n      if (nextPlacement === 'topStart' || nextPlacement === 'bottomStart') {\n        if (document.dir === 'rtl') {\n          var nextLeft = left + (childOffset.width - overlayWidth);\n          positionLeft = nextLeft + getLeftDelta(nextLeft, overlayWidth, container);\n        } else {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        }\n      }\n\n      if (nextPlacement === 'topEnd' || nextPlacement === 'bottomEnd') {\n        if (document.dir === 'rtl') {\n          positionLeft = left + getLeftDelta(left, overlayWidth, container);\n        } else {\n          var _nextLeft = left + (childOffset.width - overlayWidth);\n\n          positionLeft = _nextLeft + getLeftDelta(_nextLeft, overlayWidth, container);\n        }\n      }\n\n      if (nextPlacement === 'leftStart' || nextPlacement === 'rightStart') {\n        positionTop = top + getTopDelta(top, overlayHeight, container);\n      }\n\n      if (nextPlacement === 'leftEnd' || nextPlacement === 'rightEnd') {\n        var nextTop = top + (childOffset.height - overlayHeight);\n        positionTop = nextTop + getTopDelta(nextTop, overlayHeight, container);\n      }\n\n      return {\n        positionLeft: positionLeft,\n        positionTop: positionTop,\n        arrowOffsetLeft: arrowOffsetLeft,\n        arrowOffsetTop: arrowOffsetTop,\n        positionClassName: \"placement-\" + kebabCase(nextPlacement)\n      };\n    }\n  };\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}