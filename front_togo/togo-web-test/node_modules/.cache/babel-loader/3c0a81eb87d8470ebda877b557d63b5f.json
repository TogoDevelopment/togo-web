{"ast":null,"code":"import _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/OrdersManager/AcceptOrder.jsx\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { setTripCost } from \"../../APIs/OrdersAPIs\";\nimport translate from \"../../i18n/translate\";\nimport { useDispatch } from \"react-redux\";\nimport { toastNotification } from \"../../Actions/GeneralActions\";\nimport Spinner from \"react-bootstrap/Spinner\"; // import { io } from \"socket.io-client\";\n\nexport function BidOrder(props) {\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cost = _useState4[0],\n      setCost = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingSubmit = _useState6[0],\n      setLoadingSubmit = _useState6[1];\n\n  var handleClose = function handleClose() {\n    setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var handleChange = function handleChange(e) {\n    setCost(e.target.value);\n  };\n\n  var bidOrder = function bidOrder(orderId, cost, customerId, onSuccess) {\n    setLoadingSubmit(true);\n    setTripCost(orderId, cost).then(function (res) {\n      console.log(res.data);\n      /*  if (\r\n           res.data == \"orderDeleted\" ||\r\n           res.data == \"ChargeBalanace\" ||\r\n           res.data == \"deliveryWayNotFound\" ||\r\n           res.data == \"AlreadyAddedValue\" ||\r\n           res.data == \"NotInsertedBid\" ||\r\n           res.data == \"OrderNotFound\" ||\r\n           res.data == \"OrderAlreadyAccepted\" ||\r\n           res.data == \"Blocked\" ||\r\n           res.data == \"TokenError\"\r\n       ) {\r\n           dispatch(toastNotification(\"Error!\", res.data, \"error\"));\r\n       } else {\r\n           onSuccess();\r\n       } */\n\n      setLoadingSubmit(false);\n    });\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleShow,\n    style: {\n      width: \"200px\",\n      marginRight: \"5px\",\n      marginLeft: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, translate(\"ORDER_DETAILS.BID\"), \" \"), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, translate(\"ORDER_DETAILS.MAKE_A_BID\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, translate(\"ORDER_DETAILS.BID_PRICE\")), /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"0.0\",\n    value: cost,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"5% \", translate(\"ORDER_DETAILS.WILL_TAKEN_CHARGE\"))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, translate(\"GENERAL.CLOSE\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      return bidOrder(props.orderId, cost, props.customerId, props.onSuccess, props.socket);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 43\n    }\n  }), translate(\"GENERAL.PROCEED\")))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/OrdersManager/AcceptOrder.jsx"],"names":["React","useState","Button","Modal","FormControl","InputGroup","setTripCost","translate","useDispatch","toastNotification","Spinner","BidOrder","props","dispatch","show","setShow","cost","setCost","loadingSubmit","setLoadingSubmit","handleClose","handleShow","handleChange","e","target","value","bidOrder","orderId","customerId","onSuccess","then","res","console","log","data","width","marginRight","marginLeft","socket"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { setTripCost } from \"../../APIs/OrdersAPIs\";\r\nimport translate from \"../../i18n/translate\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toastNotification } from \"../../Actions/GeneralActions\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\n// import { io } from \"socket.io-client\";\r\n\r\nexport function BidOrder(props) {\r\n    let dispatch = useDispatch();\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [cost, setCost] = useState(\"\");\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const handleChange = (e) => {\r\n        setCost(e.target.value);\r\n    };\r\n\r\n    const bidOrder = (orderId, cost, customerId, onSuccess) => {\r\n        setLoadingSubmit(true);\r\n        setTripCost(orderId, cost).then((res) => {\r\n            console.log(res.data);\r\n           /*  if (\r\n                res.data == \"orderDeleted\" ||\r\n                res.data == \"ChargeBalanace\" ||\r\n                res.data == \"deliveryWayNotFound\" ||\r\n                res.data == \"AlreadyAddedValue\" ||\r\n                res.data == \"NotInsertedBid\" ||\r\n                res.data == \"OrderNotFound\" ||\r\n                res.data == \"OrderAlreadyAccepted\" ||\r\n                res.data == \"Blocked\" ||\r\n                res.data == \"TokenError\"\r\n            ) {\r\n                dispatch(toastNotification(\"Error!\", res.data, \"error\"));\r\n            } else {\r\n                onSuccess();\r\n            } */\r\n\r\n            setLoadingSubmit(false);\r\n        });\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                variant=\"primary\"\r\n                onClick={handleShow}\r\n                style={{\r\n                    width: \"200px\",\r\n                    marginRight: \"5px\",\r\n                    marginLeft: \"5px\"\r\n                }}\r\n            >\r\n                {translate(\"ORDER_DETAILS.BID\")}{\" \"}\r\n            </Button>\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{translate(\"ORDER_DETAILS.MAKE_A_BID\")}</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Text>{translate(\"ORDER_DETAILS.BID_PRICE\")}</InputGroup.Text>\r\n                        <FormControl placeholder=\"0.0\" value={cost} onChange={handleChange} />\r\n                    </InputGroup>\r\n                    <div>\r\n                        5% {translate(\"ORDER_DETAILS.WILL_TAKEN_CHARGE\")}\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        {translate(\"GENERAL.CLOSE\")}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => bidOrder(props.orderId, cost, props.customerId, props.onSuccess, props.socket)}\r\n                    >\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\" />}\r\n                        {translate(\"GENERAL.PROCEED\")}\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}