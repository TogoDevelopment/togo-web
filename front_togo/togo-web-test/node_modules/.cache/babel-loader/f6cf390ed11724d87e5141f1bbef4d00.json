{"ast":null,"code":"import _defineProperty from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/system/togo-web-test/src/components/WorkInfo.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Form, FormControl, Modal, Spinner } from \"react-bootstrap\";\nimport { SetWorkingHours } from \"../APIs/LoginAPIs\";\nimport { GetCityRegion } from \"../APIs/OrdersAPIs\";\nimport locationImg from \"../assets/locationn.png\";\nvar DAYS = ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\nfunction FromToFields(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      time = _ref.time,\n      onChangeStartTime = _ref.onChangeStartTime,\n      onChangeEndTime = _ref.onChangeEndTime;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"align-items-center d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, children, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"From\"), /*#__PURE__*/React.createElement(FormControl, {\n    type: \"time\",\n    className: \"bg-white rounded-22 w-auto\",\n    name: \"from\",\n    value: time.from,\n    onChange: onChangeStartTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"to\"), /*#__PURE__*/React.createElement(FormControl, {\n    type: \"time\",\n    className: \"bg-white rounded-22 w-auto\",\n    name: \"to\",\n    value: time.to,\n    onChange: onChangeEndTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default function WorkInfo() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loadingSubmit = _useState2[0],\n      setLoadingSubmit = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cities = _useState6[0],\n      setCities = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedCities = _useState8[0],\n      setSelectedCities = _useState8[1];\n\n  var _useState9 = useState(\"1\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isAllTime = _useState10[0],\n      setIsAllTime = _useState10[1];\n\n  var _useState11 = useState(DAYS),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedDays = _useState12[0],\n      setSelectedDays = _useState12[1];\n\n  var _useState13 = useState(\"1\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedTimeRange = _useState14[0],\n      setSelectedTimeRange = _useState14[1];\n\n  var _useState15 = useState({\n    from: \"\",\n    to: \"\"\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      time = _useState16[0],\n      setTime = _useState16[1];\n\n  var handleChangeEndTime = function handleChangeEndTime(e) {\n    setTime({\n      from: time.from,\n      to: e.target.value\n    });\n  };\n\n  var handleChangeStartTime = function handleChangeStartTime(e) {\n    setTime({\n      from: e.target.value,\n      to: time.to\n    });\n  };\n\n  var formRef = useRef();\n  useEffect(function () {\n    GetCityRegion().then(function (res) {\n      setCities(res.data.server_response);\n    });\n  }, []);\n  var getTime = {\n    Saturday: {\n      SatTimeStart: \"\",\n      SatTimeFinish: \"\"\n    },\n    Sunday: {\n      SunTimeStart: \"\",\n      SunTimeFinish: \"\"\n    },\n    Monday: {\n      MonTimeStart: \"\",\n      MonTimeFinish: \"\"\n    },\n    Tuesday: {\n      TueTimeStart: \"\",\n      TueTimeFinish: \"\"\n    },\n    Wednesday: {\n      WenTimeStart: \"\",\n      WenTimeFinish: \"\"\n    },\n    Thursday: {\n      ThuTimeStart: \"\",\n      ThuTimeFinish: \"\"\n    },\n    Friday: {\n      FriTimeStart: \"\",\n      FriTimeFinish: \"\"\n    }\n  };\n  useEffect(function () {\n    var data = DAYS.map(function (day) {\n      return _objectSpread({\n        day: day,\n        isChecked: false\n      }, getTime[day]);\n    });\n    setSelectedDays(data);\n  }, []);\n  var locationsArray = Array.from(selectedCities, function (item) {\n    return _objectSpread({}, item[1]);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainbg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h1 p-3 text-center togo-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Create account / transporter\"), /*#__PURE__*/React.createElement(Form, {\n    className: \"m-auto w-75\",\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      var result = selectedDays.reduce(function (obj, cur) {\n        return _objectSpread(_objectSpread({}, obj), cur);\n      }, {});\n      delete result.day;\n      delete result.isChecked;\n\n      var requestTime = _objectSpread(_objectSpread({}, result), {}, {\n        AllTimeFlag: isAllTime\n      });\n\n      var requestAllTime = {\n        AllTimeFlag: isAllTime,\n        AllTimeStart: time.from,\n        AllTimeFinish: time.to\n      };\n      var request = isAllTime === \"0\" ? requestTime : requestAllTime;\n      SetWorkingHours(locationsArray, request); //console.log(event.target);\n      // console.log(event.target[0].value)\n      // console.log(event.target.elements.FirstName.value)\n      // console.log(event.target.FirstName.value)\n    },\n    onChange: function onChange(event) {\n      console.log(event.target);\n\n      if (event.target.name) {\n        setSelectedTimeRange(event.target.value);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center togo-border h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Work information\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Work area\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"togo-outling\",\n    onClick: function onClick() {\n      setOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex text-center bg-white rounded-22\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: locationImg,\n    style: {\n      width: \"24px\",\n      height: \"24px\"\n    },\n    className: \"me-1\",\n    alt: \"worldicon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, \"Select Work areas\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Select working time\"), /*#__PURE__*/React.createElement(FromToFields, {\n    time: time,\n    onChangeStartTime: handleChangeStartTime,\n    onChangeEndTime: handleChangeEndTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    label: \"All Days\",\n    type: \"radio\",\n    id: \"allDays\",\n    name: \"time\",\n    value: \"1\",\n    checked: isAllTime === \"1\",\n    onChange: function onChange(e) {\n      return setIsAllTime(e.target.value);\n    },\n    className: \"togo-checkbox flex-grow-1\" // defaultChecked\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Check, {\n    label: \"Days of the week\",\n    type: \"radio\",\n    id: \"someDays\",\n    name: \"time\",\n    value: \"0\",\n    checked: isAllTime === \"0\",\n    onChange: function onChange(e) {\n      return setIsAllTime(e.target.value);\n    },\n    className: \"togo-checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), isAllTime === \"0\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 39\n    }\n  }, selectedDays.map(function (day) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"align-items-center d-flex\",\n      key: day.day,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      label: day.day,\n      type: \"checkbox\",\n      id: \"\".concat(day.day, \"someDays\"),\n      name: \"\".concat(day.day, \"time\"),\n      checked: day.isChecked,\n      onChange: function onChange(e) {\n        var newData = selectedDays.map(function (selectedDay) {\n          return (selectedDay === null || selectedDay === void 0 ? void 0 : selectedDay.day) === day.day ? _objectSpread(_objectSpread({}, day), {}, {\n            isChecked: e.target.checked\n          }) : selectedDay;\n        });\n        setSelectedDays(newData);\n      },\n      className: \"togo-checkbox flex-grow-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"me-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, \"From\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"time\",\n      className: \"bg-white rounded-22 w-auto\",\n      name: day.day && Object.keys(getTime[day.day])[0] // value={day.day && Object.values(getTime[day.day])?.[0]}\n      ,\n      onChange: function onChange(e) {\n        var newData = selectedDays.map(function (selectedDay) {\n          return (selectedDay === null || selectedDay === void 0 ? void 0 : selectedDay.day) === day.day ? _objectSpread(_objectSpread({}, day), {}, _defineProperty({}, Object.keys(getTime[day.day])[0], e.target.value)) : selectedDay;\n        });\n        setSelectedDays(newData);\n      },\n      disabled: !day.isChecked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"me-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 37\n      }\n    }, \"to\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"time\",\n      className: \"bg-white rounded-22 w-auto\",\n      name: day.day && Object.keys(getTime[day.day])[1] // value={day.day && Object.values(getTime[day.day])?.[1]}\n      ,\n      onChange: function onChange(e) {\n        var newData = selectedDays.map(function (selectedDay) {\n          return (selectedDay === null || selectedDay === void 0 ? void 0 : selectedDay.day) === day.day ? _objectSpread(_objectSpread({}, day), {}, _defineProperty({}, Object.keys(getTime[day.day])[1], e.target.value)) : selectedDay;\n        });\n        setSelectedDays(newData);\n      },\n      disabled: !day.isChecked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"\",\n    type: \"submit\",\n    className: \"d-block m-auto rounded-22 togo-button w-25\",\n    disabled: loadingSubmit // onClick={(event)=>{\n    //     setLoadingSubmit(true);\n    //     // SetTransporterPersonalInfo(\n    //     // ).then((res) => {\n    //     //     setLoadingSubmit(false);\n    //     //     history.push(\"/business-info\")\n    //     // });\n    // }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, loadingSubmit && /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 39\n    }\n  }), \"Accept\")), /*#__PURE__*/React.createElement(Modal, {\n    show: open,\n    onHide: function onHide() {\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, \"Select areas\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, cities.map(function (city) {\n    var _selectedCities$get;\n\n    return /*#__PURE__*/React.createElement(Form.Check, {\n      label: city.Name,\n      type: \"checkbox\",\n      id: \"\".concat(city.Name, \"-someDays\"),\n      name: city.Name,\n      key: city.IdCity,\n      value: city.IdCity,\n      className: \"togo-checkbox\",\n      defaultChecked: selectedCities === null || selectedCities === void 0 ? void 0 : (_selectedCities$get = selectedCities.get) === null || _selectedCities$get === void 0 ? void 0 : _selectedCities$get.call(selectedCities, city.IdCity),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 33\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: function onClick() {\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: function onClick() {\n      var selected = new Map();\n      Array.from(formRef.current.elements).forEach(function (elem) {\n        if (elem.checked) {\n          selected.set(elem.value, {\n            IdCity: elem.value\n          });\n        }\n      });\n      setSelectedCities(selected);\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, \"Save Changes\"))));\n}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/WorkInfo.jsx"],"names":["React","useEffect","useRef","useState","Button","Form","FormControl","Modal","Spinner","SetWorkingHours","GetCityRegion","locationImg","DAYS","FromToFields","id","children","time","onChangeStartTime","onChangeEndTime","from","to","WorkInfo","loadingSubmit","setLoadingSubmit","open","setOpen","cities","setCities","selectedCities","setSelectedCities","isAllTime","setIsAllTime","selectedDays","setSelectedDays","selectedTimeRange","setSelectedTimeRange","setTime","handleChangeEndTime","e","target","value","handleChangeStartTime","formRef","then","res","data","server_response","getTime","Saturday","SatTimeStart","SatTimeFinish","Sunday","SunTimeStart","SunTimeFinish","Monday","MonTimeStart","MonTimeFinish","Tuesday","TueTimeStart","TueTimeFinish","Wednesday","WenTimeStart","WenTimeFinish","Thursday","ThuTimeStart","ThuTimeFinish","Friday","FriTimeStart","FriTimeFinish","map","day","isChecked","locationsArray","Array","item","event","preventDefault","result","reduce","obj","cur","requestTime","AllTimeFlag","requestAllTime","AllTimeStart","AllTimeFinish","request","console","log","name","width","height","newData","selectedDay","checked","Object","keys","city","Name","IdCity","get","selected","Map","current","elements","forEach","elem","set"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Form, FormControl, Modal, Spinner} from \"react-bootstrap\";\r\nimport {SetWorkingHours} from \"../APIs/LoginAPIs\";\r\nimport {GetCityRegion} from \"../APIs/OrdersAPIs\";\r\nimport locationImg from \"../assets/locationn.png\";\r\n\r\nvar DAYS = ['Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\r\n\r\nfunction FromToFields({id, children, time, onChangeStartTime, onChangeEndTime}) {\r\n\r\n    return (\r\n        <div className=\"align-items-center d-flex\">\r\n            {children}\r\n            <p className=\"me-2\">From</p>\r\n            <FormControl\r\n                type=\"time\"\r\n                className=\"bg-white rounded-22 w-auto\"\r\n                name=\"from\"\r\n                value={time.from}\r\n                onChange={onChangeStartTime}\r\n            />\r\n            <p className=\"me-2\">to</p>\r\n            <FormControl\r\n                type=\"time\"\r\n                className=\"bg-white rounded-22 w-auto\"\r\n                name=\"to\"\r\n                value={time.to}\r\n                onChange={onChangeEndTime}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function WorkInfo() {\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [cities, setCities] = useState([]);\r\n    const [selectedCities, setSelectedCities] = useState([]);\r\n    const [isAllTime, setIsAllTime] = useState(\"1\")\r\n    const [selectedDays, setSelectedDays] = useState(DAYS)\r\n    const [selectedTimeRange, setSelectedTimeRange] = useState(\"1\");\r\n    const [time, setTime] = useState({\r\n        from: \"\",\r\n        to: \"\",\r\n    })\r\n    const handleChangeEndTime = e => {\r\n        setTime({\r\n            from: time.from, to: e.target.value,\r\n        })\r\n    }\r\n    const handleChangeStartTime = e => {\r\n        setTime({\r\n            from: e.target.value, to: time.to,\r\n        })\r\n    }\r\n    const formRef = useRef();\r\n    useEffect(() => {\r\n        GetCityRegion().then((res) => {\r\n            setCities(res.data.server_response);\r\n        });\r\n    }, [])\r\n    const getTime = {\r\n        Saturday: {SatTimeStart: \"\", SatTimeFinish: \"\"},\r\n        Sunday: {SunTimeStart: \"\", SunTimeFinish: \"\"},\r\n        Monday: {MonTimeStart: \"\", MonTimeFinish: \"\"},\r\n        Tuesday: {TueTimeStart: \"\", TueTimeFinish: \"\"},\r\n        Wednesday: {WenTimeStart: \"\", WenTimeFinish: \"\"},\r\n        Thursday: {ThuTimeStart: \"\", ThuTimeFinish: \"\"},\r\n        Friday: {FriTimeStart: \"\", FriTimeFinish: \"\"}\r\n    }\r\n    useEffect(() => {\r\n        const data = DAYS.map(day => ({day, isChecked: false, ...getTime[day]}));\r\n        setSelectedDays(data);\r\n    }, []);\r\n\r\n    let locationsArray = Array.from(selectedCities, item => ({...item[1]}))\r\n    return (\r\n        <div className=\"mainbg\">\r\n            <div className=\"h1 p-3 text-center togo-button\">\r\n                Create account / transporter\r\n            </div>\r\n            <Form\r\n                className=\"m-auto w-75\"\r\n                onSubmit={(event) => {\r\n                    event.preventDefault();\r\n                    const result = selectedDays.reduce((obj, cur) => ({...obj, ...cur}), {});\r\n                    delete result.day;\r\n                    delete result.isChecked;\r\n                    const requestTime = {\r\n                        ...result,\r\n                        AllTimeFlag: isAllTime,\r\n                    }\r\n                    const requestAllTime = {\r\n                        AllTimeFlag: isAllTime,\r\n                        AllTimeStart: time.from,\r\n                        AllTimeFinish: time.to,\r\n                    }\r\n                    const request = isAllTime === \"0\" ? requestTime : requestAllTime;\r\n                    SetWorkingHours(locationsArray, request);\r\n                    //console.log(event.target);\r\n                    // console.log(event.target[0].value)\r\n                    // console.log(event.target.elements.FirstName.value)\r\n                    // console.log(event.target.FirstName.value)\r\n\r\n                }}\r\n                onChange={(event) => {\r\n                    console.log(event.target);\r\n                    if (event.target.name) {\r\n                        setSelectedTimeRange(event.target.value);\r\n                    }\r\n                }}\r\n            >\r\n                <p className=\"text-center togo-border h4\">Work information</p>\r\n                <p>Work area</p>\r\n                <div className=\"togo-outling\" onClick={() => {\r\n                    setOpen(true);\r\n                }}>\r\n                    <div className=\"d-flex text-center bg-white rounded-22\">\r\n                        <img src={locationImg} style={{width: \"24px\", height: \"24px\"}} className=\"me-1\"\r\n                             alt=\"worldicon\"/>\r\n                        <span className=\"flex-grow-1\">Select Work areas</span>\r\n                    </div>\r\n                </div>\r\n                <p>Select working time</p>\r\n                <FromToFields time={time} onChangeStartTime={handleChangeStartTime}\r\n                              onChangeEndTime={handleChangeEndTime}>\r\n                    <Form.Check\r\n                        label=\"All Days\"\r\n                        type=\"radio\"\r\n                        id=\"allDays\"\r\n                        name=\"time\"\r\n                        value={\"1\"}\r\n                        checked={isAllTime === \"1\"}\r\n                        onChange={(e) => setIsAllTime(e.target.value)}\r\n                        className=\"togo-checkbox flex-grow-1\"\r\n                        // defaultChecked\r\n                    />\r\n                </FromToFields>\r\n\r\n                <Form.Check\r\n                    label=\"Days of the week\"\r\n                    type=\"radio\"\r\n                    id={`someDays`}\r\n                    name=\"time\"\r\n                    value={\"0\"}\r\n                    checked={isAllTime === \"0\"}\r\n                    onChange={(e) => setIsAllTime(e.target.value)}\r\n                    className=\"togo-checkbox\"\r\n                />\r\n                {isAllTime === \"0\" && <div>\r\n                    {\r\n                        selectedDays.map((day) => {\r\n                            return (\r\n                                <div className=\"align-items-center d-flex\" key={day.day}>\r\n                                    <Form.Check\r\n                                        label={day.day}\r\n                                        type=\"checkbox\"\r\n                                        id={`${day.day}someDays`}\r\n                                        name={`${day.day}time`}\r\n                                        checked={day.isChecked}\r\n                                        onChange={e => {\r\n                                            const newData = selectedDays.map(selectedDay => selectedDay?.day === day.day ? ({\r\n                                                ...day,\r\n                                                isChecked: e.target.checked\r\n                                            }) : selectedDay);\r\n                                            setSelectedDays(newData);\r\n                                        }}\r\n                                        className=\"togo-checkbox flex-grow-1\"\r\n                                    />\r\n\r\n                                    <p className=\"me-2\">From</p>\r\n                                    <FormControl\r\n                                        type=\"time\"\r\n                                        className=\"bg-white rounded-22 w-auto\"\r\n                                        name={day.day && Object.keys(getTime[day.day])[0]}\r\n                                        // value={day.day && Object.values(getTime[day.day])?.[0]}\r\n                                        onChange={e => {\r\n                                            const newData = selectedDays.map(selectedDay => selectedDay?.day === day.day ? ({\r\n                                                ...day,\r\n                                                [Object.keys(getTime[day.day])[0]]: e.target.value\r\n                                            }) : selectedDay);\r\n                                            setSelectedDays(newData);\r\n                                        }}\r\n                                        disabled={!day.isChecked}\r\n                                    />\r\n                                    <p className=\"me-2\">to</p>\r\n                                    <FormControl\r\n                                        type=\"time\"\r\n                                        className=\"bg-white rounded-22 w-auto\"\r\n                                        name={day.day && Object.keys(getTime[day.day])[1]}\r\n                                        // value={day.day && Object.values(getTime[day.day])?.[1]}\r\n                                        onChange={e => {\r\n                                            const newData = selectedDays.map(selectedDay => selectedDay?.day === day.day ? ({\r\n                                                ...day,\r\n                                                [Object.keys(getTime[day.day])[1]]: e.target.value\r\n                                            }) : selectedDay);\r\n\r\n                                            setSelectedDays(newData);\r\n                                        }}\r\n                                        disabled={!day.isChecked}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>}\r\n                <Button\r\n                    variant=\"\"\r\n                    type=\"submit\"\r\n                    className=\"d-block m-auto rounded-22 togo-button w-25\"\r\n                    disabled={loadingSubmit}\r\n                    // onClick={(event)=>{\r\n                    //     setLoadingSubmit(true);\r\n                    //     // SetTransporterPersonalInfo(\r\n                    //     // ).then((res) => {\r\n                    //     //     setLoadingSubmit(false);\r\n                    //     //     history.push(\"/business-info\")\r\n                    //     // });\r\n                    // }}\r\n                >\r\n                    {loadingSubmit && <Spinner animation=\"border\" size=\"sm\"/>}\r\n                    Accept\r\n                </Button>\r\n            </Form>\r\n            <Modal show={open} onHide={() => {\r\n                setOpen(false);\r\n            }}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Select areas</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form ref={formRef}>\r\n                        {cities.map((city) => {\r\n                            return (\r\n                                <Form.Check\r\n                                    label={city.Name}\r\n                                    type=\"checkbox\"\r\n                                    id={`${city.Name}-someDays`}\r\n                                    name={city.Name}\r\n                                    key={city.IdCity}\r\n                                    value={city.IdCity}\r\n                                    className=\"togo-checkbox\"\r\n                                    defaultChecked={selectedCities?.get?.(city.IdCity)}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => {\r\n                        setOpen(false);\r\n                    }}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => {\r\n                        let selected = new Map();\r\n                        Array.from(formRef.current.elements).forEach((elem) => {\r\n                            if (elem.checked) {\r\n                                selected.set(elem.value, {\r\n                                    IdCity: elem.value\r\n                                });\r\n                            }\r\n                        })\r\n                        setSelectedCities(selected);\r\n                        setOpen(false);\r\n                    }}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}