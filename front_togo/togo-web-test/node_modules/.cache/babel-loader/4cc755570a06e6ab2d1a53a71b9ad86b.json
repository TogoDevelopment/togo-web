{"ast":null,"code":"import { apiUrl } from \"../Constants/GeneralCont\";\n\nvar axios = require(\"axios\");\n\nvar requestHeaders = {\n  \"Access-Control-Allow-Origin\": \"*\",\n  \"Content-Type\": \"application/x-www-form-urlencoded\"\n};\nexport var PAGE_SIZE = 10;\nexport function getUserCreditialParams() {\n  var requestParams = new URLSearchParams();\n  requestParams.append(\"TransporterId\", localStorage.getItem(\"userId\"));\n  requestParams.append(\"TokenDevice\", localStorage.getItem(\"TokenDevice\")); //TODO::change to language id\n\n  requestParams.append(\"LangId\", \"1\");\n  requestParams.append(\"Idlanguage\", \"1\"); //requestParams.append(\"PageSize\", PAGE_SIZE);\n  //requestParams.append(\"PageNumber\", \"1\");\n\n  requestParams.append(\"CustomerId\", localStorage.getItem(\"userId\"));\n  requestParams.append(\"ClientId\", localStorage.getItem(\"userId\")); // requestParams.append(\n  //     \"TokenDevice\",\n  //     \"43507034b1ad5612d9d540278cc4c6e033950727\"\n  // );\n\n  return requestParams;\n}\nexport function getAuthenticationQR() {\n  var params = getUserCreditialParams();\n  params.append(\"CheckTypeFunction\", \"GenerateUUID\");\n  return axios.post(apiUrl, params, {\n    headers: requestHeaders\n  }).then(function (response) {\n    if (response.data === \"Function Not Found\") {\n      return \"null\";\n    }\n\n    return response.data;\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\nexport var checkAccessAPI = function checkAccessAPI(qrUUID) {\n  var params = new URLSearchParams();\n  params.append(\"CheckTypeFunction\", \"getUserCredentials\");\n  params.append(\"QRId\", qrUUID);\n  return axios.post(apiUrl, params, {\n    headers: requestHeaders\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/system/togo-web-test/src/APIs/AuthenticationAPIs.jsx"],"names":["apiUrl","axios","require","requestHeaders","PAGE_SIZE","getUserCreditialParams","requestParams","URLSearchParams","append","localStorage","getItem","getAuthenticationQR","params","post","headers","then","response","data","catch","error","console","log","checkAccessAPI","qrUUID"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;;AAGA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,cAAc,GAAG;AACnB,oCADmB;AAEnB;AAFmB,CAAvB;AAKA,OAAO,IAAMC,SAAS,GAAG,EAAlB;AAEP,OAAO,SAASC,sBAAT,GAAkC;AACrC,MAAIC,aAAa,GAAG,IAAIC,eAAJ,EAApB;AAEAD,EAAAA,aAAa,CAACE,MAAd,CAAqB,eAArB,EAAsCC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAtC;AACAJ,EAAAA,aAAa,CAACE,MAAd,CAAqB,aAArB,EAAoCC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApC,EAJqC,CAKrC;;AACAJ,EAAAA,aAAa,CAACE,MAAd,CAAqB,QAArB,EAA+B,GAA/B;AACAF,EAAAA,aAAa,CAACE,MAAd,CAAqB,YAArB,EAAmC,GAAnC,EAPqC,CAQrC;AACA;;AACAF,EAAAA,aAAa,CAACE,MAAd,CAAqB,YAArB,EAAmCC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAnC;AACAJ,EAAAA,aAAa,CAACE,MAAd,CAAqB,UAArB,EAAiCC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAjC,EAXqC,CAYrC;AACA;AACA;AACA;;AACA,SAAOJ,aAAP;AACH;AAED,OAAO,SAASK,mBAAT,GAA+B;AAClC,MAAIC,MAAM,GAAGP,sBAAsB,EAAnC;AACAO,EAAAA,MAAM,CAACJ,MAAP,CAAc,mBAAd,EAAmC,cAAnC;AACA,SAAOP,KAAK,CACPY,IADE,CACGb,MADH,EACWY,MADX,EACmB;AAClBE,IAAAA,OAAO,EAAEX;AADS,GADnB,EAIFY,IAJE,CAIG,UAACC,QAAD,EAAc;AAChB,QAAIA,QAAQ,CAACC,IAAT,KAAkB,oBAAtB,EAA4C;AACxC,aAAO,MAAP;AACH;;AACD,WAAOD,QAAQ,CAACC,IAAhB;AACH,GATE,EAUFC,KAVE,CAUI,UAACC,KAAD,EAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAZE,CAAP;AAaH;AAED,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACtC,MAAIX,MAAM,GAAG,IAAIL,eAAJ,EAAb;AACAK,EAAAA,MAAM,CAACJ,MAAP,CAAc,mBAAd,EAAmC,oBAAnC;AACAI,EAAAA,MAAM,CAACJ,MAAP,CAAc,MAAd,EAAsBe,MAAtB;AACA,SAAOtB,KAAK,CACPY,IADE,CACGb,MADH,EACWY,MADX,EACmB;AAClBE,IAAAA,OAAO,EAAEX;AADS,GADnB,EAIFY,IAJE,CAIG,UAACC,QAAD,EAAc;AAChBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACH,GANE,EAOFE,KAPE,CAOI,UAACC,KAAD,EAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GATE,CAAP;AAUH,CAdM","sourcesContent":["import { apiUrl } from \"../Constants/GeneralCont\";\r\n\r\n\r\nconst axios = require(\"axios\");\r\nconst requestHeaders = {\r\n    \"Access-Control-Allow-Origin\": `*`,\r\n    \"Content-Type\": `application/x-www-form-urlencoded`,\r\n};\r\n\r\nexport const PAGE_SIZE = 10;\r\n\r\nexport function getUserCreditialParams() {\r\n    var requestParams = new URLSearchParams();\r\n\r\n    requestParams.append(\"TransporterId\", localStorage.getItem(\"userId\"));\r\n    requestParams.append(\"TokenDevice\", localStorage.getItem(\"TokenDevice\"));\r\n    //TODO::change to language id\r\n    requestParams.append(\"LangId\", \"1\");\r\n    requestParams.append(\"Idlanguage\", \"1\");\r\n    //requestParams.append(\"PageSize\", PAGE_SIZE);\r\n    //requestParams.append(\"PageNumber\", \"1\");\r\n    requestParams.append(\"CustomerId\", localStorage.getItem(\"userId\"));\r\n    requestParams.append(\"ClientId\", localStorage.getItem(\"userId\"));\r\n    // requestParams.append(\r\n    //     \"TokenDevice\",\r\n    //     \"43507034b1ad5612d9d540278cc4c6e033950727\"\r\n    // );\r\n    return requestParams;\r\n}\r\n\r\nexport function getAuthenticationQR() {\r\n    let params = getUserCreditialParams();\r\n    params.append(\"CheckTypeFunction\", \"GenerateUUID\");\r\n    return axios\r\n        .post(apiUrl, params, {\r\n            headers: requestHeaders,\r\n        })\r\n        .then((response) => {\r\n            if (response.data === \"Function Not Found\") {\r\n                return \"null\";\r\n            }\r\n            return response.data;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport const checkAccessAPI = (qrUUID) => {\r\n    let params = new URLSearchParams();\r\n    params.append(\"CheckTypeFunction\", \"getUserCredentials\");\r\n    params.append(\"QRId\", qrUUID);\r\n    return axios\r\n        .post(apiUrl, params, {\r\n            headers: requestHeaders,\r\n        })\r\n        .then((response) => {\r\n            console.log(response)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}