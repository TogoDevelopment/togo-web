{"ast":null,"code":"import _slicedToArray from\"/home/system/togo-web-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from\"react\";import{Button,Form,FormControl,InputGroup,Spinner}from\"react-bootstrap\";import{useHistory}from\"react-router-dom\";import{SetPersonalInfo}from\"./APIs/LoginAPIs\";export default function PersonalInfoForm(){var firstNameRef=useRef();var familyNameRef=useRef();var IDNumRef=useRef();var emailRef=useRef();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loadingSubmit=_useState2[0],setLoadingSubmit=_useState2[1];var history=useHistory();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"mainbg\"},/*#__PURE__*/React.createElement(\"div\",{className:\"h1 p-3 text-center togo-button\"},\"Create account /client\"),/*#__PURE__*/React.createElement(\"div\",{className:\"m-auto w-75\"},/*#__PURE__*/React.createElement(\"p\",{className:\"text-center togo-border h4\"},\"Personal information\"),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGridEmail\",className:\"m-inline-e-2\"},/*#__PURE__*/React.createElement(Form.Label,null,\"First name\"),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2 togo-outling\"},/*#__PURE__*/React.createElement(FormControl,{type:\"text\",className:\"bg-white rounded-22\",ref:firstNameRef}))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGridEmail\",className:\"m-inline-e-2\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Family name\"),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2 togo-outling\"},/*#__PURE__*/React.createElement(FormControl,{type:\"text\",className:\"bg-white rounded-22\",ref:familyNameRef}))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGridEmail\",className:\"m-inline-e-2\"},/*#__PURE__*/React.createElement(Form.Label,null,\"ID Number\"),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2 togo-outling\"},/*#__PURE__*/React.createElement(FormControl,{maxLength:9,onInput:function onInput(ev){ev.target.value=ev.target.value.replace(/[^0-9]/gi,\"\");},type:\"text\",className:\"bg-white rounded-22\",ref:IDNumRef}))),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGridEmail\",className:\"m-inline-e-2\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email\"),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-2 togo-outling\"},/*#__PURE__*/React.createElement(FormControl,{type:\"text\",className:\"bg-white rounded-22\",ref:emailRef}))),/*#__PURE__*/React.createElement(Button,{variant:\"\",className:\"d-block m-auto rounded-22 togo-button w-25\",disabled:loadingSubmit,onClick:function onClick(){setLoadingSubmit(true);SetPersonalInfo(firstNameRef.current.value,familyNameRef.current.value,IDNumRef.current.value,emailRef.current.value).then(function(res){setLoadingSubmit(false);history.push(\"/business-info\");});}},loadingSubmit&&/*#__PURE__*/React.createElement(Spinner,{animation:\"border\",size:\"sm\"}),\"Send\"))));}","map":{"version":3,"sources":["/home/system/togo-web-test/src/components/PersonalInfoForm.jsx"],"names":["React","useRef","useState","Button","Form","FormControl","InputGroup","Spinner","useHistory","SetPersonalInfo","PersonalInfoForm","firstNameRef","familyNameRef","IDNumRef","emailRef","loadingSubmit","setLoadingSubmit","history","ev","target","value","replace","current","then","res","push"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Button, Form, FormControl, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SetPersonalInfo } from \"./APIs/LoginAPIs\";\r\n\r\nexport default function PersonalInfoForm(){\r\n    const firstNameRef = useRef();\r\n    const familyNameRef = useRef();\r\n    const IDNumRef = useRef();\r\n    const emailRef = useRef();\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <div className=\"mainbg\">\r\n                <div className=\"h1 p-3 text-center togo-button\">\r\n                    Create account /client\r\n                </div>\r\n                <div className=\"m-auto w-75\">\r\n                    <p className=\"text-center togo-border h4\">Personal information</p>\r\n\r\n                    <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                        <Form.Label>First name</Form.Label>\r\n                        <InputGroup className=\"mb-2 togo-outling\">\r\n                            <FormControl\r\n                                type=\"text\" \r\n                                className=\"bg-white rounded-22\"\r\n                                ref={firstNameRef} \r\n                            />\r\n                        </InputGroup>    \r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                        <Form.Label>Family name</Form.Label>\r\n                        <InputGroup className=\"mb-2 togo-outling\">\r\n                            <FormControl \r\n                                type=\"text\" \r\n                                className=\"bg-white rounded-22\"\r\n                                ref={familyNameRef} \r\n                            />\r\n                            \r\n                        </InputGroup>    \r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                        <Form.Label>ID Number</Form.Label>\r\n                        <InputGroup className=\"mb-2 togo-outling\">\r\n\r\n                            <FormControl\r\n                                maxLength={9}\r\n                                onInput={(ev)=>{\r\n                                    ev.target.value = ev.target.value.replace(/[^0-9]/gi, \"\");\r\n                                }} \r\n                                type=\"text\" \r\n                                className=\"bg-white rounded-22\"\r\n                                ref={IDNumRef} \r\n                            />\r\n                            \r\n                        </InputGroup>    \r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formGridEmail\" className=\"m-inline-e-2\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <InputGroup className=\"mb-2 togo-outling\">\r\n\r\n                            <FormControl \r\n                                type=\"text\" \r\n                                className=\"bg-white rounded-22\"\r\n                                ref={emailRef} \r\n                            />\r\n                            \r\n                        </InputGroup>    \r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"\" \r\n                        className=\"d-block m-auto rounded-22 togo-button w-25\" \r\n                        disabled={loadingSubmit}\r\n                        onClick={()=>{\r\n                            setLoadingSubmit(true);\r\n                            SetPersonalInfo(\r\n                                firstNameRef.current.value,\r\n                                familyNameRef.current.value,\r\n                                IDNumRef.current.value,\r\n                                emailRef.current.value\r\n                            ).then((res) => {\r\n                                setLoadingSubmit(false);\r\n                                history.push(\"/business-info\")\r\n                            });\r\n                        }}\r\n                    >\r\n                        {loadingSubmit && <Spinner animation=\"border\" size=\"sm\"/>} \r\n                        Send\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}